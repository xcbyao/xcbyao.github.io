[{"title":"利用 iTunes 抓包下载 ios 旧版本 App（网上教程填坑完善合集）","url":"/2022/03/09/Apple_old_app/","content":"0x00 折腾缘由最近 GoodNotes5 自5.9.0更新后，突然从预付费买断转成了内购买断，故测试了一波（第一次脑残先获取了应用损失了一个号，务必直接抓包旧版，不要获取新版），同下文 Notability 一样可实现抓包安装旧版，获取内购，免费升级新版。\n附一份内购新旧版本号，5.8.13最后预付费版本大小供参考。\n\n\n\n众所周知，之前笔记软件 Notability 买断制改订阅制，因其对旧用户的善后政策不当，直接侵犯了广大旧用户的利益，故引起了一波讨伐，消费者均不买账纷纷投诉退款，开发官方迫于舆论压力，及时道歉挽回，新版本 11.0 以上新用户提供免费版（阉割版）和订阅制，旧版本买断制用户在更新版本后不受订阅制影响，原有买断功能仍可永久使用。\n不同于另一款笔记软件 GoodNotes，其第五代新版本发布了全新的软件，独立于四代旧版本，而 Notability 是基于原发布软件的升级，仍和上一买断制版本有着非常紧密的联系，故给折腾党多了摆弄的心思。\n因为新版已经是免费版，我们都可以直接下载，即拥有了旧版的未来，那再通过抓包下载（已无需买断的）旧版，我们有了它的未来，自然可以拥有它的过去，于是，曾经买断制的诸多功能，过渡到了新版本，无需订阅即可永久使用，不受限于阉割的免费版，岂不美滋滋！\n不仅如此，学会了抓包旧版本的方法，我们也可以运用到其他原来功能免费，后期改成功能内购的 APP 上，毕竟新应用自然需要免费吸引用户，后期运营成本高了改付费也是人之常情，有条件价格合理的自然还是支持一下开发团队。\n除此之外，很多 APP or 系统不是越新越好，不喜欢新版本的用户就有回到旧版本的需求，或是为了追求无广告与功能更简洁。\nSo，接下来开始我们的手艺~\n0x01 趁手的工具人在分享这门 iOS 应用降级的手艺前，我们得先物色好趁手的工具人，工欲善其事必先利其器嘛。\n首先肯定是苹果的 iTunes，但此事不简单，如果你直接去下载了最新版，你会惊奇地发现只能下 Music，想下载应用？咱 iTunes 后代不支持！\n所以我们得找它祖宗！还好，虽然新生代已经另立门户（Mac Mojave），但老一辈都得道成仙了，来 这里 ，别说祖宗十八代，几十代都在呢！其中几代变革都写得清清楚楚… 啥？不知道该找谁？找仍在坚守 AppStore 的那几代人~\n别急，我们先继续说剩下的两位，一位是盛名在外（常用抓包和调试工具）牢饭吃到饱的 Fiddler（找 Charles 也行），后期 iTunse 配合 Fiddler 对软件进行版本号抓取。\n另一位就是漂亮的艾丽丝（爱思助手），它负责收尾工作，把 isp 回炉重造（装到设备上）。\n介绍完了，我知道你们懒得找，所以我把它们请来了（点击图片下载）——\n\n\n\n0x02 三位大佬闹脾气因为 iTunes 12.6.5 以上的版本均取消了 AppStore，我们无法直接通过 iTunes 下载 iOS 应用，就找到了老前辈。但老前辈穿越到未来是有问题滴！\n请来后（安装好），旧版本 iTunes 无法运行，提示 itunes library.itl 不能用。常识问题，同一个时空不能出现两个一样的人，会不稳定的~ 直接寻找磁盘上的当代该文件，删除它（塞到异时空也可以），总之前辈要当唯一或得另立山头。\n所以此前安装过最新的 iTunes 的小伙伴，记得要卸载干净！（否则会出现无法联网、连接设备错误等多种问题）卸载顺序：\niTunesApple Software UpdateBonjourApple Mobile Device SupportApple Application Support（32-bit）Apple Application Support（64-bit）\n还有脾气？旧版本 iTunes 可能无法登陆手机号的账号，老一辈脾气怪，萝卜青菜各有所爱，那就得特意注册一个 Apple ID（邮箱账号）。擦汗~ \n\n我们接着伺候 Fiddler，安装完后找到路径 Tools -&gt; TelerikFiddler Options -&gt; HTTPS 如图勾选点击，安装证书，一路 yes 即可。\n\n不排除这位偷懒，直接给你证书导出到桌面就不管你了，此时我们只能自己双击打开安装证书。\n还有情况！证书不管安装就算了，自己桌面也没有证书，或者安装完证书显示“该证书已过期，或者尚未生效”，玩呢？确定你找的是我介绍的祖宗？其他祖宗我不熟抱歉~\n\n本来爱思自己就提供共享旧版下载的，而她也提供了绑定 Apple ID 下载苹果正版，一个顶三，但是咱也不知道她闹什么脾气抽哪门子的风，登陆账号始终报错异常，又不想用共享正版，只能自己折腾下载了。\n\n0x03 总算开工了No.1打开 iTunes，登录账号，同时搜索出你要降级的应用，（这个时候不要点击下载！）\n\n不同区会自动转换，点击确认即可。\n\n嗯？老人家脾气又上来了？\n\n把 Fiddler 关掉，ID 登录成功以后再打开，还不行万能关机重启大法，更换网络，其他没招了。\nNo.2查询 所需要降级的应用版本号对应的一串数字版本 ID。\n\n若软件冷门，该网站查询不到，则用 Fiddler 打印版本 ID（详见 No.5）\nNo.3进入 Fiddler，点击键盘快捷键『F11』，左下角会出现一个红色的『T』，Fiddler 便开始抓包拦截。\n\nNo.4返回 iTunes 的应用详情页面，点击『下载』或者『获取』按钮。\n\n注：『更新』按钮有可能获取内购失败以 Notability 为例测试，新版（免费版 11.0 之后）用过一段时间，更新获取 10.6 永久内购版，降级成功，但出现内购失败。具体原因未知。\n\n\n\nNo.5返回 Fiddler，左侧界面会出现红色开头的 pXX-buy.itunes.apple.com 拦截链接。\n要下载版本 ID 需要 shift+F11 解除全局断点，出现两项如上格式链接，选择 body 大的一项即 Host 为 pXX-buy.itunes.apple.com 格式 、URL 为 /WebObjects/MZBuy.woa 的请求，切换右侧至 Inspectors ，点击中间的黄色块 Response body is encoded...Click here to decoded.\n\n然后网址点右键导出 App 的版本信息，Save -&gt; Response -&gt; Response Body （需要注意的是，如果没有点击黄色方块，将会保存一个乱码文件）保存为 xx.xml，打开后类似下图\n\n搜索找到 softwareVersionExternalIdentifiers，其后一系列数字为该 APP 版本 ID。从上往下为该 App 自第一个版本起每个版本在 AppStore 中的版本 ID。\n我们这里举例的 Notability 10.6 版本 ID 是 844215920\n找到版本 ID，上面的可能已经开始下载最新版，删掉应用，重新下载，再次打开全局 F11，点击第一条指定格式拦截链接之后，再点击右侧界面的『Inspectors』—『TextView』，最后再点击下方的『Run to completion』\n\n这时左侧就会出现 pXX-buy.itunes.apple.com 链接，再点击一下该链接，右侧出现该应用的最新版本 ID，我们只需将最新的版本 ID 更改为需要降级的版本 ID 即可。\n\n修改完成后，再次点击右下方的『Run to completion』，接着直接关闭 Fiddler 即可。\n\n不关闭也不影响，但如果下载速度一直比较慢或者不动，可以关闭 Fiddler 然后刷新一下就正常下载了。\n\n\n或者不用全局 F11，（F11 电脑是截图快捷键冲突的小伙伴）可以用 Fiddler 关键字断点，在 Fiddler 界面下方黑条窗口输入：bpu MZBuy.woa（取消断点为输入 bpu），然后回车。\n\n\nNo.6返回 iTunes，这时可能会提示“下载错误”等提示，直接忽视，在搜索栏右侧点击下载页面重新下载即可。\n\n下载完成后，安装包会保存在默认路径中，打开『编辑』-『偏好设置』-『高级』，即可看到应用下载的路径。\n\n找到安装包后，直接使用爱思助手，导入 ipa 安装包即可自动安装。\n\n\n爱思助手下载的共享正版\n\n0x04 成果检验内购获取成功和非订阅新用户截图对比如下：\n开始订阅定价\n\n现在订阅定价\n\n成功截图\n\n\n这个方法只能抓取 AppStore 可以下载的应用，已经下架应用就没办法了。养成备份 ipa 安装包的好习惯还是很有必要的。\n\n0x05 清奇脑回路 Q&amp;AQ: 淘宝低价买的、爱思助手装的，与这个自己抓包下载的区别？\n\nA: 淘宝买的一般也是从 AppStore 下的新版非旧版，爱思助手可以装历史版本，但和淘宝一样属于共享正版，即用别人 ID 下载的正版；而自己抓包下载，用的自己 ID，是真正属于自己的苹果正版，后期想更新或内购或卸载重装等操作都无影响。\n\nQ: 别人下好的 ipa 我可以直接拿来用吗？\n\nA: 不行，安卓的 apk 和 iOS 的 ipa 文件是不一样的，iOS 的 ipa 文件内部是包含了账号信息的，安装时需要验证购买这个 APP 时所用 Apple 账号的密码，除非是你朋友发给你，再告诉你 Ta 的 Apple ID 账号密码，否则你是无法进行安装的。所以啊，自己动手，丰衣足食嘛！（网上似乎有免验证的 ipa，但似乎需要重新签名，本小妖不懂哎~ 有大佬路过还请指点迷津）\n\nQ: ipa 文件装完还有用吗？会过期吗？\n\nA: 这个安装包留着可以一直用到系统不支持为止。一般情况，只要我们把 ipa 文件下载下来，以后都能直接安装，换手机也不影响，就是所谓的『一次下载，终身受益』\n\nQ: 怎么解决旧版 APP 的更新提示？\n\nA: 避免自己手贱不小心在 AppStore 中点到更新，我们可以在 ipa 文件进行安装之前，对 ipa 文件进行一点处理，来去除 AppStore 的更新检测，但这个也只能去除 AppStore 的更新检测，那些会联网检查版本的 App 不行，其他都能完美屏蔽更新提示。方法就是右键 ipa 文件，用解压软件打开，没有解压选项的把后缀改为 rar/zip，然后删除里面的 iTunesmeradata.plist 这个文件后改回去即可。删除更新文件后，爱思助手的显示会从苹果正版变成共享正版，AppStore 中不再显示更新。\n\nQ: 可有其他安装方法：\n\nA: 旧版 iTunes 已经放权了，不能安装 ipa，所以得去装新版，这里推荐第三方工具安装旧版 App（爱思助手，pp助手好像得越狱）亦可传到设备备份，用 JSBOX 安装\n\n0x06 备用下载方式\n小妖已经将工具打包好，文章链接失效无法访问的小伙伴可以在公众号聊天框回复 ipa，获取下载链接。最后如果大家有用的话，不妨分享转发收藏一波，以防不时之需。\n\n0x07 巨人的肩膀使用iTunes软件抓包下载旧版本ios的app教程硬核！完美降级iOS应用，降级任意版本下载旧版app（Fiddler版）苹果抓包怎么都不出 /webobjects/mzbuy.woa 的悄悄发布的 iTunes 12.6.3，让你在电脑上管理 iOS 11 设备的 AppiTunes 12.6 dmg on Mac MojaveiTunes 里搜不到应用了？还有这些方法可以在 PC 上访问 App Storeios手机如何安装回旧版的AppCharles不越狱下载旧版app教程白嫖丨Notability 终身会员版，一键安装5分钟教你一键式安装iOS旧版APP（2020年有效）如何下载旧版本的IPA文件？如何下载IOS旧版本的APP？Mac iTunes12.6.3Win iTunes64_12.6.3Win iTunes32_12.6.3iTunes 降级教程：用旧版 iTunes 进行 App 备份IPSW iTunes 历史版本iTunes The iPhone Wiki 最全历史版本下载iMazingSunny 苹果工具 APP 历史版本查询Download Fiddler ClassicDownloads iTunes（版本无 AppStore）使用 iTunes 在业务环境中部署应用 12.6.5爱思助手\n","categories":["Software"]},{"title":"Crypto 加解密网站总结","url":"/2020/01/25/Crypto_online/","content":"0x00 前言CTF 中 Crypto 题往往涉及到很多方面，无论是 web，还是 reverse，都能看到密码学的影子，所以掌握必要的密码学知识尤为重要，上文我整理分享了一些常见的加密方式，但略去了很多变种的加密方式，此间便做一个补充，也是方便在线解题，尽可能省去临时查找在线解密网站的时间。\n0x01 正文综合性网站网站中包含大多编码的解码。https://tool.lu/http://www.mxcz.net/tools/base64.aspxhttps://www.qqxiuzi.cn/daohang.htmhttp://web2hack.org/xssee/https://www.sojson.com/http://web.chacuo.net/http://tool.chinaz.com/tools/unixtime.aspxhttps://tool.chinaz.com/tools/textencrypt.aspxhttps://tool.chinaz.com/js.aspxhttp://tools.jb51.net/password/zhmorsehttps://www.jb51.net/tools/morse.htmhttps://quipqiup.com（词频分析）\n文字倒序排列http://www.qqxiuzi.cn/zh/daoxu/\ncmd5解密http://www.cmd5.com/http://pmd5.com/http://tool.chinaz.com/Tools/MD5.aspxhttp://md5jiami.51240.com/http://www.mxcz.net/tools/MD5.aspx\n（1）base64解密http://www.mxcz.net/tools/base64.aspxhttp://tool.chinaz.com/Tools/Base64.aspxhttp://www1.tc711.com/tool/BASE64.htmhttp://base64.supfree.net/http://web.chacuo.net/charsetbase64http://ctf.ssleye.com/base64.htmlhttps://www.qqxiuzi.cn/bianma/base64.htm\n（2）base32解密http://tomeko.net/online_tools/base32.php?lang=enhttp://ctf.ssleye.com/base64.htmlhttps://www.qqxiuzi.cn/bianma/base.php\n（3）base16解密https://www.qqxiuzi.cn/bianma/base.php?type=16\n（4）base36解密http://ctf.ssleye.com/base36w.htmlhttps://www.dcode.fr/base-36-cipher（需科学上网）\n（5）base58解密http://ctf.ssleye.com/base58w.htmlhttp://www.metools.info/code/c74.html\n（6）base62解密https://base62.io/（支持中文）http://decode-base62.nichabi.comhttp://ctf.ssleye.com/base62.html（仅支持数字）\n（7）base91解密http://ctf.ssleye.com/base91.htmlhttps://www.dcode.fr/base-91-encoding（base91）（国内没找到免费的，需科学上网）\n（1）ROT5http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\n（2）ROT13http://www.mxcz.net/tools/rot13.aspxhttp://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\n（3）ROT18http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\n（4）ROT47位移编码http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\n颜文字（aadecode）打开谷歌浏览器–&gt;F12–&gt;点击Console–&gt;粘贴复制回车就会出现答案https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.htmlhttp://utf-8.jp/public/aaencode.html\n邮件编码（UUencode：M=75E;F-O9&amp;7HOYGDN*KED）http://web.chacuo.net/charsetuuencodehttp://www.mxcz.net/tools/UUEncode.aspx\n查尔斯加密（playfair解密）http://rumkin.com/tools/cipher/playfair.php\n在线编码解码http://bianma.911cha.com/http://stool.chinaz.com/hex\n进制间转换http://tool.oschina.net/hexconvert/http://stool.chinaz.com/hexhttps://tool.lu/hexconvert/\n16进制与文本转换http://www.mxcz.net/tools/Hex.aspxhttp://www.5ixuexiwang.com/str/from-hex.phphttp://www.5ixuexiwang.com/str/hex.php\nUnicode编码转换（4种）&amp;#x [Hex]： &#x0054;&#x0068;&#x0065;&amp;# [Decimal]： &#00084;&#00104;&#00101;\\U [Hex]： \\U0054\\U0068\\U0065\\U+ [Hex]： \\U+0054\\U+0068\\U+0065http://tool.oschina.net/encode?type=3 （\\u5927）http://tool.chinaz.com/tools/unicode.aspx （\\u5927）http://tool.oschina.net/encode （&amp;#23433）http://www.mxcz.net/tools/Unicode.aspx\nBrainfuck（++++++++++++[&gt;++++&gt;）https://www.splitbrain.org/services/ook （Ook!与Brainfuck）https://www.nayuki.io/page/brainfuck-interpreter-javascripthttp://esoteric.sange.fi/brainfuck/impl/interp/i.html\nURL（%23）http://www.mxcz.net/tools/Url.aspxhttp://tool.chinaz.com/tools/urlencode.aspxhttp://web.chacuo.net/charseturlencodehttp://tool.oschina.net/encode?type=4http://ctf.ssleye.com/url.html\n二维码生成/解码器http://tool.chinaz.com/qrcode/http://jiema.wwei.cn/\n摩斯密码http://www.zou114.com/mesm/http://rumkin.com/tools/cipher/morse.phphttp://tools.jb51.net/password/zhmorsehttp://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx http://www.jb51.net/tools/morse.htm （编码的时候不转换空格）http://ctf.ssleye.com/morse.html （编码的时候不转换空格）http://rumkin.com/tools/cipher/morse.php （空格用斜杠表示）\nquipqiuphttps://www.xarg.org/tools/caesar-cipher/https://quipqiup.com/\n与佛论禅http://www.keyfc.net/bbs/tools/tudoucode.aspx\n新约佛论禅/熊曰http://hi.pcmoe.net/buddha.html\nxxencode(Ri64NjS0-eRKpkQm-jRaJm6)http://web.chacuo.net/charsetxxencode\njsfuck（ [ ] [ ( ! [ ] + [ ]) [ + [ ] ）\n注：用  ! +加密\n\n打开 Chrome –&gt;F12–&gt;点击Console–&gt;粘贴复制回车就会出现答案http://discogscounter.getfreehosting.co.uk/js-noalnum.php?ckattempt=1&amp;i=1（放在下面的大框里，点击eval(--v)）http://discogscounter.getfreehosting.co.uk/js-noalnum.php http://www.jsfuck.com/\nUTF-8编码(&amp;#x5B89)http://tool.chinaz.com/Tools/UTF-8.aspxhttp://tool.oschina.net/encode?type=2http://www.3464.com/Tools/HtmlToOther/\nDES(要密匙)http://encode.chahuo.com/http://tool.oschina.net/encrypt/\n凯撒密码http://www.zjslove.com/3.decode/kaisa/index.htmlhttp://planetcalc.com/1434/\nRabbit（兔子）解密\n注：此编码与和base64很相似\n\nhttp://tool.chinaz.com/Tools/TextEncrypt.aspxhttp://tool.oschina.net/encrypt/\nAES部分例子：U2FsdGVkX1+qtU8KEGmMJwGgKcPUK3XBTdM+KhNRLHSCQL2nSXaW8++yBUkSylRphttp://tool.oschina.net/encrypt/http://aes.online-domain-tools.com/\nJS解密/混淆https://www.sojson.com/js.htmlhttp://www.haokuwang.com/jsendecode.htmhttp://www.dheart.net/decode/index.phphttps://tool.chinaz.com/tools/scriptencode.aspxhttps://tool.chinaz.com/js.aspxhttps://www.jb51.net/tools/js_format.htm\nASP解密部分例子：#@^ EQAAAA==VXlj4UmkaYAUmKN3bAYAAA==^ #@http://adophper.com/encode.html\nSnake解密（要密匙）http://serpent.online-domain-tools.com/\nGRB与十六进制的转换http://www.sioe.cn/yingyong/yanse-rgb-16/http://www.atool.org/colorpicker.php\nhtml隐写在线解密\n注：密匙和网址\n\nhttp://fog.misty.com/perry/ccs/snow/snow/snow.htmlhttps://tool.chinaz.com/tools/htmlcodecov.aspx\nshellcode编码（\\x54\\x68\\x65\\x7f）http://www.jb51.net/article/10399.htm\nQuoted-printable编码我们收邮件，查看信件原始信息，经常会看到这种类型的编码！（=E6=95=8F=E6=8D=B7=E7=9A）function quoted_printable_encode($string) {    return preg_replace(‘/[^\\r\\n]{73}[^=\\r\\n]{2}/‘, “$0=\\r\\n”, str_replace(“%”,”=”,rawurlencode($string)));}http://www.mxcz.net/tools/QuotedPrintable.aspx\nEscape/Unescape编码（%u0054%u0068%u0065）https://escape.supfree.net/https://tool.chinaz.com/tools/escape.aspxhttp://web.chacuo.net/charsetescape\n敲击码(Tap code)　1 2  3  4 5 1 A B C&#x2F;K D E 2 F G  H  I J 3 L M  N  O P 4 Q R  S  T U 5 V W  X  Y Z\nhttp://ctf.ssleye.com/tapcode.html\n栅栏密码http://www.practicalcryptography.com/ciphers/classical-era/rail-fence/\n曲路密码需要事先双方约定密钥(也就是曲路路径)\n列移位密码密钥： how are u密文： qoury inpho Tkool hbxva uwmtd cfseg erjezhttp://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/\n埃特巴什码ABCDEFGHIJKLMNOPQRSTUVWXYZ ZYXWVUTSRQPONMLKJIHGFEDCBAhttp://www.practicalcryptography.com/ciphers/classical-era/atbash-cipher/\n希尔密码（利用矩阵）http://www.practicalcryptography.com/ciphers/hill-cipher/\n夏多密码(曲折加密)\n编制密码表\n注：如果出现”Z”，则需要去除，因为在英文里”Z”的使用频率最低，相应的如果是德文，则需将”I”与”J”当作一个字母来看待，而法语则去掉”W”或”K”。整理密钥字母 C U L T U R E ，去掉后面重复的字母得到： C U L T R Ehttp://www.practicalcryptography.com/ciphers/classical-era/playfair/\n\n维吉尼亚密码http://planetcalc.com/2468/（已知密匙）http://rumkin.com/tools/cipher/gronsfeld.php（未知密匙）http://www.zjslove.com/3.decode/weijiniya/index.htmlhttps://www.qqxiuzi.cn/bianma/weijiniyamima.php\n自动密钥密码http://www.practicalcryptography.com/ciphers/classical-era/autokey/\n博福特密码http://www.practicalcryptography.com/ciphers/classical-era/beaufort/\n滚动密钥密码http://www.practicalcryptography.com/ciphers/classical-era/running-key/\nPorta密码http://www.practicalcryptography.com/ciphers/classical-era/porta/\n仿射密码以E(x) = (5x + 8) mod 26加密，通过计算可得D(x)=21(x ### 8) mod 26，这样便可以得到明文。http://www.practicalcryptography.com/ciphers/classical-era/affine/\n培根密码http://rumkin.com/tools/cipher/baconian.php\nADFGX和ADFGVX密码（德军密码）http://www.practicalcryptography.com/ciphers/adfgx-cipher/\n双密码 Bifid Cipher明文: THE QUICK BROWN FOX=&gt;5121542133 5435452521 3523311521 34 =&gt;密文: WETED TKZNE KYOME Xhttp://www.practicalcryptography.com/ciphers/classical-era/bifid/\n四方密码http://www.practicalcryptography.com/ciphers/classical-era/four-square/\n跨棋盘密码http://www.practicalcryptography.com/ciphers/classical-era/straddle-checkerboard/\n恩尼格玛密码（德国二战 机械密码）http://enigmaco.de/enigma/enigma.html\nCR4解密http://tool.oschina.net/encrypthttp://tool.chinaz.com/Tools/TextEncrypt.aspx\nVBScript部分例子：#@^ TgAAAA==‘[6* liLa6++p‘aXvfiLaa6i[[avWi[[a* p[[6 * !I‘[6cp‘aXvXILa6fp[:6+Wp[:XvWi[[6+XivRIAAA== ^#@http://www.dheart.net/decode/index.php\n执行php文件https://www.shucunwang.com/RunCode/php/\n图片/BASE64转换http://tool.oschina.net/encrypt?type=4https://www.sojson.com/image2base64.html\nSHA/散列/哈希https://tool.chinaz.com/tools/hash.aspxhttp://tools.jb51.net/password/sha_encodehttps://www.sojson.com/hash.html\n格雷编码http://ctf.ssleye.com/tapcode.html\n字母编码http://ctf.ssleye.com/a1z26.html\nASCII编码http://ctf.ssleye.com/jinzhi.htmlhttp://ctf.ssleye.com/cencode.htmlhttp://www.ab126.com/goju/1711.html\nGBK/GBK2312编码http://www.mytju.com/classcode/tools/encode_gb2312.asphttps://www.qqxiuzi.cn/bianma/zifuji.php\njjencodehttp://utf-8.jp/public/jjencode.htmlhttp://www.atoolbox.net/Tool.php?Id=704\naaencodehttp://utf-8.jp/public/aaencode.htmlhttps://www.qtool.net/decode\n\n注：jjencode/aaencode的解密直接在浏览器的控制台里输入密文即可执行解密\n\nppencodehttp://namazu.org/~takesako/ppencode/demo.html\nrrencodehttp://www.lab2.kuis.kyoto-u.ac.jp/~yyoshida/rrencode.html\njotherjother直接在浏览器(IE可以)的控制台里输入密文即可执行解密http://tmxk.org/jother/\n猪圈密码http://www.simonsingh.net/The_Black_Chamber/pigpen.html\n加密为汉字http://www.qqxiuzi.cn/bianma/wenbenjiami.phphttps://tool.chinaz.com/tools/textencrypt.aspx\n键盘密码 Keyboard Cipher\n坐标法： Y轴 1 QWE RTY UIOP 2 ASD FGH JKL 3 ZXC VBN M 12345678910 X轴 eq：密文：2251914161对应明文：story \n\n\n顺序法： Q W E R T Y U I O P 1 2 3 4 5 6 7 8 9 10 A S D F G H J K L 11 12 13 14 15 16 17 18 19 Z X C V B N M 20 21 22 23 24 25 26 eq：密文：125947对应明文：story\n\n手机九宫格键盘密码密文用数字0-9表示a-z的字符集，字母不区分大小写 \n密文：21222331323341424351525361626371727381828391929394 明文：abcdefghijklmnopqrtuvwxyz \n米斯特安全团队解密工具（公众号回复 米斯特，需要 java 环境）\n条形码/二维码https://online-barcode-reader.inliteresearch.com/\n当铺密码密文由[0-9]数字组成（以当前汉字有多少笔画出头，就是转化成对应的数字） http://www.zjslove.com/3.decode/dangpu/index.html\n核心价值观编码密文特征为社会主义核心价值观的关键字http://ctf.ssleye.com/cvencode.html\n代码混淆加密（1）asp混淆加密https://www.zhaoyuanma.com/aspfix.html（2）[php language=”混淆加密”][/php][/php]https://www.zhaoyuanma.com/phpjmvip.html（3）[css language=”/js混淆加密”][/css][/css]http://tool.css-js.com/（4）VBScript.Encode混淆加密http://www.zhaoyuanma.com/aspfix.html\n0x02 ReferencesCTF中常见密码题解密网站总结CTF中那些脑洞大开的编码和加密CTF必备技能之编码大全\n0x03 写在最后基本上一些较为常见的加密方式，国内网站优先推荐，但是一些变种的加密方式如 base36 等国内目前没有找到免费的，而作为一个 CTFer ，心气还是有点高的（其实是没钱），so 多推荐国外的，谈到此间不得不提一句，国内找不到的资料，国外用 English 搜索，往往很轻松就能找到答案了，of course ，此间不能 GG 的朋友，Bing 国际版也是个不错的选择。\n","categories":["Crypto"]},{"title":"Crypto 古典密码学总结","url":"/2020/01/21/Crypto_classical/","content":"前言玩过 CTF 的小伙伴会遇到类似这样的问题：大表哥这是啥加密啊？其实 CTF 中的脑洞密码题，通常是非现代加密方式，一般都是各种古典密码的变形，出题者会对密文进行一些处理，但都会留下不少线索，当然也需要参赛者对于各种编码方式有所了解，这样更有利于快速入手解密，结合一定的脑洞，拿到 Flag 就 so easy 了。Crypto 题目考察各种加解密技术，包括古典加密技术、现代加密技术甚至出题者自创加密技术，以及一些常见编码解码，主要考查参赛选手密码学相关知识点，通常也会和其他题目相结合。\n\n注：decode()是解码，encode()是编码\n\n\n常见编码ASCII 编码ASCII编码大致可以分作三部分组成：第一部分是：ASCII非打印控制字符第二部分是：ASCII打印字符，也就是CTF中常用到的转换第三部分是：扩展ASCII打印字符\n0～31及127(共33个)是控制字符或通信专用字符，其余的为可显示字符。32～126(共95个)是字符(32是空格），其中48～57为0到9十个阿拉伯数字。65～90为26个大写英文字母，97～122号为26个小写英文字母，其余为一些标点符号、运算符号等。\n\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：102 108 97 103 123 84 104 105 115 105 115 97 101 120 97 109 112 108 101 33 125对应可以转换成二进制，八进制，十六进制等\n\n在线解码https://www.qqxiuzi.cn/bianma/ascii.htm\n\n\nBase64/32/16/36/58/62/91编码base64的编码表是由（A-Z、a-z、0-9、+、/）64个可见字符构成，“=”符号用作后缀填充，末尾可能会出现1或2个“=”最多有2个。\nbase32的编码表是由（A-Z、2-7）32个可见字符构成，末尾可能会有‘=’，但最多有6个。\nbase16的编码表是由16个字符（0-9,A-F）构成。\nbase36密文是由36个字符（0-9,A-Z）组成，加密仅支持整数数字，解密仅支持字符串，不支持中文。\nbase58密文是用于Bitcoin中使用的一种独特的编码方式，主要用于产生Bitcoin的钱包地址，不使用数字”0”，字母大写”O”，字母大写”I”，和字母小写”i”，以及”+”和”/”符号。\nbase62密文是由62字符（0-9，a-z，A-Z）组成。\nbase91密文是由91个字符（0-9，a-z，A-Z,!#$%&amp;()*+,./:;&lt;=&gt;?@[]^_`{|}~”）组成。\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：ZmxhZ3tUaGlzIGlzIGEgZXhhbXBsZSF9（base64）MZWGCZ33KRUGS4ZANFZSAYJAMV4GC3LQNRSSC7I=（base32）666C61677B546869732069732061206578616D706C65217D（base16）727432 1375732 676 10 32488192274（base36）ALZkyYM59XXnJxxFGfnbk4iqtDWaf9WXW（base58）8nCDq36pFDV9sobcTXIgabAKmXmZWTdqH（base62）@iH&lt;,&#123;&gt;ux#6timlLGB[Iy)kCH$&#125;utF（base91）\n\n注：以上常见为base64/32/16，其他编码存在不支持符号{}，及大小写编码问题，根据题目自行text，encode结果仅供参考，还有base85/92等后期有时间做一个集成工具或脚本分享\n\n\n在线解码&amp;工具https://www.qqxiuzi.cn/bianma/base64.htm（base64）https://www.qqxiuzi.cn/bianma/base.php（base32）https://www.qqxiuzi.cn/bianma/base.php?type=16（base16）https://www.dcode.fr/base-36-cipher（base36）（国内没找到免费的，需科学上网）http://www.metools.info/code/c74.html（base58）https://base62.io/（支持中文）（base62）http://decode-base62.nichabi.com（base62）https://www.dcode.fr/base-91-encoding（base91）（国内没找到免费的，需科学上网）\n\n\nQuoted-printable编码它是多用途互联网邮件扩展（MIME) 一种实现方式。目前http协议中，很多采用MIME框架。quoted-printable 就是说用一些可打印常用字符，表示一个字节（8位）中所有非打印字符方法。每个末编码的二进制字符被编码成三个字符，即一个等号和一个十六进制的数字，如‘=AB’。 \n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：flag&#123;This=20is=20a=20example!&#125;\n\n在线解码&amp;工具http://www.mxcz.net/tools/https://www.w3cschool.cn/tools/index?name=decode_encode_tool\n\n\nXXencode编码只有数字，大小写字母（ +、-、09 、AZ 、a~z） 一共64个字符，与base64打印字符相比，就是多一个“-” 字符，少一个”/” 字符。\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：MNalVNrhIO4Zn64Zn642UNLVVPL-gNG3x\n\n在线解码&amp;工具http://web.chacuo.net/charsetxxencodehttps://www.qqxiuzi.cn/bianma/uuencode.php\n\n\nUUencode编码begin 644一般为UUencode的标识它的编码表有很多是特殊字符： !”#￥%&amp;‘（）*+=’ 等。\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：89FQA9WM4:&amp;ES(&amp;ES(&amp;$@97AA;7!L92%]\n\n在线解码&amp;工具http://web.chacuo.net/charsetxxencodehttps://www.qqxiuzi.cn/bianma/Unicode.htm\n\n\nURL编码一个字符ascii码的十六进制，然后在前面加上%url编码又叫百分号编码，是统一资源定位(URL)编码方式。\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：flag%7bThis+is+a+example!%7d\n\n在线解码&amp;工具http://web.chacuo.net/charseturlencodehttp://tool.chinaz.com/tools/urlencode.aspx\n\n\nUnicode编码Unicode编码有以下四种编码方式：\n\n&amp;#x [Hex]：&#x0054;&#x0068;&amp;#x0065\n&amp;# [Decimal]：&#00084;&#00104;&amp;#00101\n\\U [Hex]：\\U0054\\U0068\\U0065\n\\U+ [Hex]：\\U+0054\\U+0068\\U+0065\n\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：&amp;#x0066;&amp;#x006C;&amp;#x0061;&amp;#x0067;&amp;#x007B;&amp;#x0054;&amp;#x0068;&amp;#x0069;&amp;#x0073;&amp;#x0020;&amp;#x0069;&amp;#x0073;&amp;#x0020;&amp;#x0061;&amp;#x0020;&amp;#x0065;&amp;#x0078;&amp;#x0061;&amp;#x006D;&amp;#x0070;&amp;#x006C;&amp;#x0065;&amp;#x0021;&amp;#x007D;（&amp;#x [Hex]）&amp;#00102;&amp;#00108;&amp;#00097;&amp;#00103;&amp;#00123;&amp;#00084;&amp;#00104;&amp;#00105;&amp;#00115;&amp;#00032;&amp;#00105;&amp;#00115;&amp;#00032;&amp;#00097;&amp;#00032;&amp;#00101;&amp;#00120;&amp;#00097;&amp;#00109;&amp;#00112;&amp;#00108;&amp;#00101;&amp;#00033;&amp;#00125;（&amp;# [Decimal]）\\U0066\\U006C\\U0061\\U0067\\U007B\\U0054\\U0068\\U0069\\U0073\\U0020\\U0069\\U0073\\U0020\\U0061\\U0020\\U0065\\U0078\\U0061\\U006D\\U0070\\U006C\\U0065\\U0021\\U007D（\\U [Hex]）\\U+0066\\U+006C\\U+0061\\U+0067\\U+007B\\U+0054\\U+0068\\U+0069\\U+0073\\U+0020\\U+0069\\U+0073\\U+0020\\U+0061\\U+0020\\U+0065\\U+0078\\U+0061\\U+006D\\U+0070\\U+006C\\U+0065\\U+0021\\U+007D（\\U+ [Hex]）\n\n在线解码&amp;工具http://tool.chinaz.com/tools/unicode.aspxhttp://www.mxcz.net/tools/Unicode.aspxhttps://www.online-toolz.com/tools/text-unicode-entities-convertor.php（可能需要科学上网）\n\n\nEscape/Unescape编码Escape/Unescape加密解码/编码解码,又叫%u编码，采用UTF-16BE模式，就是字符对应UTF-16 16进制表示方式前面加%u。\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：flag%7BThis%20is%20a%20example%21%7D\n\n在线解码&amp;工具https://tool.chinaz.com/tools/escape.aspxhttps://escape.supfree.net/\n\n\nHTML实体编码\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：flag&#123;This is a example!&#125;\n\n在线解码&amp;工具http://www.toolzl.com/tools/htmlende.html\n\n\nTap Code敲击码敲击码是基于5×5方格波利比奥斯方阵来实现的，不同点是用K字母被整合到C中。\n敲击码表：\n  1  2  3  4  51 A  B C&#x2F;K D  E2 F  G  H  I  J 3 L  M  N  O  P4 Q  R  S  T  U5 V  W  X  Y  Z\n\nMorse Code摩尔斯电码摩尔斯电码主要由以下5种代码组成：\n\n点（.）\n划（-）\n每个字符间短的停顿（通常用空格表示停顿）\n每个词之间中等的停顿（通常用 / 划分）\n以及句子之间长的停顿\n\n摩尔斯电码字母、数字及符号对应表：\n\n编码转换示例源文本：flag&#123;This is a example!&#125;编码后：..-. .-.. .- --. - .... .. ... -....- .. ... -....- .- -....- . -..- .- -- .--. .-.. . ；..-./.-../.-/--./----.--/-/..../../.../../.../.-/./-..-/.-/--/.--./.-.././-.-.--/-----.-（不同网站对符号加解码不同）\n\n在线解码&amp;工具http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspxhttp://tools.jb51.net/password/zhmorsehttp://rumkin.com/tools/cipher/morse.phphttp://www.zou114.com/mesm/http://www.jb51.net/tools/morse.htm\n\n\n\n注：以上部分在线解码&amp;工具较为通用，如有失效的，请反馈给我，并尝试其他网站\n\n\n换位加密Rail-fence Cipher 栅栏密码栅栏密码就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合……每组的第N(最后一个分组可能不足N个)个字符组合，最后把他们全部连接起来就是密文，下文以3栏栅栏加密为例。\n\n编码转换示例明文：flag&#123;This is a example!&#125;去空格：flag&#123;Thisisaexample!&#125;分组：fla g&#123;T his isa exa mpl e!&#125;第一组：fghieme第二组：l&#123;isxp!第三组：aTsaal&#125;密文：fghiemel&#123;isxp!aTsaal&#125;\n\n在线解码&amp;工具http://www.practicalcryptography.com/ciphers/classical-era/rail-fence/\n\n\nCurve Cipher 曲路密码曲路密码是一种换位密码，需要事先双方约定密钥(也就是曲路路径)。\n填入3行7列表(事先约定填充的行列数)\nf l a g &#123; T hi s i s a e xa m p l e ! &#125;\n加密的回路线(事先约定填充的行列数)\n\n编码转换示例明文：flag&#123;This is a example!&#125;密文：&#125;xhTe!e a&#123;gslpi alsmaif\n\nColumnar Transposition Cipher 列位移加密列移位密码通过一个简单的规则将明文打乱混合成密文。\n填入3行7列表(事先约定填充的行列数，如果明文不能填充完表格可以约定使用某个字母进行填充)\nf l a g &#123; T hi s i s a e xa m p l e ! &#125;\n密钥： how are u\n按how are u在字母表中的出现的先后顺序进行编号，我们就有a为1,e为2，h为3，o为4，r为5，u为6，w为7，所以先写出a列，其次e列，以此类推写出的结果便是密文。\nh o w a r e u3 4 7 1 5 2 6f l a g &#123; T hi s i s a e xa m p l e ! &#125;\n\n编码转换示例明文：flag&#123;This is a example!&#125;密文：gsl Te! fia lsm &#123;ae hx&#125; aip\n\n在线解码&amp;工具http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/\n\n\n\n替换加密Atbash Cipher 埃特巴什码埃特巴什码是一种以字母倒序排列作为特殊密钥的替换加密，也就是下面的对应关系：\n\nABCDEFGHIJKLMNOPQRSTUVWXYZZYXWVUTSRQPONMLKJIHGFEDCBA\n\n\n编码转换示例明文：flag&#123;This is a example!&#125;密文：uozt&#123;gsrh rh z vcznkov!&#125;\n\n在线解码&amp;工具http://www.practicalcryptography.com/ciphers/classical-era/atbash-cipher/\n\n\nCaesar Cipher 凯撒密码凯撒密码(恺撒加密、恺撒变换、变换加密、位移加密)是一种替换加密，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。\n\n编码转换示例明文：flag&#123;This is a example!&#125;偏移量：3密文：iodj&#123;wklv lv d hadpsoh!&#125;\n\n在线解码&amp;工具http://www.zjslove.com/3.decode/kaisa/index.htmlhttps://www.qqxiuzi.cn/bianma/kaisamima.phphttps://planetcalc.com/1434/\n\n\nROT 5/13/18/47\nROT5/13/18/47是一种简单的码元位置顺序替换暗码。此类编码具有可逆性，可以自我解密，主要用于应对快速浏览，或者是机器的读取。ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：\n\n\nROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环。\n\n\nROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。\n\n\nROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。\n\n\nROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126，具体参考ASCII编码，下面以ROT13为例。\n\n\n编码转换示例明文：flag&#123;This is a example!&#125;密文：synt&#123;Guvf vf n rknzcyr!&#125;（ROT13）\n\n在线解码&amp;工具http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php\n\n\nHill Cipher 希尔密码希尔密码是基于线性代数多重代换密码。每个字母转换成26进制数字：A=0, B=1, C=2…Z=25一串字母当成n维向量，跟一个n×n的矩阵相乘，再将得出的结果MOD26。详细原理见：http://blog.neargle.com/SecNewsBak/drops/CTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%E7%9A%84%E7%BC%96%E7%A0%81%E5%92%8C%E5%8A%A0%E5%AF%86%20.html\n\n编码转换示例明文：flagkey：5 17 4 15密文：edym\n\n在线解码&amp;工具http://www.practicalcryptography.com/ciphers/hill-cipher/\n\n\nPigpen Cipher 猪圈密码猪圈密码(九宫格密码、朱高密码、共济会密码或共济会员密码)，是一种以格子为基础的简单替代式密码。\n\n编码转换示例明文：flag&#123;This is a example!&#125;密文：\n\n在线解码&amp;工具http://www.simonsingh.net/The_Black_Chamber/pigpen.html\n\n\nPolybius Square Cipher 波利比奥斯方阵密码波利比奥斯方阵密码（波利比奥斯棋盘）是棋盘密码的一种，是利用波利比奥斯方阵进行加密的密码方式，简单的来说就是把字母排列好，用坐标(行列)的形式表现出来。字母是密文，明文便是字母的坐标，反之亦同。\n\n编码转换示例明文：flag密文：12131122\n\n夏多密码（曲折加密）夏多密码是作者麦克斯韦·格兰特在中篇小说《死亡之链》塑造夏多这一英雄人物中所自创的密码，如下图所示：\n\n注：在以上所示的字母表密钥的底部，列有四个附加符号1，2，3，4.他们可以放在密文中的任何地方。每个附加符号指示，如何转动写有密文的纸张，再进行后续的加密或解密操作，直到出现另一个附加符号。可以把每个附加符号中的那根线看作是指示针，它指示了纸张的上端朝上，朝右，朝下，朝左。比如说：如果出现符号3，那么纸张就应该转动180度，使其上端朝下； 符号2表示纸张上端朝右，依次类推。\n\nVigenere Cipher 维吉尼亚密码维吉尼亚密码是在单一恺撒密码的基础上扩展出多表代换密码，根据密钥(当密钥长度小于明文长度时一般为循环使用，密钥越长相对破解难度越大)来决定用哪一行的密表来进行替换，以此来对抗字频统计。\n\n编码转换示例明文：flag&#123;This is a example!&#125;密钥：password密文：ulsy&#123;Pvzv xs s wtodsae!&#125;\n\n在线解码&amp;工具https://www.qqxiuzi.cn/bianma/weijiniyamima.phphttp://planetcalc.com/2468/（已知密匙，已崩）http://rumkin.com/tools/cipher/gronsfeld.php（未知密匙，已崩）http://www.zjslove.com/3.decode/weijiniya/index.html\n\n\nBaconian Cipher 培根密码培根密码是一种替换密码，每个明文字母被一个由5字符组成的序列替换。以下是全部的对应关系(另一种对于关系是每个字母都有唯一对应序列，I和J与U/V各自都有不同对应序列)：\n\n编码转换示例明文：flag&#123;This is a example&#125;密文：AABABABABAAAAAAAABBA BAABAAABBBABAAABAAAB ABAAABAAAB AAAAA AABAABABABAAAAAABABBABBBAABABAAABAA\n\n在线解码&amp;工具http://rumkin.com/tools/cipher/baconian.php\n\n\n其他小技巧：\n如果密文是十进制，字符范围为“0-9”，可以猜测是 ASCII 编码；\n如果密文由“a-z”“A-Z”和“=”构成，特别是末尾有“=”，那么可以判断为 Base64 编码；\n如果密文含有“%”，形式为 “%xx” 和 “%uxxxx”，字符范围又是十六进制“0-F”，判断是 escape() 编码，用 unescape() 解码；\n若密文由“[]，()，{}，+,！”字符组成的编码通常就通过 Jother 解密。\n\n\nReferencesCTF中那些脑洞大开的编码和加密从零开始学习CTFASCII码，HTML转义字符表，以及快捷键CTF常见编码和加密特征CTF：集合吧，字符编码CTF必备技能之编码大全CTF中常见密码题解密网站总结\n后记上述没有提到的加解密情况还有很多，不过多为变种，基本原理相同，主要还是思路要灵活，下文会再整理一下在线加解密网站，方便查询。\n收集整理这些东西，一是方便我自己学习，尤其是在做 CTF 的 Crypto 题时，熟悉绝大多数的加密方式，可以更快判断出加密方式，从而进行接下来的分析；二是自然也希望可以帮到其他有需要的朋友，希望能结识更多志同道合的小伙伴，一起学习，共同进步，欢迎你们一起来讨论技术。\n当然我其实也是一个刚刚入门的小菜鸡，如果文中有错误的地方，请各位大神不吝赐教，也欢迎大家来捧场！\n","categories":["Crypto"]},{"title":"英语练级攻略","url":"/2022/09/27/language_English/","content":"Preface因为这篇文章 2021 极简三部曲终章：用 Notion 重新管理人生 正式结缘少数派，在社区闲逛之余自然又刷到了大约一年前看到过的郝海龙的《英语自学手册》，初看不知书中意，再看已是书中人啊！找到了一个 epub 版本（比官网看方便些~），通读一遍后收获颇深，相当科学完善的一套方法论，值得尝试，遂整理一下核心方法体系，开始这场英语学习的登台之旅。「文中提到的资源见文末」\nMain误区纠正花更多时间学习使用频率更高的英语；学习正确的英语，尽量少接触错误的英语表达；不要给自己的英语词汇量设限。学习——「模仿与重复」\n水平自测剑桥雅思 A 类如《剑雅 11》，连续做完听力和阅读部分，各一小时，打分确定当前 CEFR 水平。\n单词COCA 20000 从高频到低频，剔除到第一个不认识的单词。（欧路词典内置，Excel 表格）\n词汇书背诵方法：\n\n第 1 遍10 个为一组，按照看完英语看汉语的方式快速扫过，然后立即回头迅速复习一遍；再继续第二组，直到第一个 list 结束（约 100 词）一个 list 结束后，再回头迅速复习此 list，只看英文想中文，想不到就看一下。每日任务量最好新背到 400 词，有时间就复习一遍前一天背过的。第一遍过完大概用 45 天。\n\n第 2 遍遮住中文意思，认识单词就左边 mark 下，不认识就看一眼中文；看完一个 list 再回头看没有标记的词（强制跳过已标记的，目光不要停留）同样遮住，此次不做标记。第二遍可酌情增加每日 list 数量（600 词），过完大概 30 天。\n\n第 3-N 遍这次所有单词都看，换一种记号只 mark 第三遍认识的，第二遍的记号无论单词认识与否不要动，不重复标记。过到两个 list 时再回去复习（后期加间隔数），只看无标记的，强制跳过第二、三遍标记的。每日 list 数量继续加起来（800 词，23 天）……第四遍开始，方法如上（推荐 N=30）\n\nNote从哪停下，从哪开始；记号不同，了解某单词是第几遍会的，后期可针对性看背诵遍数较少的单词；第十遍时统计下记住了百分之几，如果到了 70% 以上，就针对没有记号的单词多过几遍；背诵时不要前后翻，避免增加焦虑；等背到十几遍时，可能一天两小时就能把整本书过一遍。建立单词与语境的关系，出现特定搭配及惯用法直接记下，当作一个词来记忆。\n\n\n阅读第一个台阶由之前剑雅阅读测试区分（提前备好所有资料）：5.5 分以下：从《新概念英语》第三、四册开始，每练习半本书，再自测一次，达到 5.5 就使用下面的文章。5.5 分以上：练习 100 篇，每日一篇——\n魔鬼 100 篇（根据时间可更新）：托福 TPO 67-74 阅读文章，共 24 篇；剑雅 A 类 11 和 12 阅读文章，共 24 篇；经济学人/时代周刊 随机挑选 52 篇（每篇 700 词左右，选择不同领域的文章）。\n1.「The Economist-22/12/24」What 2022 meant for the world2.「The Economist-22/12/24」Is forced treatment for the mentally ill ever humane?3.「The Economist-22/12/24」How food affects the mind, as well as the body4.5.「The Economist-22/12/24」The new tech worldview6.「The Economist-22/12/24」The children of Britain’s eastern European immigrants are changing the country7.「The Economist-22/12/24」A golden sandwich that demists your windscreen8.9.「The Economist-22/12/17」Period pains10.「The Economist-22/12/10」Young Americans increasingly end their own lives11.「The Economist-22/12/10」Japanese Manga is being eclipsed by Korean webtoons12.「The Economist-22/12/10」Getting China’s old people vaccinated has been slow work13.「The Economist-22/12/10」How Chinese netizens breached the great firewall14.「The Economist-22/12/10」Artificial intelligence is permeating business at last15.「The Economist-22/12/10」How adult brains learn the new without forgetting the old16.「The Economist-22/12/03」Xi Jinping’s zero-covid policy has turned a health crisis into a political one17.「The Economist-22/12/03」Why Russia’s cyber-attacks have fallen flat18.「The Economist-22/12/03」Sexual problems can wreck lives. Yet remedies are often simple19.「The Economist-22/12/03」Women are revitalising America’s funeral-services industry20.「The Economist-22/12/03」What two crimes reveal about violence against Indian women21.「The Economist-22/12/03」The taboos around sexual health are weakening22.「The Economist-22/11/26」Europe faces an enduring crisis of energy and geopolitics23.「The Economist-22/11/26」New York state reckons it’s got cannabis legalisation right24.「The Economist-22/11/26」Australia emerges from China’s doghouse25.「The Economist-22/11/26」Why the African cocoa cartel is a bad idea26.「The Economist-22/11/26」How to do lay-offs right27.「The Economist-22/11/26」Can Tokyo’s charms be replicated elsewhere?\n28.「Time-22/12/26」A time of senseless tragedy and cautious progress29.「Time-22/12/05」Why women-led protests are more successful30.「Time-22/12/05」America returns to the World Cup with young, diverse talent31.「Time-22/12/05」Not Just Child’s Play32.「Time-22/12/05」Reluctant teen cannibals, in love and on the lam33.「Time-22/11/21」They should pay me. If that gets instituted, I’m gone like Enron.’34.「Time-22/11/21」5 ways to become a morning person35.「Time-22/11/21」NEXT YEAR’S ENERGY CRISIS36.「Time-22/11/21」Caught between Democratic fecklessness and Republican lunacy37.38.「Time-22/11/21」A lot of my friends describeYellowstone as a red-state show made by blue-state people.’39.40.「Time-22/11/21」The funny thing about aging41.「Time-22/11/07」Somalia faces its worst drought ever, as the world looks away42.「Time-22/11/07」How to be both ambitious and fulfilled43.「Time-22/11/07」In search of a hero, biographer Stacy Schiff pulled Samuel Adams out of the shadows44.45.46.「Time-22/11/07」The art of persuasion in a polarized age47.「Time-22/08/15」Democratizing real estate investment48.49.50.51.52.「Time-22/08/15」THE COMING WORLDS\n辅助精读法：（前三遍解决词汇问题，第四五遍解决语法问题，第六七遍体验母语阅读感觉，彻底读懂）\n\n第 1 遍把握文章大意，标出不认识单词，尽可能根据语境推测意思；读完后查出所有标记词，记下单词在当前语境的意思，只记录中文释义，并打乱写在纸上。\n\n第 2 遍若第一遍查出的单词释义不符合语境，作修正；努力回想查过的单词释义，想不起来就去之前记录的纸上找。\n\n第 3 遍同第二遍，期待此次单词问题全部解决，后面又忘记就再回纸上找。\n\n第 4 遍这次就没有不认识的单词了，若仍有读不懂的句子，做句法分析。\n\n第 5 遍仍有读不懂的句子，求助语法书《英语阅读参考手册》，弄懂并记录下相关语法现象和句子。\n\n第 6 遍完整再过一遍文章，此次完全读懂了。\n\n第 7 遍最后一遍读起来比上次更顺利，不断重复中，大脑把看到的英文翻译成汉语，这个过程会越来越短，甚至有种跳过翻译直接读懂的幻觉。当完成 100 篇练习后，幻觉就变成了真正能力的一部分。之后将生词和语法现象添加到记忆 APP 中，一并复习。\n\nNote七遍阅读用整块时间一次性完成，最好每天一篇，连读一百天；每练 25 篇会有一次明显的阅读能力提升，50 篇时做一套剑雅测试；训练时忽略阅读速度，速度一般与阅读量成正相关；好处之一是使用频率高的英语单词和用法，学习频率也高。完成后，保持每天读一篇当前难度的文章，最好不少于三十分钟；词汇量突破一万后，是使用英英词典的好时机；此时也是训练听说能力的好时机。阅读技巧：1、方框标词，2、观点用曲线，3、态度用圈和正负号，4、不认识的词画横线。\n\n\n第二个台阶每天至少读半小时以上；至少一遍，保证读懂为止；保持记录背诵生词和语法现象的习惯。\n\n书单：（前两本较短，建立信心；后两本最好一口气都读完，相互印证）\n\n\nA Planet of Viruses by Carl Zimmer\nThe Alchemist by Paulo Coelho, Translated by Alan R. Clarke\nOutliers: The Story of Success by Malcolm Gladwell\nHarry Potter and the Philosopher’s Stone by J. K. Rowling\nThe Antidote by Oliver Burkeman\nPermanent Record by Edward Snowden\nLooking for Alibrandi by Melina Marchetta\nSteve Jobs by Walter Isaacson\nPrinciples by Ray Dalio\nFree to Choose: A Personal Statement by Milton Friedman &amp; Rose D. Friedman\n哈利波特系列\nThe Bible 圣经（NIV 版）\nWord Power Made Easy by Norman Lewis（词汇教程，可按照书中推荐方式完整学习一遍，系统梳理自己的词汇结构）\nMerriam-Webster’s Vocabulary Builder by Mary Wood Cornog（更像词汇书，讲解了 250 多个词根及词源）\n\n\nNote按每本书五万词计，读完十本后（五十万词）就上了第二台阶；按每天读 1500 词计，大概一年读完。\n\n第三个台阶Step1：虚构类与非虚构类，文学经典与类型文学穿插阅读。Step2：纯粹阅读必读的和感兴趣的内容。\n\n畅销通俗小说（科幻、奇幻、推理、惊悚、悬疑等）：Stephen King / Lee Child / Dan Brown / Lawrence Block / John le Carré 的小说。\n科幻经典：Issac Asimov / Robert A. Heinlein 的小说。\n最新的科幻小说：近年来雨果奖、星云奖作品。\n流行文化相关书籍：比如流行的影视作品原著等。\n当代纯文学经典：如二战以后的诺贝尔文学奖得主作品。\n新近布克奖（The Booker Prize）普利策小说奖（Pulitzer Prize for Fiction）得奖及提名作品。\n\n可读性测试：Flesch–Kincaid readability testsLexile Framework for Reading\n听力口语第一个台阶《新概念英语》第二册前 30 篇文章；每日一篇，每篇一分钟左右，连续三十天。剑雅较新八套题（11、12）的听力材料，每段录音 5-10 分钟，共 32 段录音，每天一段。\n简单跟读法：\n\n不看原文，先听一遍\n通读原文，理解内容（阅读上了第一台阶基本没问题）（辅助跟读法：标注音变现象）\n逐句跟读（放一句录音跟读一遍，该句彻底跟读下来，再继续下一句；能跟下来就不看原文）\n全文跟读（不看原文，一边放录音一遍跟着读——影子跟读 或 同时跟读）\n再听五遍（纯听，想着每句意思，走神则重来）\n\n\nNote跟读时，要想着这句话的意思，如果忘了就重新通读原文；完全模仿原句的说话方式，如停顿、语气、语调；直到完整跟读下来一整篇为止，某句卡顿可专门练习；第四步可录音，三十天后与第一天对比；软件：每日英语听力、轻听英语，支持逐句跟读。每练习十段录音，再完整听一遍这十段录音；剑雅练习到一半时，可另选一套剑雅自测。整句话没听明白可问：May I beg your pardon?特定词没听明白可问：What did/do you mean by xxx?\n\n音变现象\n\n连读与叠合：下标弧线连接前后部分\n同化、失爆与击穿：斜杠划掉不发音部分\n元音中插入 /j/ /w/：前面单词尾音是 /i/ /ɪ/ /eɪ/ /ɔɪ/ /aɪ/，下一个单词以元音开头，插入 /j/；当 /u/ /əʊ/ /aʊ/ 时，插入 /w/\n弱读与缩读：单元音及常见 /ʌ/ /ɪ/ /ʊ/ 通常弱读为 /ə/\n\n\n联合音变辅音 /t/ /d/ /s/ /z/ 分别遇到 /j/ 时，发音可能变化，规律如下：\n\n/t/+/j/ 变做 /tʃ/。例如，can’t you；\n/d/+/j/ 变做 /dʒ/。例如，would you；\n/s/+/j/ 变做 /ʃ/。例如，miss you;\n/z/+/j/ 变做 /ʒ/。例如，these years。\n\n\n\n第二个台阶听力口语要学到 C1 以上，时间以 2000 小时（练习材料）为目标。\nFriends 老友记Modern Family 摩登家庭\n选定两小时的片段用来学习，如《老友记》六集；每天两小时跟读训练；完成后每天保持十五分以上练习即可。\n\n关掉字幕，先看一遍，尽力看懂\n打开字幕，再看一遍，全部看懂\n逐句跟读（放一句录音跟读一遍，该句彻底跟读下来，再继续下一句；能跟下来就不看原文）\n不看字幕，整集跟读\n跟读 100 遍（从第一步完整过完一遍算起；剧情完全熟悉可只听音频；200 小时）\n\n第三个台阶口语补足日常事务性表达：《牛津高阶英语词典第十版 Oxford Advanced Learner’s Dictionary》电子版附录 Express Yourself 专题，共 40 组。\n待整理\n听力准备 18 个小时的练习材料，跟读 100 遍。电影、电视剧、演讲 TED、新闻 BBC/VOA、谈话节目 The Ellen Show/The Graham Norton Show\n\n《疯狂动物城》2 小时\n《寻梦环游记》\n《乔布斯演讲》\n《那个黑人大学演讲》\n《怦然心动》\n《垫底辣妹》\n《风雨哈佛路》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n《》\n\n写作The Great Writing Series 教程针对非英语母语人士\n资源待补充\n修辞手法：比喻（Simile and Metaphor）类比（Analogy）对比（Antithesis）\n\n写作辅助工具QuillBot 多功能写作润色器Grammarly 写作语法检查器Hemingway Editor 检测长难句句解霸 英语句子成分分析Rewordify 改善阅读，重写润色欧路词典Linggle 语言参考搜索引擎Ludwig 结合语境的句子搜索引擎Linguee 多国语言语料库+词典Text Analyzer CEFR 文本查询English Profile CEFR 词汇查询Thesaurus 高级同义词汇freeThesaurus 高级词汇引申FRAZE·IT 英文语料库YouGlish 油管发音QuoDB 电影台词英文表达Bionic Reading\n\nReference\n《英语自学手册》只要字母加得够粗，你就追不上我的阅读速度\n\nPostscript\n这篇教程之于我最大的益处在于观念的重塑，让我知道坚持下去可以实现和达到的高度以及如何去更好的坚持，教程中提供和介绍的方法、书籍、工具也是非常不错。——blackcrow\n\n「待更！资源获取请在公众号——XXX回复英语攻略」\n","categories":["Self-improvement"]},{"title":"Crypto 九层妖塔","url":"/2020/05/06/Crypto_demon_tower/","content":"九层妖塔（设计思路 &amp; WP）\n前言：之前特别喜欢看雪上的一道名为“九层妖塔”的逆向题，这次要出一道密码题，故突发奇想，花了一天半的时间，整了这么一道密码学的九层妖塔，虽然没有密码学的灵魂 RSA，但也添加了一些故事性的描述，力图增加一些趣味性，同时涉及到了总计 24 种编码及加密算法，希望可以更好地了解密码学这个充满魅力的体系。（注：最后解出的 WP 为旧文档）\n设计大纲：一层：腐木基座隐塔身：base编码、列位移密码（密钥）、曲路密码（路径）二层：幽曲木栅落凡尘：栅栏密码（W型）、曲路密码三层：普莱菲尔封凯撒：普莱菲尔密码、凯撒密码、四方密码（两段密钥）四层：道法挪移镇邪煞：列移位密码、六十四卦图（密钥）、盲文（密钥）五层：半盲道人荡图灵：盲文、brainfuck、仿射密码（密钥）六层：圣堂武士震四方：猪圈密码变种、四方密码、波利比奥斯方阵密码（密钥）、维吉尼亚密码（密钥）七层：九转方棋威五堂：波利比奥斯方阵密码、维吉尼亚密码（威）、仿射密码（密钥）八层：梵音回响摄心神：敲击码、仿射密码、摩尔斯密码、夏多密码（密钥）九层：九曲轮回链生死：夏多密码、六十四卦图（文件）阵启：万古佛法通古今：与佛论禅、新约佛论禅破封：六十四卦补阴阳：六十四卦密码、二进制转字符、ASCII编码\n详细思路：一层：腐木基座隐塔身故事带入，某某无意间找到一个“精美的盒子”，但是这个盒子外面加了一道四个数字的密码锁，作为神偷，他很轻松地用工具解开了（这里涉及到压缩包爆破，有隐写的嫌疑……咳咳，不过也仅此一处，后面的爆破几乎很难……）\n然后发现一张“藏宝图”，封面是一个有些散架的，散发着淡淡幽蓝色彩的，呃……大写“B”？翻开里面，掉出一张枯黄的草纸，捡起来，开始阅读：\n“传说东方有一座九层妖塔，里面有着富可敌国的宝藏，若想得到，需要解开层层密码，突破迷雾与阻碍……”\n然后下面是一堆（什么鬼）……\nR00zRE9PQlRHWVpVSVJLR0lKQlRRT0JUR0ZDVU1RU0RIQkJUR05TRklaQkVHT0JaSVZERUVRWllIQVpUTVJLR0lKQlRRUVpUR1pDVU1RU0RIQTRVS1JTQ0lNNERRTVpXSVZERUVRWllJTVpUSVJLR0lKQlRRT0tGSVpCRUdPQllHTVlVS1JTQ0lNNEVHTVpVSVZERUVRWllIRkNVTVFTREhBNERHTUtGSVpCRUdPQ0RHTVpFS1JTQ0lNNERTUktHSUpCVFFPQlRHWkNVTVFTREhCQlRHTVNGSVpCRUdPQlpJVkRFRVFaWUhBWlRNUktHSUpCVFFRWlRHRkNVTVFTREhBNFVLUlNDSU00RFFNWlJJVkRFRVFaWUlNWlRDUktHSUpCVFFPS0ZJWkJFR09CWUdNWVVLUlNDSU00RUdNWlRJVkRFRVFaWUhGQ1VNUVNESEE0REdOU0ZJWkJFR09DREdNWlVLUlNDSU00RFNSS0dJSkJUUU9CVEdaQ1VNUVNESEJCVEdOS0ZJWkJFR09CWklWREVFUVpZSEFaVENSS0dJSkJUUVFaVEdWQ1VNUVNESEE0UT09PT0K\n由“基座”联想到 base 编码，最后确定依次进行 base64、base32、base16\n得出一堆信息，继续分析……\n“隐塔身”可能暗示隐藏着某些信息，通过上面的解密得到以下信息：\n6x6=（1，6）（6，6）（6，4）（1，4）（1，2）（6，2）（6，1）（1，1）（1，3）（6，3）（6，5）（1，5）\n但是似乎还不够，我们没有找到下一层的方法，再看看那张图，发现下面有一些空白，反白一下，又发现了一些信息：（上面的数字似乎缺了一些，还有个字母 l，之后回忆起正是对应上文的加密 base64、base32、base16）\n6  32 lTmluZSBsYXllciBkZW1vbiB0b3dlcg==TG9zdCBjb21wYXNz\nbase64解出如下：\nNine layer demon towerLost compass\n发现 Nine layer demon tower （九层妖塔）这个似乎才是真正的入场券，至于其他信息先留着，也许之后有用，现在成功进入了第二层……\n二层：幽曲木栅落凡尘由“木栅”首先联想到栅栏密码，这里难度升级为 W 型栅栏，注释中有一个 4，猜测为四栏：\nnaitnclesdpplwalpigostautgddehcioean\n栅栏密码（W型）在线解密http://www.atoolbox.net/Tool.php?Id=777得到：\nnlgcoeassitdipaouptltegwnadadlcpenhi\n虽然现在还是乱码，但是不要急，接着由“幽曲”再次联想到曲路密码，结合第一层得到的“曲径通幽处”，猜测为曲路密码的路径，即：\n6x6=（1，6）（6，6）（6，4）（1，4）（1，2）（6，2）（6，1）（1，1）（1，3）（6，3）（6，5）（1，5）\n绘制 6x6 表格，按照路径依次填入\n\n\n\nw\ni\nn\nd\ni\nn\n\n\n\ng\np\na\nt\nh\nl\n\n\ne\na\nd\ni\nn\ng\n\n\nt\no\na\ns\ne\nc\n\n\nl\nu\nd\ns\np\no\n\n\nt\np\nl\na\nc\ne\n\n\n整理得到：（Hit：曲径通幽处）\nwinding path leading to a seclud spot place\n解压成功，进入第三层~~\n三层：普莱菲尔封凯撒这层很明显可以想到普莱菲尔密码、凯撒密码，接着用上层最后得到的密钥打开压缩包，注意到注释中写着：\n“菲尔的钥匙： rtkhyfbveapxnwuolgmcdzqsi ”\n接着看到：\nVUIRCPFTXYWI\n尝试普莱菲尔密码，加上注释中“菲尔的钥匙”，进行在线解密http://www.practicalcryptography.com/ciphers/classical-era/playfair/得到：（吾儿，亦有汝焉？）\nANDYOUBRUTUS\n解出来发现不能打开“凯撒之言”，结合题目 Google 查一下，发现这是一句拉丁语名言，即\nEt tu, Brute?\n接着尝试一下这句话，成功打开“凯撒之言”，发现了三个单词样式的字符串，基本确定为凯撒加密：\nmywolcns，jlyzcf，jliwymm\n在线解密后https://planetcalc.com/1434/确定偏移量均为 ROT20，得到：\nsecurity，prefil，process\n测试后，发现 process 为进入下一层的压缩包密码，但是不清楚剩下两段密钥是用在哪里，先保留，继续进入第四层（这里埋了个坑，之所以没有用 md5 防止爆破，是因为如果偷懒直接爆破出压缩包的密码，到了第六层就找不到四方密码的密钥了，最后还得绕回来……）\n四层：道法挪移镇邪煞“挪移”联想移位的加密，确定列移位密码，先记录压缩包注释中 a=15，接着尝试解开“失落的无字罗盘”，之前第一层得到一张图纸上写着：Lost compass（译为：失落的罗盘），猜测这是列移位密码的 keyword，打开“镇煞之符”文件，发现：\nttrwohettseihuiahwssdomtitrieitnhroaiernbtho\n通过列移位密码在线解密http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/\n得到：（菩提本无树，明镜亦非台）\nthebodhithiswithouttreesthemirrorisnottaiwan\n作为密码，成功打开“失落的无字罗盘”，打开里面的文件，发现是个空白，切换背景色，出现文字：“菩提本无树，明镜亦非台！恭喜你找到了这个刻着 way 的无字罗盘，带着它，把它交给半盲道人，他会带你继续走下去。未来……当你做到那……手握日月摘星辰，世间无我这般人……你便可以知生死，通古今，互阴阳，悟得卦图，道破天机！”\n⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⠊⠁⡼⠁⡱⠁⡯⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡭⠁⡱⠁⠌⠁⡯⠁⡺⠁⡿⠁⡭⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⠊⠁⡼⠁⡯⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡭⠁⠌⠁⡯⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡿⠁⡭⠁⡺⠁⡺⠁⡺⠁⡱⠁⠊⠁⡼⠁⡯⠁⡼⠁⡼⠁⡛⠁⡼⠁⡭⠁⠌⠁⡯⠁⡼⠁⡱⠁⡼⠁⡿⠁⡭⠁⡺⠁⡺⠁⡱⠁⡺⠁⠊⠁⡼⠁⡯⠁⡺⠁⡱⠁⡺⠁⡺⠁⡭⠁⠌⠁⡯⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡿⠁⡱⠁⡭⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⠊⠁⡱⠁⡼⠁⡯⠁⡼⠁⡼⠁⡼⠁⡱⠁⡼⠁⡼⠁⡼⠁⡼⠁⡼⠁⡱⠁⡭⠁⠌⠁⡯⠁⡼⠁⡼⠁⡱⠁⡼⠁⡼⠁⡼⠁⡼⠁⡼⠁⡱⠁⡼⠁⡼⠁⡼⠁⡼⠁⡼⠁⡛⠁⡼⠁⡼⠁⡿⠁⡭⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⠊⠁⡼⠁⡯⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡭⠁⠌⠁⡯⠁⡺⠁⡱⠁⡺⠁⡺⠁⡿⠁⡭⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⠊⠁⡱⠁⡼⠁⡯⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡭⠁⠌⠁⡯⠁⡱⠁⡺⠁⡺⠁⡺⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡿⠁⡼⠁⡱⠁⡼⠁⡼⠁⡿⠁⡼⠁⡼⠁⡛⠁⡼⠁⡼⠁⡼⠁⡼⠁⡼⠁⡱⠁⡼⠁⡼⠁⡿⠁⡺⠁⡺⠁⡱⠁⡺⠁⡺⠁⡺⠁⡿⠁⡼⠁⡱⠁⡼⠁⡼⠁⡼⠁⡼⠁⡼⠁⡱⠁⡼⠁⡿⠁⡭==\n五层：半盲道人荡图灵“半盲道人”很容易联想到盲文，加上上一层解出的刻着 way 的“失落的无字罗盘”，猜测为盲文密码，在线解密https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen\n得到：\n+++++ +++[- &gt;++++ ++++&lt; ]&gt;+.&lt; +++++ +[-&gt;+ +++++ &lt;]&gt;++ +++++ .&lt;+++ [-&gt;---&lt;]&gt;- -.&lt;++ +[-&gt;+ ++&lt;]&gt; ++++. &lt;++++ ++++[ -&gt;--- ----- &lt;]&gt;-- ----- -------.&lt;+ +++++ +[-&gt;+ +++++ +&lt;]&gt;+ ++.&lt;+ ++++[ -&gt;+++ ++&lt;]&gt; +++++ +++.- --.------- --.++ +++.- ----- -.&lt;\n接着由“图灵”联想到 brainfuck 加密，在线解密https://www.splitbrain.org/services/ook得到：\nAlan Turing\n然后你想爆破压缩包，不可能的(+_+)https://www.somd5.com/\nmd5(32)来一次，得到：\nc342cdb7d4ad65f3467f1ab056f1f9c6\nOK了，解压成功，进入第六层……\n六层：圣堂武士震四方“圣堂武士”想到猪圈密码变种，有三张图包含两个变种，分别解出\n\n得到一枚黑色棋子：polybios得到一枚白色棋子：xcbyao以及一张草纸：OBLFGOKYCNQRKLYTZIGS\n“震四方”为四方密码，下图为示例（非本题），第三层“凯撒之言”得到两段多余的密钥 security，prefil，此处用上\n\n解密得到一串密文：（坐亦禅，行亦禅）\nSITALSOZENWALKISZENS\n解压成功，进入下一层……\n七层：九转方棋威五堂首先看到其中的压缩包注释信息：翻看一下，发现棋盒底部篆刻着 &lt; b=20 &gt;，你需要通过圣堂武士的两枚棋子，找到钥匙，打开棋盒，拿到里面的卷轴，它会指引你继续前进……\n接着分析，“九转方棋”联想到棋盘密码，最后确定为波利比奥斯方阵密码，第六层得到两枚棋子，这里用黑色的一枚作为密钥，即 polybios，然后再看文件中给出的信息：\n`24122413541544244243132222`（Hit：九转方棋）\nhttp://www.atoolbox.net/Tool.php?Id=913\n解码得到一把钥匙：（根据提示，加上两个空格，即九转方棋的英文）\nnine turn chess\n打开棋盒中的卷轴，发现下面的语句：\nLpf dociktf tvlwhft heg qpaxkcqyrojkuy, nojgmw, a fbce rhwkm qpaxkc（Hit：一念之间威五堂）\n“威”谐音“维”维吉尼亚密码，第六层得到的两枚棋子，这里还剩下白色的，即 xcbyao，作为此处密钥\n在线解码：http://www.atoolbox.net/Tool.php?Id=856\n得到：（一念愚即般若绝，一念智即般若生）\nOne foolish thought the prajnaparamita, namely, a read think prajna\n测试一下，压缩包解密成功，成功开启第八层……\n八层：梵音回响摄心神“梵音回响摄心神”中，结合文件内容，第一个文件解出来一堆有规律的点：\nn\n“梵音”联想到敲击码，对照上表，每两段替换一个字母，解出如下：\nFFWWW FFFWW FFFFW FWWWW FFFWW FWWWW FFWWW FFFFW FWWWW FWWWW FFFWW FFFFW FFWWW FWWWW FFFWW FFWWW FFFFW FFFFW FFWWW\n“摄”谐音“射”，又联想到仿射密码，在线解密，前面第五层压缩包注释中得到 a=15，第七层压缩包注释中得到 b=20，设置好系数 a bhttp://www.atoolbox.net/Tool.php?Id=911\n解出一堆大写的 Z O 字符：\nZZOOO ZZZOO ZZZZO ZOOOO ZZZOO ZOOOO ZZOOO ZZZZO ZOOOO ZOOOO ZZZOO ZZZZO ZZOOO ZOOOO ZZZOO ZZOOO ZZZZO ZZZZO ZZOOO\n联想一下，Z 代表 zero，O 代表 one，即文本替换一下，得到一堆 0 1，得到：\n00111 00011 00001 01111 00011 01111 00111 00001 01111 01111 00011 00001 00111 01111 00011 00111 00001 00001 00111\n可能是二进制转字符？或者摩尔斯密码？\n再次看提示中有“回响”，这里猜测是摩尔斯密码，继续替换，0为点，1为杠，如下：\n..--- ...-- ....- .---- ...-- .---- ..--- ....- .---- .---- ...-- ....- ..--- .---- ...-- ..--- ....- ....- ..---\n在线解密一下http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx\n解出一串数字：2341312411342132442\n九层：九曲轮回链生死接着发现两个压缩包，其中一个《六十四卦图》，想起来之前第四层“道法挪移”中压缩包中得到的图纸上写着做到：“手握日月摘星辰，世间无我这般人”，猜测为密码，解压成功，再看另一个：\n“九曲轮回链生死”联想到曲折加密、圆形、《死亡之链》，即夏多密码，同时，前面第八层“梵音回响摄心神”中得到一串数字，确定为夏多密码的密文变换规则，解出后应为下层钥匙。\n\n依次代入密文规则，即 2341312411342132442，解密后得到的都是大写，依据句子格式完整化输出（含句点）为：\nSomething for nothing.\n阵启：万古佛法通古今符合压缩包中注释信息——龙族，确定为压缩包密码，测试一下，成功解压出 TXT 文件，内含如下信息：\n新佛曰：修般吽所我喼阿亦婆提願空哆伏嚴波若迦喼兜修嚴迦彌諦提般婆亦修眾摩耨摩耨提願祗吽若咒羅羅吶提眾嘇喃吽諦吶愍喼嘚嚩須須諦須阿阿隸薩亦空聞兜伏阿愍須耨須莊空願宣叻嚩是修提愍空宣婆僧吽色諦嚴隸寂囉願吶即缽宣願缽缽宣塞即我眾劫菩吽祗色心所莊提般蜜彌莊訶嘚聞夷訶寂嚴斯空是彌眾劫波吽耨提迦訶祗塞咤所斯寂若彌兜叻提喃提若劫宣諦斯波所諸闍吶囉我空彌宣耨宣諸寂祗眾塞提心薩心降般愍婆阿迦眾慧吽降咤波咒菩哆菩迦愍婆喃喼宣咒吽如亦囑囑提\n由“佛法通古今”以及“新佛曰：”联想到新旧与佛论禅，很明显要先进行一次新约佛论禅，解出：\n冥呼苦呐羅舍冥夜皤真俱離罰得罰夜梵上冥恐奢豆喝梵所佛梵闍皤悉心侄苦奢般冥喝梵死恐皤孕蘇奢吉奢波老俱亦依冥多諳訶\n再进行一次与佛论禅，发现提示“太深奥了，参悟不出佛经的真意……”，这里你需要“普渡众生”，原来少了“佛曰：或如是我闻：”，加上“佛曰：”后成功参悟真谛\nhttp://hi.pcmoe.net/buddha.htmlhttp://www.keyfc.net/bbs/tools/tudoucode.aspx\n破封：六十四卦补阴阳解出一堆天干地支：咸同人归妹明夷贲革无妄联想到伏羲六十四卦的二进制矩阵表\n\n通过上图，解密六十四卦，阴为 0，阳为 1，补阴阳，猜测不满八位时，前补或者后补 01，最后转换后补错误，确定前补，得到二进制如下：\n01001110 01101111 01110100 01101000 01101001 01101110 01100111\n想到 ASCII 编码，去掉空格后，在线转换，http://tool.huixiang360.com/str/from-binary.php二进制转字符，得到 Nothing\n\n这里本想直接脑洞一下，猜解出只留下 nothing，然后尝试大小写和首字母大写（Something for nothing! 拿什么珍贵的东西，换来了空白。——龙族）\n\n最后得到未加密 flag：Nothingmd5 32 位加密后，格式化输出：flag&#123;f80a4ad87fee7c9fdc19b7769495fdb5&#125;\n","categories":["Crypto"]},{"title":"Code Segment/那些年 CV 过的代码片段","url":"/2021/03/29/code_segment/","content":"Preface注：尽可能整合了多种方案（如打印乘法表等），故部分不能直接运行，需注释部分代码方可。\n000 判断一个整数是否是 2 的整数次幂#include &lt;stdio.h&gt;/* 利用位与 &amp; 运算，判断一个整数是否是 2 的整数次幂,   根据位与的特点可知 m &amp; (m - 1) 的结果为 0 */int num;int func(int num)&#123;\tif ((num &gt; 0) &amp;&amp; (num &amp; (num - 1)) == 0)\t&#123;\t\tprintf(&quot;%d是2的整数次幂&quot;, num);\t&#125;\telse\t&#123;\t\tprintf(&quot;%d不是2的整数次幂&quot;, num);\t&#125;\treturn ((num &gt; 0) &amp;&amp; (num &amp; (num - 1)) == 0);&#125;int main()&#123;\tprintf(&quot;请输入要查询的数\\n&quot;);\tscanf_s(&quot;%d&quot;, &amp;num); //禁止显示状态 警告 C6031 返回值被忽略: &quot;scanf&quot;\t/*原因：在ANSI C中没有scanf_s(),只有scanf()，但是scanf()在读取时不检查边界，所以可能会造成内存泄露。\t于是Microsoft公司在VS中提供了scanf_s()，如果想继续使用scanf这个不安全的函数以下方法可以解决\t方法一：直接把 scanf() 改为 scanf_s() 即可\t方法二：在文件顶部添加代码：#pragma warning(disable:4996) ，可以正常运行，但VS仍然会提示 C6031 错误\t方法三：错误提示的原因在于VS中的SDL检查；关闭步骤：右键单击工程文件 &gt; 属性 &gt; c / c++ &gt; 所有选项 &gt; SDL检查选项改为 否 */\tfunc(num);&#125;\n001 三角形（菱形）四种表示#include&lt;stdio.h&gt;int main() &#123;\tint a, b, c, num;\tprintf(&quot;请输入（上三角形）打印行数：\\n&quot;);\tscanf_s(&quot;%d&quot;, &amp;num);\tfor (a = 0; a &lt; num; a++) &#123;\t\tfor (b = a; b &lt; num ; b++) &#123;\t\t\tprintf(&quot; &quot;); //递减\t\t&#125;\t\tfor (c = 0 ; c &lt; 2 * a + 1; c++) &#123;\t\t\tprintf(&quot;*&quot;);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\t//printf(&quot;\\n&quot;); //第一种菱形方法，上半部分\tfor (a = 0; a &lt; num-1; a++) &#123;\t\tprintf(&quot; &quot;); //下半部分\t\tfor (b = 0; b &lt; a+1; b++) &#123;\t\t\tprintf(&quot; &quot;); //递增\t\t&#125;\t\tfor (c = 2 * a; c &lt; 2 * (num - 1) - 1; c++) &#123;\t\t\tprintf(&quot;*&quot;);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;); //分割行\tfor (a = 0; a &lt; num; a++) &#123;\t\tfor (b = num; b &gt; a; b--) &#123;\t\t\tprintf(&quot; &quot;); //递减\t\t&#125;\t\tfor (c = 2 * a + 1; c &gt; 0 ; c--) &#123;\t\t\tprintf(&quot;*&quot;);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;); //第一种菱形方法变种，上半部分\tfor (a = 0; a &lt; num-1; a++) &#123;\t\t//printf(&quot; &quot;); //下半部分\t\tfor (b = a + 1; b &gt; 0; b--) &#123;\t\t\tprintf(&quot; &quot;); //递增\t\t&#125;\t\tfor (c = 2 * (num - 1) - 1; c &gt; 2 * a; c--) &#123;\t\t\tprintf(&quot;*&quot;);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;); //分割行/*1.对于上半部分(包括中间一行)，当前行与当前列满足如下关系输出星号：\t\tj &gt;= (column + 1) / 2 - (i - 1)     (column + 1) / 2 - (i - 1)为第 i 行最左边的星号\t\tj &lt;= (column + 1) / 2 + (i - 1)    (column + 1) / 2 + (i - 1)为第 i 行最右边的星号2.对于下半部分，当前行与当前列满足如下关系输出星号：\t\tj &gt;= (column + 1) / 2 - (line - i)     (column + 1) / 2 - (line - i)为第 i 行最左边的星号\t\tj &lt;= (column + 1) / 2 + (line - i)    (column + 1) / 2 + (line - i)为第 i 行最右边的星号3.不满足上述条件，则输出空格。*/\tint line; //总行数\tint column; //总列数\tint i; //当前行\tint j; //当前列\tprintf(&quot;请输入菱形打印行数：\\n&quot;);\tscanf_s(&quot;%d&quot;, &amp;line);\twhile (line % 2 == 0) &#123;\t\tprintf(&quot;请输入奇数！\\a\\n&quot;);\t\tscanf_s(&quot;%d&quot;, &amp;line);\t&#125;\tcolumn = line; //总行数与总列数相等\tfor (i = 1; i &lt;= column; i++) &#123; //遍历所有行\t\tif (i &lt;= (line + 1) / 2) &#123; //上半部分（包括中间一行）\t\t\tfor (j = 1; j &lt;= column; j++) &#123; //遍历（上半部分）所有列\t\t\t\tif ((column + 1) / 2 - (i - 1) &lt;= j &amp;&amp; j &lt;= (column + 1) / 2 + (i - 1)) &#123;\t\t\t\t\tprintf(&quot;*&quot;);\t\t\t\t&#125;\t\t\t\telse &#123;\t\t\t\t\tprintf(&quot; &quot;);\t\t\t\t&#125;\t\t\t&#125;\t\t&#125;\t\telse &#123; //下半部分\t\t\tfor (j = 1; j &lt;= column; j++) &#123; //遍历（下半部分）所有列\t\t\t\tif ((column + 1) / 2 - (line - i) &lt;= j &amp;&amp; j &lt;= (column + 1) / 2 + (line - i)) &#123;\t\t\t\t\tprintf(&quot;*&quot;);\t\t\t\t&#125;\t\t\t\telse &#123;\t\t\t\t\tprintf(&quot; &quot;);\t\t\t\t&#125;\t\t\t&#125;\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\treturn 0;&#125;\n002 求算术平方根#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;//正数 x 的平方根可以通过计算一系列近似值来获得，每个近似值都比前一个更加接近准确值。第一个近似值是1，接下来的近似值则通过下面的公式来获得。//A（i+1）=（Ai + x/Ai）/2double DoSqrt(double z) &#123;    double a = 1;    double b = 0;    double c = 0;    do &#123;        if (b * b &lt; z) &#123;            b += a;        &#125;        else &#123;            c = b;            b -= a;            a /= 10;        &#125;    &#125; while (a &gt; 0.000001);    return (b + c) / 2;&#125;int main() &#123;    double x, y;    printf(&quot;请输入一个数字:&quot;);    scanf_s(&quot;%lf&quot;, &amp;x);    if (x &lt; 0) &#123;        printf(&quot;输入错误。&quot;);    &#125;    else &#123;        y = DoSqrt(x);        printf(&quot;%g 的平方根为: %g\\n&quot;, x, y);    &#125;    int z = 1;    do &#123;        main();        z++;    &#125; while (z &gt; 10);    printf(&quot;\\n&quot;);    return 0;&#125;\n003 九九乘法表（六种）#include&lt;stdio.h&gt;int main() &#123;\tint i, j, result,n;\t\t//左下\tfor (i = 1; i &lt; 10; i++) &#123;\t\tfor (j = 1; j &lt;= i; j++) &#123;\t\t\tresult = i * j;\t\t\tprintf(&quot;%d*%d=%-3d&quot;, j, i, result); //-3d表示左对齐，占3位\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//左上（与上个三角形垂直对称）\tfor (i = 9; i &gt; 0; i--) &#123;\t\tfor (j = 1; j &lt;= i; j++) &#123;\t\t\tprintf(&quot;%d*%d=%-3d&quot;, j, i, result = i * j); //简化\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//左上（数字顺序改变）\tfor (i = 1; i &lt; 10; i++) &#123;\t\t/*for (n = 1; n &lt; i; n++) &#123; 加上同下面的右上，循坏条件为最后一种\t\t\tprintf(&quot;        &quot;);\t\t&#125;*/\t\tfor (j = i; j &lt; 10; j++) &#123;\t\t\tprintf(&quot;%d*%d=%2d\\t&quot;, i, j, i * j); //转义序列 \\t 制表符，占2位\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//右上\tfor (i = 1; i &lt; 10; i++) &#123;\t\tfor (j = 1; j &lt; 10; j++) &#123;\t\t\tif (j &lt; i) &#123;\t\t\t\tprintf(&quot;        &quot;); //去掉八个空格，则是上一种左上（数字顺序改变）\t\t\t&#125;\t\t\telse &#123;\t\t\t\tprintf(&quot;%d*%d=%2d\\t&quot;, i, j, i * j);\t\t\t&#125;\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//右下\tfor (i = 1; i &lt; 10; i++) &#123;\t\tfor (n = 1; n &lt; 10 - i; n++) &#123;\t\t\tprintf(&quot;        &quot;); //去掉此 for 循环(或者去掉八个空格)，则为第一种左下三角形\t\t&#125;\t\tfor (j = 1; j &lt;= i; j++) &#123;\t\t\tprintf(&quot;%d*%d=%2d\\t&quot;, j, i, i * j);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//9x9格式\tfor (i = 1; i &lt; 10; i++) &#123;\t\tfor (j = 1; j &lt; 10; j++) &#123;\t\t\tprintf(&quot;%d*%d=%2d\\t&quot;, i, j, i * j);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\treturn 0;&#125;\n004 日期计算器#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;/*普通年（不能被100整除的年份）能被4整除的为闰年。（如2004年就是闰年, 1999年不是闰年）；世纪年（能被100整除的年份）能被400整除的是闰年。(如2000年是闰年，1900年不是闰年)；*/int main() &#123;\tint date = 0, year, month, day;\tprintf(&quot;请依次输入年月日，格式为1900/09/09:&quot;);\tscanf_s(&quot;%d%d%d&quot;, &amp;year, &amp;month, &amp;day);\tif (year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0) &#123;\t\tprintf(&quot;%d年是闰年\\n&quot;, year);\t&#125;\telse &#123;\t\tprintf(&quot;%d年是平年\\n&quot;, year);\t&#125;\tswitch(month) &#123;\t\tcase 12:date += 30;\t\tcase 11:date += 31;\t\tcase 10:date += 30;\t\tcase 9:date += 31;\t\tcase 8:date += 31;\t\tcase 7:date += 30;\t\tcase 6:date += 31;\t\tcase 5:date += 30;\t\tcase 4:date += 31;\t\tcase 3:\t\t\tif (year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0) &#123;\t\t\t\tdate += 29;\t\t\t&#125;\t\t\telse &#123;\t\t\t\tdate += 28;\t\t\t&#125;\t\tcase 2:date += 31;\t\tcase 1:date += day;\t\tprintf(&quot;%d年%d月%d日是该年第%d天\\n&quot;, year, month, day, date);\t\tbreak;\t\tdefault:printf(&quot;error!\\n\\a&quot;);\t\tbreak;\t&#125;\tswitch (month) &#123;\t\tcase 1:case 3:case 5:case 7:case 8:case 10:case 12:date = 31; break;\t\tcase 4:case 6:case 9:case 11:date = 30; break;\t\tcase 2: \t\t\tif (year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0) &#123;\t\t\t\tdate = 29;\t\t\t&#125;\t\t\telse &#123;\t\t\t\tdate = 28;\t\t\t&#125;break;\t\tdefault:printf(&quot;月份输入有误!&quot;); \t\t\texit(1);\t\t\tbreak;\t&#125;\tprintf(&quot;%d年%d月有%d天\\n&quot;, year, month, date);\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n005 求100以内的素数#include &lt;stdio.h&gt;#include &lt;math.h&gt;\tint main()&#123;\tint i;  //判断素数\tint j;  //循环次数\tint m;  //所求范围数\tint b = 0;  //合数个数\tprintf(&quot;请输入判断数：&quot;);\tscanf_s(&quot;%d&quot;, &amp;i);\t//思路一：判断一个整数 i 是否是素数，只需把 i 被 2 ~ i - 1 之间的每一个整数去除，如果都不能被整除，那么 i 就是一个素数。\tfor (j = 2; j &lt; i; j++) &#123;\t\tif (i % j == 0) &#123;\t\t\tb++;\t\t&#125;\t&#125;\tif (b == 0) &#123;\t\tprintf(&quot;%d是素数&quot;, i);\t&#125;\telse &#123;\t\tprintf(&quot;%d不是素数&quot;, i);\t&#125;\tprintf(&quot;\\n&quot;);\t/*思路二：判断方法还可以简化。i 不必被 2 ~ i - 1 之间的每一个整数去除，只需被 2 ~ √i 之间的每一个整数去除就可以了。\t如果 i 不能被 2 ~ √i 之间任一整数整除，i 必定是素数。*/\t\t/*原因：因为如果 i 能被 2 ~ i - 1 之间任一整数整除，其两个因子必定有一个小于或等于 √i，另一个大于或等于 √i。\t例如 16 能被 2、4、8 整除，16 = 2 * 8，2 小于 4，8 大于 4，16 = 4 * 4，4 = √16，因此只需判定在 2 ~ 4 之间有无因子即可。*/\tprintf(&quot;请输入素数范围（不包括输入值）：&quot;);\tscanf_s(&quot;%d&quot;, &amp;m);\tfor (i = 2; i &lt; m; i++) &#123;\t\tfor (j = 2; j &lt;= (i / j); j++)\t\t\tif (!(i % j)) break;\t\tif (j &gt; (i / j))\t\t\tprintf(&quot;%d,&quot;, i);\t&#125;\tprintf(&quot;\\n&quot;);\tfor (i = 2; i &lt; m; i++) &#123;\t\tfor (j = 2; j &lt; sqrt(i); j++) &#123;  //sqrt() 函数求平方根，其参数为 double 类型\t\t\tif (i % j == 0) &#123;  // 如果完成所有循环，那么 i 为素数\t\t\t\tbreak;\t\t\t&#125;\t\t&#125;\t\t// 注意最后一次循环，会执行i++\t\tif (j &gt; sqrt(i)) &#123;    \t\tprintf(&quot;%d,&quot;, i);\t\t&#125;\t&#125;\treturn 0;&#125;\n006 斐波那契数列#include &lt;stdio.h&gt;//0 1 1 2 3 5 8……int fibonaqi(int i) &#123;\tif (i == 0) &#123;\t\treturn 0;\t&#125;\tif (i == 1) &#123;\t\treturn 1;\t&#125;\treturn fibonaqi(i - 2) + fibonaqi(i - 1);&#125;int main() &#123;\tint i, n;\tprintf(&quot;输出数量：&quot;);\tscanf_s(&quot;%d&quot;, &amp;n);\tfor (i = 0; i &lt; n; i++) &#123;\t\tprintf(&quot;%d &quot;, fibonaqi(i));\t&#125;\tprintf(&quot;\\n--------------------------\\n&quot;);\t\t//输出指定数量的斐波那契数列\tint t1 = 0, t2 = 1, temp, n2;\tprintf(&quot;输出数量：&quot;);\tscanf_s(&quot;%d&quot;, &amp;n2);\tfor (i = 0; i &lt; n2; i++) &#123;\t\tprintf(&quot;%d &quot;, t1);\t\ttemp = t1 + t2;\t\tt1 = t2;\t\tt2 = temp;\t&#125;\tprintf(&quot;\\n--------------------------\\n&quot;);\t//输出指定数字前的斐波那契数列\tint s1 = 0, s2 = 1, temp2 = 1, n3;\tprintf(&quot;输入大于 1 的正数：&quot;);\tscanf_s(&quot;%d&quot;, &amp;n3);\tprintf(&quot;%d %d &quot;, s1, s2);\twhile (temp2 &lt; n3) &#123;\t\tprintf(&quot;%d &quot;, temp2);\t\ts1 = s2;\t\ts2 = temp2;\t\ttemp2 = s1 + s2;\t&#125;\tprintf(&quot;\\n&quot;);\treturn 0;&#125;\n007 五种求数#include &lt;stdio.h&gt;#include &lt;math.h&gt;#include &lt;stdlib.h&gt;//递归求最大公约数int hcf(int a, int b) &#123;\tif (b != 0)\t\treturn hcf(b, a % b);\telse\t\treturn a;&#125;int main() &#123;\tint i, j, n, s;\tprintf(&quot;enter 完数范围：&quot;);\tscanf_s(&quot;%d&quot;, &amp;n);\tfor (i = 2; i &lt; n; i++) &#123;\t\ts = 0;\t\tfor (j = 1; j &lt; i; j++) &#123;\t\t\tif (!(i % j)) &#123;\t\t\t\ts+=j;\t\t\t&#125;\t\t&#125;\t\tif (s == i) &#123;\t\t\tprintf(&quot;%d &quot;, i);\t\t&#125;\t\t\t&#125;\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint a, b, c, count = 0;\tprintf(&quot;100以内的勾股数\\n&quot;);\tprintf(&quot;  a  b  c  a  b  c\\n&quot;);\tfor (a = 1; a &lt; 101; a++) &#123;\t\tfor (b = a+1; b &lt; 101; b++) &#123;\t\t\tc = (int)sqrt(a * a + b * b);\t\t\tif (c * c == a * a + b * b &amp;&amp; a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a &amp;&amp; c &lt; 101) &#123;\t\t\t\tprintf(&quot;%3d%3d%3d&quot;, a, b, c);\t\t\t\tcount++;\t\t\t\tif (count % 2 == 0) &#123;\t\t\t\t\tprintf(&quot;\\n&quot;);\t\t\t\t&#125;\t\t\t&#125;\t\t&#125;\t&#125;\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint q, w, temp, e;\tprintf(&quot;两个正整数的最大公约数（GCD）：&quot;);\tscanf_s(&quot;%d%d&quot;, &amp;q, &amp;w);\tif (q &gt; w) &#123;\t\ttemp = q;\t\tq = w;\t\tw = temp;\t&#125;\tfor (e = q; e &gt; 0; e--) &#123;\t\tif (q % e == 0 &amp;&amp; w % e == 0) &#123;\t\t\tprintf(&quot;%d&quot;, e); break;\t\t&#125;\t&#125;\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint a1, b1;\tscanf_s(&quot;%d%d&quot;, &amp;a1, &amp;b1);\tprintf(&quot;两个正整数的最大公约数（GCD）：%d&quot;, hcf(a1, b1)); //辗转相除法\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint a3, b3;\tscanf_s(&quot;%d%d&quot;, &amp;a3, &amp;b3);\ta3 = (a3 &gt; 0) ? a3 : -a3; // 如果输入的是负数，将其转换为正数\tb3 = (b3 &gt; 0) ? b3 : -b3;\twhile (a3 != b3) &#123;\t\tif (a3 &gt; b3) &#123;\t\t\ta3 -= b3;\t\t&#125;\t\telse &#123;\t\t\tb3 -= a3;\t\t&#125;\t&#125;\tprintf(&quot;两个正整数的最大公约数（GCD）：%d&quot;, a3);\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint q1, w1, temp1, e1, s1;\tprintf(&quot;两个正整数的最小公倍数（LCM）：&quot;);\tscanf_s(&quot;%d%d&quot;, &amp;q1, &amp;w1);\tif (q1 &lt; w1) &#123;\t\ttemp1 = w1;\t\tw1 = q1;\t\tq1 = temp1;\t&#125;\tfor (s1 = 1;; s1++) &#123;\t\te1 = q1;\t\te1 *= s1;\t\tif (e1 % q1 == 0 &amp;&amp; e1 % w1 == 0) &#123;\t\t\tprintf(&quot;%d&quot;, e1); break;\t\t&#125;\t&#125;\tprintf(&quot;\\n------------------------------&quot;);\tsystem(&quot;pause&quot;);\tint h, t, o, num;\tprintf(&quot;water flower：&quot;);\tfor (num = 1; num &lt; 1000; num++) &#123;\t\th = num / 100;\t\tt = num / 10 % 10;\t\to = num % 10;\t\tif (num == h * h * h + t * t * t + o * o * o) &#123;\t\t\tprintf(&quot;%d &quot;, num);\t\t&#125;\t&#125;\treturn 0;&#125;\n008 阶乘#include &lt;stdio.h&gt;long double factorials(int n) &#123;\tif (n &gt; 0) &#123;\t\treturn n * factorials(n - 1);\t&#125;\telse \t\treturn 1;&#125;int main() &#123;\tint i, n; //MAX n = 170\tlong double factorial = 1;\tprintf(&quot;enter n:&quot;);\tscanf_s(&quot;%d&quot;, &amp;n);\tif (n &lt; 0) &#123;\t\tprintf(&quot;error!\\a\\n&quot;);\t&#125;\telse &#123;\t\tfor (i = 1; i &lt;= n; i++) &#123;\t\t\tfactorial *= i;\t\t&#125;\t\tprintf(&quot;%d != %g\\n&quot;, n, factorial);\t\tprintf(&quot;%d != %e\\n&quot;, n, factorial);\t\tprintf(&quot;%d != %.lf\\n&quot;, n, factorial);\t&#125;\tprintf(&quot;--------------------------------------\\n&quot;);\tint n1;\tprintf(&quot;enter n1:&quot;);\tscanf_s(&quot;%d&quot;, &amp;n1);\tprintf(&quot;%d != %g\\n&quot;, n1, factorials(n1));\tprintf(&quot;%d != %e\\n&quot;, n1, factorials(n1));\tprintf(&quot;%d != %.lf\\n&quot;, n1, factorials(n1));\t\treturn 0;&#125;\n009 三角形图案#include &lt;stdio.h&gt;#define N 10 int main() &#123;\tint i, j, k, n;\tprintf(&quot;请输入数字金字塔基座宽度(正奇数):&quot;);\tscanf_s(&quot;%d&quot;, &amp;n);\tfor (i = 1; i &lt; (n + 1) / 2; i++) &#123;\t\tfor (j = 1; j &lt; (n + 1) / 2 - i; j++) &#123;\t\t\tprintf(&quot;  &quot;);\t\t&#125;\t\tfor (k = i; k &lt; 2 * i; k++) &#123;\t\t\tprintf(&quot;%d &quot;, k);\t\t&#125;\t\tfor (k -= 2; k &gt;= i; k--) &#123; //这里 k=2*i\t\t\tprintf(&quot;%d &quot;, k);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\t//杨辉三角\tint rows, coef = 1, space, i1, j1;\tprintf(&quot;行数: &quot;);\tscanf_s(&quot;%d&quot;, &amp;rows);\tfor (i1 = 0; i1 &lt; rows; i1++)\t&#123;\t\tfor (space = 1; space &lt;= rows - i1; space++)\t\t\tprintf(&quot;  &quot;);\t\tfor (j1 = 0; j1 &lt;= i1; j1++)\t\t&#123;\t\t\tif (j1 == 0 || i1 == 0)\t\t\t\tcoef = 1;\t\t\telse\t\t\t\tcoef = coef * (i1 - j1 + 1) / j1;\t\t\tprintf(&quot;%4d&quot;, coef);\t\t&#125;\t\tprintf(&quot;\\n&quot;);\t&#125;\tprintf(&quot;\\n&quot;);\t//弗洛伊德三角形\tint i2, j2, l;\tfor (i2 = 1, j2 = 1; i2 &lt;= N; i2++)\t&#123;\t\tfor (l = 1; l &lt;= i2; l++, j2++)\t\t\tprintf(&quot;%5d&quot;, j2);\t\tprintf(&quot;\\n&quot;);\t&#125;\treturn 0;&#125;\n010 矩阵转换#include &lt;stdio.h&gt;int main() &#123;\tint a[10][10], transpose[10][10], r, c, i, j;\tprintf(&quot;输入矩阵的行和列：\\n&quot;);\tscanf_s(&quot;%d %d&quot;, &amp;r, &amp;c);\tprintf(&quot;\\n输入矩阵元素：\\n&quot;);\tfor (i = 0; i &lt; r; i++) &#123;\t\tfor (j = 0; j &lt; c; j++) &#123;\t\t\tprintf(&quot;输入元素 a%d%d：&quot;, i + 1, j + 1);\t\t\tscanf_s(&quot;%d&quot;, &amp;a[i][j]);\t\t&#125;\t&#125;\tprintf(&quot;\\n输入矩阵：\\n&quot;);\tfor (i = 0; i &lt; r; i++) &#123;\t\tfor (j = 0; j &lt; c; j++) &#123;\t\t\tprintf(&quot;%d  &quot;, a[i][j]);\t\t\tif (j == c - 1)\t\t\t\tprintf(&quot;\\n&quot;);\t\t&#125;\t&#125;\tfor (i = 0; i &lt; r; i++) &#123;\t\tfor (j = 0; j &lt; c; j++) &#123;\t\t\ttranspose[j][i] = a[i][j];\t\t&#125;\t&#125;\tprintf(&quot;\\n转换后矩阵：\\n&quot;);\tfor (i = 0; i &lt; c; i++) &#123;\t\tfor (j = 0; j &lt; r; j++) &#123;\t\t\tprintf(&quot;%d  &quot;, transpose[i][j]);\t\t\tif (j == r - 1)\t\t\t\tprintf(&quot;\\n&quot;);\t\t&#125;\t&#125;\treturn 0;&#125;\n011 表白爱心#include &lt;stdio.h&gt;#include &lt;windows.h&gt;int main() &#123;\tprintf(&quot;\\n\\t\\t\\t祝小妖小朋友\\n&quot;);\tprintf(&quot;\\t\\t\\t永远开心快乐\\n&quot;);\tfloat x, y, a;\tfor (y = 1.5; y &gt; -1.5; y -= 0.1) &#123;\t\tfor (x = -1.5; x &lt; 1.5; x += 0.05) &#123;\t\t\ta = x * x + y * y - 1;\t\t\tputchar(a * a * a - x * x * y * y * y &lt;= 0.0 ? &#x27;*&#x27; : &#x27; &#x27;);\t\t&#125;\t\tsystem(&quot;color 0c&quot;);\t\tputchar(&#x27;\\n&#x27;);\t&#125;\treturn 0;&#125;\n/* 代码来源于：https://github.com/liuyubobobo/heart-curve-cplusplus/blob/master/main2.cpp 空心版*/#include &lt;stdio.h&gt;#include &lt;math.h&gt; // The first heart shape in hollow// (x^2+y^2-1)^3 - x^2*y^3 = 0// y ~ (-1.1 , 1.3 )// x ~ (-1.2 , 1.2 )int main() &#123;     for( float y = 1.3 ; y &gt;= -1.1 ; y -= 0.06 )\t&#123;        for( float x = -1.2 ; x &lt;= 1.2 ; x += 0.025 )\t\t&#123;            if( pow((x*x+y*y-1.0),3) - x*x*y*y*y &lt;= 0.0 )                printf(&quot; &quot;);            else                printf(&quot;*&quot;);\t\t&#125;        printf(&quot;\\n&quot;);    &#125;     return 0;&#125;\n\n\n\n\n012 逆序#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;algorithm&gt;int main() &#123;\tstd::string str;\tstd::cin &gt;&gt; str;\treverse(str.begin(), str.end());\tstd::cout &lt;&lt; str &lt;&lt; std::endl; return 0;&#125;\n013 String to ASCII#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main() &#123;\tchar s[10000];\tdo &#123;\t\tprintf(&quot;Enter string:\\n&quot;);\t\tscanf(&quot;%s&quot;, s);\t\tfor (int i = 0; s[i]; i++)\t\t\tprintf(&quot;%d &quot;, s[i]);\t\tprintf(&quot;\\nLength:%d\\n\\n&quot;, strlen(s));\t&#125; while (s);&#125;\n014 Big-Dec to Hex#include &lt;iostream&gt;using namespace std;int main() &#123;    while (1) &#123;        cout &lt;&lt; &quot;输入十进制数&quot; &lt;&lt; endl; ///****************1.输入        string str;        cin &gt;&gt; str;        int len = str.size();        for (int i = 0; i &lt; len; i++) &#123; ///****************2.异常处理            if (str[i] &lt; 48 || str[i] &gt; 57) &#123; // 0 的 ascll 码是 48，9 为 57                cout &lt;&lt; &quot;输入了非法字符&quot; &lt;&lt; endl;                return 0;            &#125;        &#125;        string result = &quot;&quot;; ///****************3.正式处理        string hex = &quot;0123456789abcdef&quot;;        int i = 0;        char cnt2 = &#x27;0&#x27;;        while (1) &#123;            while (i &lt; len &amp;&amp; str[i] == &#x27;0&#x27;)                i++;            if (i &gt;= len)                break;            int cnt = 0;            for (; i &lt; len; i++) &#123;                int sum = cnt * 10 + (str[i] - &#x27;0&#x27;);                str[i] = char(sum / 16 + &#x27;0&#x27;);  //因为sum不会超过159，sum/16不会超过10，不会超过8位二进制表示，                cnt = sum % 16;                  //因此不会因为int转成char被截断而有误差。                cnt2 = hex[sum % 16];            &#125;            i = 0;            result = cnt2 + result;        &#125;        if (result == &quot;&quot;) &#123; //输入为0的时候，结果就是0            cout &lt;&lt; 0 &lt;&lt; endl;            return 0;        &#125;        cout &lt;&lt; result &lt;&lt; endl;    &#125;    return 0;&#125;\n","categories":["Programming"]},{"title":"Book & Tutorial & Film & Anime & Game Summary","url":"/2021/01/31/list_summary/","content":"Preface仅此记录——\n\n看过的书籍（技术书籍占多数，豆瓣 TOP250，各类小说等），\n学过的教程（极客时间的居多，还有逆向系列等），\n追过的影视动漫（涉猎广泛，动漫美剧韩剧、敏感 N 级片），\n玩过的游戏（比较少，仅列出部分以作童年和少年纪念）……\n\nBookAgo-2020（42+）\n《图解 HTTP》（?）\n《哈佛女孩刘亦婷》（?）\n《跟任何人都聊得来》（?）\n《怖客》（?）\n《大学不迷茫》（?）\n《为了你，我愿意热爱整个世界》（?）\n\n「三少都市爱情三部曲之一。」\n\n《拥抱谎言拥抱你》（?）\n\n「三少都市爱情三部曲之一，羡慕的爱情。」\n\n《曾经江楠今安在》（?）\n\n「三少都市爱情三部曲之一，圆满的结局。」\n\n《隔河千里，秦川知夏》（?）\n\n「三少都市爱情著作第四部，又一次扩大了我的世界观。」\n\n《巡阴人-法师无双》（?）\n\n「算是盗墓系列吧，第一部大女主系列」\n\n《黑客-青幕山》（?）\n《指尖的黑客》（?）\n《骇客》（?）\n\n「黑色键盘的另一部小说，可惜把自己送进去了，没写完，停到《170-通天与幽灵》了，有苏小妖的遗憾哎~」\n\n《重生黑客特种兵》（?）\n\n「追过的诸多黑客小说系列中唯一女主为第一视角的，很喜欢呢~」\n\n《特种兵在都市》（2016-?）\n\n「初中追的兵王系列，某日突然发现贴吧文章，夜十三 23年末又在公众号上更新了，爷青回啊」\n\n《韭菜的自我修养》（?）\n《挤挤都会有的 —— 写给女生的性高潮指南》（?）\n《小说漫画系列》（?）\n\n「斗罗大陆 5部、斗破苍穹、武动乾坤、大主宰、血族禁域（有点烂尾）、寻找前世之旅」\n\n《鸟哥的 Linux 私房菜（第四版）》（1.6-2021.3.7）\n\n「pwn 入门 Linux 知识储备，前十三章大致学习了一遍，后面的浏览了一下，有些概念，用到时再精读。」\n\n《C Primer Plus（第六版）》Stephen Prata|姜佑|译（2.10-10.11）\n《使用 OllyDbg 从零开始 Cracking》（3.18-2021.2.18）\n\n「很多程序都缺少动态链接库，所以只是简单过了一遍，了解了大致的流程，后续通过实战再补充学习吧！」\n\n《天醒之路》蝴蝶蓝（4.25-?）\n\n「还未写完的书，不知道还能不能等到作者写完 ~ 21年6月22日，追了一大波漫画，意外发现他终于开始更新了！」\n\n《堆和栈的区别》经典转载（5.5）\n《高质量程序设计指南C语言（第三版）》林锐 &lt;大学十年&gt;（5.6）\n《肖申克的救赎》斯蒂芬·金（5.13-14）\n《别跟我说你懂日本》王东（5.14）\n《英雄志》孙晓（5.14-6.29）（目录）\n《金庸全集》金庸（6.29-7.15）（目录）\n《后宫甄嬛传》流瀲紫-吴雪岚（6.29）（片段）\n《把时间当作朋友》李笑来（7.4-9.14）\n\n「背 200 个单词就是 4000 块，赚钱吧！」\n\n《自学是门手艺》（7.10-9.14）\n《通往财富自由之路》（?）\n《阿里工程师的自我修养》（7.17）\n《极客爱情》（9.15-16）\n\n「这真是我向往的爱情啊，什么时候才能遇到那个 TA」\n\n《少有人走的路》（9.17-18）\n\n「李笑来的《把时间当作朋友》中多次提到，豆瓣心理图书 No.1，可惜看过之后似乎并无太大收获，恐是空洞了些」\n\n《人人都能用英语》（10.4-16）\n\n「备考四级重温一遍，又有很多新的收获，好书果然是需要反复品读的。备战考研又浏览了一遍」\n\n《独唱团》（10.14）\n《青蓑尸衣-鬼壶》 （10.16-18）\n\n都是零几年的书，虽有露骨，但描写细腻，入木三分，看似荒诞实则影射人心，当然口味也有点重，不过和现在的网文相比，依旧大相径庭！一共六部《6羊皮密码》似乎只有有声书，前五部似乎都看完了，2鬼壶、3残眼、4蛊人、5虫师，仅作记录\n\n《蔡康永的说话之道》（10.19）\n《悟空传》（10.20-11.1）\n《解读基金——我的投资观与实践（修订版）》（12.26）（笔记）\n\n无意间在豆瓣2020年推荐书单看到的，其中一篇读书笔记非常棒，特此记录。\n\n《社会工程 安全体系中的人性漏洞》（12.26-27）\n\n2021（23）\n《让你不再害怕指针》（1.10-12）\n\n「不知名大佬写的总结，干货满满，获益良多」\n\n《C陷阱与缺陷》（1.12-13）\n《C专家编程》（1.13-2022.3.30）\n\n「最后一段 C++ 的内容放了好久，总算完结了」\n\n《黑客与画家》（1.14-15）\n\n「人们真正注意到你的时候，不是第一眼看到你站在那里，而是发现过了这么久你居然还在那里。」\n\n《C和指针(第二版)》（1.15-23）\n\n「学到了很多更高级的知识，但是远没有掌握，现用现学吧。」\n\n《元尊》（2017.9.14-2021.1.30）\n\n「从 17 年高一开始，追到现在 21 年大二，跟着土豆每天一更的节奏，和周元度过了我的那年青春，想起当年也曾踏足网文圈，期间还涉足黑客圈和币圈，直到现在的安全圈，真是满满的回忆啊！」\n\n《深入理解计算机系统（原书第三版)》（2.23-2023..）\n\n「pwn 入门系统基础必看书籍一，主要是前 7 章」\n\n《第一次一个人旅行》（3.25）\n《The Little Prince / 小王子》（3.25-3.31）\n\n「试水第一部英文著作！」\n\n《冰雪恋熊猫》（3.25-26）\n\n「三少第五部都市爱情剧作，既贴近现实，又不失理想，唯美浪漫的爱情故事，阐述了优美的文学作品源于真实生活的道理。」\n\n《MIND HACKS - 暗时间》刘未鹏（3.31-4.13）\n\n「总结的很不错，抛砖引玉。还有这篇我在南大的七年」\n\n《上班族必懂的 office 天泽定律》（4.2-15）\n\n「培养一个优秀的职场思维」\n\n《万相之王》（4.10-202）\n\n「八年光阴划过，土豆新书，继续陪伴大学生涯吧」\n\n《重生唐三》（5.20-2022.12.9）\n\n「三少斗罗系列第五部，曾经小说人物归来，但逝去的初中年华不在，身边也是物是人非，一阵唏嘘，情怀啊~」\n\n《华尔街》（4.15-4.20）\n《东霓》（4.20-8.25）\n\n「描写细腻的小说，豆瓣经典排行」\n\n《燕归来熙》（5.17-5.20）\n\n「未来很容易迷失，但请不忘初心，迷茫之际，重回 01 世界，愿初心尚在……」\n\n《找对英语学习方法的第一本书》（8.14）\n\n「很老的书，但是观点却很实在，可惜很难适应国内的应试教育，普及度不高。」\n\n《你还在背单词吗？刘晓艳四级》（8.15-9.13）\n\n「Tg 找到的资源，很不错的分类，单词背起来喽」\n\n《天勤 2022 计算机数据结构高分笔记》（8.25-10.3）\n《王道 2022 计算机网络考研复习指导》（8.25-10.20）\n《目送》（8.25-10.10）\n\n「龙应台对生死大问的描绘，生动细腻。」\n\n《何以笙萧默》（10.10-2022.1.12）\n\n「做完第三次治疗当天，这本开后闲置两个多月的书，终于在术后的闲暇时光里结束了，这一天我一头扎进了这个故事，触景生情，思念和爱恋无处安放，终化作习惯淡然在岁月长河里……不长不短的头发，身上挂着相机，脸上带着明媚的笑颜，还有一样的赵姓，可终究不过小说」\n2022（31）\n《刘洪波 听力考点词》（?）\n《顾家北 语法知识》（?）\n《刘洪波 阅读考点词》（?）\n《570 个英语学术核心词汇（AWL）》（?）\n《100句翻译》（?）\n《雅思口语必备900句》（?）\n《语言写作工具箱》（?）\n《神印王座之天守之神》（?）\n《考研红宝书-必考词&amp;基础词》（?）\n《上门龙婿》（?）\n《告白单词：四级词汇的逻辑》（1.15）\n\n「换本书继续四级词汇二刷，裸考三次了…连单词都没整完，时间都去哪了-_-；意外飘过，换书了咳。」\n\n《再穷也要去旅行》（1.15-7.26）\n\n「仿佛看到了曾经世界的一角，愿未来我也有出走世界的那一天」\n\n《完美重生》（1.22-26）\n\n「高中追的《我真是大明星》《特种兵在都市/都市狼行》《特种兵在都市之诡刃》超好看可惜都被封杀了，这段时间回忆起来了，追夜十三两年前的这本书，熟悉的都市风格，还能学到很多上几十年代隐秘的东西，遗憾现在政策愈紧，夜十三也好像不再写书了，一个有内涵有深度的作者可惜了」\n\n《重生之我本枭雄》（1.28-2.1）\n《神医相师》（2.1-7）\n《重生之首富人生》（2.19-24）\n\n「谈小天，爽文系列，回忆黄金时代罢了」\n\n《Python 编程快速上手——让繁琐工作自动化》（4.20-2023.4.19）\n\n「C++ 和汇编一直也忙着没整，居家期间为了更好利用空闲时间，学学比较轻松的 py 吧！」\n\n《重生之似水流年》（5.30-9.3）\n\n「看雪论坛群里大佬推荐的小说，不似其他重生小说那般逆天，很平凡又充实，带人回忆起那个似水流年……以后，偶尔回起点看看有没有新的番外，会重温吧，怀念我逝去的遗憾的没多少珍贵回忆的青春~」\n\n《心理控制术》（7.26-8.4）\n《金融的逻辑》（8.4）\n《我不是教你诈四册》（8.4-2023.1.16）（部分）\n《大相师》（8.9-2023.2.25）\n\n「时隔两三年，意外发现出了《巡阴人》第三部，追起~」\n\n《今天扑倒摄政王了吗》（9.1）\n\n「搜白筱诺的时候看到的，挺搞笑，可惜太监了」\n\n《英语自学手册》郝海龙（9.5-19）\n\n「非常科学系统的一套方法论，可以实践起来~」\n\n《被困百万年：弟子遍布诸天万界》（11.1）\n《用面试官的思维写简历》（11.18-19）\n《上瘾》（11.28-12.22）\n\n「让用户养成使用习惯的四大产品逻辑」\n\n《COCA 20000》（12.2-2023.）\n《斗罗大陆之斗罗世界》（12.10-15）\n\n「三少十四年的斗罗系列完结，也是我十二年的青春逝去」\n\n《股份期权那些事》（12.16）\n《搞定：无压工作的艺术》（12.16-2023.8.25）\n\n「GTD 个人事务管理系统」\n2023（34）\n《天才基本法》（1.7-6.27）\n《神印王座 2 皓月当空》（1.10-2024.5.11）\n《把时间当作朋友-souvenir edition》（1.18-3.5）（二刷）\n《C++ Primer Plus（中文第6版）》（1.30）\n\n「非常啰嗦，评论都说过时，扫了一下弃了，仅作记录」\n\n《定投改变命运-第三版》（2.6）\n\n「让时间陪你慢慢变富」\n\n《我有一剑》（2.9-2024.4.28）\n\n「开篇仿斗破的退婚流，经典套路永不过时」\n\n《一剑独尊》（2.14-3.2）\n《漫画算法-小灰的算法之旅》（3.2-3）（扫读）\n《言叶之庭》（3.3-5.8）\n\n「晴实体-爱情来临前的孤独」\n\n《Linux核心命令及案例》（3.3-6）\n24 篇托福 TPO 67-74 阅读（3.4-4.9）\n《无敌剑域》（3.6-17）\n24 篇剑雅 A 类 11 和 12 阅读（4.10-5.4）\n《python 编程从入门到实践 第2版》（4.19-.）\n\n「基础部分，进展之快超乎想象，可能算厚积薄发……」\n\n《SQL 必知必会》（4.29-5.10）\n52 篇经济学人/时代周刊（5.5-8.1）\n\n「魔鬼一百篇训练完成，因工作懈怠拖延了甚久，珍惜在校学习的时光吧。」\n\n《嫌疑人X的献身》（5.9-17）\n\n「晴实体-凡事想得太乐观会很危险。」\n\n《睡眠革命》（5.15）\n\n「昼夜节律和睡眠周期的理论很不错」\n\n《局外人》（5.18-24）\n\n「晴实体-一个人对他所不了解的东西，总是会有一些夸张失真的想法。」\n\n《编程小白的第一本 Python 入门书》（5.23）\n\n「简单扫视了一下，本来想找将变量比喻成盒子的书，结果找到了这本，内容还是比较浅显易懂的，适合小孩子入门。」\n\n《罗生门》（5.31-6.20）\n\n「晴实体-无法确知的真相背后是永恒不变的人性」\n\n《我是猫》（6.22-23）\n\n「晴实体-猫眼看世界，猫咪视角看世态炎凉，人生百态」\n\n《曾有一个人，爱我如生命》（7.21-8.25）\n《搞定：提升工作与生活效率》（8.25-27）\n《搞定：平衡工作与生活的艺术》（8.27-30）\n《时间管理：小强升职记》（8.31）\n《超越智商：为什么聪明人也会做蠢事》（8.31-9.7）\n《这才是心理学：看穿伪心理学的本质-基思·斯坦诺维奇》（9.7-9.8）\n《反派：谁说我是来退婚的》（11.6-10）\n\n「刷到的广告爽文还是挺不错的，可惜太监了」\n\n《这，不是末日》（11.22-）\n\n「似水流年作者的新作，需要带脑子看的小说，有深度」\n\n《极简：在你拥有的一切之下，发现你想要的生活》（11.24-12.4）\n《悲伤逆流成河》（11.26）\n《1988：我想和这个世界谈谈》（部分）（11.26）\n《人生中不可不想的事》（12.4-2024.3.5）\n\n2024（10）\n《都重生了谁谈恋爱啊》（1.12-6.21）\n\n「一遍遍在重生文中追忆逝去的青春~文笔可嘉，比似水流年还多些轻快感」\n\n《逼我重生是吧》（1.17-12.8）\n\n「起点防盗现在太牛逼了，只能去追一下正版了，两本重生各有特色，视觉盛宴啊；完本戛然而止，但好像也没有以前追完书的失落感了」\n\n《重生之似水流年-有声小说》（1.30-?）\n\n「创声工厂的有声小说太棒了，唱出来的歌词，配的背景音乐，上班听着，完美的听觉盛宴，可惜好像断更了……」\n\n《大叔，你的娇气包哭了要贴贴》（2.23-25）\n\n「广告刷到的完结小甜文，通宵追书的日常……一看就停不下来」\n\n《科技：为了上大学，上交可控核聚变》（2.25-?）\n《都市狂龙医仙》（3.7-?）\n《隐世魔尊，女帝带娃上门求负责》（3.15-?）\n《世界很喧嚣，做自己就好》（3.20-12.13）\n\n「阿秀推荐」\n\n《我的超能力每周刷新》（5.1-8.20）\n\n「大学生作者写的高中篇开局，同天才基本法一样，这本目前没有重生商战，更涉及许多学习的场景，作为垃圾学霸这也许是我青春唯一的回忆和共鸣了，恋爱缺席的青春总归充满了遗憾，回不去了，叹-人无法同时拥有青春和对青春的感受，可自己感觉青春恍惚都不曾拥有过。五一扫榜新书，忽然感觉到了网文的节奏，起承转合，有一读再读的感觉。自 17年后，再次萌生写小说的想法，如今网文圈写书方法论或趋于完善，还有起点防盗的优化，这条写作路还是想再走走看。」\n\n《哈佛谈判术》（6.20-7.3）\n\n2025（）\n《沸腾十五年-中国互联网1995-2009-林军》（1.4-2.）\n\n\n《》（）\n\n「」\n\n《真名实姓》（）\n\n「留言：在还没有互联网的时代诞生的关于顶级网络黑客的故事！我在电脑还是DOS系统的年代读到了真名实姓，特别震撼！」\n\n《Linux/Unix 设计思想》（）\n\n「 Unix 哲学的九条准则 」\n\n《有本事》（）\n\n「」\n\n《爱你就像爱生命》（）\n\n「」\n\n《龙族》 （）\n\n「喜欢动漫，原著好像也能读进去了，也许是孤独变成了常态……以前读不懂，是没经历过，可读懂了，满眼皆是心酸，每个人的心里都有一个死小孩，他叫路鸣泽；之前不解，江南为何写到抑郁，当自己写书写到伤心处，犹如触景生情，方才明白，原来书里是自己精神的写照，原来是写到了自己的心坎，投入了真情实意」\n\n《斯坦福的高效睡眠》（）\n《新生——七年就是一辈子》（）\n《心流》（）\n\n「」\n\n《习惯的力量》（）\n《深度工作：如何有效使用每一点脑力》（）\n《精进：如何成为一个很厉害的人》（）\n《极简主义》（）\n《为什么精英都是时间控》（）\n《向上生长》（）\n《自控力》（）\n《思考，快与慢》（）\n《反脆弱——从不确定性中获益》（）\n《我真没想重生啊》（）\n\n「柳岸花又明重生经典之作，值得拜读」\n\n《都重生了谁考公务员啊》（）\n\n「柳岸花又明重生新书，浅浅参考下公务员的门道」\n\n《重生大时代之王》（）\n\n「夜十三完结新书，有空追起」\n\n《代码随想录-最强八股文-第3版》（编程常识）（-）\n《say it better in English》（.-）\n\n「一本小而美的口语书」\n\n《XML1.1 宝典》（）\n《MySQL 必知必会》（）\n《剑指 Offer：名企面试官精讲典型编程题》（）\n《C++ Primer（中&amp;英-第五版）》（）\n\n「偏实操些，排版反人类，涵盖了 C++ 中的所有语法，过一遍当字典用」\n\n《Effective C++ 改善程序与设计的55个具体做法（第三版）》（）\n《Effective STL 50条有效使用STL的经验》（）\n《STL源码剖析-侯捷著》（）\n\n「详细地讲解了 STL 中一些数据结构中的源码以及设计理念，这也是面试中面试官非常喜欢问的知识点。」\n\n《深度探索 C++ 对象模型》（）\n\n「侧重于 C++ 中一些知识点的底层设计理念」\n\n《浪潮之巅》（）\n\n「」\n\n《影响力》（）\n\n「」\n\n《卓有成效的管理者》（）\n\n「」\n\n《史蒂夫·乔布斯传（修订版）》（）\n\n「」\n\n《从你的全世界路过》（）\n\n「语录太经典了！书也值得追一波~故事的开头总是这样，适逢其会，猝不及防。故事的结局总是这样，花开两朵，天各一方。」\n\n《解忧杂货店》（）\n《沉默的大多数》（）\n《王小波相关》（）\n《大话设计模式》（）\n《鲁迅文集》（）\n《天才在左，疯子在右》（）\n《哑舍》（）\n《他笑时风华正茂》（）\n《摆渡人》（）\n《羊脂球》（）\n《鼠疫》（）\n《人性的枷锁》（）\n《哈佛幸福课》（）\n《乔布斯的魔力演讲》（）\n《黑天鹅》（）\n《老人与海》（）\n\n「人可以被毁灭，但不能被打败」\n\n《丰乳肥臀》（）\n《操纵心理学》（）\n《人性的弱点》（）\n《且听风吟》（）\n《意志力》（）\n《当下的力量》（）\n《当下的力量2》（）\n《罪与罚》（）\n《活着》（）\n\n「人之所以活着，人只好活着」\n\n《悲惨世界》（）\n《巴黎圣母院》（）\n《死屋手记》（）\n《人鼠之间》（）\n《月亮与六便士》（）\n《一九八四》（）\n\n「在这个世界上，战争就是和平，自由就是奴役，无知就是力量。」\n\n《皮囊》（）\n《原子习惯》（）\n《了不起的盖茨比》（）\n\n「三观不合的爱，如绿光，明灭不定，最终消散」\n\n《活法》（）\n\n「让无数人在迷茫时找到人生的意义」\n\n《红与黑》（）\n《追风筝的人》（）\n\n「每个人终其一生，都在追逐属于自己的那只风筝」\n\n《如何让你爱的人爱上你》（）\n《不能承受的生命之轻》（）\n《冯唐作品集\n《万物生长\n《十八岁给我一个姑娘\n《欢喜\n《北京北京\n《活着活着就老了\n《好妈妈胜过好老师\n《巴黎没有摩天轮\n《拆掉思维里的墙\n《世界因你不同-李开复自传\n《百年孤独\n《霍乱时期的爱情\n《人间\n《悲惨世界\n《硅谷禁书\n《35 岁前要上的 35 堂理财课\n《35 岁前要做的 33 件事\n《围城\n《活着\n《且听风吟\n《人间\n《每天懂一点色彩心理学\n《别为小事抓狂\n《三体\n《沉默的大多数\n《一只特立独行的猪\n《挪威的森林\n《我的奋斗\n《气场\n《不抱怨的世界\n\n\nA Planet of Viruses by Carl Zimmer（）\nThe Alchemist by Paulo Coelho, Translated by Alan R. Clarke（）\nOutliers: The Story of Success by Malcolm Gladwell（）\nHarry Potter and the Philosopher’s Stone by J. K. Rowling（）\nThe Antidote by Oliver Burkeman（）\nPermanent Record by Edward Snowden（）\nLooking for Alibrandi by Melina Marchetta（）\nSteve Jobs by Walter Isaacson（）\nPrinciples by Ray Dalio（）\nFree to Choose: A Personal Statement by Milton Friedman &amp; Rose D. Friedman（）\n哈利波特系列（）\nThe Bible 圣经（NIV 版）（）\nWord Power Made Easy by Norman Lewis（）\nMerriam-Webster’s Vocabulary Builder by Mary Wood Cornog（）\n\n\n《汇编语言(第四版)》（.）\n《数学之美》（）\n《厚黑学》（）\n《断舍离》（）\n《十宗罪》（）\n《游戏力》（）\n《阿甘正传》（）\n《瓦尔登湖》（）\n《小狗钱钱》（）\n《富爸爸穷爸爸》（）\n《娱乐至死》（）\n《沉默的大多数》（）\n《厚黑学》（）\n《君主论》（）\n《青铜时代-王小波》\n《围城》\n\n？？？\n《计算机网络：自顶向下方法》（）\n《Effective C++》（）\n《IDA Pro 权威指南》（）\n《从零开始学 IDA 逆向》（）\n《从零开始学 IDA 逆向-中篇》（）\n《程序员的自我修养–链接、装载与库》（）\n\n「pwn 入门系统基础必看书籍二，了解体系结构和操作系统的相关知识」\n\n《加密与解密（第4版）》（）\n\nTutorial2020（2）\n《如何做好一场技术演讲》（5.2）\n\n「提高自身演讲力。」\n\n《互联网人的英语私教课》（6.18-9.17）\n\n「了解到英英词典的学习方法，开拓了新的英语学习之路。」\n2021（5）\n《常用算法 25 讲》（2.24-?）\n\n「算法公开课，作为算法学习的开胃菜。」\n\n《极客视点》（3.23-?）\n\n「每日一篇，培养敏锐的技术嗅觉，提升技术洞见。同时这个专栏尝试用听的方式吸收，充分利用闲暇时间。」\n\n《一个草根创业者的 40 岁人生复盘》（3.23-25）\n《winhex 数据恢复教程》（5.10-7.31）\n\n「由于教程和 win10 不太配套，仅产出了两篇半文章，侥幸过了一篇审核，拿下了安全客的一血，再接再厉~」\n\n《刘毅分阶词汇表 第一阶 3000 版》（8.7-10）\n\n2022（3）\nC++ 匠心之作 从0到1入门 （1.6-?）\n《American pronunciation workshop》 （2.12-14）\n\n「B站上发现的 Paul 大叔口语教程，生动夸张的口型，对着屏幕学起来相当有趣，颇有种寓教于乐的感觉。」\n\n《粥左罗教你从零开始学写作》（2.14-4.18）\n\n2023（6）\n《心流管理魔方》（1.22-23）\n\n「少数派新年领的付费栏目」\n\n《暑期实习岗位攻略》（3.3-5）\n\n「力扣系列教程」\n\n《春招热门岗位攻略》（3.5-18）\n《校招基础知识详解》（3.19-4.27）\n《求职突破一本通【校招版】》（4.26-27）\n\n「LeetBook 系列」\n\n《硬核操作系统指南》（4.27）（目录）\n\n2024（2）\n《万门语言-超级棒的粤语教程 》（3.10-2025.2.）\n《香港教育大学粤语 》（3.23-25）\n\n2025（）\n《微信小程序入门教程-阮一峰》（1.4-12）\n《腾讯工程师教你 9 小时搞定微信小程序开发》（1.29-2.）\n《》（）\n\n\n《玩转VS Code》（）\n《投资第一课》（）\n《算法通关手册 》（）\n《代码随想录 》（）\n《趣谈网络协议》（）\n《程序员的数学基础课》（）\n\n「巩固融汇数学和编程的关系。」\n\n《数据结构与算法之美》（）\n\n「极客时间最火的一门课程，力挺！」\n\n《计算机组成原理》（）\n《算法训练营》（）\n\n「谭超老师的算法课，更加系统深入学习算法！」\n\n《编译原理之美》（）\n\n「搭配汇编学习。」\n\n《设计模式之美》（）\n《左耳听风》（）\n\nFilm &amp; AnimeAgo-2020（106）\n《蒙面超人RX》（?）\n《灵魂战车1-2》（?）\n\n「恶灵骑士系列」\n\n《猫和老鼠》（?）\n《果宝特攻》（?） \n《铁甲小宝》（?）\n《超兽武装》（?）\n《神兽金刚》（?）\n《斗龙战士》（?）\n《魔动王/光能使者》（?）\n\n「童年非常喜欢的一部动漫，一直不知道名字，终于意外找到了 」\n\n《星猫》（?）\n《雷速登闪电冲线1-2》（?）\n\n「主题曲很燃」\n\n《雷速登翼飞冲天》（?）\n《洛洛历险记》（?）\n《电击小子》（?）\n《猪猪侠》（?）\n《蓝猫龙骑团》（?）\n《神厨小福贵》（?）\n\n「超长动漫，BE 结局是童年对心灵最深的触动」\n\n《巨神战击队》（?）\n《金甲战士》（?）\n《火力少年王》（?）\n《三毛流浪记》（?）\n\n「片尾曲 天大地大没我家」\n\n《海宝来了》（?）\n《十二生肖总动员》（?）\n《十二生肖闯江湖》（?）\n《晶码战士》（?）\n《神兵小将》（?）\n《瑶玲啊瑶玲》（?）\n《赛尔号》（?）\n《大角牛向前冲》（?）\n《成龙历险记》（?）\n《海绵宝宝》（?）\n《熊出没之过年》（?）\n《绝世唐门动态漫》（?）\n\n「片首曲高潮转音的部分太好听了，高中的青春~」\n\n《邻家特工》（?）\n《全城戒备》（?）\n《铠甲勇士&amp;帝皇侠&amp;刑天》（?）\n《哆啦A梦》（?）\n《迪迦奥特曼剧场版：最终圣战》（?）\n《大决战！超奥特8兄弟》（?）\n《古剑奇谭》（?）\n《功夫小子》（?）\n《蜘蛛侠系列》（?）\n《同学两亿岁》（?）\n\n「大爱女主，微博难得 following 的明星」\n\n《画江湖之灵主》（?）\n\n「很好看的剧，可惜还没等到第二季被下架了。国内自 17 年高中时代，成人动画发展起来了，不止侠岚，画江湖系列真的给力，可惜最后多数都下架了，呵呵审核。」\n\n《画江湖之不良人》（?）\n\n「片尾曲《原点》西单女孩，片首曲 BGM《闹海》唢呐实在太燃了！黑白无常出场暗黑诡异风，着实惊艳到了，瞬间入坑！」\n\n《橘子果酱》（?）\n\n「大爱女主，吸血鬼系列」\n\n《缘之空》（?）\n\n「背景音乐真的迷」\n\n《终结的炽天使1-2》（?）\n\n「不知道还会不会继续出动漫了……」\n\n《名侦探柯南》（?-）\n\n「大结局有生之年系列」\n\n《西游记之大圣归来》（?）\n《风语咒》（?）\n《侠岚全季》（?）\n《与神同行1-2》（?）\n\n「百善孝为先，非常感人」\n\n《唐人街探案2》（?）\n\n「非常喜欢 Kiko，酷毙了」\n\n《贫民窟的百万富翁》（?）\n《鬼吹灯之寻龙诀》（?）\n《银河补习班》（?）\n《悟空》（?）\n《摔跤吧爸爸》（?）\n《后会无期》（?）\n《阿甘正传》（?）\n《战狼2》（?）\n《人在囧途之泰囧》（?）\n《三傻大闹宝莱坞》（?）\n\n「哪个傻屌起的名字，差点就错过了，泪点与笑点不断」\n\n《从你的全世界路过》（?）\n\n「邓超唱《蓝莲花》撞车那段太燃了，可惜最后还是没有复合，不过和幺鸡在一起也是么么哒」「我要去更高的地方看一眼，哪怕现在过得再辛苦，也是我想要的生活。」\n\n《你的名字》（?）\n\n「画面太美，每一帧都是背景壁纸——‘陨石坠落的速度是每秒十千米，我该用什么样的速度，才能将你拯救？’」\n\n《我不是药神》（?）\n\n「你能保证你自己，你家人就不生病吗？」\n\n《少年的你》（?）\n\n「想遇见那个少年的你……」\n\n《蝙蝠侠之黑暗骑士》（?）\n\n「Why so serious ?」\n\n《白夜追凶》（?）\n\n「潘鄂明演技炸裂，期待 2022 年的第二季……不会有了，遗憾也是美吧」\n\n《我是谁？没有绝对安全的系统》（?）\n\n「社会工程学，人是最大的漏洞」\n\n《黑客帝国（三部曲）》（?）\n《小丑joker》（1.6）\n\n「堕落，人格分裂，臆想症」\n\n《哪吒之魔童降世》（1.31）\n\n「父母的爱，任凭风吹雨打，日晒雨淋，任凭意气风华，职场得意，你始终是他们的孩子，这就是家，包容所有，也为你抵挡一切。」\n\n《釜山行》（1.17）\n\n「灾难面前，人性演绎得淋漓尽致」\n\n《锦衣之下》（2.7-10）\n\n「陆大人失忆好可爱哒」\n\n《绝代双骄》（2.8-12）\n\n「喜欢梁洁饰的苏樱的发型，好美ヾ(≧▽≦)o」*\n\n《中国机长》（2.13）\n\n「太惊险了，还是坐火车安全些……」\n\n《V字仇杀队》（2.14）\n\n「无政府，追求言论自由」\n\n《奇异博士》（2.14）\n\n「喜欢博士的魔法」\n\n《素媛》（2.15）\n\n「小女孩演技好棒，剧情太酸了呜呜」\n\n《熔炉》（2.15）\n\n「比素媛黑暗了太多，世界上的阴暗面还是很多呐」\n\n《大话西游之大圣娶亲》（2.16）\n\n「这真是一个宿命的开始。曰：’大学的孩子都是玻璃罐里养蛤蟆，前途光明出路不大。’再贴切不过。大闹天宫无非是大学四年的黄金时光罢了，找到工作走上社会任你盖世的才华浑身的个性也自有翻不出的五指山来压。只有戴上紧箍咒取经去，九九八十一难，做一个奇奇怪怪的佛。你别无选择。曾经有一份真诚的爱情摆在我的面前，但是我没有珍惜。等到了失去的时候才后悔莫及，尘世间最痛苦的事莫过于此。如果上天可以给我一个机会再来一次的话，我会对你说三个字‘我爱你’。如果非要把这份爱加上一个期限，我希望是一万年！」\n\n《大唐荣耀1-2》（2.13-16）\n\n「看得最用心的历史剧了吧，还特意了解了相关历史」\n\n《冰雪奇缘2》（2.17）\n\n「很喜欢这个音乐电影」\n\n《疯狂动物城》（2.18）\n\n「不惧质疑，反思前行，小兔子真的好萌哦！狐狸尼克聪明又幽默，大爱！其实之前一直不太喜欢看动漫电影，（严格说电影都不大看）就是有些排斥吧，但看了这部电影，我知道自己真的应该像电影里一样，不断尝试，现在想想以前的生活确实太单调了些，不过从今天开始就做出改变啦」\n\n《比海更深》（2.22）\n\n「你以为很简单地就能成为想象中的大人就大错特错了。飓风过后，我们还是要向前走了」\n\n《肖申克的救赎》（2.22）\n\n「有些鸟儿是注定不会被关在牢笼里的，它们的每一片羽毛都闪耀着自由的光辉」\n\n《勇敢者游戏2再战巅峰》（2.25）\n《天气之子》（3.8）\n\n「总带着莫名的感动，总有着莫名的共情力」\n\n《斗罗大陆》（4.1-?）188\n\n「斗罗动漫，追忆青春」\n\n《盗梦空间》（4.4）\n《天醒之路》（4.25-5.12）\n\n「电视剧挺不错，只是结局有些悲惨，感觉有些回归了原著的感觉，路平和苏唐留下来，剩下的离开的有些突然……比斗破和大主宰改编的好多了，可惜不知道原著什么时候才能写完。」\n\n《快乐星球》（5.1）\n\n「追忆童年」\n\n《奇门遁甲》（5.1）\n《韩公主》（5.10）\n\n「莫名的心酸，一定要努力保护好自己啊」\n\n《恩娇》（5.10）（7.16 晴）\n\n「别样的美，是对青春的眷恋与幻想」\n\n《旋风少女》（5.20-5.25）\n\n「最近一直在练一字马，突然想起来了，便追完了以前没有看完的第一季，第二季只是过了一遍剧情」\n\n《寒武纪》（5.31-6.5）\n\n「《你的答案》最火的封面图是这部剧，之前一直很喜欢，今天找到了必须追一追，这种黑色悬疑剧，特别是男主双重人格，表面懵懂少年，另一面是黑暗中的杀手，这设定太合口味了！最后是开放式结局，可惜广电的审核等原因最后还是没有第二季，哎，好看的剧总是不完整的……」\n\n《想哭的我戴上了猫的面具/无限》（6.28）\n《路西法》（7.1）（片段）\n\n「天使守护不了你，我就化成恶魔」\n\n《快把我哥带走》电影/电视剧（7.16）\n\n「你把我落下了——全剧最感动的一幕，爱了」\n\n《夏洛特烦恼》（8.18）\n\n「过不好现实人生的人，给你个美好梦境你也过不好；偶尔抽离一下，旁观自己的人生，会发现自己还是很幸福的。大春，夏洛，秋雅，冬梅。人生如四季。」\n\n《古剑奇谭之伏魔纪》（8.18）\n\n「视频号刷到喊‘项小天’的一个片段，追一波」\n\n《我在时间尽头等你》（9.5）\n\n「为爱献身，之前视频号刷到好几次，总算忍不住提前追了枪版」\n\n《风犬少年的天空》（10.17-11.1）\n\n「在爷爷的葬礼之后，带着莫名难言的心情看完了这部剧，感叹人生短暂，稍纵即逝。」\n2021（29）\n《沐浴之王》（1.2）\n《恶人传》（1.6）\n\n「神马东锡的佳作，爽片」\n\n《给我一朵小红花》（1.8）\n\n「很温情的一部电影」\n\n《唐人街探案3》（2.17）\n\n「奔着 Kiko 来的，可惜戏份有点少，失望前夕发现了思诺，是子枫呀！」\n\n《赘婿》（2.19-3.4）\n\n「穿越剧，拼刀刀，苏宁毅购，太搞笑了。」\n\n《玲珑狼心》（2.27-3.10）\n\n「好甜的古装剧，很好看，抓住假期最后的尾巴，疯狂追剧嘻嘻！」\n\n《当幸福来敲门》（3.27）\n\n「周末放松，很励志的电影，为自己加油打气！」\n\n《北京爱情故事》（4.3）\n\n「刷到过太多片段，语录太经典了！」\n\n《名侦探柯南之绯色的子弹》（4.17）\n《唐人街探案》（5.4）\n\n「当初追唐2的原因是 Kiko，唐3也是，现在为了饰演思诺的子枫妹妹补上第一部嘿！还有宝强那句‘牙掉了 咽肚里 苦只有自己知道’，触动很大，坚持不下去的时候给自己打气。」\n\n《白蛇缘起》（5.8）\n\n「酷狗刷到了’春风不解意’的 MV，画风优美，追一波」\n\n《色戒》（5.8）\n\n「终于输给了爱情……」\n\n《西虹市首富》（6.16-17）\n《我的姐姐》（6.18）\n\n「子枫主演，很感人」\n\n《影》（6.18）\n\n「期末考试前夕的视觉盛宴~」\n\n《无问西东》（6.25）\n\n「愿你在被打击时，记起你的珍贵，抵抗恶意；愿你在迷茫时，坚信你的珍贵，爱你所爱，行你所行，听从你心，无问西东。」\n\n《画江湖之不良人第四季》（6.11-7.8）\n《大天蓬》（7.24）\n\n「剧情不错，歌也很棒，有大话西游的味道」\n\n《不说再见》（7.25-27）\n《天才少女》（8.25）\n《琉璃美人煞》（8.30-9.1）\n\n「大女主剧，十生十世虐恋，循环‘千年之恋’，女主一句‘定坤’爆发场景太上头了，结局还是 HE」\n\n《三千鸦杀》（9.6-8）\n《白蛇2青蛇劫起》（9.11）\n《香蜜》（9.20）\n《司藤》（9.20-22）\n\n「景甜太美了，剧情也深得我心」\n\n《杀戮天使》（10.15-22）\n\n“我会杀死你的，但不是用镰刀，而是岁月……”\n\n《毒液2》（11.17）\n\n「主演虽然有点发福，但是演技依然在线」\n\n《无声》（11.21）\n\n「台湾版’熔炉’」\n\n《黑客帝国4矩阵重启》（12.26）\n\n「致敬经典」\n2022（48）\n《三生有幸遇上你》（1.1-1.14）\n《蜘蛛侠3英雄无归》（1.15）\n《再战江湖2021》（1.20）\n\n「和老爸晚饭追的，老演员了」\n\n《人间，空间，时间和人》(1.21)\n\n「抖音上刷到的剧，人性的丑恶，韩国一向敢拍……」\n\n《我是余欢水》（1.27-28）\n《嫣语赋》（2.17-3.6）\n\n「老妈在看，我又跟着入坑了，和《锦衣之下》一样男女主双强探案，甜虐剧，还好终归是 HE」\n\n《镜•双湖》（2.18-19）\n\n「等更《嫣语赋》，循环着‘念归去’，李易峰主演，可惜和曾经《古剑奇谭》一样是 BE，好虐！李易峰凉了唉~也是一代青春啊」\n\n《关于我妈的一切》（3.17）\n\n「不要把生命献给无知，平庸和低俗，工作本来就是一个很愉快很有意义得事情，要是喜欢就去做，要是不喜欢就赶紧扔了！你可以做你喜欢的事情，不喜欢的你就远离，改变别人很困难，改变自己很简单。生活哪能有这么任性，对多数人来说，喜欢是一件很奢侈的事情。」\n\n《人世间》（3.28）\n《紫川》（4.9-）31\n\n「梯子不稳测试网络的时候无意间刷到的，去年年底新剧，剧情尚可，建模不错，合我胃口，片头曲也很燃，追起来！血与火~」\n\n《斗破苍穹特别篇1》（4.9）\n《斗破苍穹特别篇2沙之澜歌》（4.9）\n《斗破苍穹三年之约》（4.9）\n\n「疯狂追剧的一天……」\n\n《完美世界》（4.9-）102\n\n「一口气追到双石大战，建模很棒，两首主题曲很燃，剧情不是在战斗就是在准备战斗的路上，爽剧吧，后期追着有点审美疲劳了，但听到片头曲熟悉的旋律又有了追下去的动力」\n\n《吞噬星空》（4.13-）114\n\n「剧情不错，科幻风」\n\n《奇迹·笨小孩》（4.26）\n\n「致奋斗中的自己。我不是药神告诉你有一种病是穷病，奇迹告诉你穷病可以自救。追风赶月莫停留，平芜尽处是春山。」\n\n《哥谭 Gotham 1-5季》（4.29-5.8）\n\n「整整一百集十天时间硬是追完了…最爱磕谜鹅，总结：民风淳朴哥谭市，人才辈出阿卡姆。初步判断，用美剧学英语还是可行的，当然这部（剧情类型的）剧不太适合~」\n\n《盛夏未来》（5.9）\n\n「或许，我们都应该学会接受，喜欢的人不一定喜欢自己吧。」\n\n《东北恋哥》（5.10）\n《我们的冬奥》（5.14）\n《再见，少年》（5.15）\n\n「大爱子枫，演技杠杠滴！‘说再见并不意味着告别和遗忘，而是我对我的年少时光不后悔，选择了勇敢的承担，我想这就是成长的意义。’」\n\n《中国医生》片段（5.15）\n\n「子枫一句词，一个眼神，这场戏，一条过——‘叔叔，我只想知道，一个人没有爸爸妈妈该怎么办’」\n\n《新白娘子传奇》（5.18-19）\n\n「童年的情怀，鞠婧祎主演 新版画质更精美，追一波~ 爱奇艺因为版权费下架了，辛苦找了一波…」\n\n《良辰好景知几何》（5.28）\n《我和我的父辈4-少年行》（6.12）\n《人生大事》（6.24）\n\n「第一次自己一个人看电影！不要把死亡当成一种结束。死亡，有时候也是另一种开始。」\n\n《迪迦奥特曼》（6.24-8.31）\n\n「童年！爷青回~好多细节长大了再看才能看出来，之后有时间慢慢补一波奥特系列吧！」\n\n《迪迦奥特曼外传 远古复活的巨人》（6.24）\n\n「虽然但是，情怀尚在~」\n\n《奇异博士2：疯狂多元宇宙》（6.26）\n《龙猫》（6.26-28）\n\n「一开始没太懂影片有什么深刻内涵，看知乎‘从童心的视角看待世界、解读世界、探索世界’，尽管我没有那样的童年导致代入感不强，但渐渐品味着找寻回一丝丢掉的童心，而这也是我‘向往的生活’，治愈系的童话大抵如此吧，内心的充盈与宁静~」\n\n《名侦探柯南 零的日常》（7.10-11）\n《魔女》（8.3）\n\n「这部是腹黑少女扮猪吃老虎，高端的猎人往往以猎物的身份出现」\n\n《魔女2》（8.4）\n\n「视频号刷到了 2号 面包车上开挂暴虐情节，这部是单纯少女武力值拉满乱杀，其中红血白雪、幽夜森林、烟花背景构图着实不错，但是那个普通话真是出戏啊，笑不活了~期待第三部还有吧」\n\n《且试天下》（8.8-10）\n\n「话说这部剧赵露思演技妆容着实在线，榜一的《星汉灿烂》反倒一般男女主都是双重身份，喜欢这种多人设的设定哦追起！」\n\n《龙族第一季》（9.3-11.25）\n\n「时隔多年，竟然出了动画，很喜欢~」\n\n《百万美元宝贝》（?）\n\n「这部电影在告诉我们如何面对失败。你努力达到的最巅峰，将是你死前灵光一现时最美的回忆。」\n\n《少年派1&amp;2》（?）\n\n「看过片段，突然没有了追的动力」\n\n《天才基本法》（10.23-10.26）\n\n「熬了三天两夜追完了，真的太好看了，温情，感动，喜感，努力，热血，梦想，都有，也怀念羡慕那份青春，值得再刷。一以贯之的努力，不得懈怠的人生。每天的微小积累，会决定最终结果。一个人的经历决定了他是谁~」\n\n《弟子遍布诸天万界 动态漫》（11.1）\n《长歌行》（11.3-4）\n\n「奔着露思看的，剧情不错」\n\n《名侦探柯南剧场版25 万圣节的新娘》（11.10）\n《欢乐颂2》（11.14）\n\n「咖喱咖喱-插曲」片段观看，向往谭宗明，现实奇点，治愈包奕凡。「谭宗明为什么不会娶安迪 看了《欢乐颂》原著，我才发现老谭爱了安迪一辈子，却未娶她」\n\n《喜羊羊与灰太狼之异国大营救》（11.29）\n《飞狐外传》（11.29-12.2）\n\n「YouTube 推荐刷到，特来看梁洁的造型，太美了~程灵素，医者仁心，令人惋惜」\n\n《铠甲勇士拿瓦》（12.12-15）\n\n「意外刷到个片段，发现了刘芮麟，剧情上似乎是刑天后，最后一部能看得过去的剧了，追起来」\n\n《卿卿日常》（?）\n《疯狂动物城大小事+》（12.29）\n《潜伏》（12.31-2023.1.1）\n\n「和晴一起追恐怖电影跨年，倥偬岁月头一遭」\n2023（15）\n《仙王的日常生活三季》（1.14-20）（第一季）\n\n「出了三季，尤其喜欢第三季的片头片尾曲」\n\n《重启人生》（4.1）\n\n「 奇幻日剧，开挂女主带着记忆无限重生，很平淡又充实的剧情 」\n\n《黑话律师》（4.1）\n\n「 废柴变成大佬的成长之路！逆袭韩剧 」\n\n《金汤匙》（4.1）\n\n「 穷小子和富二代互换身份，逆袭成为韩国首富！ 」\n\n《长月烬明》（4.15-5.9）\n\n「服化道，古装天花板了，敦煌风大爱」\n\n《绝世唐门》（7.14-）25\n《孤注一掷》（8.5）\n\n「王传君演的拜佛一幕，简直绝了~」\n\n《异度空间》（10.2）\n\n「私人电影院观影」\n\n《怦然心动》（10.2）\n\n「私人电影院观影」\n\n《二手杰作》（11.5）\n\n「出门即电影院，来一场说走就走的观影。改编自 世界上最伟大的父亲，喜剧又充满了讽刺，皆不过流量」\n\n《柯南剧场版 26——黑铁的鱼影》（TC 11.19）（2024.2.18）\n《左耳》（部分）（11.26）\n《悲伤逆流成河》（11.26）\n《你的婚礼》（12.30）\n\n「爱过你，我不遗憾」\n\n《星月童话》（12.30）\n\n2024（19）\n《铃芽之旅/铃芽户缔》（2.5）\n\n「第三部牵涉灾难题材的电影，被称作新海诚的《灾难三部曲》，画面唯美依旧，『门的对面，有着全部的时间』」\n\n《大雨海棠》（2.10）\n\n「台词一绝，有待重刷剪辑」\n\n《照明商店》（2.10）\n\n「春节居家观影」\n\n《热搜》（2.18）\n\n「回广州，开工大吉」\n\n《变成你的那一天》（2.18-20）\n\n「男女主张新成和梁洁都很喜欢，吻戏超多，戏份超甜，不到一集的刀人剧情，抑扬顿挫，完美HE」\n\n《香港爱情故事》（3.3）（速过）\n\n「追剧学粤语」\n\n《死侍与金刚狼3》（8.3）\n\n「琴电影院」\n\n《白蛇3浮生》（8.25）\n\n「琴电影院」\n\n《法证先锋6》（9.7-17）\n\n「琴家里追剧，我爱粤剧」\n\n《Shameless-无耻之徒》（9.16-?）\n\n「琴家里追剧，美剧也好看」\n\n《刑侦日记》（9.29-10.6）\n\n「琴家里追剧，我爱粤剧」\n\n《毒液1、2》（11.2）\n\n「琴家里追剧，重温毒液经典」\n\n《死侍1、2》（11.3）\n\n「琴家里追剧」\n\n《雪迷宫》（11.9-20）\n\n「琴家里追剧」\n\n《白夜破晓》（11.21-12.8）\n\n「琴家里追剧；等了七年，白夜追凶第二部终于等到了，可惜结局大关死了，意难平」\n\n《‎唐朝诡事录之西行》（12.9-24）\n\n「琴家里追剧」\n\n《唐朝诡事录》（12.24-2025.1.4）\n\n「琴家里追剧」\n2025（）\n《清明上河图密码》（1.5-12）\n\n「琴家里追剧」\n\n《酌见》（1.13-）\n\n「企业类访谈」\n\n《哪吒3之魔童闹海》（1.31）\n\n「和两妹妹一起春节档，还抓了四个娃娃」\n\n《》（）\n\n「」\n\n《》（）\n\n「」\n\n《毒液3》（）\n\n「琴家里追剧」\n\n《冰菓》（）\n\n「」\n\n《凡人歌》（）\n\n「」\n\n《心花路放》（）\n\n「」\n\n《On Call 36小時 1-2》（-）\n\n「两季 55 集，精选喜欢的语录剪辑学习」\n\n《外来媳妇本地郎》（）\n\n「经典之作，对比七十二家房客更喜欢这部的剧情，主追，后期可能再看愛回家之開心速遞」\n\n《通往夏天的隧道再见的出口》（）\n\n「」\n\n《白色相簿》（）\n\n「」\n\n《日在校园》（）\n《狗剩快跑》（）\n\n「」\n\n《画江湖之天罡》（）\n《通往夏天的隧道，再见的出口》（）\n《风月变》（）\n《春色寄情人》（）\n《我的女友来自未来》（）\n《走走停停》（）\n《年少日记》（）\n《月光骑士》（）\n《月光骑士》（）\n《黑衣人：全球追缉》（）\n《长安三万里》（）\n《狂飙》（）\n\n「盛极一时，风头无量的经典！」\n\n《神话》（）\n《与凤行》（）\n《刮掉胡子的我与捡到的女高中生》（）\n《倩女幽魂》（）\n《一部塞尔维亚的电影》（）\n《恶作剧之吻》（）\n《我想吃掉你的胰脏》（）\n《来自旺星的你》（）\n《瞒天过海》（）\n《涉过愤怒的海》（）\n《繁花》（）\n《灿烂的她》（）\n《金币灰黄》（）\n《心灵奇旅》（）\n《金币灰黄》（）\n《萤火虫之墓》（）\n《紫罗兰永恒花园》（）\n《邻里的人们》（）\n《不良执念清除师》（）\n《唐人街探案电视剧版》（）\n《十三邀》（）\n\n「特立独行的访谈」\n\n《你好生活》（）\n\n「第二季是以年轻人的视角，和嘉宾们一起去探索旅途中的未知与惊喜。慢生活其实是一种感受力，是学会在忙碌的空隙，挖掘生活中的小惊喜。」\n\n《向往的生活》（）\n《米小圈上学记》（）\n《三生三世十里桃花》（）\n《深海》（）\n《长相思》（）\n《半是蜜糖半是伤》（）\n《回到过去拥抱你》（）\n《山河之影》（）\n《In Time》（）\n《大雾》（）\n《太阳的后裔》（）\n《亚当计划》（）\n《三线轮洄》（）\n《无名之辈》（）\n《摩登家庭》（）\n《小谢尔顿》（）\n《心灵奇旅》（）\n《招摇》（）\n《新喜剧之王》（）\n《幸福-韩剧》（）\n《青春变形记》（）\n《想要成为影之实力者》（）\n《X特遣队》（）\n《惊天魔盗团》（）\n《我们是夜晚》（）\n《海王》（）\n《铁血战士》（）\n《分界线》（）\n《素人特工》（）\n《国子监来个了个女弟子》（）\n《传闻中的陈芊芊》（）\n《流光之城》（）\n《大考》（）\n《少年派的奇幻漂流》（）\n《父子变形记》（）\n《婚纱》（）\n《爱•回家》（）\n《七号房的礼物》（）\n《辛德勒的名单》（）\n《穿条纹睡衣的男孩》（）\n《苍兰诀》（）\n《垫底辣妹》（）\n《陈情令》（）\n《衰女翻身-美剧》（）\n《洋葱新闻》（）\n《Manchester by the sea 海边的曼彻斯特》（）\n\n「很好的一部电影。诠释了并不是所有的伤痛都可以释怀」\n\n《你安全吗？》（）\n《少林足球》（）\n《喜剧之王》（）\n《青蛇》（）\n《神探大战》（）\n《隐秘的角落》（）\n《绝世唐门 动态漫》（）\n《魔女之旅》（）\n《春光乍现》（）\n《云边有个小卖部》（）\n《相思误》（）\n《独家记忆》（）\n\n「雪獒铠甲是男主~」\n\n《英雄联盟：双城之战 Arcane》（）\n《暗恋•橘生淮南》（）\n\n「橘生淮南则为橘，生于淮北则为枳。」\n\n《目中无人2》（）\n《芸汐传》（）\n\n「无语凝噎，想看的剧一年也就寥寥几部，偏偏都下架了，我这运气唉！不过这剧 YOYO 还有，真香！」\n\n《如意芳霏》（）\n\n「张哲瀚有病，连累了鞠婧祎这两部剧，还得找资源看，好难。」\n\n《且听凤鸣》（）\n《我与你的光年距离》（）\n《以年为单位的恋爱》（）\n《秘密访客》（）\n\n「剧情虽乱，不过演技炸裂又是暗黑系，依然很香！」\n\n《侧耳倾听》\n\n「宫崎骏」\n\n《我要我们在一起》（）\n《时间规划局 In Time》（）\n《不良人》（）\n\n「新季攒更中」\n\n《斗破苍穹 缘起》（）\n《斗破苍穹 年番》（）\n《眷思量》（）\n《触不可及》（）\n\n「最好的关系不是小心翼翼，而是彼此随心所欲」\n\n《港囧》（）\n《未来的未来》（）\n《新蝙蝠侠》（）\n《迪迦&amp;戴拿奥特曼 星光战士》（）\n《迪迦&amp;戴拿&amp;盖亚奥特曼 超时空大决战》（）\n《戴拿-盖亚-赛文-杰克-艾斯-泰罗奥特曼》（）\n《雷欧奥特曼》（尝试下）\n《爱迪奥特曼》（校园篇）\n《梦比优斯奥特曼》（尝试下）\n《模范出租车》（韩剧？）\n《哈皮父子》（）\n《我们的少年时代》（）\n《秒速五厘米》（）\n\n「新海诚以前的著作，称得上经典之作——‘樱花落下的速度是每秒五厘米，我该用什么样的速度，才能与你相遇？’」\n\n《言叶之庭》（）\n\n「经常出现在视频号刷到的视频片段中，也是新海诚的著作，有些凄美——『屋滴降落的速度是每秒十米，我该用什么样的速度，才能将你挽留？』」\n\n《升空的烟火从下面看还是从侧面看》（）\n\n「烟花消散的速度是每秒三亿米，我该用什么样的速度，才能将你追回？」\n\n《烟花》（）\n\n「」\n\n《声之形》（）\n《开端》（）\n《假装情侣》（）\n《露水红颜》（）\n《请回答1988》（）\n《风雨哈佛路》（）\n\n「励志电影，打打气」\n\n《功夫梦》（）\n《花木兰》（）\n《想见你》（）\n《中国合伙人》（）\n\n「」\n\n《我是路人甲》（）\n\n「」\n\n《面对巨人》（）\n\n「」\n\n《这个杀手不太冷》（）\n《二十不惑》（）\n《嫌疑人》（）\n《Hello World》（）\n《霸王别姬》（）\n《重返十七岁》（）\n《心花路放》（）\n《乱世佳人》（）\n《本杰明巴顿奇事》（）\n《流感》（）\n《刺杀小说家》（）\n《太阳的后裔》（）\n《让子弹飞》（）\n《真爱至上》（）\n《百岁之好，一言为定》（）\n《大象席地而生》（）\n《巡戈悍将》（）\n《喜羊羊与灰太狼之跨时空救兵》（）\n《想见你》（）\n《花木兰》（）\n《听说》（）\n《这个杀手不太冷静》（）\n《野马分鬃》（）\n《雄狮少年》（）\n《断桥》（）\n《辩护人》（）\n《教父》（）\n《寻梦环游记》（）\n\n「只有现实世界没人记得你，灵魂才会‘终极死亡’。」\n\n《我是遗物整理师》（）\n\n「即使你看不到某个人，不代表那个人不在你身旁只要你记住他们，他们就不会消失。」\n\n《上一当》（）\n《非诚勿扰》（）\n《活着》（）\n《大撒把》（）\n《不见不散》（）\n《编辑部的故事》（）\n\n「葛大爷无处安放的魅力，深深地折服了我」\n\n《甲方乙方》（）\n《天下无贼》（）\n《顽主》（）\n《浮士德》（）\n《Happy Sugar Life》（）\n《风雨同路》（）\n《境界的彼方》（）\n\n「京阿尼的战斗梦」\n\n《》（）\n\nGame\n《中国式家长》\n\n「当初非常火，望子成龙了一吧」\n\n《杀手2》\n\n「手游，童年在父亲三星手机上两人一起氪金过的游戏，一段美好的过往，难忘的青春。」\n\n《这是我的战争 This War of Mine》\n\n「暗黑系列，还有反乌托邦，喜好之一。怎么评价这款游戏？他让你看到你自己。」\n\n《Beholder》\n《红警》\n《重返德军总部》\n《侠盗飞车4》\n\n「手速就是敲秘籍打下了基础，XD」\n\n《LOL》\n\n「童年网吧回忆~」\n\n《量子破碎》\n\n「看过没玩过，咳」\n\n《Cyberpunk 2077 - 赛博朋克》\n《部落冲突》\n\n「腾讯代理后平衡性打破，冲上世界钻石榜单贼难搜到人…不再玩了，五六年老玩家了，是我号最多的游戏（10+），也是一代回忆了。」\n\n《第五人格》\n《Kingdom Rush - 王国守卫战》（四部）\n《Dawn of Zombies - 僵尸的黎明》\n《植物大战僵尸》\n\n**「 [无尽模式最强阵容v2.0](https://blog.csdn.net/zhaizhaizhaiaaa/article/details/124230667] 」\n\n《双子 Gemini》\n《DEEMO II》\n\n「看过没玩过，咳」\n\n《apongebob - 海绵宝宝》\n《pac man - 吃豆豆》\n《ride4 - 极速骑行》\n《模拟人生》\n\n「 这个游戏 真实的让我感受到，时间是世界给予我们最大的馈赠，它使我们在各种意义上趋于完整。”」\n\n《反叛公司》\n《程序员升职记 Human Resource Machine》\n《编程模拟器 while True: learn()》\n《Hackers》\n\n「策略还是我的最爱，慢性子仿佛只能运筹帷幄，奋斗在后方大本营了，身居一线是不太行」\n\n《Mario Kart》\n\n「琴-马里奥卡丁车」\n\n《Stardew Valley》\n\n**「解压可肝的星露谷」\nps：莫名其妙地迷上韩剧啦 ヾ(≧▽≦*)opps:（?）遗失的记忆碎片，可能永远不会完结的东西……ppps：好爱大女主剧——花千骨，琉璃pppps：好中意校园系+商战重生文\n","categories":["Self-improvement"]},{"title":"Personal Website Summary","url":"/2020/02/02/link/","content":"Resource Tools\n\n\n短信接码\n虚假邮件生成器\n即弃电子邮箱\n短网址生成\n自定义短网址工具\n\n\n\n小刀资源网\nZAPRO·杂铺\nZ-Library\nAll IT eBooks\nLibGen\n\n\n小资源栈\n🔰雨苁ℒ🔰暗网|黑客|极客\nInternet Archive\n华为定位\n双拼练习\n\n\nVPS 大玩家\n虚拟卡大玩家\n小楠日语\n虚假邮箱\n回忆飘如雪\n\n\nMedia Tools\n\n\nPS 在线\n圆形剪切\nI 💙 IMG\nI 🧡 PDF\nfavicon 制作\n\n\n\n最优图像优化\nMP3 剪辑\n定时刷新网页\nemoji 颜文字\n音乐网下载\n\n\n艺术二维码\n二维码模板\n草料二维码\nYEELOGO_logo\nHdqwalls\n\n\nwallhaven\n二次元壁纸\n兔二工具\nPornHub 风格\n文章生成器\n\n\n下载全世界的音乐https://myfreemp3music.com/\nWALLPAPER\n\n\n\n\n\nCTF\n\n\n千千秀字\n加密解密工具\n解密在线工具\nbase64 图片转换\nMD5\n\n\n\nRSA 大数分解\nSageMath\n新约佛论禅\n与佛论禅\n二进制转字符\n\n\nCTF竞赛权威指南\nFrequency\nManipulate\n脑洞大开的编码和加密\nPwnHub\n\n\nOther\n\n\n独立开发者社区\n安全圈 info\n美国地址生成器\n\n\n\n\n\n\n\n\n\n一缕青丝详细编制视频\n\n\n匿名性检测whoer\n威胁情报网站导航1 ThreatCrowdhttps://www.threatcrowd.org/\n2 VirusTotalhttps://www.virustotal.com/###/home/upload\n3 ThreatBook (微步在线)https://x.threatbook.cn/\n4 360威胁情报中心https://ti.360.com/\n5 SCAP 安全内容自动化协议中文社区/CVE/OVAL/CWEhttp://www.scap.org.cn/index.html\n6 恶意软件https://malwr.com/\n在线工具[1] p牛渗透在线工具[2] skymine在线工具集[3] lu4n在线工具集[4] 穿山甲在线工具[5] ATools 端口扫描[6] 浏览器模拟\n安全导航页[0] 纳威安全导航[2] thief.one导航[3] cmcc导航[4] 社工导航页-丁爸网[5] 基站定位[7] threat hunter[8] 乌云镜像[9] URL decode GBK[10] CTF wiki[14] MSDN I Tell YOU[15] 信息安全知识库\n[1] 成信工 Syclover ctf wiki[2] Syclover ctf platform\n[a] CloudEye HTTP Fuzzing/缓存攻击平台\n投稿平台[1] 阿里先知社区 https://xz.aliyun.com/[2] 360安全客 https://www.anquanke.com/contribute/new[3] freebuf[4] 撕吼[5] 安全脉搏[6] 雷锋网宅客频道[7] 安在/E安全/安全牛/华盟 等 自媒体或其他小团队\nSecurity Media可以考虑限定聚合搜索\n[1] 360 - 安全客[2] Sec-wiki[3] seebug 安全paper[4] freebuf[5] E安全\n外网翻译质量尚可[6] 安全牛[7] 撕吼专业版[8] 安全脉搏[9] MottoIN[10] 外网消息聚合 - 安全小飞侠[11] 网安视界 - 公众号[12] wooyun(dead)[13] 漏洞时代 - 搜索web类 0day/1day[14] 玄武每日推送 微信号: XuanwuLab[15] 国外信息安全Feed源\n二线[1] 安全字典[2] 安全盒子[3] 安全文库\n外文[1] https://hakin9.org/[2] http://magazine.hitb.org/[3] http://sans.org[4] https://pentestmag.com/[5] https://eforensicsmag.com/\nbbs或半公开/ 搜索引擎难以访问[1] ichunqiu[2] 52pj[3] 看雪[4] t00ls[5] secquan\n在线漏扫绿盟bugscan 四叶草安犬 安全狗\n聚合列表http://www.freebuf.com/news/120254.html\n企业实验室腾讯七大实验室Keen Pwn2Own Binary玄武实验室(MIG) Binary湛泸实验室 Binary云鼎实验室(SNG) 云安全反诈骗实验室 设备指纹, domain black list反病毒实验室移动安全实验室\n启明星辰ADLab 积极防御实验室VenusEye金睛安全研究团队\n360追日团队 APTUnicorn Team(无线电硬件实验室) 杨卿 物联网/射频设备安全WEB攻防团队 - 0KEE TEAM移动安全团队 Vulpecker Team RAyH4c(宋申雷) 80sec逆向攻防团队 Vulcan Team (MJ0011) 成立于 2015网络攻防实验室 路羽(林伟) 车联网,IoT方向烽火实验室 移动安全 Android 恶意软件分析Alpha Team Pwn/固件逆向工程/安卓漏洞 负责人:龚广网络安全研究院 数据科学+安全 负责人 宫一鸣 &#x6c;&#x69;&#102;&#x65;&#110;&#x67;&#x70;&#101;&#x69;&#x40;&#51;&#x36;&#48;&#x2e;&#99;&#110;无线安全研究院 root团队360网盾360企业服务产品线360天擎360天眼360天机360天巡360安域\n鹰眼代码卫士Amazon安全部门\n知道创宇n0tr00t 团队安天AVLTeam APT, Binary盘古http://blog.pangu.io/永信至诚 i春秋\n社区先知社区https://xianzhi.aliyun.com/forum/\nsobughttps://pockr.org/account/login?uri=//pockr.org%2F\nMottoIN/ 勾陈安全实验室http://www.polaris-lab.com/\nThreatHunter (360 n1nty, Leon不会玩QEMU)https://threathunter.org/\n3Year\n渗透测试/Web安全知识星球\n知识星球各个小组\n公司型 小团队inn0team 东巽科技 APT防御http://www.dongxuntech.com/about/view/zz\n兰云科技银河实验室 威胁感知系统http://www.lanysec.com/about/about106.html\npkav 四川无声http://www.silence.com.cn/\n天际友盟(威胁情报)https://www.sec-un.com/https://www.sec-un.org/\n迪普科技 防火墙/硬件设备http://www.dptech.com/\n铸剑网络安全实验室(CSNS-Lab) 昆明嘲风信息技术有限公司\n培训型小团队Cracer 培训http://cracer.com/\n西普学院 培训http://www.simpleware.com.cn/\n至安全(上海来晨网络科技) 培训http://zhiaq.com/\n农夫安全 培训http://www.farmsec.com/\n米斯特安全 培训http://www.hi-ourlife.com/\n一叶知安 培训/在线靶场http://www.leafsec.com/\n小团队 多数偏向渗透和web安全网络尖刀 http://www.1aq.com/lab.html白细胞 WhiteCellClub破晓团队 http://secbug.org/安全弱点实验室 https://secvul.com/勾陈安全实验室(部分互联网企业甲方员工) http://polaris-lab.com/金乌网络安全实验室 http://www.jinwulab.com/渔村安全 金山猎豹 猎豹科学院(珠海猎豹团队) http://weibo.com/u/5619198113SSS安全安全盒子安全字典226safe风铃安全飓风安全\n建站运维https://lala.im/27.html\nReverse[1] [riusksk 林桠泉 漏洞战争：软件漏洞分析精要 http://riusksk.me/ http://riusksk.blogbus.com/[2] [ele7enxxh 360成都 Reverse,Fuzzing http://ele7enxxh.com/[3] [flanker https://blog.flanker017.me/[4] [提权大佬 zcgonvh http://www.zcgonvh.com/[5] [giantbranch http://www.giantbranch.cn/[6] [yuechen http://ww2.cs.fsu.edu/~ychen/\nSecurity Binary[1] [xuanwu lab (Tencent) http://xlab.tencent.com/en/[2] [Keen Team http://keenlab.tencent.com/en/index.html[3] [n0tr00t team (KnownSec) https://www.n0tr00t.com/[4] [maskray http://maskray.me/\nRed Team[1] [backlion https://www.cnblogs.com/backlion[2] [backlion2 http://www.backlion.org/[3] [klionsec https://klionsec.github.io/archives/\nNormal[1] [InnerAc http://innerac.github.io/[2] [Sloriac http://sunzequn.com/[3] [JetMuffin http://jetmuffin.github.io/[4] [NAP Group http://nap-group.herokuapp.com/[5] Legend4917 http://legend4917.github.io/[6] GMpj http://www.mapengju.com/[7] qilin http://www.qilinlirui.com/[8] qwertylevel3 http://qwertylevel3.github.io/[9] 阿涛 http://zcatao.github.io/\n安全研发[1] 彦修 https://www.yanxiuer.com/[2] 安全盒子 王松 http://www.hackersb.cn/[3] 360-0kee tbackdark http://www.tbackdark.com/[4] Aliyun Tr3jer http://www.thinkings.org/[5] seay http://www.cnseay.com/[6] fooying 张祖优 http://www.fooying.com/[7] atom kid http://www.atomsec.org/[8] 体验盒子 前端+安全 http://www.uedbox.com/[9] virusdefender https://virusdefender.net/[10] 第八个记忆 Rapid7 http://jiyidian.com/about[11] 屌丝归档笔记 http://0cx.cc/\n安全甲方[1] lewisec - 某制造业公司安全团队甲方 http://www.lewisec.com/[2] sixwhale - (滴滴 DSRC) http://sixwha1e.github.io/\nPentest![2] ChaMD5 hfuuss http://baka233.me/[3] P牛 代码审计 phithon 离别歌 https://www.leavesongs.com/[4] evi1cg Both ctf &amp; pentest https://evi1cg.me/[5] 夏之冰雪 http://love.ranshy.com/[6] 3xp10it http://3xp10it.cc/[7] cnbraid http://www.cnbraid.com/[8] Flanker Sky https://blog.flanker017.me/[9] lostwolf http://wolvez.club/[10] lshack https://www.lshack.cn/[11] Mosuan’s Blog http://www.0aa.me/[12] 戚名钰 http://qimingyu.github.io/[13] NULL Joe http://www.infosec-wiki.com/[14] lovehack http://www.lovehack.cn/[15] Vins0n https://pwfee.com/about.html[16] pr0mise’s blog https://www.ohvirus.com/[17] Silver https://blog.iret.xyz/list.aspx/3[18] sh3ll http://sh3ll.me/[19] cnbird http://www.cnbraid.com/[20] wrfly http://wrfly.kfd.me/archive/[21] wils0n http://blog.wils0n.cn/[22] expshell http://www.expshell.com/[23] phpinfo-me https://phpinfo.me/[24] yins0 http://www.yins0.me/[25] 深夜 http://blog.163.com/sy_butian/profile/[26] 0h1in9e https://www.ohlinge.cn/[27] wAnyBug https://wanybug.com/[28] 0nise http://hack-gov.com/[29] 北风飘然 - 乙方渗透/安全研发/src漏洞挖掘 http://cuijianxiong.com/[30] 明明是安全 http://www.srcbug.com/[31] 漏洞人生 http://www.vuln.cn/[32] lu4n http://lu4n.com/[33] 3xpl0it http://3xp10it.cc/[34] 疯子 - 乙方渗透/应急响应 https://blkstone.github.io/friend/www.miaofeng.org[35] 浩神博客 - 梁鹏浩(EN有详细资料) https://www.haohacker.com/[36] Atom Kid http://www.atomsec.org/[37] Yu1u Security Club https://www.yu1u.org/https://www.tianchenyi.com/index.php/cross.html[a] hypot http://hypotenuseleg.org/[b] evi1cg https://evi1cg.me/[c] chybeta https://chybeta.github.io/[d] itfellover https://itfellover.com/[e] backlion http://www.cnblogs.com/backlionhttps://xecades.xyz/https://blog.baoshuo.ren/\n把Win10变成 Mac OS- MyDockFinder v5.9版本官网地址：https://www.mydockfinder.com下载地址：www.lanzoux.com/b03mlebmj\nzu1khttps://blog.rxliuli.com/\n海量精品 Mac Apps 免费分享https://www.digit77.com/macapps/\n5个免费的外文书籍下载网站1️BookYards 收录了24214本书籍，并且书量随时在增加。https://www.bookyards.com/en/welcome2️The Online Books Page 由宾夕法尼亚大学图书馆建立并维护，收录了几万本书籍。http://onlinebooks.library.upenn.edu/3️Ebookee 按主题分类，非常便于查找。https://www.ebookee.net/4️Planet eBook 所有的小说和书籍都是免费下载和共享。https://www.planetebook.com/5️Project Gutenberg 古登堡计划，藏书量超过6万本https://www.gutenberg.org/\n有很多libgen上都没有的学术著作pdf下载，很多都是新书，不知道有没有人分享过。https://oapen.org/\n百度网盘资源搜索引擎https://www.feizhupan.com/#/\n开源情报工具箱https://osint-labs.org/tools/\n翻译各种烦人的拼音缩写https://lab.magiconch.com/nbnhhsh/\n私人在线图库http://hefollo.com/\n单词键盘练习https://qwerty.kaiyi.cool/\n在线背单词http://www.danci88.com/\n可可英语http://www.kekenet.com/cet4/tl/\n英语真题在线https://zhenti.burningvocabulary.com/\n日语写作校对网站，可以针对最多1万字的日语进行校对，包括语法和用词上的错误http://www.kiji-check.com/\n天太热了，在群里装一个空调，有需要的家人自己吹，每次只能吹一天【群友 酷酷的麦斯尔 提供】https://ac.yunyoujun.cn/?from=groupmessage&amp;isappinstalled=0https://www.yunyoujun.cn/\n艾宾浩斯记忆曲线自动生成计划表，不管是背单词或是复习还是制定任何计划都用得上https://exam4.us/\n在线文字游戏《人生重开模拟器》。纯文字游戏只需开局选天赋分配初始属性，后面就是看岁月如白驹过隙，转眼就过完了这一生，不满意的话可以轻松重开新的人生。游戏凭借诙谐幽默的文案和出乎意料的结尾，广受好评。https://liferestart.syaro.io/view/\n中文 DOS 游戏集合https://dos.zczc.cz/\nApple storehttps://buy.aneeo.com/\n共享号https://go.hao8.top/\n闪电购http://www.sxxsa.com/\n在线手册http://shouce.jb51.net/\n微软产品密钥分享平台PKeyToolhttps://pkeytools.azurewebsites.net/ShareKeys\n认知偏差知识手册https://s75w5y7vut.feishu.cn/docs/doccn3BatnScBJe7wD7K3S5poFf\n语言的邀请https://dhbsfuhnfu.feishu.cn/docs/doccnQdzN2Op8nv7WLK53xFx46c\n资源汇总https://bkfeng.top/2\n搜书网http://191030.06yun.cn/\n海外天空网https://haiwaisky.com/\n美国攻略https://gonglue.us/\n加密狗https://jiami.dog/3299.html\n虚拟号https://xunihao.net/\nDaniel’s mind paradisehttps://hustdanielhu.com/\n烟花模拟器https://niuaa.github.io/niua.github.io/fireworks/\n域名https://www.22.cn/news/2016/0425/6069.htmlhttps://cloud.tencent.com/act/domainsales?from=15856https://wanwang.aliyun.com/domain/searchresult/https://cloud.baidu.com/product/bcd.html?track=navigation20200904https://www.xinnet.com/domain/domain.htmlhttps://www.namecheap.com/domains/registration/results/?domain=xcbyao.com\nSSL证书https://juejin.cn/column/6976251170704588837\nGoogle analyticshttps://analytics.google.com/谷歌搜索优化https://search.google.com/search-console/aboutbinghttps://www.bing.com/webmasters/about百度https://ziyuan.baidu.com/site/index#/\n统计超过 2000篇 真实面经的高频面试题https://osjobs.net/topk/\n互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识https://doocs.github.io/advanced-java/#/https://github.com/doocs/advanced-java\n一个干净、免费的编程资源网，无需注册，登录，内容全部免费。https://r2coding.com/#/GitHub地址：https://github.com/rd2coding/Road2Coding\n一个颇为实用的技术网站。里面整理了各种技术类型的速查表 ，其中包括 Git、Vim、Go、MySQL、Linux、VSCode、Vue 等各大常用技术的速查表清单！https://devhints.io/GitHub地址：https://github.com/rstacruz/cheatsheets这也是较为全面的一个速查网站https://quickref.me\n整理和搜集网络免费的项目实战课程，包括 Java 项目实战，Python 项目实战，C++ 项目实战等https://github.com/resumejob/free-project-course\n史上最全的家庭应急物资储备清单（买错了网）https://pan.baidu.com/s/153xMql6urcSlisrss3DLEQ?pwd 提取码：j0zx\n直面「猝死」这个话题：你需要了解哪些知识？ [by 少数派编辑部]https://sspai.com/post/71678\n了解这些小技巧，今晚开始努力睡个好觉 [by 少数派编辑部]https://sspai.com/post/71679\n\n一个永久免费4K在线观影网站支持安卓、iOS、网站、TV端https://www.tkys.tv/\n\n各种视频网站下载工具教程 【都在群公告里】https://www.yuque.com/eureka007/ziyuan/facv1i\nhttp://blog.tianzheng.cool/\nhttps://hackingcpp.com/cpp/cheat_sheets.html\nQuick Cut 是一款轻量、强大、好用的视频处理软件。压缩视频、转码视频、倒放视频、合并片段、根据字幕裁切片段、自动配字幕、自动剪辑等功能【软件支持】Windows、Mac、Linux【官方网址】https://gitee.com/haujet/QuickCut【软件下载】https://gitee.com/haujet/QuickCut/releases\n文件传输网站：免注册 🙅‍♀️https://wetransfer.com/https://cp.ciding.cc\n英语https://quillbot.com/https://qishiya.com/?p=1366\n软件破解网站：提供Mac软件👨🏻‍💻 MacWk：https://macwk.com/ Digit77: https://www.digit77.com/\n多格式转换器https://www.online-convert.com/\n非常好用的在线计算器，用来对付高数非常棒https://www.mathway.com/eu/Calculus\n趣卡翻译https://fanyi.qukaa.com/使用教程：【非常好用，免费的翻译软件，生成中英pdf对照版本，可翻译一本书！！！-哔哩哔哩】 https://b23.tv/Kcs6z8r推荐：其他翻译软件合集：📑文献文档翻译工具https://www.yuque.com/eureka007/ziyuan/zx3udb\nApple 维修记录追踪 ▍需要用到的APP：💬商店搜索： #Scriptable▍脚本地址：https://github.com/GideonSenku/Scriptable/blob/master/Apple/AppleRepair.jshttps://raw.githubusercontent.com/GideonSenku/Scriptable/master/Apple/AppleRepair.js▍使用操作：需要手动填入两个key：repairId：维修编号serialNumber：你的手机序列号\n天空影视https://www.tkys.tv/\n猫抓 chrome媒体嗅探插件https://github.com/xifangczy/cat-catch\nQuick Cut 是一款轻量、强大、好用的视频处理软件。压缩视频、转码视频、倒放视频、合并片段、根据字幕裁切片段、自动配字幕、自动剪辑等功能【软件支持】Windows、Mac、Linux【官方网址】https://gitee.com/haujet/QuickCut【软件下载】https://gitee.com/haujet/QuickCut/releases\n第一个是 Crossref 元数据。这个巨量的数据库通过 DOIs 索引研究论文，并提供论文作者、发表年份、标题和其他相关信息的元数据。该数据库包含超过 1.2 亿条记录及 API，用户可以通过 torrents 下载。网站地址：https://www.crossref.org/第二个是 General Index。该数据库可以索引到 1.07 亿篇学术论文。网站地址：https://archive.org/details/GeneralIndex第三个是 OpenCitations Corpus。这个免费开放的数据库提供了互引论文的相关信息。网站地址：https://opencitations.net/corpus第四个是 Scopus。该数据库虽然不是免费的，但有免费访问的科学期刊信息表，用户在注册后可以下载。网站地址：https://www.scopus.com/sources.uri?zone=TopNavBar&amp;origin=searchbasic第五个是 Scimago Journal &amp; Country Rank。这是一个免费访问的数据库，提供了科学期刊论文相关的内容。网站地址：https://www.scimagojr.com/\n麻辣短网址 - 短网址在线生成,短链接生成器,可修改原网址,自定义域名,活码二维码生成,域名拦截检测,免费提供API接口https://www.maa.la/\n百度短网址https://dwz.cn/console/operation\n水印删除https://theinpaint.com/\nwallherehttps://wallhere.comWallpaper abyss 是国外知名的壁纸下载网站，分享的壁纸数量很多。https://wall.alphacoders.comWallhaven免费壁纸网站大全https://wallhaven.ccWallpaperCave 是国外知名的壁纸社区，分享的壁纸质量很高。https://wallpapercave.comunsplashhttps://unsplash.com/t/wallpaperspiqselshttps://www.piqsels.com/zhwallroom 质量较高，壁纸分辨率从 1920 到 8k 不等。https://wallroom.io\n逐步学习正则表达式，从零基础到高阶。https://regexlearn.com/zh-cn\n商务部出的《对外投资合作国别（地区）指南 》特别推荐！！！基本覆盖了整个世界，内容翔实，图文并茂，如图百科全书http://fec.mofcom.gov.cn/article/gbdqzn/indexphone.shtml\n苹果旧版本ID查询https://tools.lancely.tech/\nios IPSW Downloadshttps://ipsw.me/\n如果您需要匿名发送文件，可以使用以下匿名文件共享服务之一：• anonfiles.com• filedropper.com• privatlab.com• dropmefiles.com• wetransfer.com• onionshare.org有用的文件托管:SendGB.com - 最多 4 GB，7 天;Volafile.org - 最多 20 GB，2 天;Openload.co - 1-10 GB，60 天;Uploadfiles.io - 最大 5 GB，30 天;Gofile.io - 无限量，60 天.\n[英文]技术面试手册https://www.techinterviewhandbook.org/\n[英语] 英语学习资料合集https://www.aliyundrive.com/s/aZkbQjsRyb8\n【Mac】OwlOCR – 支持中文，免费的本地 OCR 文字识别工具实现不联网，本地 OCR 文字识别，对中文支持良好。可以从屏幕截屏、图片、PDF 文档进行 OCR，响应迅速。官网：https://owlocr.com/\n拾音人http://www.shiyinren.com/\nMarkdown to 公众号一键转换器https://knb.im/mp/Markdown排版利器http://md.aclickall.com/\n黑苹果安装教程项目：https://github.com/sqlsec/Hackintosh网站：https://apple.sqlsec.com/\n表白代码收藏馆项目：https://github.com/sun0225SUN/Awesome-Love-Code网站：https://sun0225sun.github.io/Awesome-Love-Code/\nidea激活码https://key.words.run/en/\n视觉化单词间的关系https://visuwords.com\n两个语料库，直线提升口语写作技能 http://www.easygpa.com/a48e8ee140.htmlhttps://ludwig.guru/VS _ * [] &#123;&#125; 五种用法https://linggle.com/\nhttp://www.easygpa.com/线上虚拟实习项目https://www.theforage.com/https://jobready.cn/Google+https://buildyourfuture.withgoogle.com/初创公司https://www.workatastartup.com/https://www.keyvalues.com/\nNumerology calculatorhttps://www.babycentre.co.uk/t25017109/numerology-calculator1、Liam2、Noah3、Lucas4、Mason5、Oliver6、Logan7、Ethan8、Elijah9、Aiden10、James11、Benjamin13、Alexander14、Sebastian15、Jacob16、Carter17、Jayden18、Michael19、Daniel\nAntonio-Neo Joanna-Anna\n免费人像修复神器https://picwish.cn/unblur-image-portrait\n图片滤镜特效；在线照片一键美化 - Logo设计https://www.logosc.cn/filter/\niOS利器“小火箭”（Shadowrocket）最全使用教程https://laob.me/2300/\n谈谈 iOS 平台上的几款代理软件https://blog.hly0928.com/post/talk-about-some-proxy-apps-on-ios/\nhttps://hexo.lyh.best/about/毒奶https://limbopro.com/archives/5230.html\nhttps://www.checkgfw.com/ 墙检测\n一份不负责任的机场使用手册https://xijie.wordpress.com/author/xijie/\nAppStorehttps://moglr.com/https://www.rocketgirls.space/product/https://lgappleid.top/\n低端影视https://ddrk.me/tag/douban-top250/\n密码暴力破解工具 PassFab for RAR、ZIP、PDF、Officehttps://wwc.lanzoul.com/b00vha19e 密码:43w9\nGreasyfork上的一个阿里云盘网页版油猴脚本阿里云盘：https://greasyfork.org/zh-CN/scripts/425955搭配下面这个PotPlayer 插件，可以实现PotPlayer在线播放阿里云盘视频外链PotPlayer 插件：https://github.com/gene9831/AliyunDrivePotPlayer\n能够根据关键词直接匹配颜色的配色神器https://picular.co/\nFreebookcentre：免费下载技术类书籍，包括计算机科学、编程、移动技术、物理学、医学等类型。http://www.freebookcentre.net/\nMetPublications：可在线阅读或下载艺术、文化、历史等书籍，目前有600多册，大多为pdf格式。https://www.metmuseum.org/art/metpublications/\nForgotten Books：专门从事旧书的翻新，有小说也有非小说类作品。拥有129万本书可供在线阅读，或以电子书的形式下载，或以书面形式购买。https://www.forgottenbooks.com/en\nGithub、Google Search等公益的镜像源https://www.library.ac.cn/\n上班摸鱼：经典俄罗斯方块，童年乐趣走起来！http://www.itmind.net/tetris/\n《如何高效学习英语》一位IT大神写的学习英语攻略方法。十分值得学习观看借鉴。https://byoungd.gitbook.io/english-level-up-tips/\n绕过一些网站需要付费才能看的内容比如：经济学人等https://12ft.io/https://github.com/iamadamdev/bypass-paywalls-chrome\n博客https://www.luckydesigner.space/\n博客创建搬运https://www.blogger.com/about/?hl=zh-CN\n三流的人做干电池，二流的人做充电电池，一流的人做核电站。https://0792z.blogspot.com/\n限免https://mergeek.com/\nTypora中利用LaTeX 插入数学公式https://blog.csdn.net/happyday_d/article/details/83715440\nhttps://www.wallpaperflare.com/\n在线翻译任何文档格式为任意语言，并保持排版不变。免费。https://www.onlinedoctranslator.com/zh-CN/\nData Structure Visualizations 数据结构动画https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\n一个正则表达式如何匹配输入的一段文本。http://regexpal.com/\n魔方 www.i-mofang.com\nGitHub鏡像站https://hub.gitfast.tkhttps://hub.gitslow.tkhttps://hub.verge.tkhttps://raw.gitfast.tkhttps://raw.gitslow.tkhttps://raw.verge.tk\nApple 苹果产品参数中心苹果产品的区别对比http://www.onlineit.cn/apple/\n免费查重网站包括：万方免费查重（应届生免费一次）：chsi.wanfangtech.netPaperDay（标准版永久免费，旗舰版每日限免）：www.paperday.cn论文狗（每日免费一次）：  www.lunwengo.netPaperYY（每日免费一次，11点多免费两次）：www.paperyy.comFreeCheck（每日免费一次）：www.freecheck.cnWritePass（每日1000个免费名额）：www.writepass.cn超星大雅（免费看相似度）：dsa.dayainfo.com百度学术（免费使用PaperTime一次）：xueshu.baidu.com/usercenter/papercheck\n高效查重工具秘塔写作猫：写作改错和词语替换（需要注册）https://xiezuocat.com/#/火龙果写作：www.mypitaya.com\n免费论文下载网站：广西壮族自治区图书馆：www.gxlib.org.cn国家哲学社会科学文献中心：www.ncpssd.org全国图书馆参考联盟：www.ucdrs.superlib.netOALib：www.oalib.com\nhttps://ty2y.com/study/windows10bbqb.htmlLTSC激活方法，管理员CMDslmgr -ipk M7XTQ-FN8P6-TTKYV-9D4CC-J462Dslmgr -skms kms.03k.orgslmgr -atoslmgr -dlv\n第二种方法slmgr -skms kms.moeclub.orgslmgr -ato\n其它：M7XTQ-FN8P6-TTKYV-9D4CC-J462D\n英语学习导航 最专业的英语学习导航https://www.up-6.com/\nhttp://www.xihakan.com/嘻哈音乐网\n在线印章生成网站http://www.395.net.cn/\nEnpuz - 在线英语句子语法分析http://enpuz.com/\n矩阵计算器https://matrixcalc.org/zh\n苹果固件和beta描述文件下载https://www.applefirmwares.com/\n苹果beta描述文件下载https://betaprofiles.com/\nMikutap地址：https://aidn.jp/mikutap/推荐！一个非常亦可赛艇的小游戏。兼容电脑和手机。点击 Start，然后用鼠标/手指点击屏幕，或随意按键盘上的任意键。配上背景音乐非常 Happy，一定要开音乐！\n听蛙纯音乐网地址：https://www.itingwa.com最好听的轻音乐纯音乐分享、试听、欣赏、下载、推荐、排行。\n小霸王，其乐无穷地址：https://www.yikm.net在线小霸王游戏机，上千款小霸王、红白机、街机游戏，各种类型应有尽有，找回童年的乐趣儿。支持电脑和手机，游戏非常丰富​，还可以和朋友一起联机玩耍。​\n煎蛋网地址：http://jandan.net地球上没有新鲜事，既涨姿势又有趣，很多热门​游戏都有。​\n今日热榜地址：https://tophub.today全网热点消息汇总，一站全知晓。包含了微博、知乎、微信、百度、抖音、B 站等几十个平台！\n网易云游戏平台地址：https://cg.163.com网易推出的在线游戏平台，无需安装，在线打开即玩，很多热门​游戏都有。​\n地址：http://slither.io在线贪吃蛇游戏，非常消磨时间~\nMaze Generator地址：http://www.mazegenerator.net自动生成迷宫图片，难度、大小等可以自定义。可以将图片打印出来；或者保存图片到本地，然后用涂鸦工具在上面画。\nPlay Lines FRVR地址：https://lines.frvr.com将相同颜色的点连到一起，且画面中无空格，越往后遇难。“会说话的汤姆猫”里也有这个游戏。\n可以注册域名eu.org，永久免费不过期，只是申请周期有点长，要等\n系统重装维护相关Ps：不会操作的可去哔哩哔哩搜索教程，都有友情提醒：随身备一个U盘，方便随时维护，制作完成，不影响U盘存储其他数据\n\n\nU盘启动维护系统可以解决系统引导失败，系统修复，数据恢复，开机密码破解等IT天空 - 优启通https://www.itsk.com/thread-424686-1-1.html微PE工具箱https://www.wepe.com.cnWEPE工具箱VIP网络版https://pan.baidu.com/s/19EJLp9b33_eL1iZn2Dqyjg?pwd=hbsv\n\n\n\n操作系统镜像GhostNEXT, ITELLYOUhttps://next.itellyou.cn/MSDN - 山己几子木https://msdn.sjjzm.com/TechBenchhttps://tb.rg-adguard.net/public.php\n\n3 激活操作系统Qwins一键激活 ，运行前加入系统白名单。防误杀https://pan.baidu.com/s/1H3qAl-9OtXtHG9mdkk5p6A?pwd=h1qk 提取码：h1qkHEU_KMS_Activatorhttps://pan.baidu.com/s/1ENu-yrJ6QgZxjsG-u5peqw?pwd=626h 提取码：626hKMS 激活 Windows 系统https://kms.cx/https://other.ikxin.com/kmshttps://www.moerats.com/kms/https://kms.cangshui.net/\nabode全家桶转自微博@vposy百度  http://t.cn/A6XgTA7s 提取码: t9i6 \n默认密码为@vposy\n若链接失效，请登录微博关注@vposy后查看置顶。https://weibo.com/1112829033/LiaLGece8\nhttps://www.luckydesigner.space/privacy-search-how-to-do/\nhttps://www.ttsp.tv/\n扩展 音视频下载https://cococut.net/\n工作党如何做好日常备餐？这是我的经验和食谱分享 [by 鸿苓]https://sspai.com/post/74169\n英语数字听力练习https://english-number.com/number-test\nhttps://diygod.me/obsidian/\n🌐 Chrome谷歌浏览器历史版本下载\nChrome浏览器最新离线版下载https://www.chromedownloads.net/\nIndex of /chromedriver/https://registry.npmmirror.com/binary.html?path=chromedriver/\nChromium History Versions Download ↓https://mrseawave.github.io/chromium-history-page/\nChrome 离线包 - 历史版本（官方）链接来自 Chromium 官网， 含 Mac、Linux、Windows、Android、ChromiumOS 等https://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html\nGOOGLE CHROME 的旧版本https://google-chrome.cn.uptodown.com/windows/versions\nChromium Portable Fileshttps://sourceforge.net/projects/crportable/files/\nGoogle Chrome Older Versions Download (Windows, Linux &amp; Mac)https://www.slimjet.com/chrome/google-chrome-old-version.php\n🏞 预览图生成器▎适合为博客文章生成适配 Twitter, Telegram 等媒介的预览图\n\nhttps://pika.style/open-graph-generator\n\nhttps://cards.microlink.io/editor\n\nhttps://poet.so/\n\nhttps://influencermarketinghub.com/instagram-ads-mockup/\n\nhttps://influencermarketinghub.com/facebook-ads-mockup/\n\nhttps://coverview.vercel.app/editor\n渐变图\n\nhttp://color.oulu.me/\n\nhttps://webkul.github.io/coolhue/\n\nhttps://uigradients.com/#GradeGrey\n\nhttps://webgradients.com/\n\nhttps://gradient.shapefactory.co/\n\n\nhttp://www.banyun99.com/\n广告联盟推荐：popadshttps://www.ezloo.com/2022/03/popads.html\nMacOS 软件https://xclient.info/\n在线markdownhttps://www.zybuluo.com/mdeditor\n美国接码平台https://www.smscodes.io/\n硬件维修https://www.ifixit.com/\ngihtub star historyhttps://star-history.com/\nGitHub成就获取https://blog.zhheo.com/p/e57c4cc6.html\nGitHub Achievements 个人页已知成就统计https://www.imaegoo.com/2022/github-achievements/\nuBlacklisthttps://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe在谷歌的搜索结果中屏蔽特定的网站显示。\nnotion 扩展\n学生必备网站导航 教育邮箱购买https://www.stulink.cn/https://us.mailschool.me/https://edumark.net/https://forms.office.com/pages/responsepage.aspx?id=GWaKoxSgwkeTa-Xpkv2SwKDGSyQ_2mZEqow765B9rh5UQlZNRkQ3NExNVzI4NDZKNUtITDE3U01ZRC4u\nhttps://xmb.ink/\n大学生活质量指北意在收集全世界各高校招生时不会写明但实实在在影响大学生活质量的详尽信息https://cn.colleges.chat/https://github.com/CollegesChat/university-information\nhttps://www.mp3juices.cc/e401c\nhttps://www.hifini.com/&#x63;&#114;&#101;&#119;&#x65;&#115;&#64;&#x72;&#101;&#110;&#108;&#105;&#110;&#101;&#x72;&#x2e;&#x63;&#102;crewes\nhttps://eureka.mba/\nhttps://wallpaperscraft.com/\n每日一句中文https://hitokoto.cn/http://wufazhuce.com/https://github.com/azwcl/sayinghttps://www.jinrishici.com/https://www.789dl.cn/英文https://www.defprogramming.com/http://quotes.stormconsultancy.co.uk/https://www.brainyquote.com/topics/programming\n接口API服务商https://wx.jdcloud.com/apihttps://www.apispace.com/https://apis.baidu.com/https://open.weibo.com/wiki/APIhttp://ai.baidu.com/https://www.juhe.cn/https://www.faceplusplus.com.cn/https://www.rongcloud.cn/https://www.xfyun.cn/https://lbs.amap.com/\n有没有比 Grammarly 更先进的英语作文修改润色软件？ - 知乎https://www.zhihu.com/question/310372138\n你写论文时发现了哪些非常神的网站？ - 知乎https://www.zhihu.com/question/35931336\n如何在论文中画出漂亮的插图？ - CoderMan的回答 - 知乎https://www.zhihu.com/question/21664179/answer/2305672345数学公式怎么用英语念出来？ - 知乎https://www.zhihu.com/question/52818597\n各位都是在哪里下载无损音乐的呢？https://www.zhihu.com/question/269366084\n你们是从哪里找到电子版的教材，资料的？https://www.zhihu.com/question/357864509\n最萌云计算服务商https://www.ure.best/\n美国邮编https://usa.youbianku.com/zh-hans\n🈴 热榜话题排行聚合平台微信、今日头条、百度、体育、IT、游戏、知乎、微博、贴吧、豆瓣、天涯、虎扑、Github、抖音…追踪全网热点、简单高效阅读https://tophub.today/http://guozhivip.com/rank/https://readhub.cn/topicshttps://the.top/https://mo.fish/https://tophub.fun/https://rebang.today/https://dig.chouti.com/https://webfollow.cc/#/https://www.anyknew.com/#/https://momoyu.cc/https://www.suredian.com/https://news.bicido.com/#/https://duomoyu.com/https://yinrss.com/https://make.mk/http://www.sankedan.com/\nhttps://www.yunpanziyuan.com/https://docs.qq.com/doc/DTVhJR1RibVNEUmJB\nhttp://scz.617.cn:8/飞花堂\nhttps://run.ialtone.xyz/message/index.php在线短信轰炸\nhttps://sspai.com/post/72622?utm_source=twitter&amp;utm_medium=social二〇二二年，来试试双拼输入法吧\nhttps://www.mattkaydiary.com/\nhttps://macpai.cn/\n一亩三分地\nhttp://textconverter.net/\nipa在线签名：https://sign.dumpapp.com/ ipa证书在线检测：https://check.dumpapp.com/ DumpApp主页：https://www.dumpapp.com/\nhttps://www.owenyoung.com/\n把中国当成地狱润出去的人，大概率会很开心。把外国当成天堂润出去的人，大概率会很后悔。https://twitter.com/NoCoLoRMoNkEy/status/1585097071048404992https://twitter.com/DrMaCaCa/status/1090413615637684225\nhttps://asciinema.org/\nhttps://graphemica.com/\nhttps://ednovas.xyz/\n简历https://jianlixiazai.cn/\n苹果快捷指令https://www.rcuts.com/\n吃瓜https://998.su/\nhttps://bizhi.cheetahfun.com/\nhttps://www.artstation.com/?sort_by=community\nhttps://yunpan1.24kdh.cn/公众号 yunpan1疯狂动物城 https://www.aliyundrive.com/s/ZwavX1SiBpe\nGoogle 代码规范 C++ 风格指南https://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/\nhttps://www.ycombinator.com/\nhttps://www.1point3acres.com/bbs/\nhttps://gonglue.us/youtube-downloaderYouTube 视频/音频下载推荐-美国攻略（YouTubepi，youtubezz）\nhttps://xd.x6d.com/小刀资源网\nhttp://www.qingshanzhang.com/about/\nC++ Cheat Sheet 图表\n营销技巧，标题中用 7 等奇数更容易获得关注\nhttps://catcoding.me/p/publish-to-wechat/如何无痛苦更新公众号\nhttp://libgen.rs/书记查询\n浙江图书馆https://www.zjlib.cn/\nhttps://eureka.mba/posts/3f43dc72.html\nhttps://caj2pdf.cn\n一个书库http://louischeung.top:225http://192.168.124.22:2258081\nhttps://forum.freemdict.com/\nicon 付费生成：twitter #midjourney\n图片清理工具ImgCleanerhttps://imgcleaner.com\nquickfox 回国APP\n部落冲突指导私服https://www.cocservice.top/https://clashofmagic.io/\n英语外刊杂志https://magazinelib.com/ 免费，部分https://freemagazines.top/ 免费，经济学人 pdf+mp3https://www.waikanmao.com/ 免费下载最新两期经济学人，pdf+epub+mobi+docx+mp3https://www.ygzzg.com/ 积分下载，经济学人 pdf+epub+mobi+mp3https://rss2ebook.com/rss2ebook/subscribe/index 纯文本订阅\n新冠https://www.mojidoc.com/03dbc-fgimwhphhvabnbzbxigh6cdnji-00b\n名称：富爸爸穷爸爸系列（共32册）-罗伯特.T.清崎\n描述：《富爸爸穷爸爸》——富人和穷人的区别在于财商教育《富爸爸为什么A等生为C等生工作》——富爸爸为家长教育子女而量身打造的财商教育指《富爸爸点石成金》——BI三角形之沟通与领导力《富爸爸女人一定要有钱》——财富能让女人自立《富爸爸提高你的财商》——训练与提高财商的技巧《富爸爸杠杆致富》——学习正确使用财富杠杆《富爸爸不公平的优势》——良好的财商教育是富人相对于普通人不公平的优势《富爸爸成功创业的10堂必修课》——决定创业之前，要先看这本书….\n链接：https://www.aliyundrive.com/s/WS9UuFoQrdn\n果书网址：https://applemart.me 果书频道：https://t.me/icloudxz\n图片背景更换消除https://www.remove.bg/zh\nhttp://kgaalsjzcz3o2ydu4tvdwcwxyabx26sx2tbdbtmqmc6tamyptpdhk5id.oniont3s7/t3s7\nhttps://caj2pdf.cn/\n互联网公司高频leetcode题网站 炼码：https://www.lintcode.com/\n上海交通大学生存手册https://survivesjtu.gitbook.io/survivesjtumanual/\n摸鱼网https://fishpi.cn/activities\n元气壁纸https://bizhi.cheetahfun.com/\n【OCR工具集1.0】搜狗网络OCR+本地离线OCR （免key登录+还原天若OCR操作）网站：https://www.52pojie.cn/thread-1730984-1-1.html\n微软语音合成工具，使用 Electron + Vue + ElementPlus + Vite 构建https://github.com/LokerL/tts-vue/\nFutureTools —— AI 工具收集收集了 162 个各类 AI 工具，可根据聊天、金融、娱乐、视频、代码等多个筛选找到自己心仪的 AI 工具https://www.futuretools.io/\n一键取消关注公众号https://wwpj.lanzoul.com/iBwu00jc3a9e\nhttps://www.tuyitu.com/photoshop/\nhttps://strrl.dev/\nManjusakaStay simple &amp;&amp; Stay Naivehttps://www.manjusaka.blog/\n投资兔子洞https://rabbit-hole.notion.site/\n产品沉思录 ProductThinkinghttps://pmthinking.com/\n񆡚-Library电子书下载网站\n\nhttps://zlib.cydiar.com/\nhttps://zh.annas-archive.org集合了 Z-Library、Library Genesis 和 Sci-Hub 三个巨型图书馆的内容，资源数量更胜 Z-Library\n\nIP定位https://www.ipplus360.com/\n艾园https://aiyuan.wordpress.com/\n万能验证码自动输入（升级版）https://greasyfork.org/zh-CN/scripts/418942-万能验证码自动输入-升级版\n基于Python半自动化给PDF加书签https://github.com/Davy-Zhou/pdf_add_bookmark_semi\nWereadscan一个用于的将微信读书上的图书扫描转换本地PDF的爬虫库.https://algebra-fun.github.io/WeReadScan/\n如何把你本机的Socks的代理设置成SSH的代理https://twitter.com/haoel/status/1605424396176306176?s=20&amp;t=Fwm6MVwCkCf2K15L4Z-lRA\n核电站https://hwv430.blogspot.com/https://wc41.blogspot.com/\n动漫岛dm55.cc 和 dmd8.com\n樱花动漫http://www.yinghuacd.com/\n微X模块https://github.com/Xposed-Modules-Repo/com.fkzhang.wechatxposed\n个人收款码收款 - 三合一免费在线合成上传收款码，微信支付宝qq，一键生成合体的收款码～\n\nhttps://www.rocschool.com/tool/qr/\nhttps://qr.no0a.cn/\n\n黑客会议收集https://www.hackinn.com/\n分享一个 #润学 小技巧, 如何证明自己的工作经验, 除了完税证明, 社保证明, 还有一个神奇的东西叫《工作介绍信》, 移民局也认, 在海外公司做背景调查公司也认. 我做了个模版, 分享给需要的朋友. 出国前找所有的前公司, 都开一份.  模版地址在这里: https://chenyilong.notion.site/0b0c9e391447448a9d178aa6b335b428\n圆角图片生成器https://www.dute.org/image-round\n九宫切图工具https://www.dute.org/image-clip\nhotpot 图标https://hotpot.ai/icon-resizer\n🏳‍icon图标网站https://fonts.google.com/iconshttps://tablericons.comhttps://simpleicons.orghttps://boxicons.comhttps://streamlinehq.com/iconshttps://lucide.devhttps://feathericons.comhttps://3dicons.cohttps://iconfinder.comhttps://flaticon.comhttps://fontawesome.comhttps://tabler-icons.iohttps://iconmonstr.comhttps://www.iconbolt.com/\nhttps://tmioe.com/\nGVhttps://www.henduohao.com/product/1071.html\n【供参考】计算机编程远程工作统计涵盖：薪酬、经验、公司、地点等统计信息https://remoteok.com/remote-work-statistics\nCS自学指南https://csdiy.wiki/\n中英混排文档在线排版工具https://cyc2018.github.io/Text-Typesetting/\nios 多功能站https://zwjpai.com/\nTDEE 熱量計算機https://serialdater.net/tdee-calculator/\n公交线路辐射图https://bus.daibor.com/#/\n地图搜租房https://house2048.cn/app/house-map/#/\nIP质量检查地址：https://www.ip123.in/\nhttps://ohevan.com/\nhttps://blog.x-lf.com/\nMac软件之家https://www.macapp.so/\nMac毒https://www.macdo.cn/\nhttps://wallroom.io/\n美国电话号码检测https://www.phonevalidator.com/\n接码平台https://sms-activate.org/\nChatGPT 共享账号https://terobox.com/\nhttps://wallpapersden.com/\nhttps://www.appinn.com/\nhttp://www.java1234.com/\nhttps://www.zaixianai.cn/voiceComposehttp://www.peiyinwa.com/\nhttps://onlinealarmkur.com/timer/zh-cn/#2700\nhttps://www.luckydesigner.space/\nhttps://www.16xx8.com/\nhttps://iyideng.vip/note/telegram-group-channel-and-robot-summary.html\nhttps://www.egouz.com/\nhttps://www.topys.cn/\n起名大师https://namelix.com\nhttps://www.topys.cn/article/33523\n闭着眼都能P好图https://playgroundai.com\n局部清除https://magicstudio.com/zh/magiceraser\n帮我做个图标https://magician.design\n缺演员？AI助你一臂之力https://hourone.ai/generative-ai-video-des/\n俄罗斯接码平台https://sms-activate.org/\n免费接码平台https://anonymsms.com/https://smsnator.online/https://receive-sms.cc/\nhttps://www.xnbeast.com/create-openai-chatgpt-account/\nhttps://www.macsofter.com/\nhttps://www.smzdm.com/\nhttps://poe.com/\n微信模拟器/点赞模拟器【手机打开】https://itakeo.com/wx/#homePage【电脑打开】https://akarin.dev/WechatMomentScreenshot/\nhttps://www.bmpi.dev/dev/chatgpt-development-notes/my-gpt-reader/#%E5%9F%BA%E4%BA%8E-chatgpt-%E7%9A%84%E5%BA%94%E7%94%A8%E7%B1%BB%E5%9E%8B\nhttps://openprompt.co/\nhttps://learnprompting.org/\nIOS限免软件https://mergeek.com/free/appshttps://app.so/xianmian/https://appsliced.co/https://toucharcade.com/https://gofans.cn/https://free.apprcn.com/\nhttps://n-tool.com/t/favicon/\n快捷指令https://www.qijishow.com/Brand/Brand69/index.html\nhttps://www.koudaizy.com/\nPhotoshop 最新快捷键大全&amp;速查表 共36个大类https://www.xiaoheiwoo.com/photoshop-keyboard-shortcuts/\nSwift 学习指南：2022年 10个最佳 Swift &amp; iOS 开发课程https://www.xiaoheiwoo.com/best-swift-courses/\nhttps://chatbot.theb.aihttps://freegpt.onehttps://poe.com/chatgpt\nhttps://chat.openai.com/chathttps://platform.openai.com/playground/p/default-chat?mode=chat&amp;model=gpt-3.5-turbo\n6.PaperYY（免费！（通过积分）)https://www.paperyy.com\n8.PaperBye (可免费查询！)https://www.paperbye.com\n5.百度学术论文查重（可付费可免费！整合了其他检测网站。）http://xueshu.baidu.com/usercenter/papercheck/?tag=check&amp;upload=1&amp;site=newala\n28款毕业论文查重降重网站软件，重复率45%降到5%并不难！https://docs.qq.com/doc/DRktGbG9LWGRUS2lv\nhttps://carbon.now.sh/代码图分享生成\n苹果快捷指令网站https://www.rcuts.com/https://routinehub.co/http://jiejinghe.com/\n文字版密室逃脱形式新颖的文字解谜类游戏，在线就能玩由于网站访问人数多，导致网站加载速度慢，耐心等几秒https://nodes-escape.hzfe.org/\nhttps://nnyy.in/努努影院\n截图美化https://shots.so/\nhttps://markdown.lovejade.cn/\nhttps://www.diyiziti.com/\nhttps://www.neat-reader.cn/\nhttps://tobebetterjavaer.com/\nhttps://www.jianshen8.com/\nhttp://tool.mkblog.cn/qrbtf/\nhttps://www.logosc.cn/filter/\nhttps://shop.pockyt.io/\nhttps://www.scratch5.com/\nhttps://shop.fange.app/\nhttps://xiaohuojian.ml/\nhttps://www.ip123.in/#fraud_check\nhttps://dazi.kukuw.com\n收集&amp;推荐优秀的 Apps/硬件/技巧/周边等https://github.com/hzlzh/Best-App\nhttps://www.qinghuanbz.com清欢壁纸\nChrome 主题Kawayi Chrome Theme - ArthurModern House\n大麦抢票辅助https://github.com/RookieTree/DaMaiHelper\n设计师口袋心理学（Mental Notes）将 53 个来自心理学的知识，汇集成一个简洁的参考和头脑风暴工具。每张卡片都描述了一种对人类行为的洞察力，并提出了将这种洞察力应用于网站、软件应用设计的方法https://iason.notion.site/6719c7650fd1406c92287f556520fbc3?v=a38e4e6416c24047afba6685f5269566\n认知偏差知识手册https://s75w5y7vut.feishu.cn/docs/doccn3BatnScBJe7wD7K3S5poFf#\nPC-红色警戒2重聚2023版（win10/11完美运行）https://pan.baidu.com/s/1zJ8vgndwfJToDUrjALdYgA 提取码：hujz \n知名英文网站的RSS 聚合平台https://buzzing.cc科技相关的报道https://wired.com独立开发者社群https://indiehackers.com\n1,生成GitHub项目封面https://socialify.git.ci/2,为你的博客生成卡片封面风格https://github.com/Ladicle/tcardgen3,自动生成YT，博客等的缩略图https://thumbnail.ai/\nWindows10蓝牙功能最新玩法：手机离开即可自动锁屏！https://zhuanlan.zhihu.com/p/262878339\n浏览器插件的每日最热榜单和历史最多下载量榜单https://extpose.com/top-grossing\n手心输入法http://3g.lvshiminglu.com/blog/1611.html\n美国地址生成器https://www.meiguodizhi.com/\nSora\n面试网站https://www.linkedin.com/feed/https://cn.indeed.com/https://www.zhipin.com/guangzhou/https://www.nowcoder.com/jobs/recommend/campushttps://www.wondercv.com\nC++ 相关陈同学整理的10个可以写到简历上C++项目万字长文 | 这可能是东半球最保姆级的后台服务器开发学习路线这才是你需要的 C 语言、C++ 学习路线！\n系统镜像网易开源镜像站npmmirror 镜像站MSDN\n粤语https://corpus.eduhk.hk/cantonese/https://www.bilibili.com/video/BV12b411L7NS\n舌头https://theporndude.com/zhhttps://spankbang.com/https://91porn.plus/video/VT_1XDCdomEyhttps://91porn.plus/video/VT_KPPzLFNPqhttps://91porny.com/video/view/8ce31a015fa7fd0d44eehttps://91porny.com/video/view/f20885824442636826bd\n小说https://yazhouse8.com/article/75878.html\n3D mockup images and movieshttps://rotato.app/\nhttps://www.velasx.com/\nhttps://onojyun.com/写作，一场自我悖驳的旅程。果实也要在腐烂之后才能生根发芽。\n网站历史查询https://seo.juziseo.cn/snapshot/\n独立开发者论坛https://w2solo.com/\nhttps://linklearner.com/study\n在线匿名聊天https://hack.chat/\n在线端口扫描器https://duankou.wlphp.com/\n牛津高阶词典第十版链接：https://pan.baidu.com/s/19A2vRMJRu5NneaPkTNhwqA提取码：NJSBhttps://www.123pan.com/s/tJA9-gyWWd提取码:NJSB\n单手转棍https://www.youtube.com/watch?v=sGGBmjj2WfU&amp;ab_channel=%E5%B0%8F%E5%BF%83%E9%A3%9E%E7%BF%94\nKeymouseGo 鼠标键盘录制https://github.com/taojy123/KeymouseGo\nhttps://neal.fun/ambient-chaos/背景音\nhttps://kdocs.cn/l/cp8FD1EDjb0H?f=201玉米蛇饲养指南\nios 苹果账号，ipahttps://www.52appleid.com/\nipa 商店https://ipa.store/\n苹果软件库https://cuiun.com/\n苹果软件站https://www.iios.funhttps://www.iios.club\n雨晨ioshttps://yuchen.tonghuaios.com/https://yc.yuchengyouxi.com/\nhttps://cnys.tv/\nios 限免https://www.mergeek.com/free/appshttps://gofans.cn/https://free.warmday.wang/dailyhttps://mrmad.com.tw/category/3c-information/free-apphttps://app.so/xianmian/https://www.newmobilelife.com/category/apps-%E6%83%85%E5%A0%B1/%E9%99%90%E6%99%82%E5%85%8D%E8%B2%BB%E6%83%85%E5%A0%B1/https://free.apprcn.com/category/ios/\nhttps://hellogithub.com/\n虚拟机直通/穿透\n\n\n平台虚拟化软件比较\nVMware三个版本workstation、server、esxi的区别\nHypervisor 浅谈\n不看后悔一辈子的VMware教程\n让 KVM 上的 Windows 虚拟机插上 GVT-g 的翅膀\n\n\n\nVMware vs KVM\n虚拟化 - xen、kvm、vmware、hyper-v等虚拟化技术的比较\n\n\n\n\n\n","categories":["Self-improvement"]},{"title":"《解读基金：我的投资观与实践（修订版）》读书笔记","url":"/2020/12/27/fund/","content":"\n相关网站：晨星网站、中国基金网、中国基金网论坛\n\n相关名词或者概念：开放式基金、认购费/申购费（收费模式：前端收费/后端收费）、赎回费、管理费、托管费、净值、累计净值\n\n拿多少钱来投资：三分之一法、掐指头算法；收益计算：72法则、115法则\n\n大盘基金或者小盘基金（这个概念我还不是很明确）、价值型基金或者成长型基金\n\n新基金\n\n高净值其实对投资人而言没有影响\n\n基金拆分和复制\n\n指数基金\n\nETF（Exchange Traded Fund，交易型开放式指数基金），这是一种在二级市场交易的基金品种，是按照相应指数的“一篮子”指数股票集合。\n\n通过QDII基金，咱们在大陆也可以投资海外市场。简单说就是咱们把人民币交给基金公司，基金公司把它们换成外币去投资海外市场，收益再折合成人民币还给咱们。\n\n一般基金是投资股票或者债券的，而FOF则只投资基金，实际上是一个基金投资组合，即基金中的基金。\n\n生命周期基金也是舶来品，英文是“Life Cycle”。这实际上是为长期投资做准备的一种基金。首先，从基金的名称上就可以看到两个数字——2016和2020，这实际讲的是年份，也叫目标时间。也就是说，这两只基金是为2016年或者2020年使用的资金而做准备的投资基金。如咱们2016年要退休，要开始养老生活，那就可以投资2016生命周期基金。\n\n分散投资核心要考虑3个因素：相关性、收益和波动。\n\n蓝筹基金、偏蓝筹基金、远蓝筹基金\n\n中证100指数：这是在沪深300指数的成份股中选择市值最大的100只股票组成的指数。这也是沪深两市A股市场市值最大的100只股票。这100只股票大概覆盖了A股流动市值的一半，也就是前50%部分。这个指数实际上就是A股市场的大盘股指数。\n\n可转债的全称是可转换公司债券，是一种公司债券（注意它可不是国债）。它赋予持有人在发债后一定时间内，可依据本身的自由意志，选择是否依约定的条件将持有的债券转换为发行公司的股票或者另外一家公司股票的权利。换言之，可转换公司债券持有人可以选择持有其至债券到期，要求公司还本付息；也可选择在约定的时间内转换成股票，享受股利分配或资本增值。\n\n上面没有提取出来的在下面的摘录中，有些值得再多看看。\n\n\n摘录：咱们该投资吗30岁的你拿出3.5万元，用这些钱去投资，每年获得12%的收益，到60岁的时候你就有了100万元。方法四：30岁的你一次拿不出3万多元，怎么办？如果你每个月能拿出300元也行。从30岁一直持续到60岁，每个月拿出300元放到一起（合计投入10.8w），然后这些钱同样能获得12%的投资年收益率，到60岁的时候，你就有了97万元。\n投机是瞄准一个“机会”，希望大赚一笔，一劳永逸，而投资是要你扎扎实实、一点一滴地走向你的最终梦想。投机实际上更多的是收获风险和灾难，而投资则是一种理性的产物。\n什么是开放式基金什么是基金？简单地说，基金就是把大家的钱收集到一起，由专门的人（基金经理）帮我们去投资证券市场。他提取他的佣金，我们拿我们的收益，他们帮我们理财投资。\n基金管理人的目标就是使我们这些基金投资者的利益最大化。基金公司是独立的商业金融机构，有非常严格的审批程序，并接受中国证监会的严格监督。\n开放式基金的运行模式是采用一种严格的制衡关系。也就是说，基金资产的管理与保管是分开的，基金公司管理我们的钱的投资运作，而钱一般是托管在银行的。这样，无论是基金公司还是银行倒闭，都不能动用我们的钱，可以说，我们的钱是安全的。\n基金经理是由基金公司聘任的，他的责任就是经营好他管理的基金。他必须是一个专业投资人士，否则咱们怎么会把钱拿给他管理呢。\n在购买基金的时候，有笔申购／认购费用。对于新发基金叫作认购，成立后的基金叫申购，一般费率在1.0%～1.5%（有优惠促销活动的基金公司会发公告通知）；对于网上直销的，费率一般在0.6%～0.9%。一次性收费还有赎回费，一般是0.5%左右，对于不同基金公司按规定年限长期持有者可以免除。就是说，你投资1万元，要扣除150元左右的购买费用，要说明的是这是一次性费用。这种费用的收取也有两种方式，一种是在你购买基金的时候缴纳，叫前端收费；也可以选择在卖（赎回）基金的时候缴纳，叫后端收费。前、后端费率是不一样的，各种基金也是不一样的。另外在赎回的时候，还要根据你持有基金的年限缴纳赎回费，如0.5%，这也是一次性费用。还有一种佣金叫管理费和托管费，一般是1.5%和0.25%。这笔钱不是一次性的，只要你投资，那基金公司和托管银行就要收取这个费用，而且是精确到以天为单位的。实际上，这笔钱才是基金公司真正的生财之道。\n开放式基金采用一个叫作净值的概念。净值其实就是开放式基金的销售价格，是这样计算的：在一个基金刚刚开始建立的时候，净值都是1元。\n后来申购一个成立以后的新基金的人必须以当天的净值来申购。也就是说，如果净值变成了1.5元，你1万元投资就只能购买6666.67份基金，而不是1万份。卖出的时候，同样也是以当天的净值来销售的。\n之所以叫开放式基金，意思是一个基金的总份额是不定的。反正大家都按照当天的净值来计算，买的人多了，基金的规模就大；买的人少了，基金的规模就小。\n开放式基金的购买方式是一种“未知价格”的购买。每种基金的净值都是在当天股票交易市场收盘以后再根据其所持有的证券的市值来计算的，一天就一个值，这个值在北京时间下午3点以后才知道。但你购买基金的时候，如果在下午3点以前提交申请购买单，那你最终购买基金的净值就按下午3点以后计算出来的当天净值来算。如果是下午3点以后提交的购买申请，那就按照第二天的净值来计算。所以，无论你买还是卖，你当时并不知道基金的净值是多少，也就是“未知价格”。\n开放式基金会分红的，会不定期地分配给你投资收益。你可以选择把分红留给自己，即所谓的现金分红，也可以选择红利再投资。分红的时候，由于基金的总资产降低了，净值也就下降了。所以，在看一个基金的净值时会有两个，一个叫“净值”，一个叫“累计净值”。“累计净值”不考虑分红给基金净值带来的降低因素，反映了基金成立以来总体的发展情况，而“净值”则是你交易时候的真正价格。\n有一件非常有吸引力的事情，目前国家对个人的基金收益是不收税的。所以，如果你要和银行收益进行比较，一定要记住银行利息还要扣除利息税，而基金收益是纯收益。\n开放式基金，一般分为股票基金、债券基金、货币基金，以及介于股票和债券基金中间的配置型基金。\n态度决定一切投资不是比智商，而是比谁更理性，而理性的前提就是理解，要理解就得花点时间吧。你无须成为一个投资大师，无须像考大学一样每天学习到深夜。但你得花点时间，至少要花买件衣服的时间吧。\n本书中，我归纳了一个买基“三步曲”。通过这三步，我觉得你就有了一个自己的投资观，就能迈上投资之路。这三步是：确定投资目标、选择优秀基金和掌握投资方法。\n基金的风险是什么开放式基金，尤其是股票型基金，本质上还是投资股票市场。大部分人说有风险，但也有人说没有风险。我认为正确的答案是：短期有风险，而且风险很大；长期则无风险，或者说风险很小。\n股票型基金绝对不仅仅是投资某一只股票，而是同时投资在几十只甚至上百只股票上面。这叫分散投资，也称为投资组合。投资组合理论是20世纪50年代由美国一位20多岁的青年——哈里·马科维茨提出的，正是因为这个理论，他在20世纪90年代获得了诺贝尔经济学奖。可见，这个理论对投资领域的贡献有多大。\n股票之间却不是独立涨跌的，如国家出台一个大政策，所有的股票可能都一起涨或者一起跌。那你再怎么分散投资，也避免不了这种波动，这就是系统风险；开放式基金也无法避免这种波动，而且这种波动会叠加到长期趋势上面。对这种波动只有用一个办法来平衡——时间。在一个长时间的期限内，这种波动就变得很小，完全被长期的大趋势压制下去了，只是一些小毛刺而已。时间越长，这种“毛刺”的影响就越弱、越不起眼。\n这就是结论，按美国的股市历史，如果你仅仅进行1年的投资，亏的概率是30%；如果做5年的投资，亏的概率是10%；如果做10年的投资，亏的概率是3%；做20年投资，就不会有亏损。\n股票收益最大，风险也最大，要想降低风险，只有增加投资年限。或者，你也可以投资债券。如果投资债券，按美国的历史，投资期达到5年的时候，亏损的概率就不到5%了。而且，也要看到在前面说的77年中，美国大公司债券的年平均收益只有6.2%，也就是说经过77年，1美元仅仅变成了60美元。相比股票的收益1775美元，简直是天壤之别，但风险却小得多，投资5年亏本的概率和投资股票接近10年的概率相当。货币基金不会亏本，没有风险，但2%的收益在77年后，1美元仅仅是4.5美元，甚至还无法抵消通货膨胀对资产的侵蚀。\n要想降低风险只有增加投资期限，或者买债券基金、货币基金，但这样做收益也低。所以，投资股票基金最好是用养老和子女上大学的钱，咱们有接近或者超过20年的投资周期，就算亏本也不会有多大，这其实也是基金投资的根本目的。\n拿多少钱来投资一种是“三分之一法”。很简单，把三分之一的钱用来买房地产，三分之一的钱用来投资证券市场，三分之一的钱用作储蓄或者买国债。\n另一种是“指头算法”。这种算法就是估算你应该把多少资产用于投资，把多少资产用于保守地储蓄。这个算法也很简单，被称为“指头算法”，就是说你掰掰指头就能知道答案。这是根据你的年龄来划分的，如果你是30岁，你应该至少在储蓄上投入30%的资产，而各种投资不宜超过70%；如果你是40岁，那储蓄40%，投资60%；如果你是60岁，储蓄60%，投资40%。用公式表示就是可用于各类投资的资产比例=100-你目前的年龄\n无论你是用“三分之一法”还是“指头算法”，我都要强调一条：你不能把所有的钱都用来投资。你必须有充足的“应急资金”去应付万一出现的生病、失业等。这样，一旦有急事你也不用临时抛售基金去解燃眉之急。还有一点是丝毫不能含糊的：绝对不能借钱去投资基金。\n让时间成为朋友一个25岁才开始工作的年轻人，如果他试图在60岁退休的时候有100万元的资产，他只需用一个非常简单的办法：如果按照平均年收益12%来计算，他只要每月投资175元，那在60岁的时候，他的投资账户上就有101万元，而实际投入资本只是7.35万元。但对一个40岁的人来讲，要每月投资1000元，在同样的收益情况下，才能在60岁的时候有97万元，而他的实际投资成本却是24万元。为了达到同样的目标，多拿出来了14万元，多付出了两倍的成本，而这一切，仅仅是因为投资晚了15年。如果进行一次性投资，差距会更大。25岁的时候，一次性投资2万元，按12%的复利增长，60岁的时候，会有105万元；而如果在40岁的时候才开始投2万元，60岁的时候，只有19万元。差距达到4倍多。\n投资开始得越早，最后的收益就越多。或者说投资开始得越早，咱们为了达到同样的收益，付出的成本就越小。而且，两种情况的差距是如此之大，简直是不算不知道，一算吓一跳。\n在长期收益计算中，有一个简便的“72法则”。如年收益是8%，那么72/8=9，就是说9年，你的资本就可以翻一倍；如果年收益是12%，那么72/12=6，就是说6年可以翻一倍。用72除以收益率，就是资本需要翻番的大约年数。这样，在30年的时间内，如果是12%的收益，就可以翻5番，也就是25等于32倍（2的5次方）；如果是年收益8%，30年内可以翻3番多点，还不到10倍。\n所以，如果是长时间投资，一定要追求最高的收益；而随着时间的推移，高收益带来的高风险就会被平滑掉。也就是说，在风险和收益的角逐中，时间会帮我们很大的忙。美国77年的股市统计数据表明，大公司的股票增长了1770多倍，而波动幅度更大的小公司的股票却涨了5000多倍。\n还有一个“115法则”。“72法则”是计算翻番的时间，而“115法则”是计算1000元变成3000元所耗费的时间，也就是变成3倍所耗费的时间。计算方法还是一样，115/x就是本金变成3倍所耗费的年数。如收益是10%，那1000元变成3000元所耗费的时间就是115/10=11.5年。\n结论：选择基金的关键如果你计划在3～5年后买房子，债券基金可能就是你的投资重点，至少债券和股票基金各占一半。\n如果是再短的投资期，恐怕就要选择低风险的债券基金，甚至是货币基金。这样，你的风险很低甚至没有，也就基本能保证在投资期结束的时候你不会亏本。\n还要记住一件非常重要的事情：如果你有一个长期的投资计划，却选择一个风险小、收益小的投资方式，这也是非常不对的。就像咱们一辈子把钱存在银行里面而不投资，那肯定是很愚蠢的。但你的投资期会有多长呢？你会说我还有20年才退休，或者说我的孩子还有10年上大学，或者说我没有5年内使用这些钱的计划，这其实都低估了你的投资期。你20年后退休，并不是你会一次性把所有的投资都赎回，甚至你也有可能退休后几年都不赎回，或者你会把投资作为一种遗产留给下一辈；上大学的学费也是一年一年地缴纳；而你5年以后的经济情况很可能会比现在好，投资很可能继续……所以，如果你只是按照你看得见的、确认的时期去计划你的投资，也许你会损失很多机会。\n激进的基金在长时间内才会表现出优势，而不是在短期内，除非你刚好赶上一个上涨波段正在启动。这也就是所谓风险溢价，有风险才有溢价。\n第三章 “三步曲”之二：基金品种的选择\n好在有人专门在做这些基金评估／评级的事情，而且不止一家，如晨星公司、理柏公司、中信基金、银河证券等。在所有这些第三方评估／评级公司中，我最喜欢的是晨星。\n最好的基金评价网站——晨星晨星网站是指晨星资讯（深圳）有限公司的官方网站，它成立于2003年2月20日，是美国晨星公司（Morningstar，Inc.）在中国设立的子公司，网站地址为：http://cn.morningstar.com。\n中国晨星网站主要面向散户，“专注于帮助个人投资者做出正确的投资决策，通过客观全面的分析和比较，帮助人们确定完整的、合乎个人需求与特点的投资方案”。\n“晨星坚持对证券和资产的基本面进行分析，并不预测股票价格在短期内的波动和走势，而是通过计算公司真正的内在价值，判定其市场价格是否背离了公司本身的价值；晨星自身并不进行基金和股票投资，这是凸显其评级和分析的独立性和客观性的首要保证。”\n我特别钟情于它的3个功能：①晨星评级；②基金龙虎榜；③基金投资风格箱。\n中国晨星每个月的月初都发布一个评级报告，对所有成立时间1年以上的基金分类进行评级，分为五星、四星、三星、两星和一星。五星最高，一星最低。\n从2006年10月起，晨星将开放式基金一共分成7类：股票型基金、积极配置型基金、保守配置型基金、普通债券型基金、短债基金、保本基金和货币基金。而且，对前4项进行了评级，它们是股票型基金、积极配置型基金、保守配置型基金、普通债券型基金。在投资总额中，股票占70%以上的基金称为股票基金，债券在70%以上的称为债券基金，而两者之间的基金称为配置型基金。这种分类方法和咱们国家略有不同。\n晨星有一套复杂的算法把风险折合成负收益，然后从净收益中扣除，也就是进行风险调整。然后，按照风险调整后的收益对同类的基金进行排序，收益最高的排在前列。排在前10%的基金被授予五星基金，其后22.5%的基金被授予四星基金，再后面35%的基金被授予三星，再再后面的22.5%是两星基金，最后的10%是一星基金。例如，2006年11月，按照晨星分类，有91只基金被列入股票基金，而其中的20只成立时间还不到1年，不进行一年期的评级。在参与评级的71只基金中，前7只基金被授予五星，其后的16只基金被评为四星，中间的25只基金被评为三星，而最后的7只基金被评为一星。\n首先要明确的是大盘基金、小盘基金不是指基金本身的规模，而是指基金投资的方向。如果基金投资大盘股那就是大盘基金；如果投资小盘股，那就是小盘基金——这和基金规模没有关系。\n那什么是大盘股？什么是小盘股？不同机构的划分标准是不一样的。先看晨星标准。股票规模分类：对于中国A股上市公司，晨星按照总市值的规模将其股票划分为大盘、中盘和小盘3类。具体划分标准如下：将股票按照其总市值进行降序排列，计算各股票对应的累计市值占全部股票累计总市值的百分比Cum-Ratio，且0&lt;Cum-Ratio≤100%。大盘股：累计市值百分比小于或等于70%的股票，即满足Cum-Ratio≤70%。中盘股：累计市值百分比在70%～90%的股票，即满足70%&lt;Cum-Ratio≤90%。小盘股：累计市值百分比大于90%的股票，即满足Cum-Ratio&gt;90%。\n价值型基金或者成长型基金都是指基金投资的股票的类型，就是投资价值股的基金叫价值型基金，投资成长股的基金叫成长型基金。那什么是价值股？什么是成长股呢？咱们先不说股票投资，先说投资二手房。如果投资二手房是为了转手再卖获得利润的话，一般有两种房子会考虑。第一种是房子一般、地段也一般、装修还是一般，但和同类的房子相比，它价格低！可能是原来的房主急需现金，结果把房子打折出售。原来40万元的房子，现在只卖20万元。这可是个便宜货，当然有投资价值。第二种是价格不打折，但是房子新、地段好、装修豪华，也就是说具有巨大的升值潜力。虽然这类房子开价就是80万元，但还会涨，那这种房子也有投资价值。如果把上面的房子改成股票，第一种就叫价值股，第二种就叫成长股。投资第一种股票的就叫价值投资，投资第二种股票的就叫成长投资。\n一般来讲，价值投资的风险比成长投资的风险低一些。价值投资是投资在打折的产品上，成长投资是投资在未来的收益上。美国网络股的泡沫实际上就是对股票成长性的估计过于乐观而造成的，虽然当时大量的网络股还没有赚钱，但当时最时髦的一句话是“利润不是问题”。不过很多大师并不这样狭义地区分价值股和成长股。巴菲特说过，把股票分成价值型和成长型是愚蠢的。其实，对股票的评价根本是看其有没有投资价值，也就是能不能赚钱。无论价值股也好，成长股也好，核心还是看它能不能给我们带来收益。\n总之，晨星网站是一个非常好的网站，晨星公司也是一个非常权威的投资资讯公司。充分利用晨星的信息，是一个成熟的投资者常用的手段。\n优秀基金公司是首选一个基金公司有一只明星基金并不奇怪，但如果所有基金综合情况都比较优秀，那是不是可以说，这个公司的综合实力要比其他公司强呢？根据这一思想，咱们依然采用晨星评级，根据一个公司下属的所有基金的评价等级来对基金公司的总体情况进行一个评判。\n我一直认为，在我国现在的情况下，选择一家好的基金公司甚至比选择一只好基金更重要。\n如果一家基金公司陷入某种丑闻或被揭发出违纪违规现象，这就需要我们给予高度重视了。无论是什么类型的违规操作，请你一定相信，咱们在这些操作中一定是受害者而不是受益者。\n一般来讲，考察一个基金经理的重要指标就是他的从业时间。你千万不要相信一个刚刚毕业的投资专业的博士生会比一个在市场上摸爬滚打了七八年的本科毕业生更会打理你的钱财。投资在很大程度上是由经验来构成的：一个理想的基金经理应该同时具有股市上升（牛市）和股票下降（熊市）的投资经验。一只理想的基金应该是被同一个基金经理运营了较长的时间。也就是说，一个经验丰富的基金经理经营了较长时间的基金是一个好的投资标的，但这种基金在中国的基金业是比较难找的。一是，咱们国家的基金发展历史并不长；二是由于各种原因，基金经理的稳定程度也不够高。\n基金经理如果是在本公司内部的工作调整还好说，如果跳槽到另外一家公司，对该基金的业绩就会有较大的影响。\n资产配置比率：选择基金的核心基金的特性主要取决于两个方面：一方面，投资策略，也就是会选择什么样的股票；另一方面，资产配置，也就是一个基金中股票和债券所占的比例。\n资产配置在很大程度上决定了基金的激进程度，而且资产配置是在基金发行公告里面公开披露的，并且是要由基金经理严格遵守的。\n哪只更激进，也就是哪只风险更大而收益更多？其实，答案从基金公司公布的基金招募说明书中可以看到，\n现金和政府债券是为了确保基金持有人正常赎回而保留的，一般都不能低于5%，否则基金就得抛售股票换取现金，这样就大大影响了基金的投资收益，所以股票最大的比例就是95%。\n基金招募书相当于基金的“宪法”。\n技术统计资料：选择基金的参考平均回报和阿尔法系数都代表收益，当然越大越好；标准差和贝塔系数代表波动，也就是短期风险，数值越小基金表现得越平稳；夏普比率是收益和风险两者的综合，在收益或者风险相同时，越大越好。\n需要再次强调的是：必须要在同类基金中进行比较，也就是相对于同样的资产组合标准。用股票基金和债券基金去比较是没有任何意义的；而且这些系数彼此得到的结论有时候是不统一的，甚至不同基金评估公司算出来的数据都不大一样，但从这些数据中还是可以看出一些眉目来的。\n别患“净值恐高症”收益只和你的投资总额和单位基金的涨跌比率有关，和净值高低及份额多少没有关系。\n净值是由基金的总资产除以基金的总份额得到的。基金公司经营得好坏就是看总资产的增长情况。总资产的增长有两个方面，一个是基金份额的增加，另一个是单位份额价格（也就是基金净值）的提高。撇开基金总份额的变化，假设一个基金没有新申购也没有赎回，那总资产的变化就单单反映在净值的变化上面：资产增加，净值就高；资产减少，净值就低。也就是运行好的基金净值就高，运行不好的基金净值就低。\n那净值的增长有顶吗？结论是净值没有顶。其实股价也是没有顶的，只要这个公司不停地赚钱，股价当然也就不停地上涨（短期由投资者心理和政策变化带来的波动不算）。\n购买基金的时候，基金净值高低根本不是一个应该考虑的因素。只要明确了净值的计算方法和基金购买股票、债券的运行方式，就不会担心净值的问题，当然也不会相信基金净值不会低于1元的“神话”。事实上，在2007年市场几次大的调整阶段，不少新基金或者刚刚“净值归一”的基金净值都曾跌破过1元。\n要抢购新基金吗其实，新基金巨大的销售额，会给基金公司带来巨大的效益。一般新股票基金的认购费用是1.2%，那么一只100亿元的基金，光认购费用就有1.2亿元的收益。同时，基金的管理费用更为庞大，按照1.5%计算，每年的收入就达1.5亿元。显然，火爆的新基金销售，会让基金公司眉开眼笑。但新基金到底会给投资者带来什么好处呢？投资者真有必要去抢购新基金吗？答案是否定的。\n购买新基金的标准说法是认购新基金。认购新基金的价格都是1元／份，基金的认购费用也比基金成立以后的申购费用要低，如股票基金的认购费是1.2%，而申购费一般是1.5%。新基金认购结束后，一般有少于3个月的“封闭期”，也叫基金“建仓期”。在封闭期，基金公司和基金经理拿着这笔钱就开始按照基金招募书规定的投资策略和基金备案条件逐步投资证券市场，这称为“建仓”过程，也就是把基金的股票“仓库”建立起来。为保证基金顺利建仓，任何人在封闭期内都不能赎回已经认购的基金，也就是不能把钱拿回来。简单地说，新基金的优点是便宜；缺点一是有封闭期，二是没有历史。咱们并不知道这个基金、这个基金经理到底怎么样，当然也不会有晨星评级，不会有任何统计资料可以供我们参考。\n在认购新基金之前，应该知道点什么呢？肯定是要关注一个优秀的基金公司，也要关注这个公司下面的其他老基金，还要关注新基金的基金经理是谁，也许还要关注这个新基金的投资理念。\n所以，必须意识到认购新基金的风险。诚然，可以选择优秀的基金公司、老练的基金经理和非常有说服力的投资策略，但新基金仍然是新基金，在所有东西都没有磨合好之前就匆忙购买，我不认为是好的选择。\n股票仓位低，现金或者债券多，当然“抗跌”。其中最“抗跌”的是现金。再熊的市场，现金都不跌。所以，如果说“牛市买激进基金，熊市买稳健基金”，我想可能更合理。基金之所以激进就是因为股票仓位高，之所以稳健就是因为股票仓位低。\n如果你“确信”股市会上涨，那可以考虑购买激进的股票基金；如果股市会下跌，持币观望吧，或者也可以买可转换的债券基金。如果你把握不住，买个稳健的老基金也许比新基金还好。“抗跌”不“抗跌”，和基金新旧没有关系，只和基金的风格、仓位有关系。\n“一只新基金通常成立半年以后才渐入佳境。客户投资新基金之后应稳定地持有半年以上，才能最大限度地分享基金经理的投资能力和基金上涨期的收益”。\n基金的拆分和复制基金拆分是把原来一个老基金的净值人为地降下来，同时给基金持有人成比例地扩大基金持有份额。\n2号基金本质上和原来的1号基金没有区别。基金招募书基本相同，也就是相同的投资策略、相同的资产组合方式、相同的股票研究队伍、相同的股票备选池，而且是相同的基金经理。两个基金所持有的股票可能不一样，因为购买的时机可能不一样。但核心原则的一致就保证了1号基金和2号基金从长期看无论风险还是收益都是一样的，这就是所谓的基金复制。\n那为什么要发行2号基金呢？就是为了解决客户的“净值恐高症”。2号基金是一个新成立的基金，所以申购价格是1元。比起1号基金的高净值，2号基金当然更有吸引力；而且由于1号基金的成功，2号基金就不存在一般新基金没有历史的缺点。所有的投资策略、手法、基金经理都已经得到了证明，因此就很有理由认为2号基金可以和1号基金表现得一样优秀。也就是由于这个原因，复制的2号通常比1号基金要“贵”。例如，易方达策略基金申购费是1.5%，而易方达策略2号则是2%。也就是咱们要多花0.5%来购买2号基金，换来的是一个“便宜”的低净值感觉和一个新基金3个月的封闭期。老实说，我觉得这毫无意义。基金高净值让太多人恐惧了，以至于2号基金的销售也异常热闹。基金复制，对1号基金的持有人没有任何的影响，1号在运行，2号也在运行。\n发行复制基金，不但不能让市场成熟起来、改变观念，反而助长了大众的“净值恐高症”，让大众更担心净值的增长。\n如上投摩根基金公司，它们并不怕净值高，不但不搞复制、拆分，也不利用分红来降低净值，它们甚至暂时封闭上投双息基金的申购来控制整个基金的规模，保障投资者的利益。要知道封闭了基金，就意味着没有新的申购，也就没有新的管理费和申购费。为大众着想的公司，当然被大众看好。\n让人头痛的“巨额分红”我认为这种行为比拆分和复制更为恶劣，因为这种行为大大地损害了原来基金持有人的利益。一个简单的例子，如果一个原来20亿份的基金，净值是1.8元，为了让“净值归一”，就要每份分红分掉0.8元，也就是拿出44%的资产来进行分红。换句话说，为了这次分红，这只基金就必须把仓位降低到56%以下。如果在一个牛市行情中，显然56%的仓位给基金持有人带来的收益只有同样持仓而保留100%仓位的56%。而为了准备这些巨额的分红资金，基金公司必须花很长时间调整仓位。还有一个问题是，基金的分红公告都是在这些分红资金到位以后才公布的，也就是已经是既成事实了，在不知不觉间，基金持有人的利益已经被损害了。而且，由于“净值归一”，会有大量新资金的进入，这样在分红后一个较长的时间内，基金的仓位会很低，几乎和一个新基金的情况差不多。这样，这只经过巨额分红的基金还必须经历类似新基金的滞涨期后才能过渡到上涨期，而且基金经理面对突然膨胀的规模，是否应对得当也是一个令人担心的问题。也就是说，原来成熟的老基金的优势几乎全部丧失。当然，由于市场的不可预见性，也许巨额分红后，市场突然大跌，那在这种情况下，这种巨额分红反而会保护投资人。\n在不同基金种类的巨额分红中，最让我无法接受的是指数基金的巨额分红。\n我第一个问题是它们分红的这些收益是从哪里来的。一般来讲，可分红收益主要来源有两个：①买卖股票的差价；②股息。对于这么高比例的分红，我坚信单靠股息是达不到的。那一定是卖掉了股票。可是，这是一个被动的指数基金。它们凭什么卖股票呢？\n指数基金不存在调仓的问题，也不存在看空市场、规避风险卖出股票的问题，它唯一的任务就是跟踪指数。\n红利再投资份额的持有起算点是从再投资的时间开始计算的！这不但是嘉实基金转换的问题，更普遍的情况是：咱们持有一个基金，好不容易坚持2年到可以免费赎回时，结果赶上一个大分红，可能一大半资产的持有期就归零了，又得支付0.5%的赎回费。\n独特的指数基金顾名思义，指数基金就是跟踪一个特定的证券指数，如上证指数，基本按照指数的制定方法来配置所持有的证券品种和比例，是完全被动的一种基金。指数怎么调整，基金就怎么调整。显然，指数涨多少比例，基金净值也就涨多少比例。\n上证综合指数包括的是全部在上交所上市的股票（接近1000只股票），包括A股和B股，从总体上反映了上交所上市股票价格的变动情况。它是按照股票市值的加权平均来计算的，全面反映了上证股票的情况。\n上证180是在所有上证A股股票中抽取最具市场代表性的180种样本股票，“目的在于建立一个反映上海证券市场的概貌和运行状况、具有可操作性和投资性、能够作为投资评价尺度及金融衍生产品基础的基准指数”。上证50指数是在180指数的基础上“挑选规模大、流动性好的最具代表性的50只股票组成样本股，以便综合反映上海证券市场最具市场影响力的一批龙头企业的整体状况。其目标是建立一个成交活跃、规模较大、主要作为衍生金融工具基础的投资指数”。对于深交所而言，主要有深证成份指数（当时是40只A股）和深证100指数（100只股票）。另外，上交所和深交所还联合发布沪深300指数，包括上证和深证的部分股票，一共300只。\n也就是说，如果咱们想跟踪沪指，就选择50指数和180指数；如果选择深指，就选择100指数；如果选择跟踪整个中国股票市场，就选择300指数。\n“增强型指数基金”，如易方达50，“投资于标的指数的成份股票，包括上证50指数的成份股和预期将要被选入上证50指数的股票，还可适当投资一级市场申购的股票（包括新股与增发），以在不增加额外风险的前提下提高收益水平”。“在严格控制与目标指数偏离风险的前提下，力争获得超越指数的投资收益，追求长期资本增值。”也就是说，它们希望超越指数的收益，包含了某些主动投资的部分。\n主动型和被动型，从长期来看没有什么区别。问题就出在主动型基金的成本比被动型高，这样长期下去指数基金就有优势。\n国内市场分沪、深两市，不少指数基金仅追踪单一的沪市行情或者深市行情。但我更喜欢两市合并的行情，我觉得这才能真正反映中国市场的总体情况。所以，如果我选择，我会选择沪深300，或者中证100指数，或者其他的综合指数，而不单单考虑上证50，或者深证100等。同时，我喜欢完全被动型指数，既然是指数基金，就是避免人为的干扰，那增强型的指数基金我就没有兴趣。与其选择增强型的指数基金，不如我去选择一个被动的指数基金加一个主动基金。\n最大的问题就是中国的被动型指数基金却让我很困惑。看它们的招募书，都是说要严格跟踪指数，和指数的差异在3%～5%。可这件事情几乎没有人能做到。2007年，嘉实300指数基金和大成300指数基金都远远落后于沪深300指数的增长。即便考虑到指数基金满仓95%的股票，依然还有不小的差距。这里有一件让我非常恼火的事情，就是指数基金的巨额分红。前面我谈到过这件事情，它给我的感觉是指数基金名义上是被动，实际上还是有人操纵。这和指数基金的含义背道而驰。当然，也有很多主动基金做这种事。也就是说，我有点不敢信任指数基金了，因为我买的东西和我想要的东西不一样。\n\nETF（Exchange Traded Fund，交易型开放式指数基金），这是一种在二级市场交易的基金品种，是按照相应指数的“一篮子”指数股票集合，在证券交易市场上可以像股票一样随时买入卖出。ETF的申购费用和管理费不仅比一般的基金低，比许多的指数基金也低。ETF的主要缺点在于它像股票一样，买卖的时候必须缴纳交易费，而且买卖得越频繁，交易的费用相应也越高，所以ETF更应该长期持有。另外，ETF基金不存在通过大分红、拆分之类的方法进行持续营销的可能。这对那些希望投资指数基金的人有非常大的诱惑力。\n\n我从搜狐财经网站下载了2006年2月6日至2007年8月24日的深证100、上证180以及沪深300指数数据，先计算每个指数的日变化率，然后用统计中的回归分析求解得到：[插图]在统计区间，标准差=0.08%。也就是说，基本上沪深300日变化率受上证180影响的系数是0.67，深证100的是0.33。这和沪深300中沪市和深市股票的占有比例也相当，我不过是从数据上也证明了这一点。这样，我只要用2∶1的比例购买上证180EFT和深证100ETF，就近似得到一个沪深300ETF！\n如果市场上再没有300ETF，那我准备买指数的时候，就采用这个沪深300EFT模型：2/3的上证180ETF/50ETF+1/3的深证100ETF。\n面向海外的QDIIQDII（Qualified Domestic Institutional Investors，国内机构投资者赴海外投资资格认定）制度由香港特区政府最早提出，是在外汇管制下内地资本市场对外开放的权宜之计，以容许在资本账项目未完全开放的情况下，国内投资者向海外资本市场进行投资。也就是说，通过QDII基金，咱们在大陆也可以投资海外市场。简单说就是咱们把人民币交给基金公司，基金公司把它们换成外币去投资海外市场，收益再折合成人民币还给咱们。\n在发达国家市场，过去5年的收益也就是10%～20%；而新兴市场明显高出，接近30%，但同时风险也随着收益而增大。美国市场的波动最小，新兴市场的波动最大。\n我认为投资海外市场最重要的目的是平衡风险，是一种战略投资。\n总体来讲，我个人的观点还是倾向于谨慎。第一，我对新基金本来就没有兴趣，更何况这种面向海外的投资基金，这几乎是没有什么前车之鉴的，我可不想当实验品。第二，对于全球市场来讲，又不存在国内所谓的这种百年不遇的牛市行情，“起大早赶早集”也没有什么意义。第三，大量投资在新兴市场上，这是个风险很大的投资。要知道很多新兴市场国家的政治经济形势都不稳定，高收益一定伴随着高风险。除非想用高风险来博一下高收益，否则根本无法和国内的牛市相抗衡。另外，还有人民币汇率的变化问题。当然，从2007年来看，人民币对美元、港币是升值的，但对欧元、英镑甚至泰铢是持平或者贬值的。第四，大家也要留心，很多QDII基金的认购费和申购费是1.5%和1.6%，高于平常的1.2%和1.5%；管理费和托管费是1.85%和0.3%，后两项之和比咱们通常的国内基金要高出0.4%。30%～40%的年收益对国人来讲也许不会有多大的吸引力，但在中国市场如此高的点位，分散风险，考虑其他的投资领域，也许是不错的选择。\nFOF和“生命周期”基金一般基金是投资股票或者债券的，而FOF则只投资基金，实际上是一个基金投资组合，即基金中的基金。\n说穿了，FOF就是基金的组合。我们每个人自己的基金组合就是一个FOF，而这个FOF的净值就是“1+累计收益率”。如咱们的总资产中有50%投资在上投阿尔法，25%在广发稳健，25%在某个货币基金，那么个人的FOF就由这3个基金组成，比例是2∶1∶1。而且，如果经过一年运行，获得了15%的总收益，就可以认为咱们的FOF的净值是1.15元。\n生命周期基金也是舶来品，英文是“Life Cycle”。这实际上是为长期投资做准备的一种基金。首先，从基金的名称上就可以看到两个数字——2016和2020，这实际讲的是年份，也叫目标时间。也就是说，这两只基金是为2016年或者2020年使用的资金而做准备的投资基金。如咱们2016年要退休，要开始养老生活，那就可以投资2016生命周期基金。\n基金是一个长期投资，无论是养老还是孩子的教育，最终要有一个使用这些投资的时间。而按照风险控制的观念，越接近投资期结束，咱们的投资就应该越平稳。也就是说，整个投资的股票比例要下降，债券等固定收益类资产要增加。一个办法是咱们自己控制这个过程，一个办法是由基金公司来帮咱们做这种调节。\n一定要记住，“生命周期”基金是一种有特定对象的基金。\n分散投资：建立自己的组合分散投资核心要考虑3个因素：相关性、收益和波动。两个完全不相关的投资对象组合到一起，就会大大降低短期波动，但也会平均长期收益。分散投资的目的是进行风险控制，而风险控制是投资中最重要的一环。长期投资可以从时间上平滑短期风险，而分散投资则可以从“空间”上削减波动。把分散投资和长期投资结合到一起，肯定是最好的结果。\n开放式基金分3大类：主要投资股票市场的股票基金、主要投资债券市场的债券基金和货币基金。股票市场、债券市场和货币市场相对来说是独立的。也就是说，在股票市场上涨的时候，债券市场不会跟着上涨；反之，亦然。因为它们之间没有关系。那这3种基金就是一个比较好的分散投资对象。它们彼此不相关，有涨有跌，当然短期波动就会削弱。然而咱们也可以看到，这3种基金的长期收益率是不一样的。股票基金收益好，波动大；货币基金波动小，但收益也小。那如果把这3种基金做一个组合，虽然降低了短期波动，但也会降低长期的总收益。短期波动和长期收益永远都是共生的关系，咱们降低了短期风险，就势必影响长期收益。要追求最大的长期收益，咱们就不得不忍受短期的震荡。\n其实，投资者更应该把分散投资的理论放宽到基金投资以外的领域。证券是一种投资，房地产也是一种投资，还有古董、字画、黄金，甚至邮票等，而且这些投资之间有非常好的不相关性。\n投资组合理论强调的是要投资在独立的、不相关的领域里面，而不是简简单单地购买“一篮子”证券来分散投资。购买那些很类似的产品是达不到分散目的的。这也是我一再强调的在构建基金组合的时候，一定要考虑品种搭配，如股票和债券、大盘和小盘、价值和成长等。如果都是同类基金就大大减少了组合的有效性。\n从第二段中可以更清楚地看到，对于非专业人士，分散投资是巴老推荐的方法，也就是用不“愚昧”的方式去赚取所谓的“愚昧”的金钱。第三段，巴老最推崇的集中投资方式其实是对专业投资人说的，是对那些真正能看清市场和股票的投资家或者投资大师说的。\n我理想的资产组合第一，小盘和大盘的相关性较低，是一个很好的分散投资对象。现在绝大多数好基金都集中在大盘上，结果就很容易出现交叉持股的现象；而小盘基金的冷清，自然也就显示了它的特立独行。\n第二，小盘基金短期波动比大盘基金大，长期收益也会比大盘基金高。这就是所谓的小盘的风险溢价。\n所以，大盘和小盘要有一个合理的配置。我个人认为，除非你是一个非常极端的激进投资者，小盘的比例不应该大于核心配置的30%。当然小盘不是必需的，如果你是一个偏稳健的投资人，可以完全放弃中小盘。\n第三步，价值和成长的配置。理论上一个组合的核心最好是价值和成长的平衡。\n因此，我更倾向于在大盘基金中大概区分偏蓝筹、平衡和远蓝筹3种形式来代替价值型、平衡型和成长型。因为一般来讲，蓝筹是低市盈率的，比较具有“价值”；而远蓝筹是高市盈率股票，较具有“成长性”。\n如果发现基金和大盘比较同步，那基本上就是一个偏蓝筹基金。\n还要再次强调一点，咱们关心的是组合的整体表现，而不是关注组合内部的独立的基金。咱们要把这“一篮子”基金一起看。无论你用什么收益统计软件，我建议只关心总资产的变化，而不是每个基金的情况。\n“核心式”投资组合和“再平衡”如果可能，这个核心应该占你资产总额的70%～80%，至少也在50%以上。最好的核心基金，理论上是一个大盘基金，而且应该是一个价值和成长平衡型的基金，也就是在晨星投资风格箱中第一行的中间格。\n如制定了自己的股票和债券的配置比例是7∶3。一年以后，股票涨得快，债券涨得慢，比例变成8∶2了，怎么办？这时候要卖掉股票，买成债券。如果再过一年，遇到熊市，股票大跌，比例变成了6∶4，这时就要卖掉债券，买入股票，使比例回到7∶3。这就是再平衡。\n一般一年到一年半才做一次再平衡，而再平衡也仅仅是一个微调过程，只是为了让组合不要偏离自己制定的目标。\n怎样读基金招募书基金收益的构成：“①买卖证券差价；②基金投资所得红利、股息、债券利息；③银行存款利息；④已实现的其他合法收入。因运用基金财产带来的成本或费用的节约应计入收益。”\n无论选择红利再投资还是现金分红，基金收益都要先以现金形式分配。也就是为了准备分红，基金必须准备现金。\n第四章 “三步曲”之三：操作方法的实施\n一旦购买到满意的基金，最合适的持有方式是长期持有。\n网络安全吗不要从任何链接中进入网上银行，一定要采用自己输入或者来自自己的收藏夹。这也是非常重要的。还有，千万不要在邮件或者电话上透露自己的密码，这些都是保护自己的重要手段。\n选择前端还是后端收费如果投资人在申购时选择后端申购模式，则赎回份额的计算方法如下：赎回总额=赎回份额×赎回当日基金份额净值后端申购费用=赎回份额×申购当日基金份额净值×后端申购费率赎回费用=赎回总额×赎回费率赎回金额=赎回总额-后端申购费用-赎回费用\n红利再投资：分红方式的首选一般来讲，开放式基金每隔一段时间都会进行分红，也就是给基金持有人返还一些资金。理论上来讲，基金分红有下列的条件：（1）基金分红应当采用现金形式，每年至少一次。分红比例不得低于基金净收益的90%。（2）基金当年收益应先弥补上一年的亏损后，才可以进行当年分红。（3）分红后，基金净值不能低于原来面值，也就是1元。（4）符合基金契约的相关规定。\n对于这种方式，一般基金管理公司是不收取申购费的，它们非常鼓励投资者继续投资其基金。如果投资者看好这一基金，我也建议采用基金红利再投资方式。但如果需要现金或者再平衡投资组合，应该选择现金分红方式，因为现金分红是不收取基金赎回费用的。\n对于现金分红，大家也知道实际上是自己的本金减少了。如果不考虑赎回费，和部分赎回也没有区别。你把钱从市场拿出来了，当然是“安”了，可是也失去了赚钱的机会。投资本来就是用风险去换取收益，即所谓的风险溢价。没有了风险，也就没有了收益。\n任何投资都不是储蓄，任何投资都有风险，任何投资的盈利都是浮赢，只要你在市场中。只有当咱们最终的投资目标达到，真正撤出市场的时候，才可能真正地“安”，否则永远没有什么落袋为安。\n千万不要波段操作和预测市场一定要放弃波段操作的想法。投资大师没有一个是波段高手，而炒股炒砸者多是玩波段的。\n伟大的投资大师巴菲特说过，投资主要是在于避免做出愚蠢的决策，而不是在于做出几个非凡的英明决定。这就是说，投资最大的敌人是自己犯的错误。\n各领风骚的一次性投资和定投技术要知道市场是长期向上的，如果有条件，越早进入市场越好；如果没有条件一步到位，定投就是非常理想的投资方式。\n把一次性投资和定投结合起来使用是最好的方式。当年终发了奖金，可以一次性或者在较短的时间内投入市场，而每个月的结余就可以采用定投的方式积少成多。\n长期持有策略是制胜的法宝基金是一个适合长期持有的投资对象。基金公司也非常鼓励大家长期持有基金，例如，赎回费会随着基金的持有年限而递减。长期持有对咱们和基金公司都非常有利。\n长期持有是非常好的投资策略，但也是有条件的，这条件就是这只基金是符合要求的。\n现金为王，可是现金不会产生收益。买入基金才是第一步，卖出的价格才决定最后的收益。在买入和卖出之间就是守！常言说：“会买的只是徒弟，会卖的才是师傅。”但我觉得，能劝住咱们守住不动的则是大师。咱们往往会面对太多的诱惑、贪婪和恐惧。投资是对咱们自己人性的考量，而咱们的人性说到底是有弱点的。选得好、买得巧，也许都可以通过某种技巧、某种工具、某种帮助来实现，即便不能实现，也有参考。可守得住就只有靠你自己了。我守不住的时候，最常用的办法就是去看大师的书，所以才有“劝住咱们守住不动的则是大师”的感想。在牛市中，再怎么样，守也好守。以前我最佩服的人是能在1000点买入A股的人，后来我佩服的是从2000点先守到1000点，再守到6000点的人。在熊市买入需要的是勇气，而从熊守到牛的人却是需要毅力、耐心和信心的。\n什么时候赎回基金对于长期投资者而言，在两种情况下可能会进行基金赎回的操作：①这只基金不再符合自己的投资策略；②自己的投资目标已经达到。\n投资组合是根据投资策略制定的。投资策略里面，我认为第一个要考虑的是投资期，第二个要考虑的是投资人的心理风险承受能力。\n我也建议，赎回过程宜采用分步的方式。中国的股市波动频率太快，分步赎回也会降低一些风险。在任何时候都要记住，控制风险是最重要的。\n基金膨胀带来的影响当基金庞大到一定规模时，一般都会对新投资者采取关闭策略。\n对于基金的投资有个硬性的规定，一家基金公司旗下的所有基金不能拥有某只股票流通股10%以上的资产。\n“规模是业绩的敌人”，这话可不是我说的。这话是出自巴顿·比格斯的《对冲基金风云录》一书。其实，他讲的是基金业绩的上升会带来很多新的资金涌入，而这种规模的扩大却会导致基金业绩下降。结果就形成一种怪圈，最后导致基金昙花一现。\n还是风险：最重要的事情对巴菲特而言，他也不会有损失。对他而言，不是市场没有风险，而是他知道风险在哪里。他会规避风险和控制风险。当我前几次看大师们的书的时候，老看见他们说：投资最重要的是控制风险。当时很不理解，市场的风险，我们怎么能控制呢？我们怎么能控制市场的涨跌从而不亏损呢？现在我好像开始理解一些了，他们是靠对风险的认识和理解，从而在投资过程中知道什么时候该出手，什么时候不该出手。结果，他们就规避了主要的风险，也就是控制了风险。结果，他们投资，他们获利。\n多想，多学，多钻研，多思考。我想，这恐怕是获得收益的唯一办法。\n有些风险是避免不了的，那就得努力去削弱这种风险；而有些风险是完全可以避免的，那就一定要避免。\n对于各股的涨跌、热点的轮动、基金公司和基金经理个性化的风险，咱们可以通过长期投资和分散化投资去削弱和降低它们。这种风险是可以想办法规避的。而对于预测市场、波段操作甚至盲目抢购新基金，我认为这些是额外的风险，是完全可以避免的，而且也是应该去避免的。\n长期市场是向上的；但当市场过于疯狂时，产生的股市泡沫最终是会破裂的。也就是说，一旦泡沫破灭，3～5年甚至更长时间的震荡是不可避免的。\n美国市场的摸爬滚打开始更多地学习与基金有关的知识。上得最多的就是美国的晨星网站。里面的“投资教室” 上面的4部教材（股票、债券、基金和投资组合）、172篇独立文章、800多道习题，全部让我翻了几遍，后来还让我全部从网站上抠出来，打印装订，成了我的投资宝典。\n现在我的基金组合基本上是个合理的组合。核心是由3只美国市场基金组成，一个是中盘平衡型基金，一个是大盘成长基金，一个是大盘价值基金；另外，拥有25%的国际基金，包括12%的新兴市场基金（如拉美、俄国、东亚等），还有一支卫生健康业基金。\n晨星网在美国也很权威，它给每只基金甚至股票分等级、评论等，我还特喜欢它的X-ray（X射线）功能。你把你的基金组合输入进去，包括你投入的资金，它会根据现在的净值和每个基金的持股情况，归算出你的大盘成长股、大盘平衡、大盘价值、中盘、小盘各占多少比例；也就是我的基金组合在整个晨星投资风格箱中各个位置的比例；还有美国股票占多少，国际股票占多少，甚至每只股票占的比例（因为会交叉持股）。这样，你对你整个基金组合的总体情况就非常清楚了。\n国内市场的苦辣酸甜对于定投，我的观点很明确：非常喜欢。净值涨了，满足了短期利益；净值跌了，满足了长期利益。似乎怎么都不吃亏。\n如果资金量小，我会随时投入，钱到就投，不太理会大盘的情况，择日不如撞日。如果资金量稍微大点，我会做个一个月的定投，每星期投两次，从而得到一个时间跨度为1个月的平均效应。\n要说明的一点是，所谓长期投资并不是指长期抱着一只基金不放。我认为，长期投资是指不以做波段为目的，通过卖高买低来投机赚钱，而是通过整个市场的增长来实现一个长远的目标。也就是，我认为当你发现你所持有的基金出现问题时，你转换成另外一只（货币基金除外），这同样是长期持有策略。在长期持有的思想下，这种转换是不需要考虑大盘的涨跌的。在高点，你抛出这只基金，同样在高点进入另外一只基金；或者在低点抛，低点进。这都和大盘表现基本无关。这种转换，我不认为和长期持有相矛盾。\n卖出策略的总结：\n（1）如果我的投资目标变了，我肯定要改变投资组合。例如，当我越接近退休时，我的投资组合就会越稳健。\n（2）如果基金公司发生变化，例如，像合丰成长基金那样时，会考虑卖出基金。如果单是基金经理发生变化，会抱着静观的态度。中国的基金大多数是采用集体作战的形式，经理是很重要的一环，但不是唯一的一环。\n（3）如果发现犯了错误，会立刻改正错误。银河收益基金的购买就是一个错误，我应该先去看它的季报再买。其实，2005年底，它已经只有不到1亿元的资产了。我被那个五星哄了。如果错了，即便是亏了，也不会等它赚回来再卖掉。一定会立刻卖掉，转换到另外一只基金，无论是亏还是赚，越快越好。\n（4）在购买的时候，我选择的基金都是四或五星的。但如果一只基金跌到三星连续3个月以上，我会给它非常多的关注；如果持续6个月，我也许就要给它黄牌或者红牌了。晨星评级是一个相对评级，它不是由大盘决定的，而是在同类中相互比较的结果，这非常有意义。\n（5）我不会因为基金的绝对涨跌幅度来决定买卖，也不设置一个止损线。因为行情涨跌很多是由大盘决定的，我更看重相对评价，而不是绝对的收益。\n（6）如果一只基金出现问题，我会去选择一个替代品，把它转换过去。这种转换不会受大盘的影响，因为不是追逐波段操作。核心还是一个理念：不预测市场，主要看基金公司的基本面。\n我信奉长期投资理念，而且也要长期投资。无论是在美国的投资还是在中国国内的投资，我都计划持有至少15年以上，这是我整个基金投资的基础。\n给别人点时间吧还是那个比喻，说买基金有点像在火车站排队买票，排在哪个窗口都可以，但都有人排队，有快有慢。不过如果你在不同的队伍之间跳来跳去，最后肯定没有好结果。在一个队中至少得排一段时间。\n我如何评价投资组合投资期决定了你的投资组合应该是激进的，还是平稳的。我认为，如果是20年以上的投资计划，如为养老做准备，那可以是很激进的组合。如果是为孩子的教育，也许10～15年，那我觉得债券投资就要有一部分，如20%左右。如果在5年以下，那债券的部分就应该在50%左右；而如果是3年以下，那债券就应占更大的比重；1年以下，就只建议投资货币基金了。\n如果气球爆了，你受得了吗投资的部分一定是你的闲钱，别把身家性命都垫上。\n你是一个长期投资者，你也只是拿出一部分来投资。也就是说，短时的涨跌对你的生活不会有根本性的打击，那你主要面临的问题将是心理上的。我一直推荐大家做“投资风险承受能力测试” ，现在更推荐大家再去做一遍。一定要记住的是：千万别和自己过不去！你能承受的和你觉得应该能承受的是两回事。希望自己能坚持长期投资的理念，但千万别有意按照你认可的“标准答案”去做这个测试。好好搞清楚你的风险承受能力，并按照这个能力去组合现在的资产。稳健并不丢人！如果现在的组合超过了你的心理承受能力，恐怕也是修正的时候了。\n明年准备买只“瘟鸡”选择一个以前业绩很好但近期情况不妙的基金来投。当然，这个基金背后的公司也是我所喜爱的。首先要去参考晨星每个星期发布的业绩排名，寻找那些近3个月排名明显低于一年排名的基金，而且差距越大越好，但当然不是我正在持有的基金，我持有的基金一般是不会动的。然后，购买并持有，等待它排名的上升……这似乎有点像价值投资，寻找那些被低估的股票。而我是希望寻找那些被“低估”的基金，或者说那些基金经理能力被“低估”的基金。\n一定要是一个好基金公司下面的好基金。曾经看到过一句话：好基金公司为了它们的声誉，也不能容忍坏基金。\n我的基金投资心得记住一点，基金投资从长期来讲只是10%～15%的平均年回报，年年都翻番那只是幻想。如果咱们能做到一个月，甚至一个季度，才来关心一下自己的投资，那咱们的心态会平和很多。\n理财不是发财华尔街有句话：“牛也赚钱，熊也赚钱，只有没脑子的猪会被屠宰！”\n投资心态的基础朋友说我的心态平和，我想这和我的投资方式很有关系。我始终认为我是很稳健的投资者，我的足够的备用资产是远离股票市场的，而且无论市场多么火爆，也不会把这些资产投入市场中；我也有足够长的投资期，投资目标是养老金和孩子的教育基金。即便选择的是非常激进的股票型基金，我依然认为我是一个稳健的投资者。在这种情况下，我可以努力地坚定我的投资理念，虽然也常常受到贪婪和恐惧的煎熬。但从本质上讲，我知道这种股市的震荡不会从根子上伤害我。\n推荐中证指数系列发布沪深300的 中证指数公司 最近开始发布系列“规模”指数，我认为这个指数系列对咱们基民会有非常大的帮助。这有两个原因：①这些指数包括沪深两市；②非常清晰地区分了什么是大盘股、中盘股和小盘股。\n（1）中证100指数：这是在沪深300指数的成份股中选择市值最大的100只股票组成的指数。这也是沪深两市A股市场市值最大的100只股票。这100只股票大概覆盖了A股流动市值的一半，也就是前50%部分。这个指数实际上就是A股市场的大盘股指数。\n（2）中证200指数：在沪深300中扣除中证100剩下的200只股票组成的指数。这200只股票大概占据了中国A股市值的从50%到70%的中间的20%部分。中证200指数被认为是中盘股指数。\n（3）中证500指数：这是A股中排在沪深300以后的500只股票组成的指数。这500只股票大约构成了A股市值的从70%到90%的中间的20%部分，被认为是小盘股指数。\n（4）中证700指数：由中证200和中证500的成份股共700只组成的指数。它占据A股市值的从50%到90%部分，被认为是中小盘股指数。\n（5）中证800指数：由中证100、中证200、中证500共同组成的指数，覆盖A股市值的90%部分，被认为是大中小盘综合指数。\n（6）显然，这5个指数，再加上沪深300指数（大中盘股指数），覆盖了中国A股市值的90%，而且清楚地对大中小盘股进行了分类。这对咱们投资基金的人就非常方便了。对于大盘基金，那就应该用中证100或者沪深300来衡量；对于中小盘基金，就应该用中证200、中证500或者中证700来衡量。这样，就再也不用上证指数来衡量中小盘基金了。另外，哪些基金归类为大盘，哪些归类为中小盘也无须各执一词了。\n用中证指数给基金分类所有的处理必须在增长率的曲线上进行，单纯的净值或者累计净值数据是没有意义的，也就是要在指数的日增长率和基金的日增长率之间做相关分析。这个分析在EXCEL里面有现成的函数Correl。如果两条曲线完全正相关，那得到的相关系数是1；如果完全不相关，系数就是0。\n再说波段操作一个成功的波段，必须满足的条件是你下次买入的点位要比你现在卖出的点位低；否则，你在一个高位逃离，虽然股市下跌，你躲过了灾难，但如果错失了上涨的时机，再在另外一个更高位买入，那其实是更糟糕的事情。也就是说，对于波段操作而言必须判断两个时机：股市开始下跌和股市再开始上涨。你要有两次操作，而这两次操作都不能失败，否则结果就不如一直持有。我们有时候能对市场有所感觉，觉得可能是在一个高位或者是在一个低位。即便咱们对两次时机的把握都在70%的时候，两者同时成立的概率，也就是波段操作最终成功的概率也只有49%。换句话说，你必须10次判断成功7次，才能和长期持有打个平手。单单一次卖出，不是成功。你必须在更低的点买入才行。\n我的长期持有是几年我认为长期持有是一个策略问题，而不是一个技术问题。是长期持有基金，或者说长期投资基金（可能“长期投资”这个词更确切），而不是长期死抱着一只基金。\n基金公司和基金的情况不是快速变化的，咱们得给它足够的考察期。比如，我选择的基金连续6个月徘徊在三星位置（指数基金除外），那我就要考虑转换了。我之所以现在不投资指数基金的原因是基于我对中国市场的判断，我还是认为基金经理有很多优势的，那我也就认为它应该是领先的。四星和五星的基金占有市场的前1/3，如果长期排在这个比例之后，我就认为是有问题了。我记得上投要求它们的基金保持在前25%的水平，那也就是四星和五星的水平。所以，我说我的长期是没有一个固定年限的（但最少半年），除非有基本面的变化，如违规、股东层、基金经理、投资策略等的变化。如果是一只好基金，我会持有很长时期，一直到我投资目标的完成，也许是15～20年。\n我们在赚谁的钱我的看法是，首先股市投资是会创造财富的。要记住我们真正投资的不是股票，而是投资的股票背后的企业。企业是会创造财富的，所以投资股市，给企业相应的资本，这些资本就会产生新的财富。这实际上就是股市会长期上涨的根本原因。投资有回报，这种回报就是由于新财富的产生而造成的。\n而如果股市泡沫产生，那泡沫中赚的钱，将是透支下个熊市中亏损的钱。\n这世界上是没有神的投资的时间越长，我越觉得投资是对自己人性本质的考量。\n6000点，买还是卖如果你不想再承受未来的风险，那你就卖；如果认为未来的风险你还能撑得住，那就持有；如果认为未来的机会还很多，那就接着；但如果知道未来的风险承受不了却还要买，这我就反对了。\n债券基金A、B、C类首先，无论是A、B、C3类还是A、B2类，核心的区别在申购费上。如果是分3类的基金，A类一般代表前端收费，B类代表后端收费，而C类代表没有申购费——无论前端还是后端，都没有手续费。而分2类的债券基金，一般A类为有申购费，包括前端和后端；B类债券没有任何申购费。\n天下没有免费的午餐。不收一次性申购费，就按日收取销售服务费，但这也不是说这中间没有不同。\n另外，要说明的一个问题是：虽然无申购费债券基金和货币基金一样，进出都没有费用，但债券基金还是有波动的，它的波动虽然小于股票基金，但并不是保本的，债券基金也很可能亏损。所以，从本质上讲，它和货币基金还是有很大区别的。\n牛熊转换的感想（一）：心态投机是想把小钱很快变成大钱，而投资首先是不让大钱变成小钱。后半句话的主要意思是，投资的第一个目标是跑赢CPI。如果CPI是5%，那20年后，现在1万元只能当3500元来使。\n牛熊转换的感想（五）：分歧不过，经过这一波牛熊转换的行情，至少在收益上形成了牛市中指数基金跑得快，而熊市中主动基金跌得慢的现象，这显然是仓位的问题。\n牛熊转换的感想（六）：闲钱买基不是生活的全部。如果连吃巧克力的乐趣都被买基金的欲望剥夺的话，那似乎真的是守财奴了。投资是现在生活和未来生活的平衡，既然是平衡就不要舍去现在的生活，日子是一天天过的。\n投资一开始赚未必就是好事情，因为这太容易让人忘记风险了。\n牛熊转换的感想（七）：基坛说白了，我不建议泡论坛，最多看看版主推荐的精品帖，新基民尤其如此。泡论坛不如泡博客，博客的东西几乎是博主的思想，而论坛更多的是信手拈来。在论坛时间长了，心态就很难平和。\n我认识的可转债可转债的全称是可转换公司债券，是一种公司债券（注意它可不是国债）。它赋予持有人在发债后一定时间内，可依据本身的自由意志，选择是否依约定的条件将持有的债券转换为发行公司的股票或者另外一家公司股票的权利。换言之，可转换公司债券持有人可以选择持有其至债券到期，要求公司还本付息；也可选择在约定的时间内转换成股票，享受股利分配或资本增值。\n也就是说，可转债既可以看成债券，又可以看成股票。在牛市的时候，股性大发，可转债虽然会比股票涨得慢，但也是蓬勃向上的。因为很多人觉得可转债会转为股票，当然价格就涨。在熊市中，当股市下跌到一定程度的时候，可转债有债性支撑，可以被认为债券，就不会像股票一样跌得稀里哗啦的，让人不知道底在哪里。\n保本基金保什么其实，保本基金的保本是有前提条件的，绝对不是任何时候都保本的。\n保本基金发行的时候，除了一般的《基金合同》和《基金招募书》，还多出一个《投资基金保函》。它是中国投资担保有限公司为认购保本基金的投资人进行的担保。也就是说，在这个《保函》的范围内，如果基金亏损了，保险公司就会进行赔付。因此，可以说，仔细研究这个《保函》，就知道咱们的资金在什么情况下是有保证的了。\n而所谓的到期是指保本基金都有个保本周期，交银保本的是3年。也就是说，你认购的交银保本基本，持有到3年后，是承诺你不亏本金的；如果中途进入或者退出，就不担保了。所以，我感觉保本基金更像银行定期发行的理财产品，基本上没有开基的流动性优势，而保本的条款是有限定条件的。另外，有的保本基金可能还只是担保90%的本金。所以，如果非要买保本基金则要更仔细地看看文件。\n杠杆基金并不适合散户现在的分级基金，就是一种杠杆基金。目前，我的看法是杠杆基金不适合散户基金投资者。杠杆，简单地说就是用小资金撬动大投资，如你用1万元买2万元的股票。那缺少的钱从哪里来？就是靠借贷，你要借另外的1万元！但是借来的钱是要还的，这是必需的。所以，当杠杆产生的时候，必须保证借来的钱不受损失，否则你资不抵债的时候，就要破产。用1万元买2万元的股票，就叫2倍的杠杆。如果2万元涨10%，就赚了2000元，那从自己本金1万元的角度看，就是赚了20%；同样，如果跌了10%，亏损也要从自己头上扣，结果就是亏了20%。这就是杠杆的收益和风险的放大作用。显然，在这个例子中，如果市场跌了50%，2万元的投资就只有1万元了，除去要还人家的1万元，还不包括利息，自己就什么都不剩了。其实，到这个时候，你的债主就会来逼债。虽然市场可能会再涨起来，但债主可不这么想，他会强制要求你把股票卖掉以保证他自己的本金安全，这就是强制平仓。也就是在低点的时候，强制让你把股票卖掉。\n我的定投观当然，如果你已经有很多现金存款想进入市场，那定投不是你的选择。但对于一般的百姓，为了10年后孩子的教育，为了20年后自己的养老，在不影响现实生活质量的前提下，每个月拿出一部分收入，强迫性投资，岂不是未雨绸缪的良策吗？\n第一，定投不会让咱们包赚不赔。旱涝保收是不可能的，除非去购买无风险的货币基金。随着市场的起伏，自己的投资市值一定会发生变化。如果在市场低迷的时候去赎回基金，那赔本也是正常的。实际上，在市场低迷的时候，最关键的是坚持定投，因为这时候才是低价收集筹码的时候。也只有在市场低迷的时候坚持定投，才可能在市场高涨的时候获得收益。其实，投资正确的思想是低买高卖，而不是高买再高卖。\n第二，理论上定投是波动幅度大的品种有优势，如小盘的指数基金，甚至杠杆型基金，但是我认为选择定投品种的时候，最关键的还是要符合你的投资风险承受能力。如果对这个品种的基金进行一次性购买会让你感到难受的时候，那也不要定投它。因为当你定投几年以后，你会发现，你总市值的波动已经取决于你过去的积累。很难想象一个稳健的投资人，每月定投2000元到一个指数基金上，两年以后，持有接近5万元的指数基金会安安稳稳地不受市场波动的影响。那时候，月增加的2000元对平衡波动已经没有大的意义了。所以，我认为定投债券基金，甚至货币基金，都不是不可以的。\n第三，定投只解决了一个买入的问题，并没有解决卖出的问题，而只有卖出和买入的差价才是你的利润。还是那句话，千万不要在市场低迷的时候赎回你的基金。一定要挺住，挺到春暖花开的时候。在低价的时候赎回，亏本是正常的。\n第四，定投的品种是不是必须从一而终呢？我认为没有必要。定投的品种可以根据你的需求和市场的变化来进行调整。这并不和定投的原则相违背。定投的基本原则只有两个，一个是不预测市场（定时），二是强制性积少成多（定额）。至于把这个钱投入到什么方向，这取决于你的资产组合，除非你只定投一只基金。你在一个基金上定投了一段时间，又到另外一个基金上定投一段时间，这并没有什么不对，只要你清楚地知道转换的原因就好。\n不过，如果发了年终奖，我是不会把年终奖分成12份，慢慢地定投的，那实在很愚蠢。如果市场在高位，我会先买入货币或者债券基金，然后再考虑在合适的时机进入风险高的品种；如果市场在低位，那当然是直接买入的好机会了啊。简单地说，我现在是保持一个1∶1股债比的投资组合，然后每月的收入，先定投货币基金，然后再定转进入这个组合。而具体购买的品种取决于组合的情况，缺什么买什么。\n“积极主动”还是“被动防御”看格雷厄姆《聪明的投资者》一书，非常受启发。怎么才能成为一个聪明的投资者？有两种做法：（1）对一组由股票、债券和基金构成的动态投资组合，进行不断地研究、筛选和监控。（2）以某种自动的方式，创建一个恒久的投资组合，不再付出更多的努力。\n附录 对季凯帆博士的采访2006年8月以后，市场连续5个多月的持续上涨，让太多的人变得疯狂起来，甚至简单地把买基金等同于发财。借钱买基金的有，卖房子买基金的有，把所有存款全部投入基金更是很平常的事情。这是非常危险的！\n看看那些促销广告，什么“五星基金，现在才卖块把钱”，这显然是在误导投资人。市场不成熟，受害的不仅是投资人，基金公司也不会最终得益。如果说这方面做得好的公司，那我首推上投摩根公司。它们做的很多事情普遍受到大家的好评，如它们的巡回演讲；如它们不参与那种归一分红，不搞拆分，不搞复制；还比如，它们为了控制规模封闭热门的基金；等等。也就是说，它们不但通过宣传来普及基金知识，同时用自己的行动来让市场变得成熟。\n我个人的理财知识就是从第三方网站上学来的，比如说美国晨星公司的“投资教室”栏目等。公正、公平、公开、公信应该是第三方网站最大的优势。从国内的情况看，理财网站一种是像新浪、搜狐这种大型门户网站的理财频道；一种是像金融界、和讯之类的专门财经门户网站；还有一种就是像中国基金网这样的专业基金网站。但是总体来讲，这些网站的内容重复或雷同的比较多。当然各自有各自的特色，如中国基金网的“货比三家”“基金选秀”“基金龙虎榜”“风险测试”都是很有特色的栏目。\n有两点是投资基金的基本准则：①用闲钱；②长期投资。短期的投机，甚至借钱来炒基金，是非常危险的事情！基金本身就是长期投资的理财产品，不是用来短期炒作的。违背了这个原则，市场一定会用某种方式惩罚你。\n晨星上的所有内容都是代表基金的过去，不代表未来。但是我认为，虽然过去的业绩不代表未来，但如果我们不参考历史，我们用什么来预测未来呢？好学生继续是好学生的概率会比差学生变成好学生的概率要大。\n关于赎回策略之前版本的书上说，我在两种情况下会赎回基金：①这个基金不再是我想投的，如风格变了，基金经理变了，等等；②我的投资目标达到了，风险收益需求变化了。现在，我要加上第三条：市场表现太疯狂了，也要赎回基金。\n你自然会问，什么叫“市场疯狂”？现在很多网站给出了判断标准，如估值、估值百分比和“且慢指数估值”，貌似很容易判断市场在高位还是在低位。可以前没有这些啊，该怎么办呢？其实也简单，你就去听！听听周围的人，那些和你无关的人在说些什么。在地铁上，在公交上，在餐馆里面，如果你动不动就听到周围的人在高谈阔论他从股市上赚了多少钱的时候，那市场一定是“疯狂”了。永远记住：市场只会让少数人赚钱。一旦出现这种情况你就该“跑”了，至少该减仓而不能加仓了。同理，如果周围没有人谈论股票和基金，连骂股市的人都没有了，那市场就是低位了。记住一条，爱的反义词不是恨，而是冷漠，是懒得理你。\n关于定投定投是一个好的投资方式，尤其是对于新投资者而言。但要注意，当你定投了几年后，影响你心情的是你的存量资产，而不是每个月放进去的那一小部分了。所以，我觉得定投还是要符合个人的风险偏好。\n\n作者也是从一个门外汉一步步成长，因此对于同样是门外汉的我而言，本文的论述非常切实和通俗易懂，文中普及了很多基金概念和投资思路，同时作者也表达了很多观点，个人觉得这点很难得。作为新手而言，算是扫盲了下，值得一看。\n\nby: https://book.douban.com/review/12240222/\n\n","categories":["Self-improvement"]},{"title":"那些一眼爱上的文章 & 句子","url":"/2020/08/11/appreciation/","content":"IT 界的一些朗朗上口的名言中国有很多古代警世名言，朗朗上口，凝聚了很多故事与哲理。硅谷的互联网公司里头也有一些这样的名言，凝聚了很多公司价值观和做事的方法，对于很多程序员来说，其影响潜移默化。\n\n\nStay hungry, stay foolish.\n\n\n\n乔帮主在 2005 年给斯坦福大学做毕业演讲中提到过的他最喜欢的一句话。\n原文来自《Whole Earth Catalog》：\n\n\n\nYou build it, you run it.谁构建，谁运维。\n\n\n\nAmazon 的 CTO：Werner Vogels 的名言。是相对传统应用开发模式提出来的，在微服务架构里头特别受欢迎。\n传统的单体应用是基于项目模式的，且多数的项目都采用瀑布模型进行开发，开发团队根据客户的业务需求及功能设计，开发出软件系统并交付给客户，自此，该系统将由运维团队接手，进入系统运维阶段。\n而在微服务架构体系中，更倾向于让开发团队负责应用系统的全部生命周期，应用系统的开发是基于快速迭代方式来实现的，这是一个地地道道的产品研发思路，让服务的开发者与服务的使用者（客户）形成每日的交流反馈，来自直接客户的反馈有助于开发者提升服务的品质。\n\n\nTalk is cheap. Show me the code.口说无凭，代码为证 / 废话少说，放码过来\n\n\n\nLinux 的创始人 Linus Torvalds 在 2000-08-25 给 linux-kernel 邮件列表的一封邮件提到。\n\n\nGo big or go home.要么牛逼，要么滚蛋。\n\n\n\nFacebook 的办公室标语。\n\n\nDone is better than perfect.完成比完美更好。/ 比完美更重要的是完成。\n\n\n\n\n\nCode wins arguments.代码胜于争论。\n\n\n\n\nMove fast and break things.快速行动，破除陈规。\n\n\n\n\nStay focused and keep shipping.保持专注，持续发布。\n\n\n\n\nKeep calm and carry on.保持冷静，继续前行。\n\n\n\n\nEat our own dog food.吃我们自家的狗粮。\n\n\n\n据说，在狗粮生产基地，新配制出的狗粮都是要经过好多人品尝并通过后才会上市的。\n而在IT界，微软公司也采用这一做法来检测他们自己研发的软件，他们管这叫做 eat our own dog food。Dog food 指软件公司开发出新的软件程序后，在发布之前先在公司内部使用，即“内部试用”，或者做名词指“内部试用的软件”。\n微软公司让“吃我们自己的狗食”这句话变得人尽皆知，这句话的意思是：每天研发工作的一部分就是使用自己正在开发的软件。这种做法传达的理念是，研发人员在使用自己的软件时能够很快发现漏洞或者不对的地方。\n\n\nPremature optimization is the root of all evil.过早优化是万恶之源。\n\n\n高德纳的这句名言并不是反对优化，而是认为没有必要把时间浪费在那些不重要的优化上，从而忽略了真正重要的东西。再进一步来说就是，与其过多期望未来，不如立足当下，先做好眼前的事情，再去锦上添花。\n\n哪些翻译让你感叹「语言是如此之美」？\nA fall into the pit,a gain in your wit.\n\n\n吃一堑，长一智。\n\n\nQue lo mejor de mi pasado sea lo peor de tu futuro.（西班牙语）\n\n\n但愿我以前经历的最好的事是你以后经历的最差的事。/ 愿你明朝崎路如我昨日佳境。\n\n\n见信如晤 Letters Live\n\n\n奉读惠书，宛如天外飞来，回首往事，不啻依稀如昨。\n\n\nLove well, whip well.\n\n\n爱之深，责之切。——本杰明·富兰克林\n\n\nThe wheel turns; nothing is ever new.\n\n\n时过境迁，烂事依然。—《神探夏洛克》第二季\n\n\nLove is patient and kind; love does not envy or boast; it is not arrogant or rude. It does not insist on its own way; it is not irritable or resentful; it does not rejoice at wrongdoing, but rejoices with the truth. Love bears all things, believes all things, hopes all things, endures all things. Love never ends.\n\n\n爱是恒久忍耐，又有恩慈；爱是不嫉妒；爱是不自夸，不张狂，不做害羞的事，不求自己的益处，不轻易发怒，不计算人的恶，不喜欢不义，只喜欢真理；凡事包容，凡事相信，凡事盼望，凡事忍耐。爱是永不止息。\n\n\nSome of us get dipped in flat, some in satin, some in gloss. But every once in a while you find someone who’s iridescent, and when you do, nothing will ever compare.\n\n\n有人住高楼，有人在深沟。有人光万丈，有人一身锈。世人万千种，浮云莫去求。斯人若彩虹，遇上方知有。——《怦然心动》\n\n\nSmell smelly, taste tasty.\n\n\n闻着臭，吃着香\n\n\nStudies serve for delight, for ornament, and for ability.\n\n\n读书足以怡情，足以傅彩，足以长才。其怡情也\n\n\nReading make a full man; conference a ready man; and writing an exact man. And therefore, if a man write little, he had need have a great memory; if he confer little, he had need have a present wit: and if he read little, he had need have much cunning, to seem to know, that he doth not. Histories make men wise; poets witty; the mathematics subtle; natural philosophy deep; moral grave; logic and rhetoric able to contend. Abeunt studia in mores, Studiespassinto thecharacterNay.\n\n\n读书使人充实，讨论使人机智，笔记使人准确。因此不常作笔记者须记忆特强，不常讨论者须天生聪颖，不常读书者须欺世有术，始能无知而显有知。读史使人明智，读诗使人灵秀，数学使人周密，科学使人深刻，伦理学使人庄重，逻辑修辞之学使人善辩：凡有所学，皆成性格。\n\n\nYOUTH 青春 —— Samuel Ullman 塞缪尔·厄尔曼Youth is not a time of life; it is a state of mind; it is not a matter of rosy cheeks, red lips and supple knees; it is a matter of the will, a quality of the imagination, a vigor of the emotions; it is the freshness of the deep springs of life.\n青春不是年华，而是心境；青春不是桃面、丹唇、柔膝，而是深沉的意志、恢宏的想像、炽热的感情；青春是生命的深泉涌流。\n\n\n\nYouth means a temperamental predominance of courage over timidity, of the appetite for adventure over the love of ease. This often exists in a man of 60 more than a boy of 20. Nobody grows old merely by a number of years. We grow old by deserting our ideals.\n\n青春气贯长虹，勇锐盖过怯懦，进取压倒苟安。如此锐气，二十后生有之，六旬男子则更多见。年岁有加，并非垂老；理想丢弃，方堕暮年。\n\nYears may wrinkle the skin, but to give up enthusiasm wrinkles the soul. Worry, fear, self-distrust bows the heart and turns the spring back to dust.\n\n岁月悠悠，衰微只及肌肤；热忱抛却，颓唐必致灵魂。忧烦、惶恐、丧失自信，定使心灵扭曲，意气如灰。\n\nWhether 60 or 16, there is in every human being’s heart the lure of wonder, the unfailing childlike appetite of what’s next and the joy of the game of living. In the center of your heart and my heart there is a wireless station: so long as it receives messages of beauty, hope, cheer, courage and power from men and from the Infinite, so long are you young.\n\n无论年届花甲，抑或二八芳龄，心中皆有生命之欢乐，奇迹之诱惑，孩童般天真久盛不衰。人的心灵应如浩淼瀚海，只有不断接纳美好、希望、欢乐、勇气和力量的百川，才能青春永驻、风华长存。\n\nWhen the aerials are down, and your spirit is covered with snows of cynicism and the ice of pessimism, then you are grown old, even at 20, but as long as your aerials are up, to catch waves of optimism, there is hope you may die young at 80.\n\n一旦心海枯竭，锐气便被冰雪覆盖，玩世不恭、自暴自弃油然而生，即便年方二十，实已垂垂老矣；然则只要虚怀若谷，让喜悦、达观、仁爱充盈其间，你就有望在八十高龄告别尘寰时仍觉年轻。\n\n\n英语中正能量爆表的名言名句\nNothing can help us endure dark times better than our faith.没有什么比信念更能支撑我们度过艰难的时光了。《纸牌屋》\n\nFigure out what you like. Try to become the best in the world of it.找到你喜欢做的事，并努力成为这个领域里的顶尖人物。\n\nThings to do today:1.Get up; 2.Be awesome; 3.Go back to bed.今天的计划：1、起床；2、做牛B的事；3、睡觉。\n\nTake a few minutes to appreciate what you have and how far you’ve come.稍稍沉下心来，欣赏自己拥有的和所完成的。\n\nThe rough road often leads to the top.艰难的道路经常通往高处。\n\nThe distance between your dreams and reality is called action.梦想和现实之间的那段距离，叫做行动。\n\nDoing what you like is freedom. Liking what you do is happiness.自由是做你喜欢做的事，幸福是喜欢你做的事。\n\nIf you want something you’ve never had, you must be willing to do something you’ve never done.如果你想拥有从未有过的东西，那么你必须去做你从未做过的事。(Thomas Jefferson)\n\nEvery day may not be good, but there’s something good in every day.也许不是每天都那么美好，但每天都会有一些小美好存在。\n\nSmile and let everyone know that today you’re a lot stronger than you were yesterday.用微笑告诉世人，今天的你比昨天更加强大。\n\nSilence is the most powerful cry.沉默是最有力的呐喊。《美丽人生》\n\nTime will bring a surprise, if you believe.时间会带来惊喜，如果你相信的话。《浮生物语》\n\nWhat others think is not important . How you feel about yourself is all that matters.别人怎么想并不重要，你怎么看自己才是关键。\n\nDon’t cry because it is over,smile because it happened.不要因为结束而哭泣，微笑吧，因为你曾经拥有。\n\nClimb mountains not so the world can see you, but so you can see the world.爬上山顶并不是为了让全世界看到你，而是让你看到整个世界。\n\nEvery step towards your dream today is a step away from your regret tomorrow.今日为梦想所付出的每一份努力都会减少明日的一份后悔。\n\nIt’s time to start living the life you’ve imagined.是时候开始过自己想要的生活了！\n\nThere’s nothing more beautiful than a smile that struggles through tears.世上最美的，莫过于从泪水中挣脱出来的那个微笑。\n\nWhen you want to succeed as bad as you want to breathe, then you’ll be successful.当你对成功的渴望犹如呼吸般得不可或缺，你就一定会成功。\n\nChance favors only the prepared mind.机会总眷顾有准备的人。\n\nBehind every successful man there’s a lot of unsuccessful years.每个牛B的成功者都经历过苦B的岁月。(鲍博.布朗)\n\nIf you want something done, do it yourself.靠谁都不如靠自己。《第五元素》\n\nNo matter how many mistakes you make or how slowly you progress, you are already ahead of those who never tried.无论你犯了多少错，或者进步得有多慢，你都走在了那些不曾尝试的人的前面。\n\nSome things are so important that they force us to overcome our fears.总有些更重要的事情，赋予我们打败恐惧的勇气。\n\nNo cross, no crown.不经历风雨，怎么见彩虹。\n\nRemember when life’s path is steep to keep your mind even.记住：当人生很苦逼的时候，你要保持淡定。\n\nIn life it’s not where you go. It’s who you travel with.生命中，重要的不是你去哪里，而是与谁同行。\n\nSometimes you have to fall before you can fly.有时候，你得先跌下去，才能飞起来。\n\nIn order to be irreplaceable, one must always be different.要做到不可替代，就要与众不同。\n\nThroughout life’s complications, you should maintain such a sense of elegance.不管生活有多不容易，你都要守住自己的那一份优雅。\n\nWhen you feel like giving up, remember why you held on so long in the first place.每当你想要放弃的时候，就想想是为了什么才一路坚持到现在。\n\nYou can always be a worse version of “him”, or better version of yourself.你不是要做一个单纯优秀的人，而是要做一个不可替代的人。\n\nThe outer world you see is a reflection of your inner self.你看到什么样的世界，你就拥有什么样的内心。\n\nKnowing what you cannot do is far more important than knowing what you are capable of.知道自己不能做什么远比知道自己能做什么重要。\n\nPeople cry, not because they’re weak. It’s because they’ve been strong for too long.哭泣，不代表脆弱，只因坚强了太久。\n\nTravel and see the world; afterwards, you will be able to put your concerns in perspective.去旅行吧，见的世面多了，你会发现原来在意的那些结根本算不了什么。\n\nIt requires hard work to give off an appearance of effortlessness.你必须十分努力，才能看起来毫不费力。\n\n\n\n一程山水一枕梦春花，夏雨，秋月，冬雪，生命的故事一直在这四部曲里演绎，繁衍，来来往往，亘古不息。一程山水一程梦，一岁年龄一岁心。星光不问赶路人，时光不负有心人。长路漫漫，时光寸寸，一蓑烟雨任平生之旅，风可追，花可笑，雨可泣，雪可饮，这生命的味道，盏盏情柔，杯杯意重，品过、尝过，懂了。流年飞度，岁月更迭，时间赠人阅历，世事皆可温柔，万般滋味，皆是生活。\n\n凡心所向，素履以往；生如逆旅，一苇以航出自七堇年的《尘曲》，意思是：凡是心所向往的地方，即便穿着草鞋也要前往；生命犹如逆行之旅，即便一叶扁舟也要向前起航；即便穿着草鞋也要前往，恋恋不舍，追逐梦想。\n人生匆遽短促，就像一趟可能艰难也可能顺利但总应存有快乐的旅程。但即便如此，人也不应为往事而伤怀或后悔，无论穷达显藏，均应以平常心待之，豁达洒脱地面对过去和未来。倘如此，人生就会少了很多遗憾，而多了不少快乐。\n人活于世，必然孤独！然而我们没有独孤求败的那种洒脱与豪放，总是在扭扭捏捏的世界中成为一名荒诞的自饮者。\n惶惶尘世，尘世惶惶！谁人识我，我识谁人！\n耳畔一曲沙哑的《沙漠骆驼》缓缓行驶，余光中那一抹昏黄的阴影在黄澄澄的世界里倍感寂寥！\n手攒细沙，紧而散逸；轻掬于胸，团聚凝塔！\n世间抑或时间，也许如此，虔心守之无果！\n放手一搏，俊逸大端！\n抬望眼，世事如尘，世事如烟！\n拱手处，虚言狡辩，嗤然无言！\n惟愿：一扁舟、一苇杆，素履皂衣随风漫游！仰雄山之高巍，叹流水之不朽。\n潜心入镜，潜心入径，潜心入境！\n仅此而已！\n\nReference: http://www.1234szw.com/post/118.html\n\n\n我得到的都是侥幸啊，失去的都是人生——致爱情\n今天闲来无事找过去的文章，碰巧看到这篇刚高考结束时写的作品。\n果然人多年过后回头看自己的过去，都会有一种莫名的羞耻感，我现在看这篇文章也一样，很羞耻。\n现在的我，有了真正意义的女朋友，开始真正体会到身为一个男人的担当，这和当时身为一个小男孩的心境，是完全不一样的。\n不过转念一想，我的过去亦是我人生的一部分，不如坦然地接受那时的自己。若现在的我和那时的她面对面，我们定能推心置腹，聊聊我年轻时的幼稚与勇气，聊聊你未来必经的成熟与含蓄。\n我得到的都是侥幸啊，失去的都是人生\n有人说男人一生的追求逃不开三个：金钱，权力，女人。但有些道貌岸然之徒会出来反驳，大谈更高的精神追求，我并不否认它，但没有解决以上三个问题就谈所谓的精神追求，在我看来都是意淫罢了。\n而权力对我来说遥不可及，赚钱之道我又看不清，还是姑娘来的实际些。说实话我并不喜欢泡妞这个词，而我又不懂爱情，但我本身对此还抱有很美好的幻想，那么暂且说它是爱情吧。\n我第一次感受到爱情，是在11年的夏日里，那时的我失手打碎了玻璃，阳光正好被碎玻璃切得零零落落，一只手灵巧地跳跃，将它们清扫一空，我看得发怔，看到了倒映出的整个年华。\n几米有一段话：当你我喜欢我的时候，我不喜欢你；当你爱上我的时候，我喜欢上你；当你离开的时候，我却爱上你。是你走的太快，还是我跟不上你的脚步？在爱与不爱之间，总存在一个时间差。我也在这恍惚间失去，但未曾觉得遗憾，我总习惯把错过看作命运的安排，但我不知道这样好的心态还能持续多久。\n十几岁的时候，感情似乎很轻易的开始了，然后觉得天崩地裂也不能阻止两个人在一起，最后却因为一些幼稚可笑的原因分开。分开的时候，内心确实留下了空洞的痕迹，不知如何填补。\n就像《局外人》所说：“一种阴暗的气息从未来前途的深处向我扑来，它穿越了尚未来到的岁月，所到之处，使人们曾经向我建议的所有一切彼此之间不再有高下优劣的差别了，未来的生活也并不比我以往等生活更真切实在。”我竟然没有一点悲伤和遗憾。就如夏目漱石笔下，一个被宴席排斥在外的人，不准共饮同醉，因而得以避免醉于其中。有时想起往事来，只惊讶于那些姑娘们肯虚耗最美好的时光，陪在一无所有的我的身旁。于是只能心存感激，用最诚挚的祝愿，望她们往后能真正幸福。\n尼采说：当你凝望深渊的时候，深渊也凝望着你。我时常沉浸在一种情绪里，很难自拔。回忆如困兽，面前，是一条高速公路。而我，是她们的旅途与道路。我觉得很平静，也很幸福，我有那么多回忆，没有人受伤，我相信她们想到我时，也会由衷的微笑。\n我们太多时候想要赋予自己所做的一切以意义，反而忘了，最大的意义就是真正用心活着，然后帮助别人活得更好。所有的事情都是这样的，索取并不比给予幸福。\n我曾想经历一百个姑娘，然后把她们的名字都记下，只为了有一天见到那个真命的时候对她说：她们对我来说一点都不重要。\n那是一种错误的执念，一种想要证明自己的执念，每个女孩都是独一无二的，值得被爱。还有，那些技巧只能让其他姑娘看起来富有魅力，而对于真正喜欢的人，真的是无能为力。\n我也曾浑浑噩噩地活着，总觉得有一天我会顿悟，发现我自己人生的使命。其实这并不存在。\n梦想并不是做梦做出来的，是不停的尝试，最后才确定的；就像心中那个特别的她，不是等来的，而是在经历无数过客后，真正陪你走下去的。\n我曾向外界寻找缺失的部分，觉得外界的认可和喧闹会让自己快乐起来。我找错了方向。\n那些漂亮姑娘不是答案，恋爱和功成名就不是答案，答案就在自己的内心。不依靠任何人任何事，全凭自己获得平静。\n可惜现在的我，离平静还很远。\n要学的很多，要受的伤痛更多。成为男人的路就是如此。\n人生无常，如果可以，我会犯更多的错，什么都试试，做一个让纯真永不褪色的人，拥有永远不会老去的人生。\n生命本没有重量，也没有不能承受之轻。愿我爱的，爱我的，幸福温暖。\n\nReprint: http://keanchen.top/2018/05/02/past1-2018/\n\n\n圈子虽小，舒服就好\n前言知乎上有人问：为什么以前那么好的朋友，现在却如此的疏远？\n有一个高赞回答：渐老的岁月和渐远的三观。\n诚然，当年龄渐长，人生的路线也随之分岔。\n你喜欢社交，我喜欢独处；你喜欢旅游，我喜欢读书；你喜欢热闹，我喜欢清静。\n久而久之，找不到共同话题，只剩下尴尬的寒暄和硬聊；也有试图挽回，但也是艰难维持，心力憔悴，慢慢就疏远了。\n走过半生，终于明白：凡是费劲的关系，都是错的关系。如果一种关系让你觉得很累，那就随它自然而然地结束吧。\n一、圈子虽小，舒服就好做家具生意的何叔，是我比较佩服的一个人。\n做生意的一般都比较关心人脉，好办事，财源广。但何叔却很少参加应酬。\n有人问他：“你不去多走动，不多认识几个人，以后有麻烦了，到哪找人帮忙呢？”\n何叔耿直地说：“与其虚情假意的赔笑聊天，多难受，还不如多与老朋友走动走动。”\n直到有一回，供货商那边出了问题，不能及时供货，何叔不得不另找货源，那些平时也有打交道的商家，知道你急，还借机抬价。\n何叔一下子拿不出那么多货款钱，好在，找了好几个朋友帮忙，这难关才算过了。\n何叔的朋友确实不多，但只要有困难，告诉对方一声，能帮的自然不在话下；就算力所不能及，也会帮忙想想办法。\n很认同三毛的一段话：\n\n朋友这种关系，最美在于锦上添花；最可贵，贵在雪中送炭；朋友中的极品，便如好茶，淡而不涩，清香但不扑鼻，缓缓飘来，似水长流。\n\n交朋友，不是靠笑脸去迎逢虚假的情谊，而是为了以真心换真心。\n那些酒桌上逢场作戏换来的关系，若没有利益可图，翻脸比翻书还快，嘴上说为你两肋插刀，当你真正遇到难处时，却一味装聋作哑。\n朋友之间最舒服的状态，是不必讨好，不用带上面具，也没有花花肠子。\n当然，不去迎合，会因此错失一些圈子，错过一群人，但这样经营下来的友谊，必定是长长久久的陪伴，真切如金。\n二、舒服的关系，频率相同周国平有句话说的好：\n\n与人相处，如果你感到格外的轻松，在轻松中又感到真实的教益，我敢断定你一定遇到了你的同类，哪怕你们从事着截然不同的职业。\n\n人和人之间，往往存在“磁场”这个东西。\n和磁场不同的人在一起，犹如鸡同鸭讲，即便拼命找了话题，也聊不到一块去，不欢而散。\n和磁场相同的人在一起，快乐变得很简单。不用刻意的找话题，不会聊着聊着就冷场，不用害怕空气忽然安静，世界都是尴尬。\n伯牙、子期的情谊是许多人心中的向往。\n许多人称赞俞伯牙高超的技艺，但真正能听懂他琴声的寥寥无几。直到他遇见钟子期，才成就了一段“高山流水”的佳话。\n那一天，伯牙想象自己在登山，弹奏出来的琴声峨峨汤汤。\n子期沉醉其中，情不自禁地赞叹：“听到此曲，犹如巍峨的高山屹立在我面前。”\n伯牙又想到流水之境，弹奏出来的琴声宛转悠扬。\n子期听到时便脱口而出：“听此琴声，宛如奔腾不息的江河从我面前流过。”\n伯牙终于遇到了懂自己的人，之后伯牙得知钟子期去世，摔琴绝弦，不复弹奏，因为世上再无真正懂他心声的人。\n因为频率相同，可以畅所欲言，尽情诉说；因为三观一致，可以兴致勃勃地谈天说地；笑点一致，可以放声大笑而不怕尴尬。\n有句话讲：“我们都是孤独的刺猬，只有频率相同的人，才能看见彼此内心深处不为人知的优雅。”\n就像鲁迅遇到瞿秋白，写下“人生得一知己足矣，斯世当以同怀视之”这一传世名句。\n知己难求，一个就够。遇上了，要好好珍惜。\n三、和舒服的人在一起，是最好的养生古人讲：“摄生之道，大忌嗔怒。”\n你身边的人，决定了你心情的打开方式。\n跟相处舒服的人过日子，惬意自在，内心安宁，即便互相沉默，也能感到由衷的舒服。\n和不舒服的人在一起，心生烦闷，无处释放，无异于互相投毒，慢性自杀。\n张爱玲与炎樱曾是一对好朋友，张爱玲的两次婚姻，炎樱都是证婚人。\n张爱玲去美国后，生活落魄，炎樱却总在交谈中炫耀自己的优渥生活，秀优越感，让张爱玲很不舒服，也对其很失望。\n后来，张爱玲与炎樱渐渐疏远，炎樱还写信问：“为什么不再理我？”\n张爱玲回她，我们能走到一起，是因为一些际遇，但经历成长经历世事后，才发现我们根本就不是一类人。\n张爱玲的身后事也是交代给远在台湾的宋琪夫妇，而不是同在美国的炎樱。宋琪夫妇是懂得交友之道的人，他们不打探张爱玲的隐私，也不利用她的名气赚钱，只是在一边默默关注，需要的时候，就出现，这让性格孤僻的张爱玲感到舒服。\n无论交友还是生活，能和舒服的人在一起，经营出舒心的朋友圈，打造一个健康的交友环境，才是最好的养生。\n记得有一期《奇葩说》，柏邦妮问：“心里苦的人，要多少甜才能填满啊？”\n马东说：“心里有很多苦的人，只需要一丝甜就能填满。”\n是呀，人一辈子，遇见谁，发生什么事，不是我们能决定的，但选择舒心的人，打造优质的朋友圈，却是可以去追寻、努力实现的。\n毕竟，被美好的人包围，再糟糕的际遇，也会苦中一点甜。\n多与能让自己感到舒服的人在一起，能量才能天天满格。\n\nReprint: https://www.quchao.net/QuanZi.html\n\n\n知乎的句子1.有哪些第一眼就征服了你的句子？（文/周十一）\n你遇见谁，他都是你生命中该出现的人，绝非偶然。他一定会教你一些东西。\n犹豫往往来自对安全感的过渡渴求，你应该像没有明天那样过着生活。\n如果家人没能力给你规划好一-切的话，那么不要做个乖宝宝。\n做你自己，大概是你能给他人最糟的意见了。\n为什么那些人都欠钱不还啊？真的看不到我的为难吗。因为你借给他了，所以烦恼变成了你的~\n时间一直向前走，没有尽头，只有路口。人这一辈子，你只能为自己而活。\n悟已往之不谏，知来者之可追；实迷途其未远，觉今是而昨非。\n许多人所谓的痴情，并不是真的有多爱对方，而是在拼命地感动自己，想要证明自己拥有可以掌控爱情的能力。\n让想象不再停留在想象。\n她知道我所有的小瑕庇，人们称之，为不完美。其实不然，那才是好东西，能选择让谁进入我们的世界。\n努力想要得到什么东西，其实只要沉着镇静、实事求是，就可以轻易地、神不知鬼不觉地达到目的。\n来者不拒，去者不追。\n这世上所有人嘻嘻哈哈也丧到谷底。\n世界上没有感同身受。\n田村正和给金世佳：“关于你的诸般际遇，那是你的人生，经历之后都是财富。我只是个一直在演戏的演员，人生太过复杂，我也不是万事明了。能送给你的只有四个字：好好感受。”\n所有人都祝你快乐，我只愿你，历经山河，觉得人间值得。\n我希望自己能像百万富翁似的爱您，但是我力不从心；您希望我能像穷光蛋一样爱您，我却又不是那么一无所有。\n别什么都为别人考虑，你是宝贝你也很重要。人嘛！就是失败多了！总会成功的！\n我不是怪我的父母家人，我现在所拥有的一切，站着这里轻飘飘的说人间不值得，不需要去考虑温饱问题，都是他们付出半生的努力。\n“我慢慢明白了我为作么不快乐，因为我总是期待一个结果。看一本书期待它让我变深刻，吃饭游泳期待它让我一斤斤瘦下来，发一条短信期待它被回复，对人好期待它回应也好，写一个故事说一个心情期待它被关注被安慰，参加一个活动期待换来充实丰富的经历。这些预设的期待如果实现了，长舒一口气。如果没实现昵？自怨自艾。可是小时候也是同一个我，用一个下午的时间看蚂蚁搬家，等石头开花，小时候不期待结果，小时候哭笑都不打折。”\n我年华虚度，空有一身疲倦。\n《小王子》等爱的狐狸：“我拥有麦田的颜色”\n生命或许只是一场虚无。\n“一生一次，有些东西，一辈子只有一次的缘分，两个人今儿个可能还坐在一起喝茶，明日以后，也许就没有重聚的可能了。在茶禅里有说，一期一会，难得一面，世当珍惜。”\n知世故而不世故，善自嘲而不嘲人。\n逢人只说三分话，不可全拋一片心。\n知人不评人。\n不要到处宣扬自己的内心，这世界不止你一个人有故事。\n人生哲学：关你屁事！关我屁事！\n明天又将是另一天。\n肆意人生，及时行乐。\n给最爱的自己留句话：余路很长，你要好好走。\n愿你走出半生，归来仍是少年。念过往而不恋过往，望未来而不惘未来。\n种一棵树，最好的时间是十年前和现在。\n不要委屈了自己去讨好任何人！\n一生被爱，一生努力，想要的都得到，得不到的都释怀。\n道理都懂，但该怨的还是会怨，该骂的还是会骂，该哭的也还是会哭，毕竟心里的难受不是道理所能释怀的。\n可遇不可求的事，后海有树的院子，夏代有工的玉，此时此刻的云，二十来岁的你。\n从此以后，你走你的独木桥，我开我的兰博基尼。咱们井水不犯神仙水。\n太简单的人是搞不定人生的。\n所有千夫所指的困难都是为了淘汰懦夫的。\n当你老了，回顾一生，就会发觉：什么时候出国读书，什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你作出选择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。\n除了没用的肉体自杀和精神逃避，第三种自杀的态度是坚持奋斗，对抗人生的荒谬。\n生活可以漂泊，可以孤独，但灵魂必须有所归依。\n当你无所事事的时候，当你迷茫的时候，当你觉得肉体崩坏的时候，去健身，去跑步，一个好的身体是革命的本钱。\n“你自己做出了买这件衣服的决定，那就说明你是有考虑过并接受了这个价格的，既然你已经考虑过并且做出了买的决定，那你现在为什么要后悔？如果你现在后悔，说明你刚才在做这件事之前没有好好考虑过，这就是你自己的问题。后悔这个词是世界上最不值钱的词之一。”\n看过更好的风景，遇到过更好的自己，怎么甘心归于平庸。\n身体的最终目的地只有一个地方，称之为死亡，而思想的最终境界却是无限可能。\n命运的迷人之处，在于诸多转折。\n一辈子那么长，希望你一定要明白，遇到错的人比孤独更可怕。\n有一天我终将会老去，希望你会满意，我没有对不起十几岁的自己。\n我没办法选择生活，但我可以选择生活方式。\n“如果痛苦的话，就别努力了，保持平常心就好”\n你得知道，落花三千，有娇嫩粉艳的；有清丽脱俗的；有小巧玲珑的；但也有那种从来只梦想成为太阳的，所以她们的枝干更高，花瓣更大。\n人生永远没有太晚的开始。\n不需要理由，不需要条件，你想要什么，你去做什么，只是因为你想，仅此而已。\n行百里者半九十，不单单告诉我们坚持，还有对旅途的长远规划。\n在目标之上建立起的正确的心态，是笑到最后的关键。\n莫笑雏龙麟窄，敢与鲲鹏夺海，万般回首化尘埃，看我昆仑不改。\n对每个人而言，真正的职责只有一个：找到自我。然后在心中坚守一生，全心全意，永不停息。所有其他的路都是不完整的，是人的逃避方式，是对大众理想的懦弱回归，是随波逐流，是对内心的恐惧。\n做一件事，不问结果，不辞辛苦，一日一日，直到如心，便是修行。\n很庆幸在年轻的时候选择了经历，不管以后会成为什么样的人，高峰永远在召唤我前行，我知道不管再高的山自己也能过去，而生活不过就是翻越一座又一座的高峰。\n努力不过是想在生命最后一刻回想一生，啊，没白活。\n不够自信不怨你。不努力去变的自信就不对了。生而为人，信仰自己最美好。\n构筑你自己的价值观和世界观。不是你爸妈你朋友的，而是你自己的。努力平静接受任何和自己不一样的价值观。\n真正的坏人，都是有自己一套逻辑和算法的。坏的合情合理有理有据。\n人要有个目标，这样才会有生活的动力。不然人这一生，可能发个呆就过完了。不要把日子过成复制粘贴。\n每个人都是平凡人。只是经历不同而已，低谷时不必自卑，身居高位不要狂妄。\n每个人都可能在下一刻就死去，还有什么没完成的事情，请想到就立刻去做。\n我是俗人，爱钱爱漂亮爱自由爱吃爱玩爱闹爱买爱生活也爱独处和孤寂。\n深山的鹿，不知归处，万般皆苦，只可自渡。\n我们都有病。但是，保持乐观主义。\n原来我们都是孤独的鬼，从来处来，去该去处，时代的列车面无表情的向前开。\n所有人都老了，再没有人死于心碎，我数着日子和钱，等着永逝降临。\n每一个不曾起舞的日子，都是对生命的辜负。\n我曾七次鄙视自己的灵魂：第一次，当它本可进取时，却故作谦卑；第二次，当它在空虚时，用爱欲来填充；第三次，在困难和容易之间，它选择了容易；第四次，它犯了错，却借由别人也会犯错来宽慰自己；第五次，它自由软弱，却把它认为是生命的坚韧；第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。\n我们从来不知道人生的路有多长，也不知道自己的内心究竟想奔跑多久，但我们却也清楚的意识到，努力地向前走，就是对人生最好的馈赠。我们那么努力，不是为了感动谁，也不是为了证明给谁看，或许只是因为不甘心内心最好的自己被无辜遗弃，而日日夜夜告诉自己永不放弃。\n哪有什么选择恐惧症，还不是因为穷；哪有什么优柔寡断，还不是因为怂。\n有也行，没也行，不争不抢，不求输赢。\n一生中总会遇到这样的时候，你的内心已经兵荒马乱天翻地覆了，可是在别人看来你只是比平时沉默了一点，没人会觉得奇怪。这种战争，注定单枪匹马。——白岩松《痛并快乐着》\n处于情感纠结期的人是最不光彩的，也是最丑的残忍的一类人。有可能是交到了消耗型的朋友，也有可能是失去了曾经的信念和力量。在此我想说，及时离开那些折磨你感情的人，将时间花在讨好别人寻找慰籍和认同感上的行为是幼稚的。只有爱自己，别人才会爱你，就算再想和别人搞好关系也不要把殷勤挂在脸上，一旦你先主动讨好，就掉了身价，于是便有了轻蔑，而且也有可能别人也想和你搞好关系呢。所以静观其变，先充实自己，提高实力，自然有人看得上你，也就越来越光彩，越来越漂亮。我认为这才是真正的美。\n不要丧！不要丧！不要丧！没事多看书别乱想，真的是恶性循环会变丑会变胖！\n心知所向，便是乐土。\n\n\nReprint: https://ustczen.gitbooks.io/zhihu-mingju/content/\n\n\n语录杂集当年也不知是谁与我们说，若天压我，劈开那天，若地拘我，踏碎那地，我等生来是自由身，谁敢高高在上？\n时间可以冲淡一切，可也仅仅是冲淡而已\n我要这天，再遮不住我眼要这地，再埋不了我心，要这众生，都明白我意，要那诸佛，都烟消云散！\n当时光走过了雨季，当一个人走过陌生城市，当青春开始泛黄，蓦然回首，身边早已经空无一人，你便会很想回到原点，回到自己来时的路。\n你以为优秀了，你喜欢的人就会喜欢自己，这是最大的误会。这世界上有很多事情努力可以得到结果，但感情的事情恰好不在其中。\n一直觉得这世界上告别的仪式挺多的比如喝一场大酒比如去一场旅行又或者情不自禁的在车站大哭一场可是后来才知道人生中大部分的告别是悄无声息的甚至要很多年之后オ知道那天的相见已经是最后一面此后即便不是隔山隔水也没有再相逢\n有时候，一句‘我们再也回不去’比一句‘我爱你’更像爱情。\n杜拉斯说“爱情是场疾患”，看李宗盛和林忆莲隔空对唱《当爱已成往事》，又想起聂鲁达说的“爱如此短暂，遗忘如此漫长”，有些人错过了，让我们明白爱和拥有是两件事、适不适合比喜不喜欢更重要。或许一切最好的安排，就是后来我们没有在一起，很久很久以前，还好遇见你。\n忘不了过去，又不愿回到原点的人，一不留神就会显得有些孤单。\n如果曾经毫无保留地爱过，那么之后的每一次，都会有所保留。能量守恒定律果然名不虚传。\n世界上任何书籍都不能带给你好运，但是它们能让你悄悄成为你自己。\n我们这群人，苦没有真正苦过，爱没有用力爱过。每天受着信息大潮的冲击，三观未定又备受曲折。贫穷不再是正义，又妄图不让金钱成为唯一的追求。过早看到了更大的世界，勤奋却又不过三天。热血透不过键盘和屏幕，回忆止于游戏和高考。像一群没有根的孩子，在别人的经历和精神里吵闹。\n当你看到一个人温和的时候，你可能看到的不是希望，而是绝望。当你看到一个人偏激的时候，你可能看到的不是绝望，而是希望。\n但无论时代如何更迭变换，生活的初衷不过都是：广厦万千，夜眠仅需六尺；家财万贯，日食不过三餐。\n人会长大三次第一次是在发现自己不是世界中心的时候第二次是在发现即使再怎么努力终究还是有些事令人无能为力的时候第三次是在明知道有些事可能会无能为力但还是会尽力争取的时候\n《请停止无效社交》中写道——“你忙于交际、疲于应付，鸡同鸭讲的尴尬无处不在。你为了别人的欢笑而奔波，又为了别人的肯定而牺牲自我，你的人生仿佛都不是你的。其实，你根本不是在社交，而是在无谓地蹉跎光阴。”\n与其对不爱你的人热心，不如对爱你的人释放爱意。\n时间会让你看清每一张脸，久伴会让你知道每一颗心。热烈的乍见之欢很容易，温柔的久处不厌最难得。\n你可以喜欢长发，但你不能说清爽干练的短发姑娘没有女人味，这是野蛮。你可以不修边幅甚至蓬头垢面，但你不能说精致打理的男性不像男子汉，这是嫉妒。你可以喜欢素面朝天，但你不能说化妆的人是卖弄风尘，这是曲解。你可以喜欢穿长袖长裤，但你不能说吊带短裙是搔首弄姿，这是妄言。我知道你崇尚自由，但言论自由的目的是交流思想，而不是发泄怒火。\n陪你聊几天的人你就说喜欢人家恋爱没谈多长时间你就想和人家回家交个朋友对你好点你就说这是一辈子难怪你失望伤心要死要活这都是你天真的代价你要知道人和人能够保持长久且舒适的关系靠的是共性和吸引而不是压迫捆绑奉承和一味的付出以及道德式的自我感动\n人间纵有万般浪漫情话和绝色美颜，但在时光的齿轮中氤氲着醇香让我们念念不忘的，依旧是那团烟火气息。而教会我们爱让我们值得被爱的，正是这份充满平凡的烟火气息中的温柔和善良。\n没有回应的付出就别再继续了。没有回应的喜欢，也就别在坚持了。\n愿你们都被喜可以被人喜欢着，都被人深爱着。现在没有的话也没关系，大步向前，总会有人在路边等你，他会踏着朝露，带着晚霞，手捧你喜爱的花，眼中带有万般柔情。愿你们一生努力，一生被爱，想要的都拥有，得不到的都释怀。\n世间最动人的一刻，从来不是“我爱你”，而是“我害怕失去你”。\n我见众生皆草木，唯你是青山。\n那一夜，春雷响，不负春光\n繁华三千，转瞬便是云烟。烦恼无数，想开便是晴天。人生皆过客，何须惹尘埃？\n喜欢一个人，深陷其中，定好过隔岸观火。\n对你好是情分，不好是本分\n鬼魇举臂围城，覆淹星火，你恰是回头 万人中只一眼，却足以救我 ——《不可谖兮》\n你的瞳孔是宙宇星宿的流转，棱角在恒河沙数里篆刻成碑。你的美丽要从深海数向星云团簇，真的却像假的—真实存在却不可言喻。\n“许多夜晚重叠,悄然形成黑暗,玫瑰吸收光芒,大地按捺清香,为了寻找你,我搬进鸟的眼睛，经常盯着路过的风。”\n你眼中有星海浩渺，山河千里。而我眼中有你。\n温山软水繁星千万不及你眉眼半分\n北京的风，上海的雨，广州的太阳，心里的你，一个都不能少。\n对女人强吻表白一般会有两种结果，一种是啪，一种是啪啪啪。这就是屌丝和高富帅的差距。\n愿你熬过万丈孤独，藏下星辰大海\n俄罗斯方块教会了我们，如果你合群，就会消失。\n希望是火，失望是烟，人生就是一边生火一边冒烟。\n其实，电脑游戏从小就训练你，把Boss当作自己最大的敌人。\n生活磨光你的棱角，是为了让你，滚的更远。\n掐指一算，你俩要散。\n白天嘈杂得不愿意醒，夜晚安静得舍不得睡。\n演绎到深处的自律其实就是一种近乎变态的自虐。锻炼锻炼，对于这项事情，在我而言 不只是炼体，也是炼心\n愿热爱可敌岁月漫长\n来世上一遭，要做就要做最热爱的事\n我情绪化 没有安全感 不喜欢说话却总爱胡思乱想难过的时候会听歌 睡觉 刷微博放我一个人呆会儿就好了不用担心 \n白天里的沉默理性总在夜里翻了船\n吾倾慕汝已久，愿聘汝为妇，托付中馈，衍嗣绵延，终老一生 。\n花开花落，到看尽人间繁华时，便洒脱离去。\n十步杀一人，千里不留行；事了拂衣去，深藏身后名。\n暧昧上头的那几秒，像极了爱情\n最近生活总是一团糟，好在我用吃和睡觉填补了\n人间烟火气 最抚凡人心\n有些人的命，该收了，既然他们不甘寂寞，那么就送他们上路吧\n突然想起一句话：“后来，表情和心情再也没有关系了。”\n名声在外，有好有坏，以前是以前，现在是现在，我就站在你面前，你看我几分像从前。\n吾欲乘兴而行，兴尽而返。可惜，青春如梦。——《别跟我说你懂日本》\n我曾多次想象：背着行囊的自己，走出空荡荡的车厢，踏上一个不知名小站的清冷的月台，等候下一趟列车如约而来，带我驶向未知的远方。——《别跟我说你懂日本》\n怀抱着最好的希望，但预做最坏的打算。——《肖申克的救赎》\n有些鸟儿是永远关不住的，因为他们的每一片羽毛都沾满了自由的光辉！——《肖申克的救赎》\n兴趣是最好的老师饥饿是最好的厨师\n不要高估和任何的人关系。聊得多深入、多有认同感，甚至上过床，都证明不了什么，能给出清晰答案的只有时间。高朋满座的婚礼，也会变成一地鸡毛的离婚。海誓山盟的初恋，也会变成欲言又止的陌生人。男女之事，最没有规律可言。\n必然中有偶然，偶然中藏着必然；偶然发生必然的事情，必然造成偶然的结果\n与生俱来的牵绊，岁月也拆不散。\n如果一个人足够理性的话 他就能接受各种各样的失去\n有一个摇滚青年曾说：最单纯的喜欢就是，就算你拒绝了我，我对你也永远没有埋怨。但我不会再靠近了。如果你有求于我，我依然会鞠躬尽瘁。从今往后我会把喜欢藏起来，不再招摇过市了。我会努力过得好，希望你也是。\n村上春树写的，大意是说，如果我爱你，而你也正巧爱我。你头发乱了时候，我会笑着替你拨一拨，然后手还留恋的在你发上多待几秒。如果我爱你，而你不巧的不爱我。你头发乱了，我只会轻轻的告诉你，你头发乱了喔。\n真心喜欢一个人啊，就是满心向你，只字不提。我为你做的，你知道就知道，不知道就算了。我乐意对你好，并不是贪图什么回报。\n“爱一个人就是在他的头衔、地位、学历、经历、善行、劣迹之外，看出真正的他不过是个孩子——好孩子或坏孩子，所以疼了他。”\n未经他人苦，莫劝他人善。\n男人好不好色很容易区分 把手放在他鼻子下 有呼吸的就都好色\n我本来能忍受黑暗，但你让我见过光明\n我多么希望在学习的时候，有个人陪在身边一起努力，那是我一直向往的生活哎~就是那种很心安的感觉，学着学着就忘了身边还有人，就像漆黑的夜晚亮了盏台灯的感觉，此时的光明不可或缺，稳定而又祥和，当她在的时候，是一种心安的既视感，可当她不在的时候，就像回到了古时，点一盏蜡烛，挑灯夜读般，鼻吸口呼间，灯影闪烁，恍恍惚惚，总是让人难以入神，浮想联翩……\n这个世界，没有善与恶，只有强与弱。\n最感谢姜姜的，就是七年来她带着我一起体验的东西，最后都会证明是对我有益的，或是我很享受的。比如带着我吃我自己根本不会尝试的食物，最后都成了我的最爱。比如今天在我身体崩溃最焦虑的时候，硬拽着我出门散心，再神清气爽地回家。你总说觉得在拖累我，但你不知道你已经拉着我往前走了多远。\n王者荣耀自从上过王者，就没动力继续打的动力了，因为明白一个道理：在非自己专业但又感兴趣的领域，有过一次稍微深入的经历即可，如烟花般绚烂短暂，却也曾留存人间；人生苦短，术业专攻，有自己需要是王者的位置，不设上限。\n时间这个东西（时间是不是东西）没法说，不可说。记忆也是。你不知道你遗忘了什么。 试图在记忆里苦苦还原一个真相，失忆是最好的解脱。\n污话&amp;情话：爱到深处腿自开，啪到腻时说拜拜\n承诺就像放屁，当时惊天动地，过后苍白无力。\n我想升华一下我们纯洁的革命感情 噗……这都什么年代了，还革命感情，鬼吹灯看多了吧你\n不是除了你，我就没人要了。只是除了你，我谁都不想要。\n妹子，帮个忙 我爸妈想要个儿媳妇\n“跟你说个坏消息” “什么坏消息” “我对你的思想不单纯了” \n今晚能采蘑菇吗？\n最喜欢的是睡觉和你，简称睡你\n“我重要吗”“再重都要”\n最爱你的人，不是冲着你的光芒匆匆赶来，而是看到你在泥地里艰难前行时，不顾你的狼狈，温柔地伸出了手。\n我当年也是个痴情的种子，结果下了场雨……淹死了。\n请你想起我的名字，在你缺少安慰的时候，我要你记得，我就是那个时刻惦念你的人，我就是那个，关心你的人，我就是喜欢你的人！ \n我是真的想给你打电话，问你在哪里，在干什么，可是我害怕你身边有其他人在，所以我忍住了，因为我们现在一点关系都没有。\n男孩跟女孩分手了，男孩让女孩先走，女孩转身离开，男孩在后面痴痴看着她的背影，女孩转身后，止不住的抽泣，背影一颤一颤的，走远了，女孩蹲在地上，不顾路人的眼光，大声哭泣着，忽然，女孩被一股力量拉起，扑进了一个怀抱里，那个怀抱是她熟悉的薄荷香，清清凉凉的，是那个男孩，男孩说：我还是舍不得把你让给别人。\n曾经一个朋友给我讲过一个故事，一棵树爱上了马路对面的另一个棵树，我问她然后呢，她说然后就没有然后了。很久以后我才懂，不可能的事，开始就是结束。\n爱情，本来就是勇敢者的游戏。如果你不够勇敢，你很快就会出局。\n我跟你说过多少次了，抱怨没用，你得抱我。\n虽然我想和你睡在一起确实是想摸摸你占你便宜，但是我更想在你冷和做噩梦的时候能在你身边紧紧的抱着你。\n一起出去玩玩的话 我想彼此在各方面都会熟悉的\n理解归理解，醋还是要吃的\n有些人消失之后，就像雨消失在雨中。\n未来，不管我是否还记得，那些曾经，发生过的，经历过的，他们都切切实实地存在过，流存于这世间，这是什么也改变不了的事实，即便岁月悠悠，时间轮回，都无法改变，这世间，他们的生命里，他们的时光中，你，来过……\n《快把我哥带走》——\n就像是忍了一个冬天的大雨总是在春天的某一个时刻突然爆发，无论之前隐藏的有多深，大雨总会如约而至。我们总是看到伤口，才知道自己受伤了，迟迟不肯说出的对不起是逞强和逃避，这三个字，是伤口愈合的开始。\n伤口被捅开的当下，人往往感受不到疼，真正的疼在生活里。伤口随着生活的展开被越撕越大，离开的人，像是一段幻肢，哪怕再也不会回到你身边了，却时刻隐隐作痛着，连回家的路都变得硌脚，我才愿意承认，我最害怕失去的人，是你。\n“有人说，苦难是由两部分组成的，疼痛和抵抗。疼痛是保持清醒，抵抗是以毒攻毒。所以疼一下其实我不怕，我怕的是甚至和我一起经历的人都不知道我疼在哪儿，我更害怕被你弄疼。我害怕这个世界，对我的攻击里，也有你的一刀。所以不好意思，我也要伤害你。”\n原来会发光的人也会怕黑啊\n这是我一生中最兴奋的时分 这也是我一生中最幸福的时分 因为，他就是这么一个善良又可爱的人啊\n“你有没有想过，有一天你突然要离开你的生活，你被赶出了你以为永远不会倒塌的生活。那生活虽然不精致，但却是你一砖一瓦建的一切。你能给一个小女孩留下什么呢？给她被爱过的记忆，让她分清冷暖。给她适时的离别，让她拒绝依赖，让她成为一颗小树，而不是一根藤蔓。”\n人啊，分为两种，值得依赖的和可以给别人依赖的，就像树和藤\n“随着一次次告别，好像离开成为了实锤，但你却依然无法想象今后的全新生活。因为你知道一部分的你将留在这里，永远无法真正离开。”\n“时分，你又逗笑了所有人，唯独弄哭了我。正如你所擅长的，好像漫不经心的。”\n“这是一年的最后一夜，人们在这一夜情不自禁地觉得一切可以重新开始；可以卸下武装；可以擦去眼泪。吃完一顿饭，过完一个年，再重新披甲上阵。我是一个很平凡的打游戏都会输的人。如果只有我一个，许多事情我会不敢面对。可是因为你，我可以无所不能。我知道你也是。”\n“在这个时候，好像大家都记不起自己曾有过想要放弃的念头，就算想得起来，也不会愿意承认。许多事，在经历之前，是想要逃避。而经历之后，是不想错过，不想错过一段一生一次的经历；不想错过一次冒险；不想错过一次主动的和好；不想错过内心对万物有灵之爱被唤醒的时刻；不想错过重新认识一个人的机会；不想错过从未发掘的另一个自己；不想错过那个给你温暖的人，那个挺身而出的人；不想错过那个闪闪发光的人，哪怕他们都是一群二货；而你最不想错过的是与那个二货，紧紧相依的每一个时刻。”\n“我猜，他面对内疚的方法，是逃避；我猜，当别人不能给你温暖，很多时候，是因为他们自己也深陷在孤独里。更不真实的是这一瞬间，猝不及防的，我原谅了父亲。”\n作为家人，你会失去很多权利。比如说，你永远无法真正伤害你的家人，也没有办法真正的嫌弃他，更没有办法向别人一样看待他，甚至没法，对他说出一句简单的谢谢，更重要的是你永远没法离开他，否则就是只有血缘关系的陌生人\n“青春期的孩子是最饥饿的野兽，他们时刻需要被关注，被认同，甚至需要发现有一个人跟他很像，哪怕只有一点点。他会通过这个人知道，他被世界接受了，他不再是被世界误解的弃儿。他的呐喊终于可以听到回声，否则一辈子都将困在世界的另一端，永远无法长大。”\n“世界浩瀚，宇宙虚无，人与人之间的关系微妙而又脆弱，只有想念。只有想念可以让一切重新联结；让停摆的钟继续走动；让孤独的人忍受分离；让那辆路程很长很长的巴士。因为有人在终点等你，而让终点像一个起点。”\n“不要依赖任何人，除了你的兄弟。因为他是真正能陪你走到最后的那个。要追求普通的生活，因为普通生活的一部分就是有人分享。而高处，却往往不胜寒。还要明白人就是要用一辈子去习惯分离。”\n“那个”“怎么了”“那个啥 公主抱要不还是算了吧 这种中二的英雄主义 在别人看来 果然还是太羞耻了对吧 所以还是背你去医务室吧”“呵呵 随你”\n“时秒 那可是你最喜欢吃的土豆炖肉”“哼 六天前确实喜欢 刚做好那会 它确实还是土豆炖肉 就因为你每晚都往吃剩的土豆炖肉里乱加食材 最后它变成什么样子了难道你忘了 那东西早就不是土豆炖肉了 简直就是一锅实体化的马赛克”\n“没钱啊 放弃吃烤肠 吃剩饭才是人间正道”“不要”\n有一年和她分别，坐出租车离开，听到车里放的音乐，想到也许再不能相见，那一刻的感觉留到现在。爱从来不是相聚，是望穿秋水。\n村上春树说：我以为人是慢慢变老的，其实不是，人是一瞬间变老的。\n踏碎零花，执剑称皇！\n夏雨微尘轻拂袖，两衫风雪若得闲。\n人生四然：来是偶然，去是必然，尽其当然，顺其自然 …\n过俗世的生活，做通天的梦，手不能触及的，心可以直达。\n明月清风晓星尘，傲雪凌霜宋子琛。\n有些事情，即便不用纸笔，也一样会被铭记。\n镇生者之魂，安亡者之心，赎未亡之罪，轮未竟之回。\n心有猛虎，细嗅蔷薇。\n如果……不是因为我的缘故……或许大家都不会出事吧……\n现实就是一本蹩脚的小说，它从不按常理出牌。\n生而为人，我很抱歉\n生如夏花之绚烂，死如秋叶之静美。\n他是终日不化的冰山，遇见极圈不落的骄阳。\n吾念所归，无惧无退！\n追求得到之日即其终止之日，寻觅的过程亦即失去的过程。\n天自撰我命 唤魂为逆 肆酒行 削竹横笛借音\n亦恶亦怜薛成美，半生恶尽半生痴。\n我是午夜的行人，被寂寞抓住拷问；你是无垠的星辰，照亮整夜的风声\n凡心所向，素履所往，生如逆旅，一苇以航。三月桃花，四月欢唱，两人一马，明日故乡。流浪陌路，暖然绯凉，写意人生，相识一场。不关此世，不负己心，我自倾杯，君且随意。——七堇年《尘曲》\n溪云初起日沉阁，山雨欲来风满楼。\n人生如逆旅，我亦是行人。\n\nhttps://www.yiyiwenku.com/read/23972.html\n\n早知半路应相失，不如从来本独飞。\n发衰辞头，叶枯辞树；物无细大，功成者去。\n人生自是有情痴，此恨不关风与月。译：感情本来就是一个人的事。自古以来，从来不缺情到深处、为情痴狂之人，这与风花雪月又有什么关系呢？\n世事短如春梦，人情薄似秋云。译：人生短暂，就像春梦一般转瞬即逝。人情淡薄，恰如秋日的云凉薄冷淡。\n时人不识凌云木，直待凌云始道高。\n梦里不知身是客，一响贪欢。哲理：人生如梦，我们以为活在真实世界，当一觉醒来，才发现所有的一切都是空无。所以别让自己活得那么累，那么世俗和功利。\n花看半开，酒饮微醺。\n\nhttp://www.hzpzyy.com/z/18831.html\n\n亲则疏，远则香。\n你穷，有人跟着你，这就是真情；你病，有人照顾你，这就是温情；你冷，有人抱着你，这就是深情；你哭，有人安慰你，这就是抒情。\n人生的路，要边走边看，边走边忘。直奔目的地的人生是单调而繁忙的，因为只为一个目标活着。频频回头的人生是痛苦的，因为既放不下过去，又错过了当下。\n似水流年是一个人所有的一切，只有这个东西，才真正归你所有。其余的一切，都是片刻的欢娱和不幸，转眼间就已跑到那似水流年里去了。我所认识的人，都不珍视自己的似水 流年。他们甚至不知道，自己还有这么一件东西，所以一个个像丢了魂一样。\n\nhttps://ustczen.gitbooks.io/zhihu-mingju/content/1.html\n\n有人住高楼，有人在深沟，有人光万丈，有人一身锈，世人万千种，浮云莫去求，斯人若彩虹，遇上方知有。\n好朋友应该是这样，无论分开多久，重逢时随便一个话题都能聊起来，不需要从过往点滴中寻找共同记忆。非要用高中时流行语和表达方式交流的，只能说我们走散了，散就散了吧，不要再往回找了。把有限的时间和精力留给值得的人，你我都是。“路过的人，我早已忘记；经过的事，已随风而去。”\n几米有一段话：当你我喜欢我的时候，我不喜欢你；当你爱上我的时候，我喜欢上你；当你离开的时候，我却爱上你。是你走的太快，还是我跟不上你的脚步？在爱与不爱之间，总存在一个时间差。我也在这恍惚间失去，但未曾觉得遗憾，我总习惯把错过看作命运的安排，但我不知道这样好的心态还能持续多久。\n生活虐我千百遍，我待生活如初恋\n1.天会黑，人会变，三分情，七分骗，路还长，别太狂，以后指不定谁辉煌！2.得意时，朋友们认识了你；落难时，你重新认识了朋友。4.有些好朋友，真的是不知不觉就疏远了，…\n我们长期以来的想法和感受，有一天将会被某个陌生人一语道破。\n有些人，有些事，只要曾相遇过，经历过，那么他们一定是在你几十载的生命里真真切切存在过，即便最终一切都淹没于滔滔时间巨浪中，也改变不了他们存在过的事实，相聚是缘，离散是分，缘分如此，足矣。\n人各有命，生死在天，相聚是缘，离散是分\n如果真正喜欢一个人 最后宁愿伤的是自己 舔狗舔到最后 不是应有尽有 就是一无所有\n事实上，真正的关心最终只有一个表现：为之心甘情愿地花费时间，哪怕“浪费”时间。这也很容易理解。因为，当你把时间花费到一个人身上的时候，相当于在他的身上倾注了你生命的一段——哪管最终的结果如何，反正，那个人那件事都成了你生命中的一部分，不管最后你喜欢还是不喜欢。每个人的时间都是有限的。所以最终，“真正的好朋友”谁都只有几个而已。\n专心做可以提升自己的事情；学习并拥有更多更好的技能；成为一个值得交往的人；\n\n学会独善其身，以不给他人制造麻烦为美德；用你的独立赢得尊重；\n除非有特殊原因，应该尽量回避那些连在物质生活上都不能独善其身的人；那些精神生活上都不能独善其身的，就更应该回避了——尽管甄别起来比较困难；\n真正关心一个朋友的意思是说，你情愿在他身上花费甚至浪费更多的时间；\n记住，一个人的幸福程度，往往取决于他多大程度上可以脱离对外部世界的依附。\n\n我按我的想法写，你用你的智力读，千万别认为我有误导你的兴趣。非要认为自己被误导了的智力半残者，对不住您了。\n如果你觉得光靠努力，就可以改变命运。要么你出身优渥，一辈子没为钱发过愁，更没吃过钱的苦。要么你年纪太小，还没被社会毒打过。出身，差不多决定了绝大多数人的天花板。努力可以保证你自己的生活变得更好，但是不能保证你比别人过的更好。\n陪你青丝到白发 ，陪你朝阳到夕下 ，陪你三餐四季煮茶赏花\n只要思想不滑坡，方法总比困难多！\n“有这样一群人，他们看上去沉默寡言，生人勿近，甚至不合群。在你看来他们是那样的孤独寂寞，但请收起你的怜悯。他们心中自成一方天地，那是别人所不能触及的净土，瑰丽而又惊世；饱含着生命力与自然的野性。对于他们这方土地已经足够热闹，无需尘世喧哗。而所谓的孤独与冷漠不过是这世界的守门人。”\n感觉就跟一个有点好感的女生合租一样，会时不时地留意它，平时没什么交集和接触、彼此过着自己的生活，距离感刚刚好。\n远赴人间惊鸿宴，一睹人间盛世颜\n不要把友情放在一个神圣的高度上，有些朋友注定是在某一阶段经过。人能做的，是互相怀念，彼此感恩，不是互相捆绑，互相逼迫。人生大抵如是，相识免不了人在风中，聚散免不了各自你我。\n人和人刚认识的时候最好，虚伪又热情，新鲜又浪漫，你知道我图谋不轨，我知道你故作矜持\n情出所愿，事过无悔，不谈亏欠，只谢遇见。\n你觉得“幸运”的时候，是因为你的欲望得到满足；你觉得“不幸”的时候，是因为你的欲望落空。\n记忆是掌心的水，不论你摊开还是握紧，终究还是会从指缝中一滴一滴流淌干净。只是，那水的凉意，却是可以让人始终无法忘记！\n现实中的博弈往往逼近纳什均衡。而善良的聪明人却试图找到最优解。\n不管以后我们疏远成什么样子，请记得，当初我对你的好是认真的，剩下的路我就不陪你走啦，照顾好自己，可能我只是你生命中的一个过客，但你再也不会遇见第二个我了\n只有和精神病般执着，才能有所为！\n创业多数时候是一条曲折的路。私以为创业成功离不开三个要素：创业者的商业技术眼光，靠谱的团队成员推动项目落地实现，一点点时运。所以创业公司一定要小步快走，早出原型，迅速迭代，能不能活下来有时候就取决于你有没有赶上一个时机。\n看到你问了，如果你想以后在安全圈混，就去i春秋、freebuf、看雪论坛、安全客、安全牛这些网站，里面的内容足够你学习成为高手而且基本全是关于网络安全的，不会教你office、重装系统哈哈，目前国内很多黑客比赛不管是国家级还是世界级，都是使用的i春秋的平台，国内最牛逼的黑客有这么几个，百度X-team实验室的黄正微软漏洞提交量亚洲第八名，阿里的吴翰清，人称道哥，年薪500万好像，另外还有黑哥，TK，余弦等等老前辈，还有腾讯的几个攻防实验室参加世界级比赛也能拿前几，清华的蓝莲花战队也是世界知名，另外今年网鼎杯出现个一人吊打全国的牛人，记住，真正的黑客都是用代号，大家都不会喊真名，都是彼此知道代号，为了隐私考虑的。然后我再给你说说计算机大神需要的东西，首先要精通C、C++、Java、PHP、JavaScript、MySQL、Nosql数据库、python等这些编程语言、系统方面要精通Linux系统和脚本编程，然后就是要了解计算机的原理、软件的运行原理、要了解网站的各种漏洞的形成原理，测试识别方法，漏洞利用方法，各种工具，了解汇编语言，懂软件破解、加解密破解、提权、信息隐藏、二进制漏洞挖掘、二进制漏洞分析调试、漏洞利用和POC编写，上面是传统安全的另外这几年新兴几个行业比如移动安全主要是安卓和苹果、物联网安全比如智能家居汽车安全、工控安全比如ICS、人工智能安全、无线电安全比如WiFi蓝牙，手机GPS，无线电波、飞机卫星等等，另外还有硬件安全。这么多东西学完差不多算半个专家，资深专家都是在某一些领域的经验无法替代，少了这个人这个领域找不到人，这类人也就四十岁了吧，学习这么多东西差不多要看上一图书馆的书，你可以真正的黑客高手看成一个移动的图书馆。你想了解黑客历史的话建议看诸葛建伟的书，百度百科有，黑客打架的事2001年有一次，11年好像有一次，05年有一次，主要人物和详细过程百度有很多。对了，黑客很多也都在国内各个公司的SRC挖漏洞提交赚赏金，SRC就是应急响应中心，比如百度SRC、阿里SRC、腾讯SRC等，大黑客一般都是SRC排行榜前几名的人，都是用的网名很少人知道真名另外呢，我也是一个黑客，安全圈里的，我在互联网上有几个身份，你就不用浪费时间通过我ID找到我是谁了呵呵我只是给你指点一下，麻烦采纳我答案给我财富值和奖励，虽然我用不到，但我打字也得有回报啊，我很忙的\n每段感情都是需要相互的 自己的女朋友自己来哄吧 喜欢一个人就好好对她 毕竟世界真的很大 有的人真的一转身就遇不到了 自己所拥有的就好好珍惜 女朋友是用来疼的 不要因为她犯了一点小错误就不理他 有时候 她真的很爱你 很害怕失去你 她怕你的突然离开 毕竟习惯了有你在 什么事都依赖你 她并不是不在乎 只是怕自己自作多情 缺乏安全感 只因为你的忽冷忽热 你要明白 不爱她就明白告诉她 别一次一次给她期望又一次一次给她失望 女孩的心真的死了就死了 爱她就好好对她 别让她受委屈 别让她哭 每个女孩都是独一无二的 希望你们能好好珍惜现在的感情 毕竟耳听爱情的年纪已经过了 不如给她一个未来吧！\n穷人思维总以钱来衡量价值，富人思维总想着用钱来解决问题、获取价值，这两种思维导致的做事方式真的千差万别。所以，我总是号召大家多赚钱，但赚钱不是目的，有钱了你才有用钱解决问题的资本，而本质上，生活中的 99% 的问题都可以用钱解决。\n下层人，人踩人。中层人，人帮人。上层人，人捧人。\n孤独我想大概有三种境界，1.我告诉你，你不懂；2.我向你解释，你不懂；3.我他妈不想说了。\n为啥我一直极力劝大家去大城市，去发达城市呢？不管是就业，还是高考的志愿选择，因为你还年轻，你不能因为现在这样，就认为以后就一直这样了，现在的你不能定型的，是要去多闯闯，多搏搏的，年轻时候不搏，你还想着等到三四十岁再搏么？而大城市，是机会最多的，是学习成长最迅速的，你接触的圈子，你周边的人才，你看到的东西，你的思考认知的改变，这些都是无价的，自己能力有成长，机会资源丰富，就不怕放手一搏，说白了，大城市，可以缔造未来无限可能性的概率是更大的。\n早安！如果你想做成一件事、得到一样东西、取得一项成就，就安静点、耐心点、一步步按部就班做，渴求别太强烈，太强烈反而浮夸坏事，只要踏踏实实慢慢积累，过一段时间，自然水到渠成。如果过于用力，就会大起大落、手忙脚乱、还特别容易失落放弃，事业如此，感情亦如此。别着急，好东西都在路上。\n很多人的焦虑，在于把他人的期望当真。\n好的英文可以帮助表达助兴，犹如镶了金牙;而不好的中英夹杂，像牙缝里塞了肉屑，使用者本人得意洋洋觉得自己吃上肉了可以炫耀，在外人看来颇为不雅。这段类比是精通八国外语的钱钟书说的。在外企里想往上走，仅谈用语要么全用中文，要么全用英文。常年保持无用低效的中夹英，始终会停留在瘪三状态。\n人在善良之前，是要先长出牙齿的。\n别人的优秀让你心情低沉；而他们的潦倒则更能让你放松。每个来自别人进步的好消息都会让你心头一紧：人生是场比赛，别人跑快了，就是你慢了；别人慢了，就等于你快了。 人生最大的幸福不是努力前进，而是坐等他人倒退，在效果一样的同时，你还拥有了轻松。幸灾乐祸是人类最聪明的天性。\n耳朵痛了就把耳机拔下来   眼睛疼了就闭眼休息一下    王者玩腻了就下载绝地求生试一试    手机没电就充电   头晕想吐就一个人去看医生   我跟你说   有的时候我们一个人也能活的很精彩.\n假如一个人最落魄的时候，是靠自己走出来的，他们好转后就不会轻易相信任何人，曾经在意的也不会在意。人的博爱是在相互认同中生长的，可现实点来讲，并不是人人都有被善待的机会和环境。宠爱一身的人，到死都不会明白这个道理。很多人成长中就是没那么多朋友，没那么多选择，没那么多爱情。\n他们习惯了一个人解决所有事，再难也不会开口求人。这种成长和冷漠，和性格没有任何关系，时势塑造观念，环境决定喜好。鸡汤不是所有人都爱喝，解铃还须系铃人。人与人之间的不同，是很难去调和的。\n人生向晚，越过黑暗又是黎明，生生不息的奔波为何？\n我听过三观最正的话是：“有个女孩向我表白 我拒绝了 我没车没房没存款 她不懂事 我得懂”\nPoC的全称是Proof of Concept，意思为概念验证，通俗的可以理解为漏洞验证脚本；而Exp是Exploit的简写，意思为漏洞利用，两者的区别即使一个仅限于验证，而一个是攻击利用。那么Payload呢？Payload是组成PoC和Exp的必要部分，也可以理解为验证代码。payload代表验证漏洞存在所使用的具体流量及代码\n不要用暧昧消耗爱情，不要用敷衍考验真心，要谈就谈专一的恋情，然后用余生去去磨合，去成长，去珍惜，别留遗憾。\n人生原则：你试图说服好，我就笑而不语。夏虫不可语冰，并不是所有人都配得上我的解释。\n人生海海，岁月匆匆，错过是人间常态，多得是有缘无份\n人因不惜而散，心因不真而凉。\n人跟人之间呐！随缘，别攀援。能凑，就凑一块儿，不能凑，也别再勉强。\n圈子不同，话不投机，你有了你该认识的人，我有了我该找寻的方向，形同陌路似乎变成了一件无法阻扰的事。\n遇到烂人不计较，碰到破事别纠缠。\n就像尼采在《善恶的彼岸》中所说：与恶龙缠斗过久，自身亦成为恶龙。凝视深渊过久，深渊将回以凝视。\n就像王小波所说的那样：“人的一切痛苦，都是源于对自己无能的愤怒。”\n就像村上春树说的：“不是所有的鱼，都生活在同一片海洋”。\n做一个冷酷无情的人，尤其对自己，精力用来处理事情，而非处理情绪，我几乎不会难过，虽然事情难做。\n易定者无感，易感者无定\n看淡人生成败，生活幽闲自在。\n有实力才有魅力。是我的终究是我的，不是我的强求也没用。\n朋友之间也是讲缘分的，一切随缘。罗素曾说过：每个人都必须生活在志同道合的群体中，才会有幸福感。包容一切，宽恕别人，同情自己。\n人的一辈子，其实最开心的不是赚了多少钱，而是赚到了多少陌生人的信任，久而久之成为朋友，并且一直信任你，支持你，选择你；这是用钱都买不到的人格魅力！穷死不要撒谎，难死不要骗人！堂堂正正做人，明明白白做事！永远不要丢掉别人对你的信任，因为别人信任你，是你在别人心目中存在的价值！失信是人生最大的破产。永远相信：诚信可赢天下，守信方得人心！\n每段感情都是需要相互的 自己的女朋友自己来哄吧 喜欢一个人就好好对她 毕竟世界真的很大 有的人真的一转身就遇不到了 自己所拥有的就好好珍惜 女朋友是用来疼的 不要因为她犯了一点小错误就不理他 有时候 她真的很爱你 很害怕失去你 她怕你的突然离开 毕竟习惯了有你在 什么事都依赖你 她并不是不在乎 只是怕自己自作多情 缺乏安全感 只因为你的忽冷忽热 你要明白 不爱她就明白告诉她 别一次一次给她期望又一次一次给她失望 女孩的心真的死了就死了 爱她就好好对她 别让她受委屈 别让她哭 每个女孩都是独一无二的 希望你们能好好珍惜现在的感情 毕竟耳听爱情的年纪已经过了 不如给她一个未来吧！\n上位者，不应事事亲为，运筹帷幄中，决胜千里外！君子不立危墙之下，成大事者，运筹帷幄，决胜千里之外\n别笑得太大声，会吵醒了隔壁的悲伤。别爱的太肆意，会惊扰了对面的烦倦。要知道，每一种幸福，都有额度，挥霍的太多，消耗得就太快……\n我知道，无论是谁都要接受残酷现实的洗礼，才能走得更长远\n有的是我们的同伴，有的只是擦身而过的过客。在这段旅程里，有人与我们一路相伴前行很长时间，有人中途很早下车，消失在茫茫人海。有的人也许会再次相逢，有的人说了再见就再也不见。\n不以输出为目的的学习，都是对自我的内耗。真正会学习的人，都拥有输出这条管道，这才是终生成长的诀窍。\n人和人的层次不是一天拉开的，而是藏在每一天里，潜移默化的指引着你前进的方向，你是什么态度，就终将成为怎样的人。\n机会最喜欢乔装成“麻烦”，才让你看不到，抓不着。\n其实遇到你们才是最大的成就\n有些东西看似今天没用，未来也许会有大用。\n只关注眼前的实用性，会限制你的眼界，而一个人的眼界往往决定了他的人生高度。\n\nhttps://mp.weixin.qq.com/s?__biz=MzU3MTc1MjE4OQ==&amp;mid=2247492945&amp;idx=1&amp;sn=07168a8d73b555784d3367cb8c9f43b4&amp;chksm=fcd9cec3cbae47d536b6a417e5d924d522415435209550cacf5557f08d30dc01f39a9566abcb&amp;mpshare=1&amp;scene=1&amp;srcid=1110uUDha6gBHzWahw3jW5sq&amp;sharer_sharetime=1573372214090&amp;sharer_shareid=a243106da46becd8e497b913895005d8&amp;key=9872020ee631a1cbcb335c9068b159f1a2feaeb756c316349ae7b0a0e4d3cc9a265a9d8c2ba8730dd8bf154b3cb57fbe9b0c90236bdb751daaa03635df0bc9cd0e973fbe1e92d3886fc10a4adaed504cf40cbd8766f7a34e4fee02947337215e3ff55b8956fc29d8a1b2d24fda08173b1e94459ae4821aa6273bc7982ad5235f&amp;ascene=1&amp;uin=MTE4Mjg2MzM3Ng%3D%3D&amp;devicetype=Windows+10+x64&amp;version=62090529&amp;lang=zh_CN&amp;exportkey=A6uXz4SVdm2O3mqTOuZ7ECE%3D&amp;pass_ticket=UZ9tpLtgKIJFt%2BSLcKZIEQE6HCXyDjUkyT6ofvAka3%2BQxy3FaoQ7vgHCiyEuTmlg&amp;wx_header=0\n\n成年人的世界，放眼望去，都是波澜不惊的神情，千篇一律的笑容。不是我们学会了撒谎伪装，而是懂得了爱与回报，责任与担当。\n我们把疲惫的神情留在了人流攒动的地铁上，把委屈的眼泪冲进了狭窄灰暗的公司厕所里，把崩溃和不堪消化在夜深人静的格子间里。\n每天早上，即使再困再累，也要给自己打一管鸡血，奔赴早高峰的地铁；每个夜晚拖着疲倦不堪的躯壳回家，尽管筋疲力尽，也要在家门口深呼一口气，调整好情绪再进门；周末即使再想休息，也要腾出来时间陪陪老人孩子，尽好为人子、为人父母的责任。\n每一朵平静绽开的微笑背后，都是咬紧牙关的灵魂。\n随时随刻，扮演一个情绪稳定的大人，就是一个成年人的职业素养。\n无论在公司，还是在家里，不抱怨、不放弃，做好手上的工作、过好当下的生活，是我们每个人都要学会的成长一课，也是生而为人最基本的职业素养。\n我知道很难，但更知道，我们都会做到。 \n嘿，如果你是怪物，来大城市吧。这里的人都很忙，没时间拯救你，你唯一需要对抗的就是你自己。别让任何人，糟蹋了你的人生，你的人生，要毁也要毁在自己手里。\n曾经知乎上有这样一个问题：为什么现在很多年轻人愿意到北上广深打拼，即使过得异常艰苦，远离亲人，仍然义无反顾？黄沙万里觅封侯。上面那7个字就是最好的答案。伟大的城市，吸引有抱负的人。\n\nhttps://mp.weixin.qq.com/s?__biz=MzU3MTc1MjE4OQ==&amp;mid=2247489350&amp;idx=1&amp;sn=c3dd1b99dbd4bc177223239808c67740&amp;chksm=fcda3cd4cbadb5c22228c57c7497929c49b4b122211bca8c695d96eacc3c21e9ae6205dfa462&amp;mpshare=1&amp;scene=1&amp;srcid=093067duWjKgF8KSoAagjK8y&amp;sharer_sharetime=1601430427096&amp;sharer_shareid=a243106da46becd8e497b913895005d8&amp;key=25e1725a9070fca2eafec2e1866ad43b0280921e5d6b1bf75fd3e5c66f81773d1fbb319b7e8dc45f8ec3b872f68df31b19ec729768325578f29622e71c9bb7b532bc3f5527ac1ac6718fce9d09e590cfb98db21b139cc566849baf3101eed711099c06bb1597ff6361a8465f7c38338f07b6f8b44d1b020fd88d3e937b644c0f&amp;ascene=1&amp;uin=MTE4Mjg2MzM3Ng%3D%3D&amp;devicetype=Windows+10+x64&amp;version=62090529&amp;lang=zh_CN&amp;exportkey=Ay%2FBldN1U6h7SPNB0%2F6ckUg%3D&amp;pass_ticket=UZ9tpLtgKIJFt%2BSLcKZIEQE6HCXyDjUkyT6ofvAka3%2BQxy3FaoQ7vgHCiyEuTmlg&amp;wx_header=0\n\n一个人能做的至善之举，就是帮助另一个人知道得更多。 –查理芒格你不能教会一个人任何东西，你只能帮助他在自己的内心找到答案。\n缺乏耐心几乎是所有人的本性，也是绝大多数人最终未能矫正的习惯。很多人在生活的方方 面面都因为缺乏耐心而处处吃亏却又从不自知；处处吃亏的结果是越来越急于求成，越来越缺乏耐心——于是一生都只能在这个死循环中左冲右撞而后最终混个死因不详。\n经济独立是一切独立的基础，不要用语言对抗，用行动沟通。\n或许毕业后，会分道扬镳；或许长大后，终究会别离。但自己无怨无悔，因为曾大汗淋漓，一无所有，却玩儿命的爱过你。哪怕没有走远，没有结局，也曾让自己，变得更美丽。\n当一个人总是踮起脚去爱另一个人，一个人总是弯着腰去吻另一个人时，这样的感情，注定会压死一方，累死另一方，放手，是早晚的事情。\n无论如何，在最年轻的时候，要学会独处，那些有成就的人，无论表面看起来多么合群，内心都有一片属于自己的世界，无论多么阿谀，内心都有一个属于自己的价值观。\n别动不动的就动手，这年头看不惯的事情多了，看不惯，要想得通，心里骂娘，也要脸上微笑。\n不合群就不合群，一个人吃饭没什么，一个人入眠也能很幸福，一个人去自习室也应该对着天微笑，一个人流泪也很酷，这些都是让自己变得更好必经之路。\n既然自己是少数人，注定要被冷眼相望，注定要孤独行走。可是，孤独是常态，我们曾经以为越长大越孤单，后来发现世界原本是孤儿院。大多数的路，都是一个人走，偶尔有人陪你走两步就匆匆地说了再见，剩下的路，还是你一个人。好在，孤独是最好的升值期，那些一个人的时光，能让你成为一个更好的自己。\n要学会放弃无用的社交，在你不够厉害时，应该多学习，用心打磨自己的能力，因为只有等价的交换，才能有等价的友情。所以，对于内向者而言，打造人脉，不如打造自己。后来我也明白，当你是个内向型的人格时，就更没必要花大量的时间去扩充人脉了，因为人脉不是你认识谁，而是谁认识你；人脉不是你加了谁的微信，而是谁肯为你的朋友圈点赞。\n知识付费，信息不付费，能让人成长的是有价值的知识。知识付费的启示：没有好的内容，就不可能变现，好内容包括稀缺的优质内容，节省了用户的时间；作者负责优质内容，平台负责提供流量，互联网之战，就是流量之战，得流量者得天下。\n如果你想成为一个不一样的牛人，这个领域出类拔萃的高手：寻求一手知识，应该是每个人都应该追求的方式和态度，而书，是追求一手知识的最方便的路径。\n现在拼了命赚钱，以后反而可能会没钱；现在拼了命输入，以后才有更好的收入。\n如何讲好一个故事：生活是最好的编剧，好的故事一定是以人为中心，好的故事写的是人性，人性脆弱也坚强，黑暗也发光，人与人的矛盾，人与环境的矛盾，好的角度能把烂故事讲好，人主动选择远远不如被动选择，环境推动人物选择，情节干涉人物选择，主干决定故事的好坏，细节决定是不是大师级别的作品，钩子和转折。\n思维改变活路，读书增值账户。\n精力：体力、情感、思想、意志。\n人脉不是自己认识多少人，而是多少人认识你。\n左右脑切换，大脑和身体切换。\n我们一直在纠结自己会定在哪里，落叶归根在何方，可是，只有去过更多的地方，才知道自己的家在何方。追逐远方，才能找到家。\n斜杠青年：选择斜杠时，问问市场是否需要；成为斜杠时，建议你去收费，让市场去检验你的技能；斜杠时，建议你去混圈子。\n利用读书去获取入门知识，利用间隙获得碎片信息，利用课程获得系统理论，在互联网上寻找公开课和付费课程，找牛人、混圈子获得内部消息，持之以恒的练习与训练。\n放弃无用的社交，避免无效的争论。懂你的人，你不必解释，不懂你的人，解释像是掩饰，没必要。\n一旦决定，就义无反顾的拼；一旦放弃，就无怨无悔的走。\n人和人之间能有什么不同呢？答案很简单，不是你这辈子赚了多少钱，获得过多少名誉，而是你这一辈子经历的事情，去过的地方，见过的人，读过的书，这些，造就了现在的你。你看过的远方，听过的故事，都会融入你的血液，如影随形，那些会变成你的格局，你的修养，和你的眼界。\n成为一个有领导力的人，是需要很多特质的：演讲能力，有担当的个性，平易近人的性格，突发事件的决策能力。\n那些两条路走路的人，一边考研，一边找工作，放弃掉所有的社交，白天投简历参加实习，晚上准备考试。\n我们总因为我们拥有的，而限制住了自己无限的可能。\n在你渺小时，没人会在乎你的努力；当你成功后，才会有人愿意听你的故事。那些故事，才是有血有肉的。\n这世界从来不相信眼泪，这世界只看结果，在你成功前，没人关心你的努力，所有的痛，都只有你一个人扛，你也必须一个人扛，学会一个人安静地长大。\n在你有所成果前，所有的努力，都不要到处跟别人说，去博得别人的同情，大家只会看你的结果，和听你成功后的经验，没人喜欢听你没成功前的抱怨。\n只有耐住寂寞，才能守住繁华。\n衡量自己的三要素：从内，看看自己的能力到底有多强；从外，看看自己的专长是不是能被市场所需要；从心，看看自己是否喜欢这样的生活。\n盯紧自己的目标，才能是生活的高手。\n其实，当我们知道生命在倒数时，所有的所谓的苦大仇深，所谓的憋屈委屈，所有的难受痛苦，都会烟消云散，都会显得不那么重要。\n要么证实，要么证伪，要么存疑。当一件事情发生，最好的方法就是别表态，先调查，查清楚后，再表态，此时的态度就清晰、有力量多了。\n就事论事，你要学会弄清楚事情的核心，把这件事情牢牢地控制在该有的范围内，不扩大，不引申，不对人，只对事，这种思维观念，能让你有机会接触到更多思维，学到更广泛的知识，拥有更安静的心境，包容不同的声音，从而让你变得更好。\n想要真正交上一个好朋友，就和他共同做一件事情吧，你们之间的合作、共谋和挫折，都会很快升华成友谊，变成彼此的连接与回忆。\n演讲能让人思路清晰，写作能让人变得智慧。演讲不仅仅是口才，更是思路的表达；写作不仅仅是表述，更是思维的传递。\n当自己的某一个专长和技能被社会认可，学历本身就不重要了，因为你已经有了更好的方式去证明你的优秀和价值；反之，能力不够，学历来补，多考证书，多得奖状。\n厚积薄发，考证书，等考研，去实习，找工作。第一步，有相关知识、能力足够，有足够的背书，开始能力变现；第二步，认识圈内人，在圈子里和牛人发生链接；第三步，得到圈外和众人的熟知，在圈子外发光。\n校外实习可以一分钱不要，但一定要 all in（全心投入）。\n高考结束后，让我告诉你几件事吧：\n\n别着急对答案，这是你这一生最无忧无虑的三个月，赶紧玩，赶紧补觉，赶紧读闲书。\n\n适当兼职，体验一下社会生活，赚点零花钱，但注意安全。\n\n跟老师和同学吃一顿散伙饭，可以喝两杯酒，或许，这是你们最后一次相聚。\n\n这应该是你英语最好的时候，记住别间断，休息几天开始每天读读英语、看看美剧，为大学四六级考试、出国做好准备。记住，口语在大学生活中，很重要。\n\n报专业时重要性是这么排列的：城市&gt;学校&gt;专业。先选择大城市，那里有更好的见识；再选择好的学校，那里有更好的伙伴；最后是专业，大不了想办法换。\n\n喜欢哪个姑娘或者小伙儿就赶紧表白吧，不一定要追，但一定要说。要不然，十年后，你一定后悔。\n\n\n通过大量阅读积累词汇，通过频繁使用消化词汇。\n第一个记忆周期是 5分钟 （早上花五分钟的时间学习10个新词试试）第二个记忆周期是30分钟 （半小时后，先花5分钟去复习刚才学习的10个新词，然后再花5分钟的时间去学习10个新词）第三个记忆周期是12小时 （睡前再花15分钟左右的时间来复习一下今天学习的20个单词吧）第四个记忆周期是 1天第五个记忆周期是 2天第六个记忆周期是 4天第七个记忆周期是 7天第八个记忆周期是15天\n至少坚持六个月  每天输入时间不低于四小时提高文本难度，配合精读放慢语速  不要想当然地读单词  一定要恶补音标默写相应音标 把音标标记在原文边上 重音精读文本  不认识词全查过 抄写在文本边反复跟读  纠正 前提是大声朗读慢一拍跟读熟悉到一定程度时，同步朗读录音矫正  每隔一段时间把自己的朗读声音录下来存好，过上一个星期后再翻出来听印象深刻只来自两个方向，1) 大量重复；2) 意外发现最后一步是背诵 一篇文章跟读至少 60 遍平均算作 5 分钟一遍的话，60 遍就是 5 个小时。每天 1 个小时，周一到周五就可以完事这样大概练习 10 篇左右  周六日还可以休息 十周时间\n很喜欢查尔斯·比亚德说过的一句话:天空暗到一定程度，星辰就会熠熠生辉。人总是痛过了，便坚强了；熬过了，便成熟了；傻过了，便懂得了适时的珍惜与放弃。\n别人笑我太冷眼，我笑他人看不穿。不见多少同心路，化为北辙与南辕。\n有一本书曾说迷茫是人生常态，但最重要的是我们不能放弃改变的决心，停止想太多做太少，现在的我们最缺的就是执行力。不懂的东西记得翻开书本，或请教专业人士，当自身的才华撑得起你的野心，这时的目标才有意义。明确目标勇于实践，才能发现自己所长，专注职业发展，实现自身价值。\n三生有幸遇见你，纵使悲凉也是情。深爱一个人，放与不放，其实，余生都是债。\n即是浮云天边过，何须爱恨上心头。\n是否熟练使用工具决定你收入的下限，而我们讲的那些虚头巴脑的星辰大海总有一日会决定你的上限。\n这些看似“锦上添花”的东西，总有一天会在你上升到某个阶段的时候，变成你继续向上的阶梯，或者成为阻挡你的天花板。\n思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这也是一个编程老手跟编程新手的本质区别之一。\n时光不语，静等花开。从默默无闻到崭露头角，一般只需一瞬间，看似一瞬间，可能要等十几年。年轻人一定不要心急，不要焦虑，要耐得住性子。当你的能力撑不起你的野心的时候，当你感到怀才不遇的时候，当你迷茫找不着方向的时候，你只需要努力、坚持，再努力、再坚持，慢慢地，你就会变得越来越强大，方向就会变得越来越清晰，机会就会越来越青睐你。\n你永远赚不到，超出你认知范围之外的钱；除非你靠运气。但是靠运气赚到的钱，最后往往又会被现实亏掉，这是一种必然。你所赚的每一分钱，都是你对这个世界认识的变现；你所亏的每一分钱，都是因为对这个世界认知有缺陷。这个世界最大的公平在于:当一个人的财富大于自己认知的时候，这个社会有100种方法收割你，直到你的认知和财富相匹配为止。\n凡是过往，皆为序曲。浮生若梦，为欢几何\n很多话，当时没说出口，以后再提便都成了不合时宜。\n薪资只是学习的副产品，学到的软实力才是硬道理。\n“要么庸俗，要么孤独”，叔本华\n其实我有时候真的分不清对你是什么感情，也许就是人们讲的友情之上，恋爱未满吧。\n人最痛苦的是无法逾越想到和做到之间的鸿沟\n互联网是内向者的福音，不需要出门，不需要与人交谈，便能学你想学的，看你想看的，与志同道合的朋友沟通，将自己的专长贩卖给全世界，我们处在人类有史以来最适合内向者的时代\n所行化坦途 所求皆如愿\n离开的不再遗憾，留下的要珍惜，守住眼前人，路一步一步走着，留下的脚印自己最清楚；事一点一点做着，其间的艰辛自己最明白。\n坚持一个一定要完成的事情，那么也一定会有牺牲。生活不是做加法，而是为了一个最重要的目标，不断做减法，做放弃的过程。比如我早上起来之后，那么早上超长的黄金时间，其实就足够把我今天最重要的事情做完。而相对的，因为早上高度紧张的冲刺，我下午自然需要一些休息时间，晚上为了早睡也不能再做更多的事情。这都是trade-off。任何一个人想通过早起，来延长自己的工作时间，都是耍流氓。一个人每天真正的深度工作时间顶多3-4小时，那都是顶尖创作者的水平了。而大部分人，一天看上去是工作了8小时，真正的工作时间，精力集中的时间，创造价值的时间有多少…… 其实你自己知道。\n通过冥想、反思、阅读和对生活的体验，我渐渐领悟到，我们太执迷于做加法了。我们总希望能够工作更长时间，让自己醒着的时间更长，觉得这样似乎更有效率一些。可是我们没有理解的是，一个高质量的东西，远远胜于一百个质量平庸的东西。两个小时的高质量工作，远远胜于两个星期的散漫工作。成长的过程，大概就是一个不断舍弃那一百个平庸，而最终全心全意集中在你的那一件masterpiece上的过程吧。\n所念皆星河，星河中是你。所念皆生死，生死中无你。所念皆为生，只为再见你。所念皆为死，只为不见你。终失故人心，空留我一人。所念为孤独，孤独亦可喜。\n“一行同学，我喜欢你”“这样啊”“要是交往的话一个人可是没法做到的”“所以”“我们两个试试吧”————  《 Hello World 》\n一碗毒鸡汤你现在所拥有的，都不曾是你的，因为未来你都会失去。\n你全心全力做到的最好，可能还不如别人的随便搞搞。\n很多时候，乐观的态度和好听的话帮不了你。\n这段日子，迷惘又黑暗，好不容易努力撑过去了，结果下一个黑暗又来了。\n事情多不可怕，可怕的是你没能力解决。\n今天所有的一切，不过是过眼云烟。从明天开始你会一无是处。\n有时候不努力一下，都不知道自己还有把事情搞砸的能力\n很多时候别人对你好，并不是因为别人喜欢你，而是因为他们喜欢对人好。\n如果你很忙，除了你真的很重要以外，更可能的原因是：你很弱，你没有什么更好的事情去做，你生活太差不得不努力来弥补，或者你装作很忙，让自己显得很重要。\n宁愿不说话看起来像个傻子，也不要，开口证明自己的确如此。\n人要是决定自暴自弃了，就会活得特别开心。\n倘若互不相欠，怎会再次相见。\n不要太在乎别人的目光，因为没人会注意你。\n如果全世界都不要你了，记得要来找我，我认识好几个人贩子。\n曾经是梦想家，现在没了梦，只剩下想家。\n有人出现在你的生命里，是为了告诉你你真好骗。\n有时候你不努力一下，就不知道什么叫绝望。\n哪有什么选择恐惧症，还不是因为穷。\n像我这种连名牌不认识几个的人，有时候连别人在炫富都感觉不到。\n喜欢一个人就去表白，万一成备胎了呢。\n生活不止眼前的苟且，还有前任的喜帖。\n有的人是来爱你的，有的人就是来给你上课的。\n你才二十多岁，没遇到喜欢的人很正常，往后你会发现，大概是遇不到了。\n我不是矮，我只是离天空比较远。\n不是因为看到了希望才坚持，而是因为坚持了，才知道没希望。\n要感谢那些把你打倒的人，因为你会发现躺倒真的很舒服。\n蠢也没那么可怕，毕竟水母没有脑子，也活了6亿年。\n小学的英语水平支撑到现在，越来越力不从心了。\n放弃这个字，说起来简单，做起来就更简单了。\n用心品味当下每一分痛苦，这样在离世时才不会有所留恋。\n没有人关心你飞得多高，倒是有一群人，等着看你摔得多惨。\n我想要住进你心里，才发现是个小区，还有许多邻居。\n就算睡得晚，不会找你的人还是不会找你！\n“就算全世界反对，我也要坚持自己的梦想。”你谁啊，能轮到全世界反对？\n这两天雨水多，下雨记得打伞，否则脑袋容易进水。\n我亲眼看着你走上台，不知道你是将要献丑，还是出丑。\n没人嘲笑你的梦想，他们只是，嘲笑你的实力。\n当你觉得自己不行的时候，就走马路上走走，这样你就是一个行人了。\n感觉这辈子，最深情绵长的注视，都给了手机。\n跟最好的朋友好到什么程度？他进传销，发展的第一个下线就是我。\n九年义务教育应该开腹语课，毕竟长大后会有太多话，难以启齿。\n生活费就像大姨妈，一个月来一次，几天就没了。\n放心吧，只要你持续走下坡路，就永远不会处在人生最低谷。\n这么多年没掉入桃色陷阱，靠的就是两个字，没钱。\n你若安好，那还得了~\n我觉得失恋不可怕，眼瞎才可怕。\n不是所有的事儿努力都是有用的！\n人活着就会失去，你失去的不会再来，你争取的永远都会失去！\n曾经的海枯石烂，抵不过好聚好散。\n如果不能美得惊人，那就丑得销魂吧！\n真的猛士，敢于直面肥胖的人生，敢于正视缺位的智商。\n友谊是什么？你智障多年，我不离不弃。\n你并不是一无所有，你还有病。\n失败是成功之母，可惜成功六亲不认。\n要笑着走下去吧，反正来到这个世界上，谁也没打算活着回去。\n有时候吧，没事就应该多出去走走，这样你才会发现你到底是有多么的孤陋寡闻和孤独无助。\n世上只有骗子是真心的，因为他是真心地在骗你。\n西游记告诉我们，有个猪一样的队友，能让团队上西天。\n你走了真好，不然总担心你要留下来吃饭。\n你是我的小苹果，哎呀讨厌！我是说我TM真想削你。\n就算大雨颠覆全城，公司照样算你迟到。\n我们都在努力地奔跑着，像狗一样。\n你要是喜欢一个女生，就好好学习找个好工作努力挣好多好多钱，等她结婚的时候你多出点份子钱。\n你每天都那么努力，忍受了那么多的寂寞和痛苦。可我也没见你有多优秀！\n“那些出身好能力强的人努力是为了成功，因为人家有可能会成功。我们努力是为了啥呢？”“为了活下去。”\n再努力一点，你就能走向，人生癫疯。\n你十分努力的突破了瓶颈，最后你会发现还有瓶盖。\n为什么要努力？为了在你夹菜的时候别人不敢转桌子。\n当傻逼只会造成少量痛苦，大量的痛苦来自于自己是傻逼，还努力不让别人知道。\n我上班就是为了赚钱，别和我谈理想，我的理想是不上班。\n梦想还是要有的，不然哪天喝多了，你跟人聊啥？\n曾梦想仗剑走天涯，后来手机没电就没去。\n每当我找到成功的钥匙，就发现有人把锁给换了。\n别慌去接受失败，要慢慢去感受。\n愚人节表白算什么，清明节表白才是王道，失败了还可以说是鬼附身了！\n不尝试问一次，你怎么知道，你不是爸妈避孕失败的结果？\n如果生活欺骗了你，不要着急，拿出美颜相机，去欺骗生活。\n你现在的生活，也许不是你想要的，但绝对是你自找的。\n很多人闯进你的生活，只是为了给你上一课，然后转身离开。\n你是谁不重要，重要的是，你闯进我生活想干啥？\n有些人出现在你的生活里，是想告诉你，你真好骗啊！\n开始我以为生活就是猫吃鱼 狗吃肉 奥特曼打小怪兽 可现实却是鼠整猫 羊耍狼 两熊玩死光头强。\n你的眼界，不止局限于你的生活环境，还局限于你的视力范围。\n生活磨光你的棱角，是为了让你，滚的更远。\n我不需要性生活，生活每天都在强奸我。\n你在网上这么卖力地装逼，生活中一定很失意吧。\n只要有快递还在路上，就感觉这生活，还算有点希望。\n你不是走在牛B的道路上，而是仍在，装逼的道路上溜达。\n我想重新认识你，从你叫什么名字开始。你叫什么来着？\n考试最崩溃的是看到一道题，模糊的记得老师讲过，但清晰的记得我没听。\n我的原则，只有三个字，看心情。\n为什么你能像智障一样活着，而我却不可以。\n遇到你之前，我的世界是黑白的，遇见你之后哇靠全黑了。\n我丑，是为了降低画质提高性能，为什么我的人生还那么卡呢？\n熟练地运用，关我屁事和关你屁事，可以节省人生80%的时间。\n公子的眼睛甚是好看，有日月星辰，有山河大海，却没有我。\n我到底是活了16年，还是活了1天，重复了16年？\n我一般说话都会给人留面子，万一我怼你了，没错我就是故意的。\n为了防止我这个月又乱花钱，我提前把钱，都花完了。\n说好我们一起到白头，你却偷偷焗了油。\n俄罗斯方块教会了我们，如果你合群，就会消失。\n我不是诸葛亮，也没有草船，但为何你的贱一直往我这放？\n我这人不太懂音乐，所以时而不靠谱，时而不着调。\n没钱了来找我，让我告诉你没钱的日子，怎么过。\n世界那么大，能认识你，我觉得好不幸。\n我知道虚度年华不对，但是这样，真的好过瘾啊。\n我不是那种，落井下石的人，我是直接把井封了。\n岁月让我知道，除了快递我谁都不必等。\n你最想从母校带走的是什么？最想从母校带走的，是我的学费。\n如果我有什么，让你不喜欢的地方，麻烦你自己克服一下。\n早上醒来，我以为自己长大了，原来是被子盖横了～\n大老远看到我一直盯着你时，不要觉得我对你有意思，我真得看不清你是谁。\n我最大的缺点，就是缺点钱。\n我太好了，好到跟谁谈恋爱都是浪费，好到谁都配不上我，好到我只能自己对自己好，好到注定孤独一生。\n曾经给我泼凉水的人，没关系的，我烧开了还会还给你的。\n如果我的人生是一部电影，那你就是一个弹出来的广告。\n我发现我挺能哄女孩睡觉的，只要我一发信息，女孩就说我要睡觉了。\n如果有人问我：那些艰难的岁月你是怎么熬过来的？我想我只有一句话回答：我有一种强大的精神力量支撑着我，这种力量名字叫“想死又不敢”。\n曾经我也是打算靠脸吃饭的，后来差点饿死才放弃的。\n希望有些事情可以自己解决，不是我自己，是事情自己。\n我知道岁月会磨平我的棱角，但没想到，是把我按在地上摩擦。\n谢谢你，在我每次需要你的时候都掉链子。\n看见一个算命大师，我刚坐下他就问我，你算什么东西？\n我说哪句话让你伤心流泪了，请告诉我，我再说一遍。\n脱了衣服我是禽兽，穿上衣服，我是衣冠禽兽。\n有些事不是我不在意，而是我在意了，又能怎样？\n我尝试着做一个有趣的人，后来却跑偏了，成了一个逗逼。\n没人牵手，我就揣兜。\n我低迷的时候你在我身边，我生病的时候你在我身边，我失业的时候你在我身边，我没钱的时候你在我身边，你他妈就是个扫把星\n我把她从女孩变成了女人，她把我从男孩变成了，穷人。\n夜撩了酒，酒撩了你你撩了我，穷困潦倒了我们。\n我们都史无前例的有默契，突然你不理我我也不理你。\n当幸福来敲门的时候，我怕我不在家，所以一直都很宅。\n蹲下来摸摸自己的影子，对不起，跟着我让你受委屈了。\n回首过去，我居然没有，走过一次直路。\n我试过销声匿迹，最终也无人问及。\n你在哭吗？没有，我只是过敏了。对什么过敏？人生。\n我以为我们能一起走到最后，谁知道，你走了两步就要打车。\n今晚吃鱼吧，我看你挺会挑刺的。\n人生如梦我失眠，人生如戏我穿帮，人生如歌我跑调。\n别对我大吼大叫，我小时候被狗吓过。\n不想一直被别人否定，那就要经常自我否定。\n长大以后我终于不是那个傻孩子了，而是成了傻子！\n请不要叫我宅女，请叫我居里夫人。\n等到历史考试的时候，历史将会被我改写！\n我想早恋，但是已经晚了…\n我要没点自我安慰的本事，还真活不到现在。\n卑微的少年，不要害怕，我们终将光芒万丈，比如说火化的时候。\n回首青春，我发现我失去了很多宝贵的东西。但我并不遗憾，因为我知道我以后还要失去更多。\n别人都散发着恋爱的酸臭味，只有我，散发着单身狗独有的清香。\n我也有诗和远方，只不过诗很烂，远方一片黑暗。\n听说你过的不好，我蹲在门口，笑了一整天。\n请相信我，我所说的每句话，都是废话！\n怕鬼真的太幼稚了，我带你看看人心。\n你的晚安，只是想让我闭嘴。\n我泼出去的水，盆都可以不要。\n不回你消息，不是因为我高冷，而是因为我手冷。\n当别人和你说忙，是TA要留时间，给更重要的人。\n别人一问起你，你就和盘托出，你以为这是健谈和热情，其实，这就是孤独。\n光穿破云层，照亮了整片天空，却灰暗了我长久的时光。\n你记住了，没有一个人是只属于你自己的，就算关系够好，不要自作多情，毕竟冰凉不过人心。\n人生，在迷茫与痛苦中前行，只有坚持最初的自我，才能走向人生的辉煌。\n我其实看得蛮开的，我身边的人来来去去，对我而言，构不成一丝的伤害。因为从一开始，我就不认为会有人在我身边。\n你总想等你优秀了再去向她表白，后来才发现你都这么优秀了干嘛还喜欢她。\n你不是不平凡，而是卑微到了极限。\n如果你觉得，围着你的都是苍蝇，那可能你自己是坨屎。\n离远一看长发飘飘，走近一看虎背熊腰，转身一看卧槽黑山老妖。\n同样都是咸鱼，为什么别人可以翻身，而你却粘锅了？\n冬天床以外的地方都是远方，手够不到的地方都是他乡，上个厕所都是出差。\n总是在凌晨想通很多事情，又在天亮之后，忘得一干二净。\n你总想等你优秀了再去向她表白，后来才发现人家只是单纯的不喜欢你。\n成长就是将你哭声调成静音的过程。\n不是路不平，而是你不行。\n撞衫不可怕，谁丑谁尴尬。\n人都有幸福的权利，但少数人有幸福的能力。\n学校并不比社会简单，人闲事就多。\n幸亏当事者迷，不然真的看清事实真相，很多人是承受不来的。\n哪有什么胜利可言，挺住意味着一切。\n说好了浪荡一生，却不小心一生钟情一个人。\n秒回并不是喜欢你，只是碰巧在玩手机。\n只要你每天坚持学习，最终胜利肯定是属于，在考场上发挥好的人。\n都说谈恋爱会影响学习，难道学习，就不影响谈恋爱吗？\n有一段情，叫自作多情。\n听说自从你得了神经病，整个人都精神多了。\n你才二十多岁，没遇到喜欢的人很正常，往后你会发现，大概是遇不到了。\n那些人人羡慕的精英，其实过得并不如你想象的那样好。但肯定比你是强得多。\n有些人表面光鲜亮丽，实际上，船袜已经滑到了脚底板。\n其实表白未必是件好事，因为那样显得手黑。\n不要总对人掏心掏肺，有的人不吃内脏。\n你总是在安慰人，然而却没有人安慰你。你总是为其他人放下底线，却没有人为你放下底线。\n穿白色衣服上班，并不代表你可以不背黑锅。\n到不了的都叫做远方，回不去的名字叫家乡。\n现实就是，你这个前浪还没开始浪，就已经被拍死在沙滩上了。\n人为什么叫人类，因为人活着就是累。\n暗恋的人没有，想暗杀的倒有一堆。\n总有一天，你会遇到一个好姑娘，她不要你的房，也不要你的车，不要钻石，更不要你的钱，当然她也不要你。\n他没那么爱你，只是睡你比嫖来得便宜。\n别说什么一见钟情，不过就是见色起意。\n很多人不是心理疾病，而是心理残疾，治不好的。\n每一个抖腿的人，心里都有一台缝纫机。\n人丑就要多读书，书并不能使你变得好看，却能让你更容易接受现实。\n很多人觉得自己活得太累，实际上，他们可能只是睡得太晚。\n哪有什么孤独，不就是没人爱吗？哪有什么寂寞，不就是闲的吗？哪有什么绝望，不就是穷的吗？\n承诺就像放屁，当时惊天动地，过后苍白无力。\n遇到困难的时候暂时放一放，第二天的时候，就再也想不起来了。\n静若瘫痪，动若癫痫。\n别总把别人说的话记心上，因为你不知道的是说这话的人自己早忘了。\n以前过年就图个热闹，现在就想图个清静。\n如果你特别迷恋一个人，那你肯定配不上ta。\n遇到喜欢的女生要勇敢表白，只有你主动了，才知道她名花有主。\n小三是个好东西，她带走了不爱你的狗东西。\n你的脸，犹如你的人生，一样坎坷。\n你连自己都睡不好，还想去睡别人？\n命只有一条，但要命的事，可不止一件。\n扎心？不存在的！心都没有扎哪里？\n别动不动说把一切交给时间，时间才懒得收拾你的烂摊子。\n每天显得无聊或寂寞了，去找朋友一起吃饭和逛，只不过是为了满足自己与人交往的需求，算不上是社交。\n要么读书，要么旅行，身体和灵魂，必须有一个要去工作。\n只要锄头挥得好，没有墙角挖不倒。\n同甘共苦你不陪，荣华富贵你是谁？\n曾经才华横溢的你，现在只会说666。\n问渠那得清如许，唯有毒汤活水来！\n不合适就是穷，没感觉就是丑，一见钟情就是好看，深思熟虑就是有钱。\n半夜给你留灯的，只有自动售货机。\n最靠得住的是有钱，最靠不住的是人心。\n哪有什么直男，只要你够好看，都能变成弯的。\n上帝向人间洒满智慧，唯独你打了把伞。\n男女之间很少有纯友谊。小船要么沉底，要么升舱。\n法制与道德就是站在顶峰的人，给弱者制定的规则，而强者一般无视规则。\n把秋衣塞进秋裤，把秋裤塞进棉袜里，是对冬天最起码的尊重。\n爱真的需要勇气，来接受，一次次的没人爱。\n无论你二或不二，二就在那里，不三不四。\n你是一个好姑娘，一个人读书、看电影、旅行，直到那个彩虹般绚丽的人出现在你的生命里。和你一起读没读过的书、看没看过的电影、去没去过的目的地。然后你会惊奇地发现，他陪你做这些，只是为了能跟你上床而已。\n你总嫌有些人懒，说得好像你勤快了就真能干出什么大事儿一样。\n谁说女追男隔层网，除非那男的本来就对你有好感，不然隔的基本都是铁丝网，还是带电的那种。\n一场说走就走的旅行归来后，除了该做的事情被拖延的更久，什么也没有改变。不管你是骑车去西藏还是走路去远方，在路上只是一场自欺欺人的逃避，心灵的旅行才能带来真正的平静。只要此心安定，你不必去远方。\n做好人没希望，做坏人不擅长。\n当别人和你说忙，是他/她要留时间给更重要的人。\n愿得一人心，免得老相亲。\n那些把爱情说得很透彻的人，基本上都不在爱里。\n世界上脑残那么多，你却成了佼佼者。\n是好久不见，还是，视而不见。\n大多数时候，消耗能量的都不是工作，而是工作中遇到的人。\n你的感情路不顺吗?很顺啊，一路上连个人影都没有。\n人生就是这样，有欢笑也有泪水。一部分人主要负责欢笑，另一部分人主要负责泪水。\n灵魂已出窍，躯体有何用。\n为什么你忘不掉你的旧情人，因为你还没有能力换个更好的，谁开上了法拉利还会想念马自达呢！\n放假买个地球仪吧，世界那么大你不但可以看看，还可以转转。\n所谓成长，就是在听到波涛汹涌四个字，再也联想不到大海了。\n哪有什么优柔寡断，还不是因为怂。\n你是个做事认真的人，认认真真地帮别人，试了所有的错。\n秀恩爱的最好在中午秀，因为，早晚都会有报应。\n存款是负的，房子是租的，有辆自行车，还是共享的。\n不知道，是别人的爱情来的太容易，还是自己的八字太硬。\n男人单身叫单身狗，女的单身叫狗不理。\n当你摔倒但周围没人笑的时候，你就知道你已经是个老年人了。\n很多人每天都精神抖擞去奋斗，仿佛全世界都在等着看他成功似的。\n当你蹲下再站起来时，听到膝盖发出声响，那你要注意了，这说明你的听力挺正常的。\n当你看到毒鸡汤频频点头的时候，你其实已经被毒害了\n生平最讨厌溜须拍马的人，和他们在一起，显得老子很不会做人。\n人还是要谈一次恋爱，不然就不知道，对象能有多烦人。\n一些兴趣和特长，拿来做业余还挺NB的，但一旦变成职业，就弱得不行了。\n想做你的太阳，高兴的时候温暖你，不高兴的时候晒死你。\n如果你同时爱上了两个人，请选择第二个。因为如果你真的爱第一个，就不会爱上第二个。\n那些年立下的FLAG自己删了吧，反正也没人记得。\n虽然人生如戏，但是你确实是领盒饭的那个。\n你是转角遇到爱，可你想过对方吗？他是转角遇到鬼呀。\n希望是火，失望是烟，人生就是一边生火一边冒烟。\n有钱人终成眷属，没钱人亲眼目睹。\n有缘千里来相会，无缘倒也省话费。\n你连世界都没观过，哪来的世界观？\n人家不是无趣，而是，懒得对你有趣。\n安慰别人的时候一套一套的，安慰自己的时候，只想找根绳子一套。\n对你别有用心的人，毕竟也是用心了。\n请珍惜对你好的人，否则错过了就不知道何时，才能再遇到另一个瞎了眼的。\n经历过一番苦难之后，别人是苦尽甘来，而你是苦竟刚来。\n其实你也不是一无是处，至少在夏天，你还能喂蚊子。\n你承受的苦难并不比他人多太多，痛苦主要来自敏感和脆弱。\n让刻苦成为习惯，用汗水浇灌未来，然后脱水而死。\n一个人最长的恋爱史，大概就是自恋了。\n还没有对象？要不要给你介绍，一款不错的狗粮。\n除了有钱人，世上还有两种人：其一是省吃俭用买奢侈品装逼的，其二是省吃俭用也买不起奢侈品的。\n男人的“五分钟到家”和女人的“五分钟就能出门”其实是一个意思。\n比一个人吃火锅更寂寞的是，一个人，没钱吃火锅。\n不要年纪轻轻，就觉得你已经到了低谷，你还有很大的下降空间。\n有钱人可以选择低调，而你，却只能低调。\n感觉这个社会越来越好了，男生挺懂事的，一有钱就想多照顾几个女生。女生也挺懂事，知道男生没钱就不和他在一起，免得他辛苦。世界充满了爱。\n厉害的不是你有多少后台，而是你能成为多少人的后台！\n别总自称单身狗了，按年龄你是单身鳖，按智商你是单身傻狍子。\n一些年轻人，通过高端消费来营造自己高端收入的形象。\n用美颜手机自拍多了，越来越不知道，自己有多丑了。\n以后要对女朋友好一点，毕竟她已经瞎了，不能再受伤害了。\n所谓婚姻，就是两个家庭的，资产重组。\n前世五百次的回眸，却换来今世的一句，流氓。\n懒是一个很好的托辞，说的好像你勤奋了就能干成大事一样。\n付出就会有回报，比如一倍的奢望，换两倍的失望。\n永远不要轻易的向别人展示伤口，因为你不知道他手里握的是云南白药还是孜然辣椒面。\n和对象吵架，先不要追究吵架原因，要弄明白他胆子怎么肥了。\n好看的皮囊现实劈腿，有趣的灵魂精神出轨。\n这个年纪会在你耳边唱歌，喜欢你的肉体还会送你包的，只剩下蚊子了。\n不想谈恋爱是假的，没人要是真的。\n有时候，只要你下定决心做某件事，全世界都会拖你后腿。\n知识给你力量，无知会给你更强大无畏，且无法预测的力量。\n不要在意现在的低谷，未来还有很长的下坡路要走。\n现在流的泪，都是当初脑子进的水。\n做人如果没点追求，那么，该多轻松啊…\n送给喜欢的女生一支口红吧，这样她亲别人的时候，你还有点参与感。\n你前世一定是塑料袋，除了会装还是会装。\n当你怀疑人生的时候，其实这就是你的人生。\n就算是believe，中间也藏着一个lie。\n咸鱼翻身有什么用，翻了身，还是咸鱼。\n求个明白人，问条不归路。\n用扯淡的态度，面对操蛋的人生。\n你视若珍宝的东西，别人可能连看都不会多看一眼。\n情人节不出意外的话，一个人过，出意外的话在医院过。\n自由从来不是什么理所当然的东西，而是一项需要极高成本的特权。\n既已背影倾天下，何必转身乱芳华。\n没有过不去的坎，只有过不完的坎。\n成名就像放的一个屁，响了一声还不够，还要臭段时间。\n把女孩子弄哭是很没种的事情，把男孩子弄哭是一件叼爆的事啊。\n有些事，不说是个结，说了是个疤。\n你就是个黄焖鸡，又黄又闷又垃圾。\n總以為退一步海闊天空，沒想到腳下落空。\n当你变得足够优秀的时候，你才发现原来她只是，单纯的不喜欢你。\n时间会帮你攒够失望，并告诉你不用谢。\n哪有什么来日方长，挥手便是人走茶凉。\n不经历风雨，怎么迎接暴风雨。\n不说没人陪你勇闯天涯，你能找到人陪你喝雪花吗？\n爱情说白了就是在对的时间碰到有感觉的人，没有那么复杂。\n不要再说被骗色了，到你这个年纪来的都是客。\n小时候总是被教育说要多和优秀的人接触，这样才能变的更好，长大后发现，优秀的人接触的越多越TM觉得自己是个废物。\n其实命运，真不是喜欢和你开玩笑，它是很认真的想弄死你。\n江湖水深，不浪怎知？\n学过很多技能，到头来才发现，最有用的技能是——想开点！\n如果婚姻是爱情的坟墓，一年一次的结婚周年庆祝，便是在扫墓了。\n人生有两大悲剧，一个是得不到想要的东西，另一个是得到不想要的东西。\n每一个想等事业起步之后在结婚的男人，最后大多数都成了单身。\n你就一甘蔗男，刚开始可甜了，到后面全成渣。\n自古情深留不住，总是套路得人心。\n你要站在别人角度上去思考，总有一天你会发现，你丢失了自己。\n如果你的男朋友对你百依百顺，从不拈花惹草。可能是因为他钱不够。\n不要再抑郁下去了孩子，你要像一个，神经病一样活泼开朗。\n偷一个人的主意是剽窃，偷很多人的主意是研究。\n愚人节，只是给说谎的人，一个说真话的机会。\n你这么擅长安慰他人，一定度过了许多，自己安慰自己的日子吧。\n大学生啊你要知道，学习不一定能收获，但剁手一定能收货。\n饱汉不知饿汉饥，饿汉不知饱汉虚。\n遇到闪电记得要微笑，因为那是天空在给你拍照。\n咸鱼翻身是为了晒得透彻，你翻身是因为手被压麻了。\n人生不如意何止八九，可与人言者何至二三。\n有时候，你最想得到的人，其实是你最应该离开的人。\n去看精神科时医生说，你没啥抑郁症，你是真的惨。\n他只是暧昧成瘾、而你却走了心。\n为什么在学校，一上课就想睡觉？因为学校是梦开始的地方。\nFollow your heart，翻译成中文就一个字，怂。\n对女人强吻表白一般会有两种结果，一种是啪，一种是啪啪啪。这就是屌丝和高富帅的差距。\n生命中必然要放弃某些人，不是你不在乎，是他们不在乎。\n既没有让人一见钟情的颜，还缺少让人日久生情的钱。\n清明节，应该回你的学校扫扫墓，因为那里埋葬了你的青春。\n恋爱时会觉得像吸毒一样，分手了又会像戒毒一样。\n觉得自己总碰不到美好的人和事，并不是别人眼瞎老天故意整你，恰恰是因为你不够好，他们都在躲你。\n是虚荣、骄傲、嫉妒与报复，支撑你到今天。你的成长是依赖这些负的能量，而非天生的善良\n只有看尽人世繁华并且有能力随意享受繁华的人才有资格说淡泊名利之类的话。\n毕业不分手，异地绿成狗。\n与其被动失眠，不如主动熬夜。\n每个人都有一次机会，但是你不是人。\n你不是清高孤傲，你只是不善交际。\n比悲伤更令人悲伤的，是空欢喜。\n如果所有人都理解你，那你得普通成什么样。\n诗和远方越远越脏以梦为马越骑越傻。\n当一个人跟你说“你的笑容像极了爱情”的时候，这句话的后一句很可能是“但终究不是爱情”。\n狗和狗见面不是亲就是舔，人和人见面不是骗就是演。\n你以为你是独行的猛兽，其实只是离群的牛羊。\n酷的像风野的像狗不招人喜欢倒也自由。\n叫起你的不是阳光，是那只饿了的猫。\n下雨了才发现自己并不孤单，大家都一起避雨，可人家等的是伞，你等的是雨停。\n干干净净没故事一个酷字贯穿一生。\n你可能是脑子进水了才会在这里一直喝毒鸡汤。\n有梦就要去追，待会儿醒了，就不容易再睡着了。\n世界上最好的词就是虚惊一场。\n只有精疲力竭，才知道放弃存在的意义。\n不知不觉潮流变成了怀旧。\n你当他/她是恋爱对象，他/她当你是练爱对象。\n时光荏苒，岁月如梭，很多事情是想不明白的，但是经过一天又一天，它自然而然就明白了，只要用自己的情操去面对生活就可以了。\n“我觉得悲观的人才是做喜剧的人。“人一切痛苦本质都是对自己无能的愤怒。”当你愤怒时会有快乐和不快乐的交叉点，那交叉点就是幽默。”\n30多年的处事与品人，让我深刻领悟到活得真实才是破一切不堪的真谛。\n爱情如信仰再疼痛也会向往，但谁愿自由变成了陪葬;现实如衣裳再不堪也要伪装，但谁愿真挚变成了边荒。\n把脸冲向阳光，至少能少点黑暗。\n本无意与众不同，怎奈何天生出众。\n变老是人生的必修课，变成熟是人生的选修课。\n别人哭我们在笑，这才是真正的成功。\n别人笑我不一样，我笑他们都一样。\n不成熟的人会为了某些事情奉献自己的生命，成熟的人会为了某些事情卑微的过一辈子。\n不管是看上去凶的人，还是看上去温柔的人，都有想别人的时候对不对。\n不混不知道，世界真奇妙。\n不明白大家觉得走心是什么，听快歌开心也叫走心，那不然走哪？走肾啊？听这歌高兴是你心跳加速荷尔蒙分泌又多了，这也是走心。你听一歌特深情特扎心那也是走心。好听就行。我特讨厌装的那些人老给你分析，懂什么啊？一共听那么点，我比乐评人听的多很多，他们只不过觉得自己听的是精华。\n不要把我的话当人生格言，你觉得我的话对你有启发就够了，如果你把它当格言，那它就相当于废了，我之所以这么说是要提倡大家独立思考。\n不要觉得我说的对，这个世界上没有任何人说的对，只有你自己觉得对才对。\n不要轻易相信美丽，它们还有更多的秘密，大脑里面有些东西，可我不知怎么分离，理想总在飘来荡去，听不进什么道理，整个世界都在交易，可我不能欺骗我自己，。\n不要去埋怨生活，因为生活给过你很多的机会，只是你没有抓住。\n不怨天不怨地，想的东西靠才艺。\n不知不觉中，时光已匆匆，人生往往活在后悔中。\n趁年轻多做些自己没把握的事，干好了美滋滋，干不好了起码努力过，路见不平绕道而行，反正再过十年回头看，这都不叫事儿！。\n成功也可能是从脆弱开始的，气馁才让我找到了重生的力量。就是因为失败放弃和抱怨后的成功坚持和泪中笑，才会激励到你，让你爱！\n成全别人就是陶冶自己，百般算计不如一颗单纯的心。\n冲动澎湃的诺言，曾发誓永不会变，你说爱就像海洋，宽阔得没有边界，可浪花般的时间，冲淡了许多感觉，我们回不到从前，却被困在海里面，。\n聪明是需要智慧的，愚蠢是需要勇气的。\n打根儿里，每个人都是刺猬，经过十年的时光在靠近相偎时，却甘愿把自己会伤到彼此的刺拔掉。\n大家太重视黑白。那都是所谓成熟的人居然这么在乎黑白，一个成熟的人只活在灰色地带：谁会活在黑与白。这世界大部分都是灰色。没必要那么较真，你活你自己的生活就完了：但又恰恰是有较真的人才会出现很多幽默．，其实挺好。这世界最完美的感觉就是衬托，恰恰因为这些人你才会被衬托出来。\n当我们在一起的时候值得回忆的是具体某件事情，分开以后值得回忆的是每一分钟。\n发现没有？一些在十年或者二十年前被人看不惯的东西到今天就会获得认可散发出巨大能量。我当年喜欢染头发穿怪衣服听摇滚乐都会被别人指指点点，而现在这些已经成为最普通的东西，都不算个性了。所以如果你有跟别人不一样的处事和思维方式，自个儿又喜欢，也没犯着什么法，一定要坚持下去。\n讽刺一个东西才能真正治疗一个东西。美国脱口秀全是说社会问题，他们会把非常了不起的人说得一无是处，这会缓解很多人的仇恨感。很多人仇恨是因为没地方去说没地方去表达，当电视上有人把你完全没法说的权威人士说得一无是处，能开他玩笑，你会觉得对这人的仇恨或讨厌也就没那么多了。\n感觉到了身体在生在，思想在拼命发胀，我放弃了所谓理想，用真实接受埋葬。\n高大威猛鬼见愁，人间潇洒水倒流。\n过分在意羽毛，就会失去整个翅膀。\n过于在乎别人的感受是习惯性虚伪的祸根。当然，虚伪的人承认自己就是虚伪，也是一种真实。真是最大的弊处，就是不不招人待见，但这么多年我就是为了招别人待见，已经做了很多不招我自己待见的事儿了，所以，再也不能这样活。\n寂寞围绕着电视，垂死坚持，在两点半消失，多希望有人来陪我，度过末日。空虚敲打着意志，仿佛这时间已静止，我怀疑人们的生活，有所掩饰。\n坚持要努力，心酸自己吃。\n江湖险恶，不行就撤。\n绝不嫌弃陪我的人，绝不陪嫌弃我的人。\n看不空就看穿，看不穿就看淡，看不淡就行缓，行不缓就意坚，意不坚就志远，志不远就靠脸，靠不了脸就勤俭。\n礼多人不怪，盐多菜不坏，尿湿马桶盖，。\n命运会带领你去每一个你要去的地方，因为一切都是最好的安排。\n那些让你觉得自己特别成熟，特别世故，呼风唤雨的人呐，其实无所谓去认识。那些让你觉得自己特别纯真，特别特别，充满生命力的人，才是你最该去珍惜的。\n你竭力掩饰着虚伪，说这样才会完美。虽然昨天伤痕累累，今天也是一样的沉醉。\n你就像那夜空中的星星，有你没你差不多。\n你为我穿一次婚纱，我为你犯一辈子傻。\n你希望别人喜欢你时，就希望变成别人喜欢的你，但那个你和你本身有差距，最开始你会装，去适应那感觉，时间长了，你变成大家可能会喜欢的那个你时，你就发现你丢了你本身喜欢的那个自己。当艺人什么感觉最来劲？不是说我好看你喜欢我，是因为我就这样你喜欢我，这最重要\n你要去学会让爱的人离开你，你才知道那些人有多重要。\n你有情，他有意。小灯儿一关，哎呦我去！\n平时感情不甜蜜，天降老王搬隔壁。\n青春就像一卷卫生纸，看着挺多的，用着用着就没了。\n让别人嫉妒其实是自己最大的能力。\n人，生而孤独，死而寂寞。\n人生和彩虹一样，是倒挂着的微笑，即有人觉得多彩，也有人觉得悲哀。\n人生会有很多残缺，当你把这些残缺一点点补好，你会发现非常无聊，这些残缺的部分恰恰是生活的色彩。\n人因理想而美丽，我觉得人必须有理想，可现实太残酷。崔健那歌写得多好啊：“现实是石头，理想是鸡蛋，石头固然坚硬，可蛋才是生命。”所以我觉得不管理想真不真实，可它是生命，你为它而活，不管现实多么残酷它只是现实，虚幻如精神的东西必须有，人如果全是实在的而没有精神会崩溃的。\n认为我没长大的人本身就没长大，真正长大的人会用阅历看事情不会用表象看事情。大家太约定俗成成长是什么样，不是头发弄一偏分或年少谢顶就说明我成熟了。我特讨厌一歌是《长大后我就成了你》，每个人应该有自己的东西，活出自我，我希望大家认清自己，什么样的生活回忆起来是觉得值得的。\n如果看言情能喷眼泪，看喜剧能乐得到后空翻，就会有人说你浅薄。其实这正说明你的神经非常敏锐，等你的感觉迟钝了，他们就会说你深沉了\n如果一个人连嫉妒心都没有了，这个人不可能成功的。往难听了说这叫嫉妒，往好了说，这叫好胜心，就看你怎么说这个事儿\n上下一边粗，好像荷兰猪。\n烧一年香让你我相遇，烧10年香让你我相逢，烧100年香让你我相知。\n什么都在涨价，就是人越来越贱。\n什么叫虚伪？就是没必要装还装。\n什么叫真的感情，就是不在一起的时候，也跟在一起一样，这才叫好的感情。\n神经病和小丑最大的区别就是神经病不下班，而小丑下班。\n生活不是林黛玉，不会因忧伤而变万种风情。\n生活不是朱自清，不会因，留恋背影而变诗意，爱晕得像烟点起，当到尽，只剩一堆灰白记忆，既然你说要一生，少一时，少一分一秒都不行，我顿时在你怀里。\n太多的安逸只会削弱斗志，生命需要坎坷来振奋！。\n所谓幸福，就是自觉不幸福的时候，有人陪你度过。\n所有爱你的人和你爱的人最终都会离开你。\n外表风光，内心彷徨；容颜未老，心已沧桑。\n为了不哭大声笑，为了不烦大声呸。\n为人处世的成熟是必须的，千万别一意孤行。双脚被绑住是无法爬楼梯的，耳朵被捂住是无法听声音的，嘴巴被塞住是无法吃东西的。关起房门想清楚自己，换上好看的新衣服，在欢乐出门\n我不需要别人知道我有多努力，最好的是别人都以为我毫不费力。\n我从来不相信任何人，不管是多了不起的人。人活有意思，就在于变数\n我孤独的像大风天里的塑料袋一样。\n我就是我，看自己都上火。\n我们也会有一条长大成人，跟大家一样为事业爱情和家庭发愁，但是那时候，你们肯定会更怀念现在的我们，因为我们还没有变得虚伪起来。\n我认为最最带劲且痛快无悔的人生历程是：，儿童时期：想干嘛就干嘛；，少年时期：不让干嘛就干嘛；，青年时期：能干嘛就干嘛；，中年时期：不想干嘛就不干嘛；，老年时期：嘛都不干想干嘛就干嘛，。\n我说我非常内向吧，就是没人信。其实我是非常腼腆，然后略带忧郁气质。\n我要让你知道，糖有多甜，盐有多咸，什么叫天马流星拳。\n我只是试图接近真实，没人能概括成长。\n现实就像大楼，你时过境迁阅历暴涨总以为闭着眼都能数清多少层时，却总忘了算上还有地下室。\n星光美酒玻璃杯，恩恩爱爱永相随。\n星月不误风不语，停在说爱的夜里，记得初逢倦倦的美景，花满枝头芳遍地，仲夏夜绵绵细语，寂寞问我你在那里，已到花朵盛开。\n要知道当你紧握拳头，手中什么都没有，放开双手，你拥有的就是一切。\n一个好的人生，就是要做一个好的小丑，因为你永远都在耍那几个球，人生一共就五个球，什么事业、爱情、家庭之类的，这些球里面只有一个球是橡皮做的，就是事业，事业掉地上还能再弹起来，剩下都是玻璃做的，只要掉地上就碎了，所以说人生如果能做一个好的小丑是一非常好的事情。\n一元复始万象新，两元可买红豆冰。是金子搁哪都发光，是葵花栽哪都向阳。\n一日夫妻百日恩，百日夫妻似海深，海参倒比龙虾贵，龙虾喝酒不保温。\n有时候我特累，但我又不想跟别人说，又不是别人的生活，谁听啊，同情是最大的歧视，悲伤也是，你如果不把悲伤当回事，那你就是痛苦了，。\n与其做一个高尚的傻子，不如做一个快乐的疯子。\n原来爱不只甜美感动，还有酸楚和心痛，我如断线的风筝，迷失在你天空。原来爱不只坚守虔诚，还有遗憾和宽容，为剥开爱泪朦胧，唯你无动于衷\n在高潮的时候享受成就，在低潮的时候享受人生。\n真正的自信呢，就是看清得与失，如果那么在乎得与失呢，那就不叫自信了，我的自信呢来自于我觉得不管底下是有几个人，我都好好为各位演出。\n装傻这事，如果干的好，叫大智若愚。木讷这事，如果干的好，叫深沉。\n追到小偷意味着你已追回损失,追到女朋友意味着你的损失才刚刚开始。\n我对这个社会之中真正能够去追求自己理想的人，我就绝对特别地佩服这些人，因为这个社会有太多的人，分不清楚什么是自己想要的，什么是别人希望你得到的。\n多少的义无反顾，在时间面前也得认输。\n每天都那么努力，忍受了那么多的寂寞和痛苦。可我也没见你有多优秀。\n年轻时总是缺乏对自己的正确认识。时而觉得自己能力超群，海阔天空，时而觉得一无是处，平凡无能。长大后，经历得多了，逐渐认清自己，才发现自己原来是一无是处，平凡无能。\n爱情就是，如果没有更好的选择了，我才陪你到天荒地老。\n道为根本，术为道之动。——《数据结构与算法 评论区》\n特别喜欢的四段话1、如果你很想结婚,那就不一定非要等到爱情, 肉体和精神上的朋友都可以结婚。如果你很想要的是爱情,那你就要足够强大,甚至做好独身的准备, 因为遇到爱情的几率很低。-李银河2、我承认定数,笃信所有的遇见和错过,都自有旨趣。我提醒自己,这世上风物辽阔, 日月有期,不止一恨和一爱, 还有四海与四季。至于冗杂的感情,往后就只奉行那句:“我用真心待你,但不执着于你。活在缘分中,而非关系里。”3、喜欢来临的时候,其实也没那么盛大。不过就是一阵清风,两碗淡茶。三分春色不暇,四野灯火人家。五六个瞬间念起你,内心慌乱得七上八下。4、少年贪玩,青年迷恋爱情,壮年汲汲于成名成家,暮年自安于自欺欺人。人寿几何,顽铁能炼成的精金,能有多少?我们曾如此渴望命运的波澜,到最后才发现, 人生最曼妙的风景,竟是内心的淡定与从容。\n巷子里的猫很自由，却没有归宿。围墙里的狗有归宿，却终身都得低头。人生怎么选都会有遗憾。\n当孤单已经变成一种习惯 习惯到我已经不再去想该怎么办——刘若英《一辈子的孤单》\n改变自己是神，改变别人是神经病。\n耳机一戴 谁都不爱\n暗时间能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要习惯。工具是工具，问题是问题，能够解决问题的工具才是有用的东西。书写是为了更好的思考什么才是你的不可替代性和核心竞争力\n趁着对一件事情有热情的时候，一股脑儿把万事开头那个最难的阶段熬过去。有选择地阅读。\n学习一个小领域的时候，时时把“最终能够写出一篇漂亮的 Survey”放在大脑中提醒自己， 就能有助于在阅读和实践的时候有意无意地整理知识的结构、本质和重点，经过整理之后的知识理解更深刻，更不容易忘记，更容易被提取。\n你所拥有的知识并不取决于你记得多少，而在于它们能否在恰当的时候被回忆起来。\n这就意味着，我们在从既有经验中总结知识的时候，应利用适当的抽象来得出适用范围更广的知识（而不仅仅是一个萝卜一个坑） ；另一方面，在遇到新问题的时候，同样应该对问题进行抽象，触及其本质，去除不相干因素避免干扰，从而有效提取之前抽象出来的知识 。通俗的来说，这就是举一反三，触类旁通的解释\n让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。就像那句经常被人传阅的话：只做你最感兴趣的事情，钱会随之而来\n有时即便已经想通了写下来了发出去了，大脑仍然还是会在回味问题，还没有把它撤出潜意识，然后看到某篇文章或某本书的时候忽然又有所新的感悟 。能够把问题长时间停靠在潜意识中是一种技能，能够带来很大的好处，停留得越长你越琢磨得透彻，比别人看到的就越多\n知识是一把双刃剑，一方面，它们提供给了我们解决问题的无以伦比的捷径优势；另一方面，知识却也是思维的桎梏，如何在获取知识优势的同时，防止被知识束缚住，是一门技术。掌握这门技术的钥匙，就是抽象。在吸收知识的时候进行抽象，同时在面对需要用到知识的新问题时也要对问题进行抽象。\n《我是一只 IT 小小鸟》过早退出是一切失败的根源。\n兴趣遍地都是，专注和持之以恒才是真正稀缺的。\n生活中的选择远比我们想象得要多，细微的选择差异造就了不同的人生\n这个世界很大，别把不知道当成没有。\n信心，是这样一种奇怪的东西，就算你没有确切的证明未来会更好，你也会坚持下去，你不会过早退出循环；而来源于过来人的信息则是信心最靠谱的保障。\n靠专业技能的成功是最具可复制性的\n人不能活得太舒服了，太舒服了会出问题。——《士兵突击》\n有哪个人在国内混的舒坦愿意出来呢?留下有留下的原因，出来有出来的理由。这世上比所有人都瞧不起你的滋味还难受的，就是所有人都同情你。外面千好万好都不如家好。人家都以为你在外面混的风生水起，其实牙掉了咽肚里，苦只有自己知道。那些在外面飘着不回家的人，都有自己的难处。——《唐人街探案》\n当你凝望深渊的时候，深渊也在凝望你，所以，看可以，别看太久。——《唐人街探案2》\n相思是烟，相忆是酒，你就像那烟酒，搞得我烟不离手，酒不离口。——《HELLO 树先生》\n欲使其毁灭必先使其疯狂。\n\n不要轻易涉足能力范围以外的事。——《燕归来熙》\n火车一路向北，载着少年的梦。有没有这样的人生。他们是天之骄子，他们站在那最耀眼的地方，前程似锦。他们说，再见，小熙。而你依然站在原地，遥望着那大红条幅，那一辈子都触摸不到的地方。然后转身，离去，归于黑暗，义无反顾。他们在光辉盛处，平步青云。而你在黑暗深处，悄然成长。只待再过几年，相遇之时，看这世界舞台，主角换成谁。尘世寂寥，长夜茫茫，从未服输的，是我们永不弯曲的脊梁。他是天之骄子般的黑客大神，颠覆了网络江湖的——燕归来！她也不是前途无亮的pc小白，她是他的传奇——关小熙！笑傲江湖。两个人的爱情对垒，能让代码传情，可让CPU说话！守住一个城池？还是守住你？一代黑客大神在黯黑绝望中赐予你纯白若雪的爱！\n2010年11月，逢魔时刻，请勿绕道！\n淡忘许久的回忆，如夜幕尽头的星光，那样美丽，却再也触摸不到。\n颜可清楚自己要走的路，他眼神中，只有骄傲，从未有多余的东西。\n哪怕两人在一起，度过的那些快乐时光，也仅是……年华不经意的交错呵？\n那些流年里的光影，尘缘中的聚散，皆随之来，随之去，而你依旧一身独往，无挂无牵，到最后，立于众神之巅，只剩风，吹过世间。\n是不是，当人生目标从游戏等级，转移到现实能力，就意味着一个人的长大？\n午后的风没有停，深山的天空，井旁的苍树，树梢摇曳着光影，风中沙沙的响声却平添寂静。\n女教师眼中的光芒静止了，它们像是在很久之前就已定格，在那风声不曾到达的时光，情深似景，景深如年，那是我年少的轻狂，是距你最遥远的此方，在我最鲜艳的青春驻留的彼方。\n那些冻雪下的种子，沉埋多少年华，终有一天，要开出盛世的花。\n“我一定要成为黑客！”\n“身为真正的hacker（黑客），必须随时掌握并发掘第一手的资料，这些东西，等你看到中文翻译版本时，早已过时了。千分之一秒，都是珍贵的时间。”\n黄昏的日头，把她的背影拉得老长，长到如一卷无形的丝线，紧紧地缠绕住了二楼窗口，那一双目光中的记忆。思念，犹如那远方的地平线，落日下去，渐渐暗淡，看得见，却没有尽头。\n有一种感情，在漫长的岁月里，抽丝剥茧。不是爱情，不是友情，也不是亲情。那是什么呢？\n全身心的忙碌，总是让人忘记时间。\n在世界网络的最高处，他们以另一重身份，翻手为云，覆手为雨。\n那双漆黑的、深邃如夜幕的眸子，遥望着窗外，微微仰起的脸，仿佛穿过纷乱的雨幕，看到了许久之前，那些不忍忘却的时光。时光若有痕，那又是谁的“0”与“1”？\n情深缘浅不得之，忘情却是真情时。\n沉默的，无声的交流，却比一切甜言蜜语都让人心安。\n这人世间有许多东西，不是照抄可以抄来的，不是抄来了可以学到手的，不是学到手了就能运用的，不是运用了就能成名的，不是成名了就能成神的。\n\nhttps://m.maigoo.com/citiao/153442.html\n\n\n你眼里有星辰大海，是我渴望而不可及的存在未来很容易迷失，但请不忘初心——《首席黑客为少女》\n生活的内核永远让人丑态百出——不管你给它穿上了多么灿烂夺目的外套。早知如此，当初还奋斗什么？\n我一个人坐在空荡荡的店里，恶狠狠地打开一罐啤酒，在雪白的泡沫泛滥之前，用我的嘴唇截住它们。它们在我的舌尖上前仆后继的粉身碎骨，那种酥麻的破灭，就是活着\n无论如何，生活总是要继续的。当一个人发现了自己是一对暴力的变态夫妻的亲生骨肉；当一个人需要带着一个即使身体长大心智也永远不会成熟的小孩；更惨的是，当一个人终究明白了有些困境是可以走出来的，但是有些困境不可以，有些残缺可以随着时间的推移渐渐被人们忽略不计，有些残缺则永远血淋淋地待在那里。但是这个人也还是得继续活下去。\n我想说的其实只不过一句话，简单点说，对于过去的郑东霓，只要回到那个落脚的地方，就完全可以让自己以最舒服的方式或者融化成一摊水，或者蜷缩成一块石头。不用在乎姿势有多么难看，不用在乎脸上的粉到底还剩多少以及衣服是不是揉皱了。因为门一关，我可以用任何我愿意的方式和自己相处\n不要让自己配不上当初的野心，还辜负了曾经遭遇过的苦难。\n你对自由的理解是什么：说“不”的能力\n听过最落寞的一句话：不如意事常八九，可与言者无二三。\n知人者智 自知者明胜人者有力 自胜者强\n为啥在跃迁之前会出现一个【低谷】捏？温伯格认为：要想提升到一个新的 level，需要放弃自己擅长的技能，然后尝试自己所【不】擅长的技能。\n\nhttps://program-think.blogspot.com/2020/12/Study-and-Life.html\n\n\n欲买桂花同载酒，终不似，少年游\n看着楼下小朋友下课后熙熙攘攘，看着太阳朝着东海大桥缓缓落下，坐在窗台前敲完最后一个键的时候，心态大概是“拥有的都是侥幸，失去的都是人生啊”。\n很多时候人活着，喜讯与丑闻、落魄与荣华，一个也不会缺席；身不由己和求而不得，亦不可避免，最好的方法是，接纳它。\n拥有的时候也许也正在失去,失去的时候也许又是一段重生。\n“人有时候会突然不快乐了，突然被记忆里的某个细节揪住，突然陷入深深的沉默不想说话”\n极为讽刺的是，所有这些摆在台面上的自信与阳光都是虚假的。那些躲在角落里的，焦虑的、阴暗的、病态的努力，才是他真正成功的原因。\n逆境的修行：和光同尘，与时舒卷；戢鳞潜翼，思属风云\n成王败寇，那“寇”又能怎么做呢？岁月是滋养，生活是沉淀，人生就是一场等待的绽放。\n“水止无恒地，云行不计程。 到时为彼岸，过处即前生。”好事坏事，终归是往事，人生已多风雨，往事不要再提。\n\nhttps://baijiahao.baidu.com/s?id=1626807499301181288&amp;wfr=spider&amp;for=pc&amp;searchword=%E5%92%8C%E5%85%89%E5%90%8C%E5%B0%98%20%E4%B8%8E%E6%97%B6%E8%88%92%E5%8D%B7\n\n青衿之志，履践致远愿流年不负，愿岁月可期铅华洗尽，珠玑不御和光同尘，与时舒卷韶华向远，浮生未歇花谢芳不败，心静人自在少年初长成，自在恰如风\n\n英文：Walk the road you want to walk and do what you want to do , keep moving ahead and that’s not the silence of failure.译文：走自己想走的路，干自己想干的事，勇敢向前，这就是你不败的沉默。\n英文：Don’t try so hard, the best things come when you least expect them to.译文：不要着急，最好的总会在最不经意的时候出现。\n英文：Dream what you want to dream; go where you want to go; be what you want to be, because you have only one life and one chance to do all the things you want to do.译文：做你想做的梦吧，去你想去的地方吧，成为你想成为的人吧，因为你只有一次生命，一个机会去做所有那些你想做的事。\n可你觉得孤独又能怎么样啊?你觉得孤独也不过是心情更差而已嘛。以前没什么人跟你说话，你觉得孤独，也还是没人跟你说话啊。\n抑或是星光闪烁了眉月的情怀，在以前很多个相知相伴的夜晚，洒落一地羞涩的呓语。浩淼的宇空，被搓捏成一个心愿，种在惟有懂你的梦园。从此，那座写满守望的枫桥边又多了一个伤感的身影，在诉说孤单！五月的虔诚这样郁葱深情，是因为牵挂滂沱了栀子花的思恋！梅朵儿垂下楚怜的眼睑，任白雪在眸里滑过。一瓣瓣曼舞的雪啊，正如一幕幕相聚时你的笑脸，残忍了我的一天天。如果你湿过三月的雨，一定读过一种美丽的心情！如果你吻过三月的风，一定有过一种浪漫的遐想！流水溪边，我用寂寞捧起一簇浪花，洗涤破碎的梦。用迷惘织成一张思绪的网，捞舀出你给我的每一次回忆，碾在岁月的轮下……泉水叮咚，我心依旧。不要问我海角有多远，纵然千山万水，我也可以跋涉到它的彼岸。真远的地方，是你内心深处的鲜艳着玫瑰花的礼堂。不要问我天涯有多大，山大地大不如我的心大。不知为什么，却装不下对你一丝刻骨铭心的牵挂？或许爱本身需要一段距离，一怀牵挂，才是真正的拥有！又一个情人节到来！一棵挂满朦胧的梧桐树下，你把自己晶莹的泪珠播进脚下的泥土。这是一个让你芬芳的地方，许多年以后，这里要生长出一棵相思树，树上结满的是因为挂牵而变得动听的童话！\n人这一辈子，无非就是个过程，荣华花间露，富贵草上霜，生不带来，死不带去，得意些什么？失意些什么？顺其自然、随遇而安，如行云般自在，像流水般洒脱，才是人生应有的态度。当你在高处的时候，你的朋友知道你是谁，当你坠落的时候，你才知道你的朋友是谁。你可能在一个人面前一文不值，却在另一个人面前是无价之宝。谨记自己的价值所在。这就是人挪活的道理所在。\n每个顺其自然的背后，都是想要改变却不得的努力，每个洒脱的背后都藏着不舍，每个放下前都是挣扎，每个人心里都有不可言说的秘密。一个人，就算再留念，如果你抓不住，就要适时放手，久了你会神伤，会心碎。任何事，任何人，都会成为过去，不要跟它过不去，无论多难，我们都要学会抽身而退。现在过的每一天，都是余生中最年轻的一天。请不要老得太快，却明白得太迟。很多错误不必亲自试验，在别人的经历中吸取营养也是一种智慧。\n孤独并不是被朋友孤立，不被人重视，有时候是我们自己的选择，是静立于自己世界的娴静与平淡。\n从你第一次去网吧连门根本就不敢进，到现在去网吧大摇大摆进进出出的时候，你已经变了；从你第一次闻到烟味用手扇掉说难闻，到现在抽烟已经习惯点了一支又一支，从你第一次喝酒喝到吐说着难受，到现在喝酒什么都无所谓，你已经变了；从你第一次跟别人谈恋爱说句话却害羞到现在拉手接吻拥抱都无所谓的时候，你已经变了；从你第一次跟别人打架手心都是汗，打完害怕担心到现在心里有火两句话没说就上去打的时候，你已经变了；从你第一次失恋哭得跟傻逼一样，到现在身边对象不停变的时候，你已经变了；也许这就是成长，我也不知道是什么改变了我们的模样，我也在想是谁改变了我们最初的模样，时间吗？不对，我想应该是人心……\n\n\nhttps://www.bilibili.com/video/BV1MJ411m7g2?p=1&amp;share_medium=android&amp;share_plat=android&amp;share_source=WEIXIN&amp;share_tag=s_i&amp;timestamp=1626363955&amp;unique_k=kZoV8Z\n\n在我正常时候他们都不认为我有抑郁症，但是我自己知道我的内心出了多大问题，一旦有事情作导火索我就会爆发到非常极端。心理疾病其实每个人都有，《天才在左疯子在右》中说到:每个心理学从业者都有心理疾病，不是因为这个职业而产生，而是因这个职业而发现。\n华晨宇：抑郁症最怕的就是身边的朋友都觉得自己是正常的，但其实那一刻，当他一个人在自己的房间里的时候，他其实非常地痛苦，所以我们不应该忽略他们在我们日常生活的痛苦。”\n今天晚自习，班级一位平时看来非常乐天派的女孩突然情绪失控。拦不住的用头撞桌子、椅子、甚至是墙。让我们给她拿刀，说真的太痛苦了，想死去。自以为平时看了许多有关抑郁症的相关内容，当我真正开始面对它的时候，才发现它超乎想象的可怕，这是我离抑郁症最近的一次。\n我应该不会寻死，但我一直期盼着意外死亡；我也是，如果寿命可以分享，那就给爱我和我爱的人吧。\n随着年龄的增长，发现活着就是一场孤独的旅行\n每个人都是一座孤岛，愿每座孤岛上都有盛开的花\n一直觉得不被这个世界需要 这几年越发严重  每个自说自导一辈子不会离开的人总会离开  最严重的时候突然冲到马路上想就这样解脱 被停下车的师傅骂神经病  我加了自杀群 想着组队一起走会不会更好 看着群里的人不断解脱 也准备去解脱了  我爸给我打了两个小时的电话 他们好像需要我  我好像应该努力活下去 可是真的好痛苦 我每天听这首歌都会哭 我26了 凭什么要那么痛苦 每个人都说你好幽默 每个人都和我笑嘻嘻 我好像应该很快乐 可是我一点也不快乐\n抑郁症发作的时候很难受我只能深呼吸来控制自己的情绪他发作的时间不是固定的他是突然冒出来来淹没你悄声无息的就盖满你的全身每个人的症状不同症状严重程度也不同他会带给你不同的社会恐惧感以及陌生感我就属于那一种表面上很正常实则内心深处已经全面崩塌我记得我看过一则故事里面说到“天空那么大，一定可以装下你所有的不开心和悲伤。”而在我看来天空那么好看，我怎么可以让我的悲伤玷污它我试过找人帮助希望别人可以把我拉出这个让我绝望的深渊可是后来我发现了没有人会帮你没有人会在乎你你只能看着自己一点点被这个黑暗的深潭淹没毫无办法……\n嗯，明明上一刻觉得很开心，可下一刻，却觉得世界都是灰白色，好想死……\n真的，难过的时候不需要说什么安慰的话，你在我旁边坐一会，就好了\n“我本可以忍受黑暗，只因我曾见过光明，而光明已将我的荒凉，变为新的荒凉。”\n\n若非时间作祟，你我怎会相遇。若非流年错转，你我怎会相离。\n说者无意，听者有心，对不对？\n每个人心里都有一个死小孩\nEadem mutata resurgo.纵使改变，依然故我。（伯努利墓志铭）\n\nhttps://zhidao.baidu.com/question/582777129203452605.htmlhttp://www.zyqct.com/yulu/132943.html\n\n真正的寂寞是一种深入骨髓的空虚，一种令你发狂的空虚，纵然在欢呼声中，也会感到内心的空虚、惆怅与沮丧。――古龙\n读完《龙族》之后，我突然发现我也有一种孤寂的感觉了。孤寂，孤独与寂寞。在《龙族》最后一章中，那个肯德基先生指着自己的心脏，说：”我们每一个人可能都有这么一个死小孩，在这里藏着。”这样的死小孩。怎么样的?孤独又执著，倔强得不肯认输。其实每次读完龙族，都会有一种鼻子酸涩的感觉，无论读了多少遍。仿佛自己心中的孤独被这本像放大镜一般的书，放大了无数倍。你体会得到书中人物的孤独，因为你也孤独。龙族，写的是一些人的孤独。他们在孤独中拉风着，执著着，倔强着，却没有人看见，死之后也没有陌生人为他们惋惜，他们明明是在拯救世界啊。就像是一朵开在悬崖上的花，拼命地生长，开出最美丽的花瓣，在风中摇曳的身姿，如同伊人在水中央跳舞。却没有人欣赏。默默地开在悬崖边上，只有孤独的风看着它。看它含苞，看她绽放，直至凋零…路明非从小衰到大，他的十八岁的人生，详细诠释了什么叫做”没有最衰只有更衰”。一直寄住在婶婶家，父母很久都没有来看过他，时间长了，连父母的样子也忘了。婶婶从小就让他干这干那，虽然没有哈利波特那样悲催，打骂兼备，可他也算是一条狗。他干什么都是错的。最后他终于明白，因为婶婶并不爱他。因为不爱，所以做什么都是错的。他喜欢爬到天台，把两只脚悬空，看着脚下灯火通明的城市，风吹过来，只有他一个人。背影孤独得黯然销魂。毕业聚会上，在即将告白的时候却被别人当成了告白工具，成为了那个小写的”i”，没有”love”，也没有”you”。他慢慢的蹲下，成为了最小最小的”i”，眼泪在眼眶中打着圈，可却没有落下。可是没有人知道这个小小的”i”的作用。没有”i”，又哪来的”love you”呢？在这个时候，门被用力地打开了，阳光照射进来，照射在那个小小的”i”上。那一种感觉，就像是暴风雨过后，阳光就像是子弹一样，不停地对着乌云一梭子一梭子的拼命的开着，打着，噼里啪啦的，直到把乌云打得千疮百孔，撕裂了那一层厚厚的黑暗。\n重见天日。天使走进来，目光如炬。那一天，是他第一次拽了一把，很拽很拽。哪怕是在别人的帮助下。卡塞尔学院，以喜欢颠覆人家世界观为著的学院，一脚踢开了无数的精英，却把那个别人都看不起的，贱狗一般的他给哭着求着了进去。路明非以为他终于可以拽了。史无前例S级学生。可进去了之后，他更加挫败。卡塞尔学院的确是喜欢颠覆人家世界观，可他却忘了，里面还有一群精英帮凶，个个牛逼到了极点。他的确是史无前例的，因为他功课差得也是史无前例。在他该显露时，他没有显露，站在一旁，怂得说着烂话。他以为很好笑，可是没有人笑，他就在那沉默的环境中干笑了几句，最后不笑了。可他牛逼的时候，却没有人看见。青铜计划中，明明是他用七宗罪杀死了龙王诺顿，却没有人看见，反而让恺撒抢去了头功。尼伯龙根里，楚子航昏迷，也是他背起七宗罪，一刀一刀地杀死了龙王，说出了那一句”我重临世界之日，诸逆臣皆当死去”。巨牛逼，巨拉风啊。从来没有人这么拉风牛逼过。哪怕是有钱到爆，冬天取暖可以拿来烧钱烧整一个冬天的恺撒，或者是苦行僧一般，一抓起村雨就成一杀胚的楚子航，他们都没有。可还是没有看见。因为没有看见，所以明明很拉风，明明事后想起来都觉得很骄傲，但还是被人看成一条废柴，可有可无，一上战场一定第一个成为炮灰。有时候觉得，路明非甘心么？明明很厉害，明明很牛逼很拉风，却被别人看成一个傻子。一定是不甘心的吧。”路明非，你没有感觉到绝望，是因为有人不敢让你绝望，总是施舍似的一点点给你些希望。一旦你绝望了，就会完完全全变成另外一副模样。”他侃侃而谈，坚定有力，像个出色的演说家，”可是总有一天你还是会绝望的，因为你一无所有。你是个废物，是多余的，没有人真的需要你。你是个笑话，你自始至终从来都没有摆脱过’血之哀’，偏偏你无法觉察到。你不感到孤独，哈哈哈哈哈，”他突然狂笑起来，转过身，指着路明非的鼻子，”真有趣，没有听过比这更好笑的笑话了！””他们给你的爱，就像是从饭碗里拨出来施舍给你的米粒。”\n他的声音嘶哑冷酷。――《路鸣泽·悲剧舞台·龙族Ⅱ》楚子航的孤独来源于那一个雨夜。也就是那一个雨夜，在他世界观被颠覆的同时，也涉足了那个奇特的世界。他不喜欢雨，可是却总被人认为他喜欢雨，因为他总喜欢站在雨里，脸没有丝毫的表情，却眺望着远方，似乎在等待着什么。雨声响着，似乎有熟悉的曲调在雨幕中飘荡着。别人可能以为他耍帅，他在扮酷，他喜欢下雨，他认为这样很诗情画意…可他也只是想等到那一个男人而已。那个是他”爸爸”的男人。真的是爸爸。在那个雨夜里，他失去了那个男人，没有人记得他，连妈妈也没有。只有他记住了他，让他不至于被世界遗忘。他的心里，永远有一条永远都走不完的高速路，高速路上，有着一辆千疮百孔的迈巴赫。他是狮心会会长，执行部的高级执行员，执行过十二次任务没有一次失败。他的确很牛逼。楚子航和路明非同一间学校。他们并不认识对方，只是知道对方而已。路明非因为楚子航低调的牛逼，楚子航因为路明非史无前例的衰。在中学里，楚子航对于路明非的印象是最深的。因为他也感受到了路明非的孤独吧?那种孤独，从来都没有消失。再怎么伪装，那也只是一种伪装，剥开重重伪装，露出来的，是黑色的脆弱的孤独。身为一个面瘫，一个杀胚，他似乎从来都没有过爱恋。可他却喜欢上了那个叫做夏弥的女孩。――尽管最后知道，她就是他们所要杀的那条龙。那条名叫”耶梦加得”的龙。长手长脚的天使在罢工了的地铁站挤过栏杆为他们接可乐。天使在过山车上欢呼，强烈的风吹起她的头发，头发在风中如灵蛇般蜿蜒飞舞。爆炸中，天使驾御着风朝他飞来，头发依旧是飞舞，裙摆就像是一朵花般盛开着。他睁开眼睛，便看见了天使俯身看着他，就像在亲吻他的脸庞。天使在他昏睡的时候守在他的身旁，在罗嗦中悄然睡去，阳光照在她洁净的面孔上，盛开出大片大片的白色花朵。天使在他住院的时候照顾他，端着一碗银耳莲子羹。天使大大咧咧的，和路明非一样喜欢说着烂话。地铁站里，天使趴在他的背上，场面温馨而安心。就在这个时候，她走到了楚子航的心里去了吧。\n到了最后，天使变成了强大的龙王，黄金瞳对视着他的黄金瞳，默默地说了声”再见”。随后轰然倒地，鲜血在她背后凝成了真正的翅膀。可能楚子航并没有感觉到自己喜欢的是夏弥，可能他在夏弥的房间内停留，看着日落时知道了，当他知道时，已太晚。但那份爱却是如此清晰的存在着。因为存在着，所以无论怎么努力，都无法忘记。没有言说的爱，就像是一种字，字字珠玑，被一把雕刻刀狠狠的刻进了骨髓中去。是那样的刻骨铭心。有些爱稍纵即逝，却刻骨铭心。它在命运中化为灰烬，却在记忆中拔节生根。”你们根本不了解龙类，龙和人一样，最开始只是降临这个世界的孩子。”又想起她的声音了。其实这句话真是愤懑孤独啊，可是她那么冷冰冰地说出来，满是嘲讽，绝不示弱。她是个从不示弱的女孩啊…即使那么孤独地活在这个世界上，也从未偏离自己的方向，即便对着空无一人的屋子，也会大声说，”我回来了！”应该是这样的吧?他觉得有点累了，很想睡一觉，于是合衣躺下，双手静静地搭在胸前。他用了半个小时做完了功课，回忆了那些不愿遗忘的事，现在这些事又多了几件。然后他缓缓地合上眼睛，此刻夕阳收走了最后的余晖，夜色如幕布把他覆盖。他清楚地知道这一次醒来，将不会看见阳光里天使低头，似乎要亲吻他的嘴唇。――《楚子航 每个人的心里都有个死小孩 龙族Ⅱ》\n说真的，读完这些人，我仿佛也感受到了那种孤独。不被理解，只是默默地看着夜晚的风，一个人在自己的世界里想自己干的事情。我喜欢把房门关上。因为把房门关上了，整个世界就只有我一个人，只有我一个人在默默地坐着，干着想干的事情。外面那嘈杂、残酷、肮脏的世界，与我就没有任何关系了。我的心里也会有一个死小孩。她写着她最爱的同人，画着她最爱的漫画，她可能成绩不好，可她却在为某一些东西执著。她会倔强地记住很多东西，她会在没有人的时候自己与自己说话，她会打字飞快，她会收集许许多多的东西，她会在雨中行走，她会在黑夜里独自一人听着歌，她会倔强地不哭…无论是多么成熟的人，在他们心里，依旧会有这么一个死小孩，他孤独无助不被理解，可他却被套上了一件件的伪装。古龙说过：”真正的寂寞是一种深入骨髓的空虚，一种令你发狂的空虚。纵然在欢呼声中，也会感到内心的空虚、惆怅与沮丧。”欢呼声中，你默默地站在那个地方，看着喜欢的女孩与别的男人拥抱，你缩着脖子站在那里，孤独透顶。深入骨髓，那个雨夜的孤独与寂寞，令你发狂。即使受伤昏迷过去，也死死的握着那一把钥匙，同样孤独透顶。都是那样的孤独透顶。倔强的泪水却始终没有流下。心中的孤独与寂寞，已经溢满，迟早有一天，它们会变成绝望。下面是一首关于龙族的诗，登在小说绘上，我把它抄了下来：如果你藏着一些孤单，但也埋着一些热血；如果你偶尔有些迷茫，但也偶尔有些梦想；如果你忘记了一些东西，但是又希望能记起…如果你还记得孤寂天台上曾有一个少年同样孤寂远眺，如果你还记得曾有一个红发姑娘在你最无助的时候如天使一般推开门，如果你还记得你在水下八十米，整个世界如同只有你一人，那个姑娘还陪在你身边。有些爱从未被你唱响过，有些火种也从未被你点燃过。可是你心里始终有着，声与光。如果你还记得赤色狂雨里你曾听过一首温馨的歌，你在流泪，如果你还记得白色病房里有个女孩曾安睡在你身边，你在沉默，如果你还记得黑色地铁里你曾背着一个女孩一步步向前走，你在呼吸，如果你还记得青色绒帘旁你打开一个女孩的五斗柜，满目灰尘，你在抚摸，你在阳光里垂下头，回忆曾亲吻过你脸颊的那个天使时，即使她不再出现。\n你是路明非，你是楚子航，你是青春时迷茫却倔强的灵魂。你是孤单，你是执著，是年少时游走在时光里的骄傲。你是血之哀，也是梦之子，流动在血管，凝结在双眸。一起点燃孤单、迷茫，热血与燃放。\n随文赠言：【这世上的一切都借希望而完成，农夫不会剥下一粒玉米，如果他不曾希望它长成种粒；单身汉不会娶妻，如果他不曾希望有孩子；商人也不会去工作，如果他不曾希望因此而有收益。】\n比孤独更可悲的事情，就是根本不知道自己很孤独，或者分明很孤独，却把自己都骗得相信自己不孤独。\n\n扔过那么多的东西离开过那么多的人身边的人来来往往忘记过那么多熟悉的脸熬过无数个深夜和黎明义无反顾撞过那么多南墙皆是黄粱一梦的空欢喜一场到头来却忘记自己是个极其念旧的人——TeFuir 自渡\n就比如某人在图书馆学习，然后晚上下大雨了，他没带伞，如果他让我去接他的话，我其实应该会蛮开心的，但是我知道这种事情在我身上很难发生，甚至以后也不会存在的。而我们心中希望对别人做的事情，想象的场景，其实是自己内心所渴望得到的，拥有的东西，是自己希望被人这样温柔以待吧~\n“少年杀死了恶龙，面对龙窟的金银财宝，少年成为了龙窟的新主人，变成了新的恶龙。”这个屠龙少年终成恶龙。\n每个人都是脆弱又倔强的，正是这矛盾的事实促进了社会的进步\n喜欢你的人一直有空，什么都懂，无所不能。\n\n\nhttps://mp.weixin.qq.com/s/kWMSo-TRZQ1txLyG5wjn3g\n\n所谓门槛，能力够了就是门，能力不够就是槛。——人生的沟沟坎坎，多半是能力不足所致。\n哪有什么选择恐惧症，还不是因为没钱；哪有什么优柔寡断，还不是因为怂。——面对现实吧！\n小孩子才问你为什么不理我了，是不是不喜欢我了，成年人都是默契地相互疏远。——人长大了，朋友也会越来越少。\n彪悍的人生，不需要解释。——只要你按时达到目的地，很少有人在乎你开的是奔驰还是拖拉机。\n当你放下面子赚钱的时候，说明你已经懂事了；当你用钱赚回面子的时候，说明你已经成功了；当你用面子可以赚钱的时候，说明你已经是人物了；当你还停留在那里喝酒、吹牛，啥也不懂还装懂，只爱所谓的面子的时候，说明你这辈子也就这样了！——“面子”于人生，你在哪一阶段呢？\n\n\nhttps://mp.weixin.qq.com/s/vsnqr1Cqd5liIZk5DylP8g\n\n「学生思维」就是认为：\n\n不接受别人的好意就是客气；\n不接受的同时再带上谢谢就是礼貌；\n欠别人的是不好的；\n总觉得自己可以搞定一切；\n人与人之间「彼此利用」是可耻的。\n\n而成熟的成年人则明白：\n\n不接受别人小小的好意是对立或敌意；\n不接受的同事再带上谢谢是冷冰冰；\n欠别人的我总会还回去的，这种你来我往不会只有一个回合，而且程度必然会越来越深；\n自己搞不定一切，我需要别人，同样别人也需要我；\n人与人之间就是彼此利用的，这是这个世界运转的规则，是客观规律，我不被人利用，说明（1）我没有价值，（2）我被孤立了。而无论哪一点，都是非常糟糕的。\n\n\n\nhttps://mp.weixin.qq.com/s/vCSw-31dZgv-gKGOkzp7KA\n\n只有极致的努力，才能配得上极致的风景。 \n觉得自己牛逼的人，都是因为圈子太小了。圈子决定眼界，层次决定格局。做人，最忌讳的就是太自以为是，因为比你厉害的大有人在。\n你是什么样的人，就会遇到什么样的人，拥有什么样的人生。\n热恋时，情侣们常感叹：上辈子积了什么德；结婚后，夫妻们常怀疑：上辈子造了什么孽。婚姻是一座围城，城外的人想进去，城里的人想出来。\n小时候，笑代表一种心情，长大了，笑代表一种表情；小时候，哭代表一种伤心，长大了，哭代表一种居心。成长真是个可怕的蜕变过程。一个成熟的成年人，要学会开心时克制，难过时掩藏，所有的情绪要独自消化。\n曾经有多少人劝你不听，如今就有多少人说你后悔没用。做人，最怕的就是一意孤行。前行的脚步不要走得太快，多听听身边的声音，尤其是那些真心对你好的人。\n你总说梦想遥不可及，可你从不早睡，也不早起。人生最遗憾的事，莫过于晚上睡觉千条路，早上起来走原路。没有行动的梦想，永远是空想。\n\n每一段痛苦的经历都是成长，越痛苦成长的越快。\n\nhttps://mp.weixin.qq.com/s/M8XtYxFqBezltxOq33iftg\n\n你不能用知识，去替代阅历。虽然，我们能够从别人的经验和大道理中吸取到一些营养，但这些道理如果没有自己实际经历的支撑，其实都是无根之木而已。没有根基的大厦，只是海市蜃楼。\n\nhttps://mp.weixin.qq.com/s/H1f3HIFwJr5Ue5wxAjTa4g\n\n《西藏生死书》有这样一句话：“接近死亡，可以带来真正的觉醒和生命观的改变。”当一个人感受到生命的无常，他就明白自然规律的无情，自身的渺小，从心底懂得敬畏与珍惜。\n罗翔：“这个剧本，本是我不配拥有的。若非命运的庇护，所有的梦想，所有对人生远大的规划，都只是一个笑话。”\n蒋勋曾说：“死亡，是人生最重要的功课。”\n当一个人明白死亡是一件随时降临的事，他就收起了自己的狂妄。\n当一个人明白死亡是一件必定降临的事，他就收起了自己的散漫。\n希腊人说：向死而生。\n唯有知道生命无常，方能不负此生。\n天意从来高难问，很多时候，一个人想要成事，五分看努力，五分看运气。\n谋事在人，成事在天。\n\nhttps://mp.weixin.qq.com/s/byt9dc1wFJm6hZwQPRHtCA\n\n穷人抗风险能力太低了，像片弱不禁风的破树叶，一点风吹草动你就没魂了。\n有人说，人生有两种痛苦：第一种叫成长的苦，是主动改变，是寒窗苦读，是埋头奋斗，是孤独。第二种叫生活的苦，是世俗琐事，是奔波操劳，是热嘲冷讽，是被收割。\n唯有拼尽全力，去做有价值的事情，让生活更有期待的事情，你才能配得上高配的人生。\n\n\nhttps://mp.weixin.qq.com/s/wWTjamlJHwkAZmO6wHw9hQ\n\n所有的牛逼，都是用苦逼换来的\n那些牛逼闪闪的人，都是从黑暗里爬出来的很多人只是在你看不见的地方努力，而你不知道罢了。那些不足为外人道的苦逼往事，才是真正让他们成功的理由。\n唯有刺痛，才能惊醒一个人。\n吃苦这种事儿，如人饮水，冷暖自知。\n为了配得上自己的野心，一直以来给自己的压力都太大了，而选择健身，沉浸在畅汗淋漓中，尽情挥洒汗水是一个很好的宣泄口。\n从童年起，我便自己选择了一条少有人走的路（在外求学），于是在未来的时光里，这些年来，我自己一个人在充满荆棘的道路上挣扎前进，身边没有朋友，无人陪伴，久而久之，我习惯了孤独，也培养了自律自立的习惯，可这些还不足以配得上我的野心，我便不断给自己施加压力，以至于时常压的我喘不过气来，在小学的时候，也许是我最要强最懂事的时候，我觉得自己坚持不下去了，就用小刀在手臂手指手掌上划过一道又一道浅浅的小口子，然后看着那一排排鲜艳欲滴的血珠颗颗沁出，我紧绷的心神才能有所放松，而只有这样的刺痛，才能让我重新打起精神，甚至在后来这样的刺激不够了，我还在伤口上撒醋撒盐，来释放多余的压力，防止自己精神崩溃。时至今日，我站在这里，头顶的周身的聚光灯打过来，此时此刻，我，光芒万丈！之所以讲出这些，我想告诉听到看到这里的所有人，你们看到的，这些摆在台面上的自信与阳光都是虚假的，那些躲在角落里的，焦虑的、阴暗的、病态的，在崩溃边缘挣扎徘徊的努力，才是我真正成功的原因。而这条路注定了充满孤独和磨难，我只能用前行途中磨出的滴滴鲜血（收获的金钱），用力挥洒在空中，点缀出朵朵血花（请客找人出去玩），看它们在空中盛开，偶尔阳光明媚，光影斑驳，穿梭其间，这也许，是世间最美的风景罢～\n\n一只狗给人的最大快乐就是你对它装疯的时候,它不会取笑你反而会跟你一起疯，爱人类好像是狗的本能,即便你一天不理它突然看它一下都会冲你摇尾巴亲你，现在社会人与人之间冷漠的态度有时还真比不上与狗之间相处的那份真诚，有人说与愈多人打交道就愈喜欢狗有道理，它们唯一的缺点大概就是寿命太短吧──网易云音乐 万晓利《小狗布鲁斯》热评\n多热闹的场合，都有静下来的时候，那会儿的孤独才是真孤独。\n内心渴望安稳骨子里又不甘平庸\n为啥越是成功女性男士结婚晚，越优秀心气越高，不想凑合，可想遇到合适的……茫茫人海，只剩惆怅喽有一方跟不上另一方的脚步，一次两次可能停下来等一等，久了终会磨了另一方的耐心浪漫的背后可能是竭力的付出。\n有些时候，一个选择错了，可能需要我们穷尽一生去纠正。\n精力都在这些琐事中耗尽了，以前还觉着工作了可以继续深造，现在想来，能挤出时间精力工作中继续学习的，真的都是人中龙凤了。\n下定决心要做的事情，就要不动声色一往无前，你的野心很大，所以你没资格停下。\n告别的都是过去，要来的都是惊喜，你生来应为高山而非草芥。\n《麦田守望者》里有一句话：“一个成熟的人，可以为了梦想卑微的活着。”我们是成熟的人，我们也可以为了梦想卑微地活着。\n\nhttps://mp.weixin.qq.com/s/H9tV72DPZnm-UC1Vh1dDBg\n\n如果坚持不下去了，就去看看凌晨四点的街头、医院、火车站，这个时候晨风微凉，烟火正盛，所有的这些人间真实，都会告诉你：一切都值得。\n因为最是人间烟火抚人心啊。\n有人说：“在医院里看生死，在火车站看生活。”\n《偷书贼》中有着一段话：“列车停靠在慕尼黑火车站，乘客们仿佛从一个被撕开的包裹里鱼贯而出，他们好像一直都在奔波，仿佛这样才能有什么希望。”\n《奇葩说》中臧鸿飞曾说：“每个人都要独自走过一段长长的路，有各种心酸委屈。走过之前，你无人可说；走过之后，你也不必再说。”\n\nhttps://mp.weixin.qq.com/s/srqdy5jkEeg1teuBG2WG6g\n\n没有神的光环，你我生而平凡。\n正如尼采所说：“每一个不曾起舞的日子，都是对生命的辜负。”\n没有人是一座孤岛，唯有情感，才是滋养我们一生的力量源泉。\n关于《灿烂人生》这部电影， 曾有网友留言：“这部电影让我学会了怎么去爱，因为有些人，错过就是一生，有些感情，失去了就无法重来。”\n所以，当你拥有一段非常好的感情时一定要懂得珍惜，让人生多一些“我可以”的从容，少一些“我本可以”的无奈。\n《大鱼海棠》里有一句台词：“这短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人、攀一座山、追一个梦。”\n人生海海，如果有幸遇上了那个对的人，不妨大胆一回，抛开顾忌，勇敢去爱。\n人生的失意，大多从错过一个人、一段感情开始，亲密关系中的悲哀在于面对自己喜欢的人，却没有勇气说出那个“爱”字。\n有时候我们害怕爱，只不过是害怕最终会失去它。\n\n真是不知道身在福中呢，人生中少有的专心、少有的安静和少有的劲头，都揉进了那个当下的焦虑、恐惧和抱怨中了。\n苦确实是苦的，但是当你考上以后那将是你人生的一段阅历，而这份阅历是你独有的，它能丰富你的内涵。考研从来不是考的书本知识，而是一个人的自知自律和自觉，那段时光真的很匆匆，那段时光值得回味一生。\n我感受到的压力都是来自于我自己不努力不积极而又不甘于现状的恐慌。\n不甘心的时候就是在进步，痛苦的时候就是在成长。\n如果她涉世未深，就带她看遍世间繁华；如果她历经沧桑，就带她去坐十次木马。——冷爱\n\n我慢慢地、慢慢地了解到，所谓父女母子一场，只不过意味着，你和他的缘分就是今生今世不断地在目送他的背影渐行渐远。你站立在小路的这一端，看着他逐渐消失在小路转弯的地方，而且，他用背影默默告诉你：不必追。\n我们拼命地学习如何成功冲刺一百米，但是没有人教过我们：你跌倒时，怎么跌得有尊严；你的膝盖破得血肉模糊时，怎么清洗伤口、怎么包扎；你痛得无法忍受时，用什么样的表情去面对别人；你一头栽下时，怎么治疗内心淌血的创痛，怎么获得心灵深层的平静，心像玻璃一样碎了一地时，怎么收拾？\n谁教过我们，在跌倒时，怎样的勇敢才真正有用？怎样的智慧才能度过？跌倒，怎样可以变成行远的力量？失败，为什么往往是人生的修行？何以跌倒过的人，更深刻、更真诚？\n在我们整个成长的过程里，谁，教过我们怎么去面对痛苦、挫折、失败？它不在我们的家庭教育里，它不在小学、中学、大学的教科书或课程里，它更不在我们的大众传播里。家庭教育、学校教育、社会教育只教我们如何去追求卓越，从砍樱桃的华盛顿、悬梁刺股的孙敬、苏秦到平地起楼的比尔?盖茨，都是成功的典范。即使是谈到失败，目的只是要你绝地反攻，再度追求出人头地，譬如越王句践的卧薪尝胆，洗雪耻辱，譬如哪个战败的国王看见蜘蛛如何结网，不屈不挠。\n一草一千秋，一花一世界\n茫然不悟身何处，水色天光共蔚蓝。\n贫穷的记忆，在事过境迁之后，像黑白片一样，可能产生一种烟尘朦胧的美感，转化为辛酸而甜美的回忆。\n你未看此花时，此花与汝心同归于寂，你来看此花时，则此花颜色一时明白起来，便知此花不在你的心外\n沙上有印，风中有音，光中有影，死亡至深处不无魂魄之漂泊……\n死亡，是一个秘密会社的暗语吗？因为经历了死亡，所以可以一言不发就明白了一切的一切吗？\n我们记得他的暴躁，我们记得他的固执，但是我们更记得他的温暖、他的仁厚。他的眼睛毫不迟疑地告诉你：父亲的爱，没有条件，没有尽头。\n人生本来就是旅程。夫妻、父子、父女一场，情再深，义再厚，也是电光石火，青草叶上一点霹水，只是，在我们心中，有万分不舍：那撑伞的人啊，自已是离乱时代的孤儿，委屈了自己，成全了别人。儿女的感恩、妻子的思念，他已惘然。我们只好相信：蜡烛烧完了，烛光，在我们心里，陪着我们，继续旅程。在一条我们看不见、但是与我们的旅途平行的路上，爸爸，请慢慢走。白日依山尽，黄河人海流。欲穷千里目，更上一层楼。\n2004年，龙应台父亲的逝世让她体味到人生如同“暗夜行山路”。\n父亲的逝世，是她第一次上“生死大课”，她也开始独自去咀嚼和消化人生不可逃脱的生老病死，“有些事，只能一个人做。有些关，只能一个人过。有些路啊，只能一个人走。”\n龙应台细细地写着生活点滴，从细微之事却更明白生死大课的本质。“人在天地之间终究是无所凭依的孤独。你真能面对生老病死，就真的明白，在这世间，没有什么可以附着依托。”\n龙应台以她流畅的笔法写出了三代人的心情，写尽了幽微，如烛光冷照山壁，让每一代读者都从中有所感悟：再多的遗憾不舍都不过是生命的过程，我们只能往前走，用现在来填补过去的空白和伤口，带着爱和释怀与生命和解。\n——《目送》\n\n任何的理想都需要实实在在的技术来支撑。\n基本功扎实可以决定你可以入行吃这碗饭，但你的创造力、你的审美、你的品位、你的情商等等，将决定你职业发展的无限可能。\n很多事情，如果只是抱着试试看的态度，那么最后只会以失败而告终。试试只是一个借口，你只有两个选择：要么做，要么不做。\n知识需要沉淀，不要想试图一下子掌握所有\n当被限定了相对少的时间，你会主动思考更高效的方法，而非纠缠于细枝末节，用努力的幻象自欺欺人。\n人生过半，越到晚年，有一个知心的伴侣是多么重要好看的皮囊不过风花雪月，转瞬即逝罢了多是满足年少的虚妄而已看透容易，看破难大家都说，看了那么多书，懂得那么多道理，却还是过不好这一生\n愿此生相守之人，此刻正陪伴左右。\n\n\n《红楼梦》：年少看不起刘姥姥，看懂已是中年人\n\n那些带着很大优越感的想法，都是在少不更事时。及至经了些世事，懂得人人都有在屋檐下要低头的时刻，这才对刘姥姥感同身受起来。\n每个人都在自己的生命中，孤独地过冬，谁又没有求人的时候呢？而我们，对于他人的无奈际遇，总是要在自己经历过人生的风霜之后，才会感同身受。\n“世界上只有一种真正的英雄主义，就是认清了生活的真相后，还依然热爱生活。”\n穷和弱，只是暂时的缺失和轮回，只要你一直心怀希望去努力，你想要的，命运，都会一点点兑现给你。\n\n\n《围城》：年少看不起方鸿渐，读懂已是书中人\n\n日光之下无新事，世间何处不围城。\n少年都笑方鸿渐，有一天当你真的读懂了他，才会发现：生活处处皆围城，谁人不是方鸿渐。\n\n年少时，谁不曾心比天高。看《围城》的开篇，常会想起这样一句话：故事的开头总是极具温柔，故事的结尾却让人猝不及防。\n\n直到人到中年，有机会重新翻阅这本书，对他却有了莫名的亲近感。\n就像方鸿渐身上有很多缺点却不自知一样，年轻时的我们何尝不是如此。\n总是自视甚高，自命不凡，甚至不惜做一些对抗现实的傻事，只为证明自己的与众不同。\n可谁在年少时没有犯过傻，走过弯路呢？\n因为知道身后还有人兜底，还没来得及看清生活的真相，所以一派天真，任性又糊涂。\n这多少使人有怒其不争，哀其不幸之感，只是到头来，我们也会明白，有些弯路其实不得不走。\n不经打击老天真，未曾清贫难成人。\n人要变成熟，就免不了吃一些苦头，受一些打击。\n虽然为此付出的代价太大，但这就是成长必经之路啊。\n\n成年后，才方知人生无奈。自身实力尚有不足，努力的程度又跟不上，落在行为上，便表现为优柔寡断，无法坚持原则。\n\n人在涉世未深时，都曾怀揣过丰满的理想，渴望仗剑走江湖，做自己喜欢的事，和相爱的人在一起。\n然而经历得多了，就会明白，在现实面前，越是美好的期许，越不堪一击。\n很多时候，不是不愿意让自己变更好，而是确实能力有限，选择有限。\n有多少事只能将错就错，有多少人只剩身不由己。\n都想风风光光过一生，人到中年回望，留给自己的只有黯然神伤。\n无奈才是人生常态，说不出的苦衷，才是最大的心酸。\n心里又生希望，像湿柴虽点不着火，而开始冒烟，似乎一切会有办法。\n我们都有这样那样的缺点，不甘现状却又碌碌无为，渴望爱情却又随波逐流，想守原则却又容易心软。\n年少都笑方鸿渐，多年过去，才发现自己变成了方鸿渐。\n一次次挣扎在理想和现实之间，想要改变，最终却坐困围城，进退两难。\n有人说，我们终将活成自己讨厌的样子。\n也许人生本就是这样一个过程吧。\n认清现实，一点点接受自己的平凡，直到安下心来，脚踏实地，好好生活。\n“把忍受变成享受，是精神对于物质的最大胜利。灵魂可以自主，也可以自欺。”\n生活最大的难题不是坠入平庸，而是无法与自己和解。\n每个人都有可能活成别人眼中的小丑，但在自己的世界里，你永远都是主角。\n打破内心的围城，摒弃他人的眼光，才能活出真实而自在的余生。\n愿你享受生命中的每一段故事，好坏皆坦然，成败皆从容。\n\n\n如何每天只睡 6 小时，依然精力充沛？\n\nR90 方案为 90 分钟一个睡眠周期，一般人一天只需 4-5 个睡眠周期（6-7.5个小时），一周在 28-35 周期内。\n\n设定固定起床点：最好是比上班/学时间提前 90 分钟，保证睡醒有充分时间缓冲状态。\n睡前程序：入睡前 90 分钟结束淋浴、足浴（不超过 15 分，复盘）、调节室内温度（20-25 度）、睡前缓和运动（瑜伽）。\n睡前冥想+看书；同一时间、睡衣睡觉；超过 10 点后不再吃东西，正常作息的人，睡前 90 分钟不再进食。\n\n睡后习惯：设置间隔 20 分钟的两个闹钟，第一闹钟轻而短，不用手动关，让大脑初醒；第二个正常音量，起身关掉下床。\n马上下床拉开窗帘，沐浴阳光伸个大懒腰；光脚踩地面 / 手触碰墙壁；通过咀嚼强化大脑清醒度；拉伸，避免出汗运动；适度锻炼大脑（播客）。\n\n时间：创造性工作放上午，重复性工作放下午，学生党学习要转换学科，合理休息。\n午睡：1-3 点、5-7 点，不要超过半小时。\n饮食：中午减少主食、多吃优质营养价值高的食物。如：蔬菜类、鱼类、蛋类、红肉类等。\n睡姿：最好是侧卧，且侧向你习惯手的另一侧\n避免碎片化睡眠；周末晚起没大碍，但固定入睡时间很重要，决定了你的生物钟；睡不着时，就重复入睡程序，下床去泡脚、看书、放轻音乐。\n\n做一件事情的原则：从利益出发，要不要做！从风险出发，该不该搏！从能力出发，能不能做！从结果出发，划不划算！想要得到什么，就主动争取。\n时间从来不语，却回答了所有问题。\n我曾当年失意客，烟花依旧笑星空\n热爱可敌岁月漫长\n功利心像一味猛药，能让人获得巨大的满足感，但也会给生活注入无尽的悲凉，等来人生的灾难。愿余生你我都能记得自己为何而出发，少些功利主义的追求，多些不为什么的坚持。\n开心好累啊，装不下去了总有一些说不出的委屈，扎了自己的心\n牛人也是从普通人一步步走过来的。如果有意或无意地隐去了这些过程，一个人也便成了神话。\n保持眼界开阔和脚步向前，你就会找到你需要的一切。保持心态平和但不失奋进，你就会活出人生的境界。给自己一份目标，让自己扬帆起航；给自己一份信念，让自己坚定不移；给自己一份力量，让自己勇往直前。就算这世界人潮拥挤，也请给自己多点信心，你要逼自己优秀，优于过去的自己。集中所有的智慧，所有的热诚，把今天的工作做得尽善尽美，这就是你迎接未来的最好方法。———卡耐基：《人性的弱点》\n万花丛中过，片叶不沾身不经百花从，怎知哪支香\n身边若是一群优秀的天才，那是思维的碰撞，灵魂的升华，是一场又一场头脑风暴，天才疯子的饕髢盛宴\n因为优秀牛批的人，转专业只是想找个更感兴趣的领域去探索耕耘，而实际上，只要他她愿意，在大多数专业都能学出一点门道和成就，这，就是自学的魅力\n可能你们都觉得我喜欢计算机，但是当我进入这个行业，又感觉我并不是有多么喜欢，甚至是不是真的喜欢，真要说喜欢，感觉喜欢的事情太多了，而实际上很多事情不是自己想的那样，理想和现实的落差总是超过自己的心理预期～\n世界上只有一种真正的英雄主义，那就是认识生活的真相后依然爱它。\n终于你明白，这就是爱情。终有一个人，老是跟你过不去，你却很想跟他过下去。\n这个社会看似平静的表面，实则动荡不安，危机四伏，暗藏杀机\n我们提出的问题，很多时候在问的时候，自己心里已经有了一个答案了，答与不答，符合抑或不符，最终大都会选择遵循内心。若违背自己的内心，就是欺骗自己\n本来网络语录集，快变成个人语录集了，以后要发达了还能拿出来吹吹水，像张一鸣那样（笑希望不会有人看到这个\n一个人要努力把自己吹过的牛逼都实现了！\n沉默是最大的轻蔑\n靠近光 追随光 成为光 发散光\n我们终将落俗，但浪漫不死\n未来本不可捉摸 何必庸人自扰我就事论事 你浮想联翩\n热烈的乍见之欢很容易，温柔的久处不厌最难得https://baijiahao.baidu.com/s?id=1663502271467041219&amp;wfr=spider&amp;for=pc&amp;searchword=%E7%83%AD%E7%83%88%E7%9A%84%E5%88%9D%E8%A7%81%E4%B9%8D%E6%AC%A2很喜欢一禅小和尚说的一句话：现代人的恋爱观真的很奇妙，有时候会感到害怕，怕杀伐决断的遇到了藕断丝连，怕情意绵绵的遇上了见异思迁。赢的，总是薄情的人，而芸芸众生，总是多情人。\n“巅峰产生虚伪的拥护，黄昏见证虔诚的信徒”\n众生见我皆草木,唯你视我如青山!既许一人以偏爱,愿尽余生之慷慨\n毕竟谁都不是当初的样子了，情深情浅，缘来缘去，聚散有时，希望我们不必再见，各生欢喜。\n在漫漫人生路上，我们最终会明白两点：\n关系不经营，就收割不到幸福的果子；\n金钱和地位与幸福和健康没有直接的关系。\n那些被目标和奋斗左右的日子，若是以关系作为代价，那么这些目标和奋斗本身便失去了它的意义和价值。\n当把自己的人生目标放在凌驾于关系之上时，伤害就不可避免地造成了。这也成了我迄今为止最大的遗憾。\n我想要的爱是舒服的沉默，是旗鼓相当的欣赏，是你明知道我的缺点，我黑暗的一面，还会义无反顾的拥抱我\n在某种意义上，一个人想要的就是他能得到的，他灵魂的欲望就是他命运的先知。\n说者无意 听者有心 果然爱情让人无力又充满动力\n忽有故人心上过，回首山河已入冬。两处相思同淋雪，此生也算共白头\n喜见你眉秀似山，眼拥星霜\n在现在这种快节奏的时代里，很多关于心动的故事都是短暂的。欲望胜过珍惜，短时间内高频付出得不到回馈就会觉得失望，散场在所难免。十倍速遇见，二十倍速离开。如果说喜欢是声色犬马，一晌贪欢，那爱就是温水煮茶，可以相濡以沫于江湖，也可以白头偕老于市野或山林。\n既予一人以偏爱，愿尽余生之慷慨\n陪一个男生长大，本来就是一场豪赌，赌赢了是爱情，赌错了是青春\n人在没有感觉到爱的时候脾气才会变差 才会闹腾 你回头看看你爱我的那些日子里 我哪天不温柔……\n前奏一响红了眼眶,歌声一出泪水打转，一句偏爱立即决堤，回不去的过往，忘不掉的曾经…\n满眼都是你又怎样，深情专一又如何，最后…还不是被辜负，在这个暧昧横行的年代，深情…只不过是个笑话！\n爱一个人，总是会卑微到尘埃里，想一个人，总是会成了一生的痴迷，或许我成了你生命中的过客，可是你却成了我一生的执着。\n无序的风 渐渐有了适合她的节奏 开始变得规律旋转 像有了风扇的加入 那就能变成电 如辽阔的草原上 风力发电的风扇你是那风本随心而动而我意在做扎根风扇引你律动\n窗外有风景笔下有前途低头是题海抬头是未来左手牵你右手拿笔不负青春，不负你我们双向奔赴双向救赎关关难过关关过事事难成事事成远赴人间惊鸿宴一睹人间盛世颜\n因为你在特殊的时间给了我别人给不了的感觉说不出哪里好但是哪里都好\n2015年桃李春风一杯酒，江湖夜雨十年灯。2016年等一场千年雨歇，候一人如约而至。2017年心随万里长相守，雨落千载共白头。2018年雪落长白十三载，故人心归西湖畔。2019年重启征程惊雷响，久伴深村听雨落。2020年长白轮转十五秋，湖畔再叙花与酒。2021年两方世界山河共，一纸内外烟火同。\n不管每年的主题如何变化，都表达着同一个意思：无论是四季轮转、时迁事移，还是千里相隔、谋面未几，我们一直与你同在！\n我从未放弃爱你，只是从招摇过市变得悄无声息，从有名有份到无名无份\n会者定离，一期一祈\n《杀死一只知更鸟》里有句话说得好：你永远不可能真的了解一个人，除非你穿上他的鞋子走来走去，站在他的角度考虑问题。\n«一蹭光茵变身缘»103条哲言\n年轻的时候，人多数是自我的。等到明白了包容的重要性，已经错过了很多。这就是成长的代价吧。\n这就是你我之间现在的差距，你还是你，喜欢把自己的意志强加给别人。我则不然，我现在最讨厌的就是这种人，当然我会去影响别人，前提是这个人心甘情愿\n因为坚强往往意味着孤独。在这个人口众多的大都会里，每一条坚强的单身狗都是孤独的。越是孤独，就越渴望温暖的怀抱。\n年轻的时候为了爱情可以包容和忍受，直到忍无可忍了，不愿意卑躬屈膝的时候也就结束了。既然结束了，那就不会再重新开始。\n想到年少的时光，在不断成长的道路上，不再年轻，弄丢了一些人，曾经无话不说的朋友渐渐疏远，可是人生就是这样啊，总是在不停的怀恋过去。\n生于世间不由我日出大地同欢喜快马何处寻新欢乐此不疲只为你\n我的眼泪 没有一滴砸埋在你的心里\n人生不过短短几十载，生死也是一念间，有什么想不开放不下的呢\n看着他人的路 迈出自己的步\n生活中出现的每个人都会教会你点什么 每段人际关系都是季节性 你没有办法让一个人永远留在你的生活里 有些人注定只是一场日出  把你从黑暗里拉出来 不管那天凌晨两点你们聊得有多深刻  即使闭着眼睛也都能描绘出他的微笑但总有一个时刻需要你放下来往前看 所以不是每一场相遇都有结局 但是每一场相遇都会有意义 感情中那些痛苦的折磨无非是想把一个人长久的留在生命里经历多了心会累 但愿你归来仍是少年\n每一年的结束，都是我为下一年纪念日准备的开始，如果人生是场马拉松，那你就是我每一年要经过的里程碑\n你若及时止损 准备好的不会变点燃的烟花 终究会绽放只不过没有了欣赏的人罢了\n恋爱，可以像是一场漫长的捕猎，确定了目标，猎人需要的就是足够的耐心和足够大的网\n你大概不会再找到比校园更好的人了，因为这是唯一次能跨阶层恋爱的地方。出了校园踏入社会，人们开始考虑车、考虑房子、考虑彩礼、考虑家庭、背景、职业，考虑了很多，唯独不再考虑爱情。\n《百年孤独》里的有句话——生命中曾拥有的所有灿烂，原来终究，都需要寂寞来偿还。\n很喜欢电影《熔炉》里的一句话：我们一路奋战，不是为了改变世界，而是为了不让世界改变我们。功利心像一味猛药，能让人获得巨大的满足感，但也会给生活注入无尽的悲凉，等来人生的灾难。愿余生你我都能记得自己为何而出发，少些功利主义的追求，多些不为什么的坚持。\n\nYou can’t sit around and wait for others to arrange your life; if you want something, fight for it yourself.你不能等待别人来安排你的人生；自己想要的，自己争取。\nIt is so nice when you can sit with someone and not have to talk.能和一个人坐在一起而不必交谈真好。\nTime goes on and on，never to an end but crossings.时间一直走，没有尽头，只有路口。\nBelief, like fear or love, is a force that determines the course of our lives.信仰，就像恐惧和爱一样，是一种决定我们人生走向的力量。\nOne can never consent to creep when one feels an impulse to soar.当人有飞的渴望时，他绝不会满足于爬。\nThere are billions and millions of unlived days for every day we live.我们每度过一天，都有千千万万个未曾活过的日子与我们擦肩而过。\nI thought I’d make a difference，but no one knows I’m here.我还妄想大展身手到头来还不是默默无闻。\nDeath is not the end of life，forgetting is.死亡并不是生命的终点，遗忘才是。\n不去学，可能一辈子也不需要用。选择一种可能，去看见预料之外的风景，遇见意料之外的人，做认同的事\n雨前雨后皆有风景，水里水面各有生活。山前山后有哀愁，有风无风难自由。月照入心头，世间的爱恨情仇。\n\n\n《何以笙箫默》\n\n向来缘浅，奈何情深\n只要不去想，肤浅的快乐其实很容易，和同事嘻嘻哈哈，别人以为你很开心，渐渐的自己都会觉得自己的确很开心。\n当他们之间已成往事，最难堪的便是一切清晰如昨。\n你可以保持沉默，但你所说的每一句话都可能作为呈堂证供。\n其实等待与时间无关，它是一种习惯，它自由生长，而他无法抑制。\n悄悄，是离别的笙箫，沉默，是今晚的康桥。\n当他们之间已成往事，最难堪的便是一切清晰如昨。\n有些人的伤口是在时间中慢慢痊愈，如我。有些人的伤口是在时间中慢慢溃烂，如他。原来这些年，他痊愈的只是外表，有一种伤，它深入骨髓，在人看不见的地方肆虐。\n“你以后会明白，如果世界上曾经有那个人出现过，其他人都会变成将就。”他说，“我不愿意将就。”\n世上美丽的情诗有很多很多，但是最幸福的一定是这一句——执子之手，与子偕老。\n生命的度过就像看风景，走得快可以看到更多的景色，走得慢却能更多地领略那些风景的妙处与细节。\n一人花开，一人花落，这些年从头到尾，无人问询。\n\n“当你老了，回顾一生，就会发觉。什么时候出国读书，什么时候决定做第一份职业，何时选定了对象而恋爱，什么时候结婚，都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你做出选择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。” 摘自陶杰《杀鹌鹑的少女》\n事实证明，以上先入为主的观点大错特错。这种错或许就像今年所经历的一些事一样，非得把整个人连根拔起了，才能对人生的底色有些许了解。\n生活是什么？是鸡毛蒜皮，是层出不穷的磨难和意外，是视戏剧性如生命的小说，是只要没能将你咬死，便会卷土重来的饥荒野狗。\n我并不害怕生活，却尤其恐惧一帆风顺的生活。于我而言，这种顺遂就像暴风雨前的平静，像云霄飞车正在缓缓爬上最高点，像小说的平缓期，一帆风顺的时间越长，下一章节所引爆的冲突便会越剧烈，角色们便会越绝望。这种节奏构成了我的人生主色调。\n我们都在各自的生活里失去一些，得到一些，难免疲倦于当下，但偶尔回来读一读你们记录下的生活，看着优秀的人仍在更加努力，便也渐渐抚平了一些心头的焦躁，继续仰望星空，不忘脚踏实地~\n\nEducation is what remains after one has forgotten everything one has learned in school.教育，就是把在学校所学全部忘掉之后剩下的东西。\n村上春树曾说:“我动了离开你的念头。不是因为你不好，也不是因为不爱了。而是你对我的态度，让我觉得你的世界并不缺我。”其实我可以厚着脸皮再纠缠你，但再也没任何意义。\n无论以什么方式告别 都对不起初见。\n转眼间年龄已经三字开头，回想十年前，那个刚从大山里去到魔都的愣头青，一切是那么的熟悉又陌生。熟悉的是又踏上了异国他乡，在枫叶国开始新的旅程；陌生的是在十年里不断自我否定与重构中，再也难觅那份青涩稚嫩。上海十年，有激情澎湃，有孤寂落寞，有阴阳相隔，有藕断丝连。感谢一路上遇到的悲欢离合与跌宕起伏，你们就像点点繁星装饰着整个青春的星空。二十那年曾暗暗告诉自己不要后悔任何决定，回忘过去亦要感谢这份无悔的勇气相伴。\n\n爱情这东西,始于颜值,陷于才华,终于人品,痴于肉体,迷于声音,最终折扣于物质,败于现实。\n最好的年华告别,总好过以后相互怨怼彼此失望。\n曹操再奸,也有知心朋友,刘备再好,也有死对头,孙权再温柔,两边都是仇,不要太在乎,别人对你的评价,做好自己的事,走好自己的路,不要活在别人的眼里,珍惜你的人放在首位,帮助你的人和他深交,惦念你的人把他记牢,只有自己真正有困难了,才明白谁是焦急的牵挂,谁是转身的天涯,做人其实很简单,人心换人心,你真他更真。\n其实人活着,就是一种心态,你若觉得快乐,幸福无处不在。你觉得不快乐,世界必将灰暗。是非常有,不听当无,祸福相依,顺其自然。多行善,福必近,多为恶,祸难远。不奢求,心易安,不冒进,则身全。心小不容蝼蚁,胸阔能纳百川。顺境淡然,逆境泰然。不自重者取辱,不自足者博学,不自满者受益。\n我的人生,曾经一度陷入黑暗,但我无惧风霜雪雨各种挫折和打击,无惧时光流转平凡如灰烬,只因心中有着火一样强烈的梦想,如昼的光明指引我前进,梦想之伟大让我笑傲雷电风雨,筚路蓝缕在所不惜!\n\n实迷途其未远 觉今是而昨非\n孑然一身是过去,冷暖自知现如今\n本是青灯不归客，却因浊酒恋红尘。星空不问赶路人，岁月不负有心人。\n一盏青灯伴古佛，半为修行半入魔。\n学生时代喜欢一个人，连作业本放在一起都觉得很幸福。这很像木心的那首诗，“以前车马很远，书信很慢，一生只够爱一个人”。\n什么时候深情沦为了舔狗，这个时代爱意处处泛滥又廉价，反而深情成了错。\n层楼终究误少年，自由早晚乱余生\n宋冬野开了酒吧，抱着吉他安静地唱着斑马，左小的枪没有杀死任何人，朴树也不再犹豫，马頔因为一首南山南也火了起来，尧十三不再唱着义无反顾一无所有，民谣很穷，一听就是一个故事，可你还是听着别人的故事哼着陈词滥调喝着昨日的酒，回忆只属于自己的曾经，马頔最好的歌不是南山南，是傲寒 ，最暖心的那句话是“全世界对你恶语相向我就对你说一世情话”忘掉名字吧我给你一个家，后来梦想缩了水欲望也瘪的不像话，风尘仆仆的旅人只想找一个家，她不是赵雷的南方姑娘，不是马頔的傲寒 ，不是宋冬野的董小姐，不是李志的港岛妹妹，不是海龟的玛卡瑞纳，不是贰佰的玫瑰，不是尧十三的北方女王，不是花粥的良人，不是低苦艾的小花花，不是陈粒的祝星，她只是在南方藏着秘密的姑娘，有一天他会找到她带她回家，告诉她所有方向，陪她从南到北，民谣很穷，穷在它没有起伏的高音，不具有华丽的词藻，唱的人普通，听的人平凡，民谣不是歌，它存在的意义不是让你多喜欢他多感同身受，而是教会你该如何过好你自己的生活，陈粒不会唱一辈子的祝星，字字坚定字字温柔也是给其他人了，有人说民谣很穷，一把吉他，民谣很富，四海为家，但民谣也终究也只是民谣，歌词也只是一时的语境，如果马頔小时候不认识舒傲寒，董小姐没有牵宋冬野的手，赵雷没有去南方，尧十三错过了他的北方女王，祝星一开始就很爱陈粒，民谣还只是小众音乐，你还是面不改色，生活没有因此改变一丝一毫，所以明天该来的还会来，你只不过是多听了几个人的故事，多了几次心，后来朴树治好了他的忧郁症，尧十三完成了高中时的梦 ，妤妹妹终于堵了工体，陈粒依然自我不签公司，赵雷还和他的南方姑娘在流浪，宋冬野也不再是安河桥下清澈的水，好像最后大家都匆匆与这个世界潦草的和解，民谣是故事，是经厉，它不在歌厅，不在手机，不在嘴里，不在世上，它在心里。\n浮生若梦，为欢几何？独有时宜，为我所求\n内敛于心，内敛于行\n工作并不意味着学习的结束，而是另一个开始。我们大多数人至少都要工作三十年，这三十年里还会有很多东西要学。所以不用太在意之前学了什么，更重要的是看你还能学会什么。无论之前学过什么，将来都要再学新东西。无论之前学的是什么，将来也都会有用。艺无止境，功不唐捐。\n曾因酒醉鞭名马，唯恐情多误美人。\n遇事不退，虽万千人吾往矣。\n忽见陌头杨柳色,悔教夫婿觅封侯。\n夜阑静，问有谁共鸣？\n知人者智 自知者明胜人者有力 自胜者强\n花在孩子身上的钱和孩子的修养之间【没有】任何关系，甚至成反比！在子女教育方面，父母应该投入的是【时间】，而不是金钱！——大前研一 （日本经济评论家）\n人生最大的痛苦不是失败而是没有经历自己想要经历的一切\n万般皆是命，半点不由人\n与其追风去，不如等风来\n叔本华：闲暇是人生的精华，除此之外，人的整个一生就只是辛苦和劳作而已。\n\n\n一个人只要还敢于拼命，他就绝对不会成为弱者。\n信息决定了认知，认知决定了观点。多搜索，多阅读，多比较，多鉴别。谁都别信，连自己都别信。只相信逻辑和证据。左右互搏，让各种观点在脑子里打一架，留下最后还站着的那个。\n人，最重要的资产是你自己：身体是硬件，见识是软件，人脉是周边。软硬件可以自己控制，周边需要不断升级。\n沟通和表达能力，是两个不同的能力。沟通需要换位思考耐心等待；表达需要的是煽动、激情、感染、说服，也就是野心更大、急于往上走。\n经常审视自己。看看过去这段时间，自己又做了哪些蠢事。如果你没意识到，不是你变聪明了，而是说明你没有成长。一个人的成长，就是不断发现自己傻逼的过程。\n《饮食男女》里有一句话：人生不像做饭，不能等万事俱备才下锅。想做什么尽管去做，不要有完美主义的包袱，千万别等机会失去了，才后悔当初没抓住。\n《士兵突击》里许三多所说，“我们不应该太舒服，太舒服了会出问题”。\n读书如饮水，冷暖人自知，文字如清风，入眼入心底。\n\n多数人因为看见而相信，少数人因为相信而看见。——马云\n写作目的，阅读对象，阅读场景。\n\n双向沟通式写作：平等的姿态，分享的口吻，聊天的感觉，调动着读者。\n\n如何利用社交原力做传播？\n1.表达观点比如《所有不谈钱的老板都是耍流氓》2.利他心理比如《不想得空调病，就一定要做好这5件事》3.站队心理比如《买800w学区房是庸俗，带小孩环游世界就不庸俗了？》4.寻找谈资比如《北京，有2000万人假装在生活》5.塑造形象比如《原创已死》\n\n标题：激发好奇（新闻时效 最新 重磅首发 突发 结束 再见）、激发认同（贪婪）、展示负面（正话反说）、展示回报重要性价值新鲜的东西：《年轻时候的毛泽东，从来不焦虑》《我们男人出轨，不是为了性》奇怪的东西：《如何谋杀你的妻子》《捉奸的时候，该涂什么口红》反常的东西：《年轻人，没事少参会、少混群、少约饭》《我离婚了，但我很开心》疑问的东西：《微信短视频，为什么没火起来？》《这才是老板和员工的最佳关系》\n搜索素材：文字、图片、视频，多维度多渠道\n如何结尾让人愿意分享：\n\n炮制金句《穷是一种病，且很难治愈，这种病叫“管窥”》结尾：很多人每天只在日复一日重复着，却幻想着自己有一个与众不同的未来，没有比这再扯的事情了。《我月薪只有6000，但真正让我焦虑的根本不是月薪6000》结尾：时代不会为每个个体负责，企业也不会为每个个体负责，真正能对你负责的只有你自己，自强则万强。金句放在结尾有一个好处，读者可以直接复制这个句子发朋友圈，因此更利于转发。\n强化主题《任何成长，都离不开痛苦而持久的自律》结尾：自律的人一生可以完成其他人几辈子都做不到的事情，他们的生活高效、轻松、时刻充满自信和掌控感。别人眼里的苦行僧，拥有的却是人生终极的自由。\n强化价值《25岁任百度副总裁，16个月后宣布离职，90后李叫兽给我们3条启示》结尾：以上就是90后李叫兽给我的三点启示。首先，不管做什么，不要蛮干，不要低品质的勤奋，要学会通过策略分析更好的去工作、学习、做事；其次，每个人都应该认真思考，你个人成长的战略定位是什么，你应该扬什么长避什么短；最后，一样要养成深度思考的习惯，不要轻易给自己答案。希望，这三点也对你有所启发。《如何加倍提升你的赚钱能力？这是我见过最认真的答案！》结尾：核心就是三句话：1）先把一个能力打造成自己的长板；2）让自己兴趣广泛；3）确定一个目标，并把多维能力组合起来。最后，人生目标很重要性，否则，你的兴趣广泛，最终也只会变成你的多才多艺。\n制造话题《你朋友很牛逼，关你什么事？》结尾：少用“我有个朋友很牛逼”的句式，你没能耐没有谈资，才会扯自己认识的人有多牛。生活会告诉你：你的人生，只有靠自己。尽扯淡别人，没用的。《年轻人，没事别想不开去创业》结尾：最后，如果看完这篇文章你还想创业，你是勇士，那就去吧：爱一个人都有风险，何况创业。《一位外企员工的离职忠告：离开平台，你什么也不是》结尾：当你在平台上游目骋怀，感慨天高任鸟飞，海阔任鱼跃之时，也要当心被平台捆绑，最终落下个天高任鸟摔，海阔任鱼呛。所以，你要时常问问自已三个问题：假设你所处岗位没了，你能干什么？假设你所在公司没了，你能干什么？假设你所在行业没了，你还能干什么？\n\n提炼大纲，设计小标题，提高阅读体验，控制阅读节奏，减轻用户压力\n减法写作提高价值密度：1、不必要的代称。原句：原以为听了我的这番话，粥粥可以就此释怀。改后：原以为听了这番话，粥粥可以就此释怀。2、删掉不必要的因果词。原句：公司很多员工，忍受不了新领导的苛刻，以致于相继离职。改后：公司很多员工，忍受不了新领导的苛刻，相继离职。3、多删一点”的”、“是”、“了”原句：我和新来的大学生享受着同级别的待遇。改后：我和新来的大学生享受着同级别待遇。原句：可是没过几天/但是没过几天，粥粥还是向公司递交了辞职申请。改后：可没过几天/但没过几天，粥粥还是向公司递交了辞职申请。原句：但这种员工，即便是跳槽到了别家单位，问题依然不会少。改后：但这种员工，即便跳槽到别家单位，问题依然不会少。4、删掉累赘词。原句：前段时间因为采访的缘故，我认识了一个名叫粥粥的餐厅店长。改后：前段时间因为采访，我认识了一个名叫粥粥的餐厅店长。再改：前段时间采访，我认识了一个名叫粥粥的餐厅店长。再改：前段时间采访，我认识了一个叫粥粥的餐厅店长。再改：前段时间采访，我认识了个叫粥粥的餐厅店长。再改：前段时间采访，我认识了个餐厅店长，叫粥粥。\n写文章时：用演绎推理来构思，用归纳推理来呈现。\n数字、英文单词、字母前后要空格留白。\n少用形容词，多用名词动词。\n——《粥左罗教你从零开始学写作》\n\n你是千堆雪我是长街怕日出一到彼此瓦解\n爱上一个人，所以一直一个人。\n尊重就是“实事求是地看待一个人”。站在你面前的人，不是一个结果，而是无数的经历、选择和过程，他是走过的路、看过的书，听过的歌、看过的电影，遇过的人和想要去的方向。不了解就不要评价。\n对自己也一样，浪费时间做一些“无用”的事，读一些“无用”的书，走一些“无用”的路，追求一些“无用”的东西，交一些“无用”的朋友。这些无用的事，就是人生存以外的个人生活价值。\n少年没有乌托邦，心向远方自明朗\nWhen all else is lost the future still remains~\n罗振宇刷屏金句 “爱上一个人的感觉，就好像突然有了铠甲，也突然有了软肋”。\n岁月不饶人，我也未曾饶过岁月（苍天何曾饶过谁）\n最近看完《人世间》被这段话深深地打动了：“人生啊，穷不怪父，孝不比兄，苦不责妻，气不凶子，一生向阳，哪怕一世尝尽百苦，只为换取一丝甘甜，也算值得了！匆匆一世只为活得堂堂正正！人生的三种境界：接受父母的平凡，接受自己的平凡，接受子女的平凡！自古以来，孝分两种：伺候在父母身边，照顾衣食住行，是养口体；远走高飞，有所成就，让父母以此为荣，是养心智。同样重要，缺一不可。”\n从此烟雨落金城，一人撑伞两人行\nLife is full of possibilities.\n我与旧事归于尽 来年依旧赢花开。\n万物皆有裂缝，那是光照进来的地方\n\n留学感悟\n其实这些都是我的真实经历 想告诉大家的就是 不管你学的是什么专业 一定要清楚自己的定位 知道自己想要什么 知道如何去争取 在我实习的时候我老板跟我讲过一句话我觉得很受用 其实大公司工作就像是打游戏闯关 你要知道你自己的定位在哪里 如何走到最后的关卡 就算中间卡住了要从头再来 你也要坚持下去 如果你觉得这些你都做不到 那没有必要在这个竞争力淘汰率都很高的地方浪费你自己的时间。\n其实这就是我想说的 留学能带给你的可能只是一两年新鲜感的体验 让你认识到另外一个国家的风土人情 但是他在另外一种程度会让你重新认识你自己 知道你自己的极限在哪里 知道你自己的定位在哪里 想清楚这些 知道自己想要什么 并为之而努力 才是留学的真正意义。\n出国的真正意义大概就是：当你发现你的生活并不是你所期待的样子，你会不遗余力去改变它。\n总的来说，如果没有出国留学的话，我眼中的世界大概仅仅停留在原来的生活圈子，不会有什么变化。对外界的认识，也应该是道听途说而已。一辈子大概也会像大多数同学一样老婆孩子热炕头，死于30，葬于80。现在的我，清楚自己的不足，知道自己想要的是什么，追求的是什么，想要过怎样的人生并为之努力着。\n用个比喻来说的话，就好像用手擦去了冬天窗户上的水汽，看到了外面，也看到了窗子中倒映的自己。\n谁让你读了这么多书，又知道了双水村以外还有个大世界……如果从小你就在这个天地里日出而作，日落而息，那你现在就会和众乡亲抱同一理想。经过几年的辛苦，像大哥一样娶个满意的媳妇，生个胖儿子，加上你的体魄，会成为一名出色的庄稼人。不幸的是，你知道的太多了，思考的太多了，因此才有了这种不能为周围人所理解的苦恼。—《平凡的世界》\n偏见源于无知，无知加剧偏见。这是我出国最深的感悟。\n\n再见少年拉满弓，不惧岁月不惧风\n晚风中闪过 几帧从前啊 🦋\n持续投入的算爱好，单纯消费的叫消遣。乐于获取叫喜欢，愿意付出才叫爱。\n如来也说“经不可白取，亦不可轻传。”\n终有一天，你会静下心来，像个局外人一样看着自己的故事，笑着摇摇头。\n自律的顶端是孤独，孤独的顶端是自由。\n“在这个时候毕业，寻找工作，走上社会，大家会觉得很不幸，”马云说，“但事实是，人生这样的意外会很多，学会适应了，你就懂得了生活；学会把握，你就会与众不同。今年全世界那么多的毕业生，大家都一样，都碰上了同样的困境，这个时候，你的态度、你的行动决定了你的未来。”\n月色入户，欣然起行。\n以清明的眼，对一人生景物凝眸，不为爱欲所眩目，不为污秽所恶心，同时，也不为尘俗卑猥的一片生活厌烦而有所逃遁；永远是那么看，那么透明的看，细小处，幽僻处，在诗人的眼中，皆闪耀一种光明。（沈从文）\nAcross the Great Wall, we can reach every corner in the world.\n物来顺应，未来不迎；当时不杂，既过不恋。\n罗翔有句话我很喜欢：“对可控的事要保持谨慎，对不可控的事要保持乐观。”  \n生活是场没有硝烟的战争，成长就是学会了接受、改变、放下。\n迄今所有的人生都大写着失败，但不妨碍我继续前行\n\n\nhttps://0792z.blogspot.com/2022/03/blog-post_7.html\n\n迷茫时期多探索我想「听过很多道理，仍过不好一生」的原因其实说来很简单，总归还是经历的太少了, 「纸上得来终觉浅，绝知此事要躬行」，实践出真知，从别人口中听到的道理，与自己从现实生活中领悟到的道理，它们所带来的影响力始终是不一样的。\n所以，如果20几岁的你当下很迷茫的话，我真的很建议你多走出家门，做些「无用」的事情，去旅行、交点新朋友、学一门新的乐器，尽量让自己拥有多一点和不同的人事打交道的机会，使自己的人生经历丰富一些。\n亲身经历永远无可代替。在这个资讯发达，网络世界空前繁荣的年代，年轻人很容易提早经历了过多他人的人生，而导致迷失了自己。他们还未真正与这个世界短兵相接，就透过了他人的眼，看到了太多真假交错的人世百态，于是他们一边自以为经验老道地睥睨这个世界，又一边色厉内荏地把象牙塔外的一切都视为洪水猛兽，身上带有太多他人灌输给他们的主观意志和信念，而至于不再能纯粹而自然地看待自己，吸收那些围绕着他们的真实生活，所能带给他们的智慧。\n我知道很多人总是拼命的想找各种捷径，让自己在未来能少走一些弯路，但说实话，该你走的你还是要走的，而那些走了弯路的经历，所带给你的体验以及教训绝不会一无是处，如乔布斯说过的一句话：「你必须得相信，你现在所体会到的东西，你得信任这些体悟，直觉也好，命运也好」，「这些点滴终究会连接在一起」，待到那一天的到来，无论你心里对成功的定义为何，追逐的是怎样的生活，一切都将水到渠成的。\n道理看得再多，人生的路，还是得靠自己一步步地走，你要有信心过自己的人生。\n\n人总是孤独的，要学会适应。真正能摆脱孤独的，只有内心的强大。\n此后如竟没有炬火，我便是唯一的光。——鲁迅《热风》\n自制力从来都是永远只做最重要的事。真正的自制力其实是——可以牺牲掉所谓的计划、规划和作息规律——也要把对于你事业来说最重要的事情每天干完——且坚持10年以上。这才是事情的真相。\n好汉不提当年勇，饿汉仍念曾经庸。饿汉：对学历和能力的渴求；仍念：难以释怀；曾经庸：曾经的庸俗愚蠢。\n每当我们把眼睛放到每一个独立的人身上时，总能感到战争的荒谬；而以集体利益为名，总有政客可以为发起或者挑起战争找到合适的理由如果你用心观察任何一个单独的人，可以看到神性，而你去观察一群人，只会看到愚蠢\n很多人认为自己在思考，其实，他们只是在重整自己的偏见而已。——威廉.詹姆斯\n向往高处的过程本足以填满一个人的心灵。——加缪\n你是否爱过一个人，她看起来就像圣诞节清晨的阳光，初雪以后松树枝上的小松鼠，雨天小路上溅到行人裤腿上的泥点，还有那些最美的玫瑰花。——纳博科夫 《洛丽塔》\n生活就是一场马拉松了，愿你付出了青春后能得偿所愿。\n我曾七次鄙视自己的灵魂：第一次，当它本可进取时，却故作谦卑；第二次，当它在空虚时，用爱欲来填充；第三次，在困难和容易之间，它选择了容易 ；第四次，它犯了错，却借由别人也会犯错来宽慰自己；第五次，它自由软弱，却把它认为是生命的坚韧 ；第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。\n\n\nMencal-Fantastic Math Tricks\n\n\n加两个数字位置变换的两位数之和 👉 （十位加个位）乘 11（45+54=(4+5)*11=99）分子为 1 的两分数之和 👉 两分母之和 / 两分母之积（1/3+1/5=8/15）前 n 个奇数和 👉 [（最后一位加一）除以 2 ]平方（1+3+…+103=[(103+1)/2]^2=2704）前 n 个偶数和 👉 最后一位除以 2 的结果乘此结果加一（2+4+…+100=100/2*(100/2+1)=2550）\n\n减数字颠倒的两个两位数之差 👉 （十位减个位）乘 9（84-48=(8-4)*9=36）首尾换位，中间数相同的两个三位数之差 👉 （百位减个位）乘 9 的结果中间填 9（732-237=(7-2)*9 中补 9=495）互补两数之差 👉 被减数最高位减 5 后结果乘 2（74-26=24*2=48）分子为 1 的两分数之差 👉 两分母之差 / 两分母之积（1/3-1/5=2/15）分子相同的两分数之差 👉 两分母之差乘分子 / 两分母之积（2/3-2/5=4/15）分子比分母小 1 的两分数之差 👉 两分母之差 / 两分母之积（8/9-6/7=2/63）\n\n乘十位相同，个位互补 👉 十位乘（十位加一）接个位乘积（32*38=3*(3+1)接2*8=1216）十位互补，个位相同 👉 十位之积加个位 接 个位乘积（76*36=7*3+6接6*6=2736）相差为 2 的两个数相乘 👉 平均数（较小数+1）的平方减 1（24*26=25^2-1=624）相差为 4 的两个数相乘 👉 平均数（较小数+2）的平方减 4（33*37=35^2-4=1221）相差为 6 的两个数相乘 👉 平均数（较小数+3）的平方减 9（27*33=30^2-9=891）相差为 8 的两个数相乘 👉 平均数（较小数+4）的平方减 16（46*54=50^2-16=2484）相差为 10 的两个数相乘 👉 平均数（较小数+5）的平方减 25（15*25=20^2-25=375）两个 9x 的数相乘 👉 100 分别减去两个数的结果，（100 减去其和）接（其积）（91*93=100-(9+7)接9*7=8463）\n\n除一个数除以 5 👉 乘 2 小数点左移一位（除以 10）一个数除以 25 👉 乘 4 小数点左移两位（除以 100）一个数除以 125 👉 乘 8 小数点左移三位（除以 1000）\n\n平方n 个 1 的平方 👉 从 1 依次写到 n 再写到 1（1111^2=1234321）n 个 3 的平方 👉 (n-1 个 1) 0 (n-1 个 8) 9（333^2=110889）n 个 6 的平方 👉 (n-1 个 4) 3 (n-1 个 5) 6（666^2=443556）n 个 9 的平方 👉 (n-1 个 9) 8 (n-1 个 0) 1（999^2=998001）个位数是 5 的平方 👉 个位前面的数乘自身加一的结果后接 25（85^2=8*(8+1)接25=7225）25 结尾数的平方 👉 末两位前面的数乘这个数后面添 5 的结果接 625（425^2=4*45接625=180625）5x 的平方 👉 25加个位接个位的平方（59^2=(25+9)接(9^2)=3481）9x 的平方 👉 100 减去（10 减去个位数的结果乘 2）接（10 减去个位数）的平方（98^2=100-(10-8)*2接(10-8)^2=9604）\n\n\n\n一星陨落，黯淡不了星空灿烂；一花凋零，荒芜不了整个春天\n众生皆是误，入世便做囚。——《紫川》\n要多对称的爱相互牺牲，才算获得完整；要多亲近的眼神才能，看透彼此伤痕。——《斗破苍穹特别篇2沙之澜歌》\n喜欢如潮，自遇见未涨停；思念如马，自别离未停蹄\n累了，蹲下来抱抱自己，依旧倔强地说：也不过如此。\n无关爱情的喜欢，是我对光的仰慕\n黑白双龙颠阴阳，雷霆二珠倒乾坤血染星河\n死亡只需瞬间的勇敢，活着才是真正的勇敢。《一个叫欧维的男人决定去死》好长的名字也是刷新认知了。\n人分三流九等，肉分五花三层，道不同不相为谋\n小人没有错，君子常有过。\n往事依稀浑似梦，都随风雨到心头\n人生一世，草生一春，来如风雨，去似微尘\n一生清贫怎敢入繁华两袖清风怎敢误佳人三餐不饱怎敢叙高堂四季漂离怎敢言家成五湖之处怎敢寻栖身六欲之心怎敢落红尘七情之地怎敢留不离八脉之躯怎敢生气病九首之身怎敢低头颅十全十美才敢说爱你\n当你老了，回顾一生，就会发觉：什么时候出国读书，什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你作出选择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。 \n放弃该放弃的是无奈，放弃不该放弃的是无能；不放弃该放弃的是无知，不放弃不该放弃的是执着。\n或许，我们都应该学会接受，喜欢的人不一定喜欢自己吧。\n谁将声震人间，必长久深自缄默；谁将点燃闪电，必长久如云漂泊！\n当触碰过自由的光芒，感受过自由的魅力，自由便已悄然扎根心底……往后，当曾经所坚信的事物在环境之下，发生了不可言说的改变，信仰崩塌便需要重新建立，于是心底的自由终开枝散叶，从此，一发不可收拾！\n相信力之能及总有所到之处。\n乔布斯所说：So you have to trust that the dots will somehow connect in your future.所以你必须相信，这些点点滴滴会在你的未来以某种方式连接起来。\n想起了一段话：某天，你无端想起一些人，他们曾让你对明天有所期许，但是却完全没有出现在你的明天里。\n一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。 —— 钱钟书《围城》\n如何体面？保持一个谦卑的心。贾樟柯说过的一句话我就很喜欢：只有在广阔中行走过，才能知道人的渺小。只有在历史中神游过，才能知道人生的短暂。行走和遐想，会帮我们清空身外之物，发现自我之小。持续的学习和思考，一直在帮助我压抑自我的膨胀。知道真理不容易在手，也就不再强词夺理。知道万物有灵，也就不再唯我独尊。一点一点，是持续的行走、读书、思考，让我变小。是的，只有谦虚才能帮我保留体面。\n当你真正开始觉醒，你将不再寻找爱，而是成为爱，在深渊中醒来，见到最真正的自己。\n你打天下的方法论是怎样的？以正合，以奇胜。不向静中参妙理，纵然颖悟也虚浮。\n窗外日光弹指过，席间花影坐前移。\n心事浩茫连广宇，于无声处听惊雷。\n于无声处听惊雷\n上到三元桥的顶端，后视镜里，看着车河向身后的远方延伸与夕阳接驳纵目处、万点红霞.清歌孤调，好男儿四海为家。关山纵远却红尘、不负芳华！\n一个知识越贫乏的人，越是拥有一种莫名奇怪的勇气，和一种莫名奇怪的自豪感。”    “因为知识越贫乏，你所相信的东西就越绝对，因为你根本没有听过与此相对立的观点。”    “这就是视野的意义所在！孤立的观点，即便偶尔正确，也仅仅只是运气而已。”    “对于我们绝大多数人来说，生活不需要运气，而是脚踏实地。”    “只有站的更高，看的更远、更全，才能找到很多个正确答案，从中择优录取。”\n愿你在迷茫时，坚信你的珍贵…”\n“爱你所爱…”\n“行你所行…”\n“听从你心…”\n“无问西东！”\n眼见你起高楼，眼见你宴宾客，眼见你楼塌了\n浮世万千唔爱有三，日月与卿，日为朝，月为暮，卿为朝朝暮暮，浮世万千不得有三，水中月，镜中花，梦中你，月可求，花可得，唯你求而不得，终是自古多情空余恨，好梦由来最易醒，辞别再无相见日，终是一人渡春秋\n韶华易逝，岁月倥偬\n青少年写作怎么提升格调1，引用距今 50-80 年的作品，现代派的经典著作，比如德波顿、卡尔维诺、普鲁斯特、博尔赫斯、米兰`昆德拉等人的。2，引用知名作家写的第三人称社会观察类语句，尽量避免第一和第二人称的。\n曾经以为是问题困住了我们，其实，我们自己就是问题本身。——《害！这烂泥一样的人生》\n五颜六色的生活不能乱七八糟的过\n装三分痴呆防死，留七分正经谋生\n生活是种律动，须有光有影，有左有右，有晴有雨，滋味就含在这变而不猛的曲折里。\n让我一个人呆在屋里，和我自己巨大的平静待在一起。——费尔南多·佩索阿\n人生碌碌，竞短论长，却不道枯荣有数，得失难量。\n研究表明，人到了一定的时期，即便看再多书，摄取再多知识，他的知识总量也不会再增长。因为他的所有知识摄取，都变成了对原有知识的佐证和践行。他在完善早已定下的价值取向和世界观，而不是在摄取新的观点和视野。也就是说，多读书多摄取知识在一个特定的时间段，不但不会让人们的知识认知更宽，反而更加聚焦，更加狭隘。——《重生之似水流年》\n时间就这么静静流淌着，有着恬淡的馨香。不过有时也很顽皮，让人琢磨不透。当你注视它，度日如年。而当你忽略它，又如白驹过隙。——《重生之似水流年》\n这个世界之所以精彩，正是因为有无数个瞬间值得铭记，成为永恒。然而，在那些浩如烟渺的刹那之中，一定会有一个画面，凝固在时间的长河里，沉淀在一代人的记忆中。——《重生之似水流年》\n在齐磊看来，这世上最痛快的事，要么是世界在你的指尖慢慢变好，要么就是和一群呆在一起最舒服的人没心没肺地虚度光阴。——《重生之似水流年》\n我楚南不算君子，但也永远不会做一个小人，无论多少人怀疑我，我只说四个字。……清者自清。信与不信，一念之间，心有多念，信有多坚。若是不信，只因不念。孜然一身是过去，冷暖自知现如今。——《神医相师》\n不要虚掷你的黄金时代，不要去倾听枯燥乏味的东西，不要设法挽留无望的失败，不要把你的生命献给无知、平庸和低俗。——王尔德\n这短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。\n有一句话“从此以后，故乡只有冬夏，再无春秋”，在前些年体会颇深，当时我很想看看家乡那些熟悉的地方在春秋两季是什么样子，但是五一、十一回家短短几天，根本不可能四处闲逛。很多事情，享受过程比看到结果更重要，但身处社会这个大染缸，想做到已经很难了…好怀念儿时喧闹的集市，选一角席地而坐便可叫卖，现在柜台林立，却再也没有曾经的感觉了\n\n\n《心理控制术》\n\n心灵处方\n开始制作一个剪贴本，收集古往今来既展示出优秀品性和性格、又在人生中取得你所渴望的成就者的简介。为每种品性和每种志向的类目选一个不同的代表性人物。通过收集和阅读他们的传记、自传、相关文章、发表的演说、其他人对他们的分析文章（这些东西在路德拉姆博士、拿破仑?希尔以及另一些名人作品中可以找到），成为熟知这些人人生经历的超一流专家。\n搞清真正塑造他们人生的力量、思想和影响是什么。如果让这件事成为你的业余爱好，那么，你就能给自己的想象力添加宝贵的原料，你可以用这些原料来建立更坚强、更以目标为导向的、实现你人生志向所需的自我意象。\n“观察”那些最能展示你希望得到的品性的人、过着你想过的同样生活的人，然后通过借鉴、为己所用。方法是通过任何可以利用的媒体和渠道去学习他们。\n1.目标(1)引导你前往某个已然存在的目标；(2)“发现”某个已经实际存在但不存在于表象中的目标。2.信任自动机制遵循远程逻辑，也就是说，它必须作用于或必须面向“最终结果”即目标。只要根据最终结果来思考，手段和方式只是水到渠成的事。3.放松不要怕犯错或一时的失利。路线自动纠正是心理控制的诸多好处之一。4.学习任何技能的学习都是通过“试错法”实现的，即从精神上一个接一个地纠正目标错误，直到你完成了某个“成功”的动作、移动或表现。忘掉过去的错误、记住成功的响应以便将来“模仿”。5.实践你必须学会信任你的创新机制有用武之地．而不是通过过于关注它起不起作用、过于担心它会不会失效，或者通过过度有意识地努力来强迫它发挥作用，从而“阻止它发挥正常功能”。爱默生说：“行动起来，你就有了力量。”\n人其实时时受到自己的自我意象催眠。许多人一辈子几乎都在某种无法辨认的催眠暗示的支配下“梦游”。我总是通过寻找一些也许是“伪科学”的论据或观点案例来佐证自己意图实现的目标正确，以此说服自己承认其存在合理性，进而接受乃至去实现这一目标。——在《The New Psycho-Cybernetics》中我了解到类似于上述自我催眠来达成某些目标的一种解释——即通过搜集某些资料，来构建自我意像，并在这个探索过程中构成“心像”，即让一个模糊不清尚不确定的想法变成一个轮廓分明、细节清楚、有血有肉、色彩斑斓的概貌。而随着心像蕴含的目标变得清晰化，自动成功机制就开始运转，在自我强化和巩固中达成目标。在很小的时候看《成龙历险记》中有一集在我印象中是印度人用意念治好了龙叔的牙痛，而我一直的理解就是实际并不是外力治好的，而是施加了一种内在的意念，免疫了这种痛感，举个不太恰当的例子，就像面前有一块透明的玻璃，它摆在那，实实在在的存在着，只是由于光线角度（如我们自身意念影响），并不能直观感受到它罢了。书中关于“精神手术”补充麻醉效用，即自我意像催眠的说法似乎也印证了这一点。而我在往后的生活里，在承受某种难以忍受的痛感时，便会下意识去回忆想象那种感觉，如同在大脑里自我构造一个屏蔽器，去干扰屏蔽痛感，虽不能完全免疫，但通过加强深呼吸放松的方式，在一定程度上竟真的减轻些许痛感，某种意义上这也算是自己的一种悟道吧。\n精神影院许多人发现，如果想象自己坐在一块巨大的电影屏幕前看一部关于自己的电影，那么会取得较好的效果。\n步骤一：拿出纸和笔，对你打算在“精神影院”中构建、实验、形成和观看的“精神电影”进行简要勾勒和描述。\n步骤二：每天腾出30分钟时间，最后在每天同一时段，找一个安静而隐秘的地方，闭上双眼，进入“影院”，然后开始播放、编辑、再次播放你的“电影”。\n步骤三：对电影进行逐步“修改”（以便让片中“明星”（即你自己）的表现完全符合你的预期），并获得你想要的体验和结果。在头10天里，你要努力达到这一目标。\n步骤四：在余下的11天里，毫不改动地反复播放并享受这部“电影”。\n使我们产生自卑感、影响我们生活的，并不是我们对技不如人的认识，而是对自卑的感觉。\n你也许在其他地方了解过以下这4个学习步骤或叫学习层次：\n1．无意识条件下的不掌握；\n2．有意识条件下的不掌握；\n3．有意识条件下的掌握：\n4．无意识条件下的掌握。比如熟练的敲键盘，肌肉记忆\n通过运用心理控制技巧，特别是运用“精神影院”技巧代替或者补充现实的、客观的“摸着石头过河”过程，你沿着这四级递进式阶梯向上攀登的速度有多快、你能从这一过程中消除多少压力。\n今后，我一定在决策之前，把自己的担忧和有意识思考全部进行完毕；一旦作出决定，一旦轮子开始转动，我就要“完全抛弃一切牵挂和对结果的责任感。”\n如果人总以尽可能快的速度始终不停地运转，中间从不喘气或休整，那么是无法达到最佳状态的。保守一点说，他几乎根本不在“眼下”，没有全身心地关注、投入在一件事或一个人身上，尽管这样做能给别人留下“他很忙”的印象，但却不会使他最大限度地发挥智慧和才华。\n如果学会从精神上为自己“减速”到能尽情享受人生体验的程度，你的人生就会愉快得多，你的自我就会有效得多。\n有一条早为人知的心理学公理：不断接触让你恐惧的东西，你就能免受恐惧的伤害。\n小时候，由于情感上尚不成熟，我们经常向家长和老师要金星。绘制或描上一幅画，我们就立即跑去送给妈妈看，妈妈对此赞不绝口，还自豪地用小磁块把它吸在冰箱的门上，让所有人都能看到。作为大人，你必须摆脱这种一有成就便马上索取认可和赞赏的需求。你必须学会对自己的良好表现“孤芳自赏”，认可自己的成就。\n\n有玉微凉，是为樱琅\n当世界倾斜，我们在低处穿行，不变的是永远自由的心。\n夏天的雨，不凉，总是要比平时多几分缠绵。\n无人与我立黄昏，无人问我粥可温。”我缓缓说道。这是出自《浮生六记》里的一句诗，说的是一个孤独之人，形单影只，没有人与之为伴。\n人在世间,各走各路。你有你的对错,我有我的是非。只此而已。忽然又想起,老农说的那句诗:少年终知愁滋味,却道天凉好个秋。\n金风玉露一相逢,便胜却人间无数。只可惜,一步错,就错过了终身。绚烂的心花还没盛开,就已经枯萎死去。莫等问来生,当惜眼前人。\n皇图霸业谈笑中，不胜人生一场醉！\n\n《我不是教你诈》送礼，有个原则，就是看对象。生活上短缺的朋友，你最好送他有实值的礼物；生活优裕的人，你可以送个有情趣的东西。送礼给前者，你的”姿态”要低，才不伤人；送礼给后者，你的”姿态”要平，才不显得谄媚。送者心安，受者心欢，不是两全其美的事吗?记住：送礼是大学问，不但要送得”对”,而且要送得”巧”.“实用”不等于”情意”,”价值”不等于”重量”.你即使送东西帮助人，也一定要把对方的面子做足。\n\n谁，执我之手，敛我半世癫狂。谁，吻我之眸，遮我半世流离。谁，抚我之面，慰我半世哀伤。谁，携我之心，融我半世冰霜。谁，扶我之肩，驱我一世沉寂。谁，唤我之心，掩我一生凌轹。谁，弃我而去，留我一世独殇。谁，可明我意，使我此生无憾。谁，可助我臂，纵横万载无双。谁，可倾我心，寸土恰似虚弥。谁，可葬吾怆，笑天地虚妄，吾心狂。伊，覆我之唇，祛我前世流离。伊，揽我之怀，除我前世轻浮。执子之手，陪你痴狂千生。深吻子眸，伴你万世轮回。执子之手，共你一世风霜。吻子之眸，赠你一世深情。——《青囊尸衣》\n68个“高冷”笔名1、【苏漾】\n“苏漾”一名在发音上简单、易读，朗朗上口。且“苏”字的运用，很好的突出自然、清新的一面，与之“漾”字搭配在一起，意指自由。很好展现出男生独立、自主，适合男生起此笔名。\n2、【顾笙】\n“顾笙”一名很好的展现出写作风格，偏校园。其中“笙”字的运用突出了笔名文艺森系风格，本义指簧管乐器，是流行于江南地区的中国汉民族古老的吹奏乐器。提取搭配“顾”字独特且有深意。\n3、【竹一】\n“竹”自然景观用字，突出森系的特点。与“一”字搭配展现出唯一，独特的寓意内涵。男生运用此笔名命名，加强了自身的个性，意指品德高尚。且从整体来说“竹一”一名简单、易读。\n4、【南星】\n南星指的是天南星，是一种药用价值很大的草本植物，借用它的名字取作笔名，古风又好听，还富有韵味，寓意作者的文章能够给读者带来很大的价值，能够很好地引起大众的注意，为笔者带来更大的关注。\n5、【虚怀】\n虚怀一名取自成语“虚怀若谷”，古风又好听，还给人一种文艺感，符合笔名的性质和特色，适合用作男生的笔名。虚字具有谦虚的含义，怀字包含有胸怀的意思，两个组合在一起彰显出男生优良的品格。\n6、【笺红叶】\n这个名字出自古风歌曲《山河晴昼》中的“薛涛笺红叶诗，可否”一句，用它作为笔名，好听又富有古韵感，吸睛力十足。笺字的本义指书信，包含有书写的含义，用在笔名中能够彰显出笔者的性质，便于认知。\n7、【染瑾】\n“染”意指渲染，突出自然、清新的一面。“瑾”意指美玉，突出女生高贵、优雅的气质，适合女生起此笔名。二个字搭配在一起文艺中展现出笔名的独特性，此外，也向他人表明写作风格比较深奥、有内涵。\n8、【筱初】\n“筱”意指细竹，用作笔名取其顽强的生命、青春的永驻之义，突出文艺气息；“初”意指最初，表明作者对自己的期望与自身的个性特点，意指保持最初的气息、超凡脱俗。\n绿筱媚青涟，娇荷浮琬琰。竹影和诗瘦，梅花入梦香。帆影随风白筱泽/诺/涵/寒/潇-如诺筱泽/白段凌风/云/雪/月苏简安顾筱白Eric/Corvus/Gemini/Gem/Antonio/Neo\n白筱诺猛然停下手中的动作，浑身一软，无力瘫靠着车壁，双眼空洞的盯着马车上的一个圆点，微微喘息着，好似做了一个漫长而恐怖的噩梦，就算此刻醒了，也依旧被恐惧包围着，不敢再闭上眼睛，害怕噩梦重现，害怕此时此刻的世界，才是梦，而她，依旧被落外那地狱里，无法脱身，没有救赎。护你幼时无忧，少时无虑，没能护你白衣胜雪除却君身三重雪,天下谁人胜白衣。\n想起莫言在《如何对待不喜欢你的人》里说过的一段话：“一个人，风尘仆仆地活在这个世界上，要为喜欢自己的人而活着。这才是最好的态度。不要在不喜欢你的人那里丢掉了快乐，然后又在喜欢自己的人这里忘记了快乐。”\n此生时常战术性撤退，但从未逃避过战斗。\n即使有无敌的标签，终究抵不过永恒的时间\n\n双拼能否真的提高打字速度？有些认识，哪怕是简单的常识，也需要亲身经历后才能真正体会。只有拥有无与伦比的打字速度，才能体会打字速度快的好处。——《把时间当作朋友》\n\n我现在的心态很平和，认为大部分的文字都会随时光消逝，不留下一点痕迹。我不能指望时间机器或者是网页快照这种东西，如果一篇文章有价值的话，它会通过在不同的人手里不断流传的方式存续下去，这要比任何技术手段都有效。所以，消逝并不让人觉得惋惜，会惋惜只是因为贪恋自我。如果在三十篇文字里，能够有一篇让自己完全满意的话，我会认为这个比率完全可以接受，完全可以承认剩下的29篇没那么好。现在，我依然期待今天晚上手机一声轻响，打开又看到南派三叔的更新。我想我们之间还是不会谈论这件事，还是天各一方默默打字，然后怀着轻快的心情，按下“发送”键。当写字是一种天性，那么就且让它舒展，不用去理会时光在一旁如何匆匆流过。——和菜头\n\n三读《把时间当作朋友》，李笑来的价值到底有多大？成功从来都不是人人都可以做到的事情。对年轻人来说，成长比成功更重要，而且，这才是人人都可以做到的事情，才是人人都值得追求的事情。而成长其实只有一条路——积累。书店里各种各样的关于“时间管理”的书籍多半于事无补，因为时间不听从任何人的管理。管理的焦点应该是自己。心智就是一个人过往获得的一切知识及经验的总和（包括基于这些知识和经验造就的思考方法、思考模式）。日常生活中常常可以看到这样的例子：一个道理明明非常正确，却因为讲述道理的人由于某件事情被戳穿，露出伪君子的嘴脸，而使很多人不再相信那个原本应该被笃信的道理。人们可能会基于一模一样的原因作出截然相反的决定。当有机会学习一项技能的时候，有的人常常会问：“学这东西有什么用呢？”当再次遇到学习机会时，还多了一个理由：“现在学也来不及了”。而有的人则在心里想：“因为不知道那东西有什么用，所以决定学习 ”。越是不满现状，摆脱现状的欲望就越强烈，而这种欲望会让一个人最终迷失方向，因为无论是谁，从本质上看都无法摆脱现状——每一时刻的现状都是过去某一或者某些时刻的结果，而每一时刻的现状都是未来某一或者某些时刻的原因。没有人能够逃脱现实的束缚。与时间做朋友的方法很简单：用正确的方法做正确的事情。有些任务是你所陌生的，那么在执行过程中就必然会遭遇各种所谓的“意外”。其实它们根本不是意外，只不过是因为你对任务不熟悉，它们才成了“意外”。在大多数情况下，有4个字颇具道理并且值得相信——勤能补拙。不过，真正相信这4个字的前提是“接受现实”，否则，这4个字发挥不了任何实际作用。所有真正踏实做事的人都知道，任何任务的绝大部分都是枯燥而又无趣的，所谓有创意的部分，可能连1％都不到。对此，我有切身体会。在麦当劳之类的快餐店中排队也会涉及串行和并行的问题。有很多人是轮到自己的时候才抬头看柜台上面的菜单，再花很长时间作出选择，而实际上，完全可以把“排队”和“选菜”并行，这样的话，轮到自己的时候只需几句话就可以端着菜去吃了。我曾替那些拒绝学习的人着急，可是后来却发现这是个“死结”。为什么呢？第一，拒绝学习就不可能有机会知道学习之后的收获；第二，由于不知道学习之后的收获是什么，也就不可能知道那收获有多好、多大；第三，既然对学习的好处无从了解，自然就没有学习的动力。任何一个人如果曾经有最终习得某种技能的经验，就会知道，在习得的那一瞬间，整个世界都会为之改变。换一种说法：因为有能力做更多的事情，他也就不再存在于原本的世界里；因为所习得的技能，他拥有了另一个完全不同的世界。获取更多知识几乎是我们开拓自身心智的唯一手段。对绝大多数人来讲，学习能力也许是一生中最重要的能力。文字的出现，使得人类的经验积累不再仅仅依赖基因遗传，人类开始使用文字记录并存储信息、获得知识、传播经验……现在我们已处于人类历史上进步速度最为惊人的时代，美国前第一夫人罗莎琳·卡特就观察到了这样一个现象：“优秀的领导，能够把人们带到他们想去的地方；而卓越的领导，能够把人们带到他们应该去但是没想过要去的地方。本科教育之“本”在于培养学生的自学能力。从理论上讲，一个人本科毕业之后，应该有能力自学他所需要的任何知识。我所提到的“写作能力”，不是写小说的能力，不是写诗歌的能力，不是写剧本的能力，也不是写散文的能力，只是写作能力中最基本的一种——写出简洁、有效、准确、朴素、具体的说明性和说理性文章的能力。我国的教育把语文和文学过分紧密地联系在一起，以至有时忘了文字本身最重要的意义，而文学，只是文字应用众多领域中的一个而已。除了“文学”，文字还有更多其他的责任，如传递信息、积累经验、共享知识等，而且对大多数普通人来说，后者可能更为重要。人与人之间不沟通的根本原因可能在于人们普遍缺乏基本的沟通技巧。在双盲测试出现之前，可以说，医学和医疗领域基本还处在“黑暗时代”。毫不夸张地说，双盲测试的出现标志着现代医学文明的开始。人们可能基于一模一样的原因作出截然相反的决定。人类普遍拥有的一个认知偏差就是：把成功揽到自己身上，把失败归咎于别人或者坏运气。这在心理学上有个术语——自利性偏差。说者的语篇内容可以分为两类：事实和看法。如果是事实，那么我们就要花时间想想“他所陈述的内容真实性如何”。如果是看法，那么我们就要花时间想想“他的这个看法/意见的根源在哪”。有时，我们知道自己说的是对的，可还是没有人听得进去。绝大多数人面对这种情况会多少有些失落，甚至愤怒，可事实上，这往往只说明一个问题——还没有赢得足够的重视。读书，其实不见得一定要有目的，随意闲翻同样有益——有用的知识经常是偶然获得的。时间久了，我们就会发现，读书偶得的知识不仅多，而且非常重要，只不过很多人因为片面而又肤浅地理解“人生应该有目标”而失去了这些机会。有些人其实并不是对自己正在做的事情没有兴趣，而是没有能力把目前正在做的事情做好。人们总说他们真正感兴趣的是其他事情。可事实上，出现这种感觉应该仅仅是因为还没有开始做那件事情，也还没有在那件事情上遭受挫折而已。说来说去，是顺序出了问题：往往不是有兴趣才能做好，而是做好了才有兴趣。比成功更重要的是成长。如果“成功”是与他人比较的话，那么“成长”则是与自己比较——今天的我和昨天的我、明天的我和今天的我之间的比较。后一种比较显然比前一种对个体来说意义更大，也能够带来更加踏实的幸福感。大约2500年前，塞内卡就把运气这件事说得非常清楚：“所谓幸运就是当你准备好的时候机会来了。”当一个人没有准备好的时候，对他来讲，不存在任何机会。尽管法兰克·奈特曾提出一个相当正确的观点：“努力”相对于另外两个因素——出身和运气——是最无足轻重的。但是，我们仍然可以看到很多现实的例子：有相当数量的人确实通过“努力”改变了他们自己的“运气”，进而改变了他们后代的“出身”。往往只有优秀的人，才拥有有效的人脉。从整体上看，人脉当然很重要。不过，针对某个个体来说，比人脉更重要的是他所拥有的资源。表情和神态是一个人内心的折射，几十年的积累足以使一个人的内心变得“不俗”，于是，表情跟着“从容”、神态跟着“睿智”。在一个所有人都匆匆忙忙的世界里，想放慢节奏实在是一件非常难的事情。但是，我们应该记住的是：凡是值得做的事情，都值得慢慢去做，做很久很久。\n\n《把时间当作朋友-二刷》所谓的情商，就是擅长创造共赢的局面。友情中最有价值的部分来自各自的成长或者共同成长。一方面是自己的欲望无限， 一方面是要完成的事情太多， 一方面是自我满意度的不断下降—这就是人们总是不由自主地期望速成的根源。 出路肯定存在， 但这出路只有一个起点—接受现实。 告诉自己：我有不足，我需要时间，我没办法一蹴而就。\n侯世达法则：完成一个任务实际花费的时间总会超过计划花费的时间，就算制定计划的时候考虑到本法则，也不能避免这种情况的发生。\n相信我，你并不孤独。\n通过努力、通过积累成为能说更多话的人。\n手里只有一把锤子，看什么问题都像钉子\n往往不是有兴趣才能做好，而是做好了才有兴趣。\n所有学习上的成功，都只依靠两件事—策略和坚持，而坚持本身就是最重要的策略\n浪费时间、虚度年华的人，有一个共同的特征—拼命想控制自己完全不能控制的事物，却在自己真正能掌控的地方彻底失控。\n相信运气其实是缺乏自制力的表现。\n爱默生说：弱者相信运气，强者只究因果。\n尽管对生活不应该盲目乐观，但一定不能失望悲观。\n塞内卡：所谓幸运就是当你准备好的时候机会来了。\n承认自己能力有限，是保持心理健康的前提。\n真正的关心最终只有一种表现：为某人某事心甘情愿地花费时间，哪怕“浪费”时间。当我们把时间花到一个人身上的时候，相当于在他身上倾注了自己生命的一段—不管最终的结果如何，那个人和那件事都已经成为我们生命中的一部分。每个人的时间都是有限的，所以，“真正的好朋友”谁都只有几个而已。\n专心做可以提升自己的事情，学习并拥有更多、更好的技能，成为一个值得他人交往的人。\n学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重。\n终极体验的特点是，当前的享受不可能用未来的享受替代。\n\n《定投改变命运》决定一个人富有的三个条件，一是出身，二是运气，三是努力——而这三者之中，努力是最微不足道的。——富兰克·奈特\n\n一切与长期无关的细节都是鸡毛蒜皮\n每一个终点，都是新的起点\n教育就像一幅眼镜。在戴上眼镜之前和戴上眼镜之后，你其实身处的是同一个世界；但是，戴上眼镜之后你却可以看得更清楚更准确。在受教育之前和受教育之后，你所身处的依然是同一个世界，可是，戴着教育的镜片，你就是可以把同样的世界看的更清楚更准确……\n\n《新生——七年就是一辈子》21 岁之前，我学会了如何学习，28 岁之前，我学会了如何销售，35 岁之前我学会了如何传递知识，42 岁之前我学会了如何创业如何投资，2015 年我 43 岁，正走在一条之前自己从未想象过要走的路上。回头看这些年我做了很多事情，销售，批发商，教师，作者，创业者，投资人，社群组织者……他们说这是“跨界”，我说这是“重生”。想要看到复利的效果，就必须有足够长的时间，而且越往后效果越显著。别看我现在说起来头头是道，每次在关键的时候，自己都是靠不断挣扎才能走到本质，才能走到朴素的境界；而在这过程中，也常常被带歪，或者自己给自己下绊，经常要在鼻青脸肿之后反思，而后反复恍然大悟同一个简单的道理。多次之后，我终于明白，朴素其实是需要实力去磨炼的。灵感更多的时候是创作过程中获得的，而不是创作的起点。而人们总以为要有灵感才能写作，大错啊。失败不可怕，真正可怕的是，你差一点成功了。很多人苦苦思索：如何才能提高阅读速度？其实，真正有意义值得研究的概念是：理解速度。我坚持认为 “阅读速度”是个没用的概念，在我眼里，只有“理解速度”，理解速度快，才能有效提高阅读量。阅读，是为了理解，而理解这事儿，慢，即是快；快，便是无。“终生学习”是我在几辈子之前习得并使用的概念；到了今天，我已经弃用这个概念了，取而代之的是“终生成长”。立场不同：你所处在的那个位置，常常会决定你的视角 —— 虽然走到那个位置是你的主动选择，但站在那里之后，那个视角却可能会反过来限制你能看到的、能想到的东西 —— 甚至，即便你努力保持清醒也有时候完全不起作用。有些争论，其实并不是道理上的冲突，只不过是视角不同、层面不同而已。重要的人物说话，著名的人物说话，都是自然而然“有份量”的，普通人说的话，就是次要的，没有份量的。这是无法纠正的习惯。想明白这个道理，就知道，既然人尚微，就莫不如先不说话，专心做事，专心积累，成为能说那话的人，貌似这才是更重要的事情，这才是最有效的解决方案。等我开始放弃争论，最多跟别人偶尔讨论一下，这种习惯慢慢养成之后，才有了深入反思的机会：争论的冲动常常来于自己的弱小。只有自己放弃了争论的习惯之后才反应过来，原来那并不是人微言轻，而是人微易怒。弱小的个体更容易闹情绪，若是有情绪掺杂，那么言论就越发地不靠谱，不靠谱的言论又掺杂着更多的情绪。维系交往，是耗费时间精力的，两个人的交往过程中，一定至少有一个是主动的，而我就是那个主动的人，因为我觉得这些“成本”是必然存在，也是必须承担的。朋友就是那些愿意与我交往，并且我也钦佩的人。友谊中最有价值的部分来自于各自的成长或者共同成长。所谓的情商，指的是一个人有多大的能力去创造共赢局面。与其花时间精力推销，还真不如把那时间花在自己身上，默默地成为榜样好了。主次不分，是绝大多数人的永存问题。我们不能这样。如果有问题非要解决不可，我们一定要分清楚那里面的主次，把最重要的先做好，这个做到了之后，再去关注细节，而这样的时候也确实有能力关注更细的细节，否则，本末倒置，一无所是。法定假日是限制企业的，不是限制我个人的。为什么要坚持锻炼呢？答案是： 本金最重要。“学习真的很简单，学习 就是掌握一系列新的概念 。为什么持续学习一定会产生好运和惊喜呢？理由也很简单，只有概念多到一定程度的时候，它们之间才有机会产生“意外的连接” —— 即，所谓的融会贯通。选择很重要。甚至可以不夸张地讲，人生就是选择。对于选择这件事，我的好朋友铁岭有个精彩的陈述：所谓的（创业）成功，无非是解答题高手作对了选择题。真正的大势，很少频繁出现，尤其对个体来说，能够感知的大势更少。 平日里人们评价“某一个人格局不一样”的时候，本质上来看，是指那个人关注的焦点不一样。所谓冗余设计，就是为了能够让一个机器（或者系统）在非正常情况下也能运转，要把一些关键的组件安放一个以上。万一其中一个坏了，机器依然能够正常运转，甚至可以在机器的运转过程中修复或者替换那个坏掉的组件。大型货车有很多轮子，并且还常常是每一组由两个轮子并列构成，就是这种设计思想的应用。所有轮子同时坏了的可能性几乎没有，因为某个单个的轮子坏掉，完全不影响大型货车的正常功用。这样的设计使得系统更为可靠。你必须适应一段时间才能深入理解一个事实：一切更为健壮的系统都要耗费更多的成本。有个小技巧特别管用： 标题党的文章直接不看了。即便错过什么了，也没什么可惜。 这个小技巧真的不知道帮我节约了多少时间，提高了多少生活质量。我从来都懒得接受“碎片化xx”之类的概念，比如，碎片化阅读，碎片化思考，碎片化时间什么的，谁爱碎谁自己碎去，我才不想要一个碎片化的生活呢。在阅读的过程中，要不断向后总结，向前预期 —— 这是最基本的理解技巧。好书读不懂怎么办？没关系，只有一个办法靠谱：硬着头皮读完，然后反复读很多遍。这是一个特别重要的本领，很多人不知道。其实，重要的知识，从来都是通过反复学习才能获得的。一下就能学会得东西，通常上价值不大。有些书籍就是难懂，因为它的内容结构并不完全线性，也就是说，第二章的内容需要第五章的知识才能理解彻底。所以，最终，只有我们这种不怕暂时读不懂，能硬着头皮读完，然后再反复来过的人才能消化这种书籍。教是最好的学习方法。寻找那些持续学习的人，把他们当作朋友，把他们当作榜样。网络时代有个好处，这种人虽然身边并不多见，但网络上却很常见。为什么呢？网络消灭了地域的限制，甚至消灭了语言的限制。编著这两个字经常放在一起，但实际上有天壤之别。“著”的意思是原创成分更多，“编”的意思是”拿来放在一起”。有的书缺德，把两个字放在一起用“编著”糊弄读者。当然要优选“著作”。尽管很多人对 Alexa 的排名不屑，但在这些年里它一直是帮我筛选网站的一个重要参考依据。无论是用 Safari，还是 Google Chrome 或者 Firefox，我都会安装 Alexa 插件，以便随时了解一个网站的排名。我尽量只买电子书，然后转换成 epub 格式存在硬盘里。读书的时候专心读，有用的地方刻意记住几个关键字，将来用得到的时候，全文检索一下，就可以轻松找到出处。随着时间的推移，写上一两句批注的需求越来越少，若是真有启发，干脆写篇完整的文章算了。也就是说， 把大量用来“牢记”的时间，直接输入到“践行”之中，好像更为牢靠，更为划算。我们接纳任何新生事物，都不是因为它完美，而是因为它相对更好而已。2011 年年初，在我听说比特币之后，就开始认真研究。（团长备注：研究得可真够早的，割了不少韭菜。）花几十块钱买回来的一本书，哪怕是有其中一点点的内容（有时哪怕是一句话而已）给我带来惊喜，已经很划算了。我一向认为研究别人的成功很难，因为太多因素其实是隐蔽的；研究别人的失败相对容易，因为有更多更公开的因素可用来研究。更为关键的是，研究他人的失败，比研究他人的成功更有指导意义。看到别人失败了，看到别人遇到麻烦了，就要琢磨自己如何才能避免那样的失败、那样的麻烦。对大多数人来说，理财的困难与矛盾来自这样一个窘境：很难很早开始，等开始的时候已经太晚。所谓理财，这个定义比较合理、准确：如何有效管理现金流。 这其实与钱多钱少关系不大。从另外一个角度，理财无非就是“开源节流”。相对来看，“节流”固然重要，“开源”才是正途。对年轻人来说，努力提高自己未来的营收能力才是当务之急。微博、微信朋友圈固然得看，但更为重要的是要花更多时间去系统地研读正式书籍，多花时间去打磨自己的劳动技能。不要只顾着升级手机系统，也要常常升级自己的大脑，选择更好、更强的思维模式，进而有能力作出不同的选择。大多数群聊的参与者并不具备完整的讨论实力 。在互联网上，最有效的沟通方式是写文章。一个人把自己的想法与思考用文字表述清楚，然后无数人可以读到，认同就认同，若是有人不认同，那他就应该把自己的想法与思考用文字表述清楚，或反驳、或补充，总而言之，足够清楚 —— 且对自己和他人都有积累效应，又不浪费任何人的时间。\n\n如果你还活着，你的内心深处就会喜欢一定程度的随机性和混乱。——《反脆弱》\n你一旦坚定起来，周围的东西就只能开始晃动，这是相对论，朋友。\n你没有如期归来，而这正是离别的意义。\n读大学的地方，说不上喜欢，但是很怀念。想想很多地方确实都是，特别是度过了几年青春的校园，虽然谈不上喜欢，但因为回忆也变得分外怀念。\n人生也好，电影也好，旅行也好，个中的意义，可能真的无法被我们这些凡夫俗子所定义，所计划，所控制。我们只是在走着，在看着，在听着，在醉着，在哭着，在笑着。世间是无常的。但是人性充沛世间。——好久以前在知乎摘录的一段话\n\n\n《龙族》 龙 5\n\n就像一个杀累的死神，世间已空，镰刀无用。\n可惜我并不是路明非，人生里也没有隐藏选项也没有人在最难堪的时候拯救我，我终宄𣎴过是无数个普通人中的一员，所以路明非你一定要过得很好很好\n他以为他将这样度过一生，他以为他始终只是个衰小孩。但是，一封来自卡塞尔学院的录取通知书改变了他的一生。云层里透出神秘的吟唱：你也有神奇的父母，你也有热血的同伴，你的血管里流动着龙族的血液。而你的目标将是 —— 屠龙。\n热血龙族，少年归来！这是地狱中的魔王们相互撕咬。铁剑和利爪撕裂空气，留下霜冻和火焰的痕迹，血液刚刚飞溅出来，就被高温化作血红色的蒸汽，冲击波在长长的走廊上来来去去，早已没有任何完整的玻璃，连这座建筑物都摇摇欲坠…\n江南笔下的《龙族》：路明非和绘梨衣的爱情故事，让你落泪了吗？\n缘来：两个孤独的灵魂落尽红樱君不见，轻绘梨花泪沾衣就像是久旱逢甘霖，人一旦在孤独的环境里待久了，只要有人向她伸出双手，这双手就会成为她的全世界，而路明非恰恰给了绘梨衣一双温暖而又厚大的手掌。\n遗憾：正确的人，错误的时间如果世界真的不喜欢你，那世界就是我的敌人了。\n落幕：绘梨衣之殇就在路明非就快绷不住了的时候，她张开双臂抱住他的脖子，这一刻太阳落山，铺天盖地的黑暗席卷整个世界。当她的瞳孔饮下黄昏琥珀色的天空，映在另一个怪兽的眼中时，是悲是喜？她略显笨拙的伸出双手想抱住天空，天空就是Sakura……\n夏目友人帐 上杉绘梨衣\n胜券在诺，不绘赢， 零胜算\n少年不识愁滋味，为赋新词强说愁——致词那曾经的青葱时代…\n\n若还无力反抗命运，只需心怀勇气等待\n我几乎不跟妈妈讲难过的事，她帮不了忙，只会睡不着觉，人到了一定年纪，自己就是屋檐，再也不能到处躲雨了。《断舍离》\n杨绛先生曾说： “许久不联系的人，不用再联系，各自辛苦，各自生活，也再无交集，该停留在过去的，就让它停留在过去。”\n《纸牌屋》:只有当遗憾取代了梦想，人才算老。\n很多人只是嘴上说他们想要什么东西，但并不真正地付出大量努力去实现。很多人因为害怕失败而不敢全心尝试。而成功的秘诀在于内心燃烧的欲望——一种坚定不移的意志和专注力——从而激发行动的决心，即使疲惫，即使失败，也会继续准备，继续前进。正如一句箴言所说：“你摔倒了多少次并不要紧；你能多少次重新站起来对成功才至关重要！”\n自由是做你喜欢的事，幸福是喜欢你做的事\n成熟不是为了走向复杂，而是为了抵达天真\n真正的勇士敢于直面惨淡的人生\n有时，不是因为看到希望才坚持，而是因为坚持才看到希望。\n活在人间，要有三分温暖，两份凉薄，四分漫不经心，最后一分，随心所欲。\n有些歌只听前奏就心动 有些人光是遇见就喜欢\n开始降温了，你要适应这世界上所有的温度，不管是季节还是人心。\n可能是熟悉的地方没有风景，所以要去很远的地方找自己——《可能》李怡然\n哀酱：一个茶色短发，日英混血，御姐气质，美的惊心动魄。模特身材，精通高等数学、物理、生物化学博士学位、计算机学、医学博士学位、历史学、营养学、解剖学，熟练日语、英语、西班牙语以及各种暗号，喜欢动物还喜欢骑哈雷摩托，还对料理做饭十分擅长。对你滔滔不绝地讲事业讲工作很感兴趣并给予见解和实质性帮助，看透本质，发现柯南都没有发现的线索，发自内心理解并欣赏你的工作和事业，总是会发现你都发现不了的小细节和小失误然后及时帮助你止损，喜欢调皮地捉弄你，时常跟你开一些不会觉得冷场的玩笑，整一些能温暖你的玩笑来捉弄你，时常温婉站在你身边帮助你提醒你的失误，你告诉我，这样的女孩子，谁不心动？\n你见过哪些「初听不知曲中意，再听已是曲中人」？ - 知乎\n时间真的是让人又爱又恨的东西，我们不用买，时间就有了，可是也不用去花，时间就没了。\n终于到了小时候最羡慕的年纪，却没有活成小时候想要的模样。\n我们曾认为：\n“所爱隔山海。山海不可平；\n海有舟可渡，山有路可平；\n为爱翻山海，山海皆可平”\n最后才明白：\n“山海皆可平，难平是人心”\n【来点鸡汤】你必须非常努力，才能看起来毫不费力有一群人，他们积极自律，每天按计划行事，有条不紊；他们不张扬，把自己当成最卑微的小草，等待着人生开出花朵的那天。他们早晨5点多起来健身，你在睡觉；7点开始享受丰盛的早餐，蛋白质维生素淀粉粗纤维样样俱全，为新的一天起了一个好头，当他们收拾妥当准备开始一整天的工作时，你还在睡觉；他们用上午的高效时间完成了一个又一个任务，甚至发现的新的商机，发现了有可能给人生带来改观的机遇，当午餐时间临近，他们伸了伸腰，准备稍作休息，此时你终于起床。他们的午餐不铺张浪费，却营养全面，他们有选择的进食，因为清楚的知道自己想要的是什么，而你也在起床之后但觉到了饿意，你早早的洗了把脸，甚至连牙都没刷，打开冰箱，拿出了昨晚跟朋友 high 过之后带回来的薯条以及可乐；午睡之后，他们重新积极的投入工作，而你也终于吃饱喝足，坐在了电脑前。是的，你的一天开始了。晚上回到家里，他们也打开了电脑，也许是为了完成白天没来得及做完的工作，也许是因为前两天刚报了一个网络课堂，此时你还沉浸在 dota 中，你发的贴子还不够有人气，你发现空老师又更新微薄了，电视剧里男女猪脚还没有最后在一起，作恶多端的女二号还没有得到应有的报应。终于，22点到了，他们停下了工作，或许去满满的书架上拿下了一本书，或许拿起了自己心爱的乐器打算练练手，或许已经上床睡觉。当然，睡之前他们会想一想，自己在这一天都做了什么，有什么收获，又有什么教训。最后，他们又重新提醒了一下自己那个埋在内心深处的梦想，然后满意的睡去了。此时的你还在等待升级，还在顶贴子，还在刷微博，还在为了男一号女一号哭哭啼啼，你的一天才刚刚开始精彩。后半夜，你隐约感到了困意，依依不舍的关掉了电脑，身上已经很臭，你却懒得去洗一个澡。你走向了乱糟糟的床，钻进了肮脏的被窝，掏出了手机——是的，爪机党伤不起。你隐约知道自己的身边有那么一群“他们”，可是你却没有办法实实在在的感受到他们的存在。直到有一天，你和“他/她”终于浪漫的相见了——他/她是老总，你是普通的打工仔；他/她是主任，你是弱爆了的小职员；他/她游历各国，念着你想念的大学，拍着你想拍的照片，过着你想过的生活，他/她各种恣意的小清新，而你，是的，我知道你恨小清新，可是这又有什么关系？事实已经如此，你就是那个电脑荧光照射下的SB。\n优秀的旁人，是你产生进步的最佳参照物！\n有句话说，我们不会嫉妒马云和马化腾的财富，却会因为隔壁老王的发家而眼红不已；我们不会嫉妒任正非当今的成就，却会因为身边的同事受到重视而略有羡慕。这说明，对我们影响最大的人，未必是光芒万丈的大佬，更有可能是那些和你同属一个圈子，一个阶层，却比你“更亮几度”的“身边人”。\n兴趣所至，研学于此，或编程、或逆向、或攻防、或写作，试错年华，随心所欲；你所经历的一切事情，去过的地方，见过的人，读过的书，这些，造就了现在的你；你看过的远方，听过的故事，都会融入你的血液，如影随形，那些会变成你的格局，你的修养，和你的眼界。人生如程序，自己来编写，日常爆Bug，偶尔开Root，没事找Hook，立志进BAT，一起来Coding，做个小Geek。我深知一件事：一个人可以走得更快，但一群人可以走得更远。如果你愿意，此间我愿与你同行，我的微信号：不告訴你（認證信息是小夢的，雙人運營）想更深入了解我，可以走访我的其他足迹——看雪 豆瓣\n兴趣所至，研学于此；试错年华，随心所欲。吃瓜日常！考研？考公？四六级？玩机操作！软件推荐！福利分享！我深知一件事：一个人躺平很无聊，一群人躺平可解闷。如果你愿意，与我们一起，精致躺平每一周~敬请收看——《躺平指南 0.1》\n旧游无处不堪寻，无寻处，惟有少年心\n写意是向往，真实是生活\n做人如果没有理想，跟咸鱼有什么区别？ —《少林足球》\n台上演绎着别人的生离死别，悲欢离合台下笑看着世间的人情冷暖，是非对错本是听书人，奈何入戏深\n星光不问赶路人，时光不负有心人\n不自卑也不炫耀，不动声色的变好。\n羽雪飘月夜，黑键舞指间。\n十里平湖霜满天，寸寸青丝愁华年\n奥莉：我在tinyfool转推的评论区看到这样一条留言 深以为然：吃饭都不分餐，公筷很少用的人，说共用洗衣机不卫生，不知道细菌容易从口腔进入还是容易从皮肤进入？\n看到孩子没有成为自己想要他成为的样子 不管如何安慰自己 心里还是会难受和不甘作为家长 希望孩子快乐 也希望孩子成才啊和恋爱脑容易受伤一样，过分认定一个人或者一件事，只会被任何一点随机性带来的波动和偏离影响情绪，不如顺其自然，适当程度地给予爱护与修正。https://twitter.com/MissOllie2020/status/1578250067261079553\n我几乎不跟妈妈讲难过的事，她帮不了忙，只会睡不着觉，人到了一定年纪，自己就是屋檐，再也不能到处躲雨了。《断舍离》\n古来表白多白表向来情书难书情笑谈少年真年少常与生人话人生德云社李九春的定场诗\n没有什么是错过 所有离开的人都只是路人\n有时候一个人挺好的，没有惊喜，没有意外，没有失望，没有欺骗，没有辜负，没有背叛。\n如人饮水冷暖自知\n紫竹林里问春风\n\n\n长洱《天才基本法》\n\n一以贯之的努力，不得懈怠的人生。每天的微小积累会决定最终结果，这就是答案。\n与探索未知的美妙相比，世界上大部分噩运，都不再重要。\n世界上所有事情，都可能发生在任何一个人身上，没什么大不了的。\n学习本身就是足够幸福的过程，享受知识的同时，不要畏惧挑战。而所谓的考试，本质是由整个社会制定的残酷淘汰标准，它可以要求很多人，但如果你不在意，那它也没那么重要。\n如果想要什么，就应该努力争取，不管用说的也好、用做的也罢，一定努力争取才对。因为畏惧成人或者害怕失败，而把真实愿望藏在心里，直至腐烂，成为一个自欺欺人人的人，是非常不正确的做法。\n如果说，每个人的一生，都是颗不断成长的树木。那么伴随长大，每个人所拥有的时间和空间都在不断成长。那些时间和空间如树木一般，生长出繁密的枝丫，有些枝丫不断延伸舒展，有些则不再向上，逐渐湮灭。\n人生嘛，哪有几次真正奋力拼搏的机会，错过多可惜。\n就算不理解为什么要做，或者做了注定没结果，也不要放弃，因为人如果总抱着我还有另一条路的心态去活着，那么长大的某一天，就一定会后悔。\n在真实的艰难人生面前，每一天都像泥潭，除了自欺欺人地活着，还能干什么呢？\n人必须为自己的决定负责，这是老林的人生信条。\n在这漫长而美好的一生里，如果你真找到了想做的事情，那么无论何时你决定再次开始，都不算晚。\n但当人开始考虑思考意义时，就会反复思考得失，看到难以逾越的困难，然后哭泣。\n成为天才并不是解决一切困难的法宝，但真正的天才们永远坦然无畏，他们洞悉本心，忠于理想，追寻所爱，始终不渝。\n老林很难得非常耐心:“我只能说如果，如果你有幸找到了自己喜欢的东西，你不会甘心只接触它的一点皮毛，当你想不断追求它的时候，你就会知道要付出什么代价。”\n他说到这里，画风一变，“其实上面那句话是通常意义上的心灵鸡汤，事实上，虽然机会是给有准备的人的，但没机会的人，很多时候都不用准备了。”\n简单和美妙之间，并没有矛盾。\n我曾经有一阶段，学习很苦，就学会怎么用最少睡觉保持大脑运转。”\n“怎么保持？”\n“心无杂念，心里只有学习，除了学习什么都不想。”\n有人十二岁还保持三四岁的纯真天性，也有人十二岁时已经像个成熟而充满戾气的社会人，这往往和家庭有关。\n世界上大部分事，都没有太大意义。真理和热爱除外。\n每当她有所怀疑，觉得自己还差得远的时候，老林或者裴之总是出现在她面前，告诉她“还差得远其实是件应该令人高兴的事。能见山见海,真是很好。如果没有达成目标，那就得再看看还有什么可改进的地方。如果一切完美，她缺的是信心，那么还要再多点信心就好。\n红灯转绿。林朝夕想，她幻想过无数次向裴之表白的情形，却没有一次，如同现在这样。月明星稀，夏风和煦，他披着阑珊的灯火，向她走来。平静坦然，义无反顾。\n总有些人让你看他一眼就很想成为那样的人。\n他知道自己是谁，也永远知道自己在什么。绝不茫然从不彷徨，这就是清醒。\n如同水底潜行的鱼突然越出蔚蓝海面，阳光灿烂。\n“亲密的意思是，220和284，他们本身除外后，他们的全部约数之和与另一方相等。简单来说，虽然我们两个数表面看上去完全不同，内部却互相构成着对方，所以很多亲人、朋友间啊就喜欢用这两个数字表达思念、喜爱等等。”\n“不如抬起头看看那些比你更强大的人，试着仰望那些人、追逐人类历史上无数天才的脚步，那才是真正的快乐，远比鄙视弱者，要快乐得多。”\n原来剧情并不会因为突然到来的停顿发生质的改变。　　他们终将像现在这样渐行渐远，漫长人生，再无相逢。\n不用囿于过去，才可以重新开始。\n“不被世界改变，你就改变了世界。\n事实面前，无需理由。\n勇气到来于突然而至的瞬间，不需要任何铺垫和心理建设。\n原来非常遗憾的时候，真像小说里写的那样，会像什么东西在身体里掏了一个巨大的洞，仿佛有风穿过，却什么也抓不住。\n只要想放弃，人总能找到借口去支持放弃的理由。是啊借口，人太需要借口了。\n“你有没有听说过，每一个选择，都会造就一个不同的世界。”——————————————“与其抨击丑恶，不如选择美好，生活可以渺小，世界必须广阔，倔强的人走的最远，因为他们什么都不怕，只怕抵达不了终点。”“你说的这个，好像是心灵鸡汤。”———————————————“世界上大部分事都没有太大意义，真理与热爱除外。”“成长，不就是学会妥协吗。”“数学是好，是星空，是宇宙，但它并不是生活的全部。”“奥数是什么?奥数就是在你们遇到困难的时候，让你们放弃那些高阶的工具。像那些先贤一样，用突破性思维去解决问题。它就像一个人，拿着小木棍儿去勇斗恶龙。”“一以贯之的努力，不得懈怠的人生，每天的微小积累会决定最终结果。”“我们中的大部分，都在为理想和所爱默默付出。希望我们都能一直坚持所爱，为之付出一以贯之的努力。”“成为天才并不是解决一切困难的法宝，但真正的天才们永远坦然无畏，他们洞悉本心，忠于理想，追寻所爱，始终不渝。”“人生嘛，哪有几次真正奋力拼搏的机会，错过多可惜。”“简单和美妙之间，并没有矛盾。”“每个人的起跑线或许不同，但只要尽力了哪怕就尽力一次，对于我们这些天资平平的人来说都是非常非常了不起的事。”“拥有热情，本就是最幸福的事。”  “不被世界改变，你就改变了世界。”  “世界上所有事情，都可能发生在任何一个人身上，没什么大不了。”“这个世界上永远有比你聪明的人，永远有比你强的强者，你与其在碾压天赋或者仅仅是家庭不如你的人上寻找快感，不如抬起头看看那些比你强大的人，试着仰望那些人、追逐人类历史上无数天才的脚步，那才是真正的快乐，远比鄙视弱者快乐得多。”“林朝夕同学，在这漫长而美好的一生当中，只要你认真想要做一件事情，无论从什么时候开始，都不算晚！”“哪怕要付出常人十倍百倍的努力，我们一样能取得好的成绩，我们不比任何人差，甚至还要更好。”“我们中的大部分，都在为理想和所爱默默付出。”“智力不是决定性因素，勤奋才是，因为大多数东西学到最后，会发现真正的艰难与困苦，没有毅力无法走下去。”“属于青春的不羁与勇敢，那是活力以及无限的热情。不要放弃啊，追逐着，梦的方向。”\n来自于无聊与远方在歌曲&lt;&gt;的酷狗评论\n这个世界本来就是这样的，你会认识形形色色的人，会遇到无法理解的恶意，会感到失望，但是只要过去了，你就会发现，其实这些是在提醒你不要成为他们一样的人，经历的意义，在于引导你，而非定义你，记住，深渊可以凝视，但不要驻足。\n毕达哥拉斯曾经说过，‘朋友是你的灵魂的倩影，要像220和284一样亲密’。”“亲密？”“亲密的意思是，220和284，他们本身除外后，他们的全部约数之和与另一方相等。简单来说，虽然我们两个数表面看上去完全不同，内部却互相构成着对方，所以很多亲人、朋友间啊就喜欢用这两个数字表达思念、喜爱等等。”220的全部真因子1、2、4、5、10、11、20、22、44、55、110 之和为284；而284的全部真因子1、2、4、71、142之和又恰为220\n老林告诉她，如果她想要什么，就应该努力争取，不管用说的也好、用做的也罢，一定努力争取才对。因为畏惧成人或者害怕失败，而把真实愿望藏在心里，直至腐烂，成为一个自欺欺人人的人，是非常不正确的做法。\n对孩子来说，曾经真心想要的东西，拥有极其强大纪念意义的东西，并不会那么快失去它的价值。\n如果说，世界上一定有什么大魔王，那一定是你的父母。\n　　他们或者待你漫不经心，或者待你太过严苛，却也往往是那个在你最需要他们的时，为你披荆斩棘的人。\n　　只不过，往往是他们在你需要时出现的次数太多，就变得不那么显眼了。\n这时，老林才语重心长地说：“你们能不能考好，这和我没有关系。因为如果我有孩子，我会告诉他，学习本身就是足够幸福的过程，享受知识的同时，不要畏惧挑战。而所谓的考试，本质是由整个社会制定的残酷淘汰标准，它可以要求很多人，但如果你不在意，那它也没那么重要。”\n林朝夕转着铅笔，其实这也是小时候，老林经常和她玩的游戏。在老林她讲完之后，她用自己的方式，也给老林讲一遍刚才的内容，不仅整理思路、加深理解，更重要的是，只有当你再复述一遍的时候，才知道自己到底还有什么不会的地方。\n这世界上任何事情都有可能发生在任何人身上，没什么大不了。\n一以贯之的努力，不得懈怠的人生。每天的微小积累会决定最终结果，这就是答案。\n世界上大部分事，都没有太大意义，真理与热爱除外。\n“给大家介绍一下，3号、4号机房是学校为我们安排的比赛教室。而4号机房隔壁这间大办公室就是大家的休息室。里面有水、能量棒、红牛，还要大家最爱的各种口味方便面。相信我，论文写到人生无望的时候，来一碗泡面，你们会获得活下去的勇气。\n这种感觉其实很好，你知道身边有些人在和你一起在努力，也有些人什么也不说，却默默陪伴在你身边。\n老林已经看的很清楚了，命运才是那座最残酷高山，没有人能逾越。\n　　在这座高山面前，人人平等，一切都什么大不了。\n“老林同志，我有个问题。”林朝夕空出另一只手，打开窗栓，“在这漫长而美好的一生里，你是否找到了自己真正想做的事情，并从没有一个瞬间，对自己当初的选择感到遗憾？”\n老林蹲下来，拿着自己手上那本书，很耐心地翻到封面捧好，告诉她。在图书馆拿到一本书要做什么，先看书名、再看作者，然后要做的，就是看目录。他说看书名和作者代表尊重，并对这本书要讲的内容有初步概念，然后看目录，了解作者编排这本书的思维方式，了解组织结构和大致框架。额….对七八岁的孩子来说，对“组织结构”和“大致框架”这些，连名词都很难理解。不过老林仍旧非常耐心，牵着她的手，对照书里的内容和标题，给她一点点讲什么是框架，什么是骨架。\n比如有一章节讲的是水实验，他们就翻到具体的章节，老林带她一项项看，所有页码内的小实验究竟有什么相似点，然后她发现，所有的小实验都以水为载体或者和水有关。大人看起来，这好像是非常简单的理解过程，可对于很小的孩子来说，却仿佛发现了什么新奇世界。原来书应该这样看，原来每页纸之间都是有关系的。它们一团一团，又仿佛在不断生长，非常有趣这是她那时候惊喜的发现。在那之后的很长一段时间，每看什么书，老林都会有这么一个带她阅读的过程。她不会写很多字，他们就用画的，因此每看一本书都会花很长时间，看完以后，他们就合上书，一起画花和茎叶，以此来回忆整本书的内容，她从此以后就变成简笔画小能手。再后来老林就教她该怎么挑书。按照老林的说法，市面上良莠不齐的东西太多了，你要自己判断，什么是好书，什么是不那么好的书，这就要求她对不同书本中的内容进行横向比较。最后，老林还亲自带着她，试着组建起自己的知识体系。虽然她记得很清楚，老林第一次带她整理知识体系，是关于奥特曼！但还是很厉害啦。总之，老林真的教了她很多。那些曾经她认为很寻常的内容，现在被张副校长这么突然提起，看着所有小学生不理解的模样，她才意识到老林究竟教了她多少。很多很多孩子都在不停上课不停学习，可究竟该怎么学习，不是所有家长和老师会像老林那样，充满耐性地、一点点地手把手去教孩子。而方法，明明该是最先去学的东西。哎，好想老林，老林真好，林朝夕很颓丧。\n“有什么想法？”解然问。“其实挺简单的。”“需要一点点思考时间。”“要把握题目中所有信息的细节。”“还有等式里的细节也要把握住。”解然听到这里，看向林朝夕：“你觉得呢？”林朝夕露出思考的表情，随后说：“两点吧，第一不要怕，第二，把文字问题尽快翻译成数学语言。”\n夜色中，老林迎着路灯穿过小巷而来，第一句话就是：“今天恋爱谈得怎么样？”\n　　林朝夕呆在原地，本来强行调整情绪摆好的笑脸都变得奇怪了起来。\n　　她也不知道老林为什么会在别的父母都反对早恋的年级，鼓励她追求爱情。她只知道，老林是真希望她能快乐。\n　　“爸爸你不要这么直接，我也是会害羞的！”她仰头嚷嚷。\n　　“那今天裴之的小女朋友感觉如何？”\n　　林朝夕：“……”\n　　老林显然是今天进展顺利，心情很好。逗完她，老林走进小饭馆，破天荒要了双份大黄焖鸡米饭，配了两瓶可乐，斥资36元巨款。\n林朝夕说得有些悲伤，却听老林忽然开口：“我怎么知道，我又没谈过恋爱。”\n　　“？？？”林朝夕震惊地道，“那我是怎么来的？”\n老林放下帘子，把手搭在门上，因连日修改而有些疲倦，但笑容依旧温和狡黠。\n　　“这么巧啊。”他笑问，“小林同学吃晚饭没有？”\n　　林朝夕愣了下，随即答：“好巧啊林师傅，你女儿呢，放学没有啊？”\n　　“我找找。”老林左右看看，最后视线飘来，看着她笑，“我女儿不就在这。”\n　　看着老林笑盈盈的目光，林朝夕却忽然想起她所无能为力的事。胸口像塞了沉重的棉花，她救不了这样的老林。\n但当人开始考虑思考意义时，就会反复思考得失，看到难以逾越的困难，然后哭泣。\n　　成为天才并不是解决一切困难的法宝，但真正的天才们永远坦然无畏，他们洞悉本心，忠于理想，追寻所爱，始终不渝。\n　　人的内心，好像总要经过千万次荡涤才能水落石出，林朝夕不确定她之后是否还会迷茫，但在现在，起码是此时此刻，她很清楚，她应该进去陪伴裴之，\n最后，祝愿大家在这漫长而美好的一生里，都能找到那个人或者那件事，无论什么时候开始，都不会晚。\n教室里有大堆大堆没过头顶的书籍，埋头苦读的学生，哗啦啦转动的电扇，几乎看不到学生们的脸。\n　　这种安静往往从第一个人走进教室，持续到最后一个人离开。\n　　低头翻开书时天空晴朗明亮，再抬头，太阳西斜，窗外马路边的小摊贩生起烟火。\n林朝夕坐在餐桌前，给他说了陈小龙，也讲了小女孩儿粉色的情书。老林则对她换来的乐高橡皮很感兴趣，强行征收拿回房间玩了起来。\n　　21:00。\n　　她重新坐在书桌前。\n　　为了保证6小时的充足睡眠时间，她还可以再看3个小时的书。\n　　大部分内容已经从陌生变得熟悉，但仍需刻苦理解和重复练习。\n　　时针划过一格、又一格……\n　　林朝夕拿起橡皮，擦掉了一行，写下了最后的答案。\n湖风爽飒，他们交换零食，悉索的拆包装声在湖畔响起。\n　　“你在飞机上没吃，特地给我带的吗？”她问。\n　　“空乘给的。”\n　　“哦，小姐姐好看吗？”\n　　“是你喜欢的类型。”\n　　“那你也没有拍给我看。”\n“我会不好意思。”\n“衣服很贵啊……”\n　　“我给你买。”\n　　“你是不是喜欢上纪江老师了了？”\n　　“恩？”裴之难得用诧异的目光看她。\n　　“那为什么突然听纪江老师的话？”\n　　林朝夕说完就意识到不对，因为裴哥很难得用耐人寻味地目光看着她。\n　　沉默进行了一段时间，直到裴之端起冰可乐，喝了一口，林朝夕听他用非常平和地语气念诵道：“你可能不知道，其实男生带女生买衣服，看到妹子从头到脚改头换面，是对虚荣心极大的满足。”\n一瞬间，曾经的记忆汹涌而至。\n　　这是曾经在这间屋子里，花卷说过的话……\n　　那时裴之好像坐在同样的位置，看着她和花卷一唱一和，\n　　她那时是怎么回答来着……\n　　——我懂你，其实如果我有钱，我也很想带小萌妹来商场看她换小裙子。\n　　林朝夕：“！！！”\n斯巴达筒密码\n房间里。\n　　月光流淌过窗棱，铺满了小半个房间。\n暮色四合，院里静到只有蚊虫低鸣声。\n世界上大部分事，都没有太大意义。\n　　真理与热爱除外。\n\n少年，追风赶月莫停留，平荒尽处是春山。\n且行且看，不行再换\n踝(噬魂)塔钟声起 万物生息寂\n影响你人生走向的事你知道它是什么但却没什么细节，能回忆起细节的却都是些鸡毛蒜皮的小事NSFOCUS旧友记–老黑客stardust\n安全这行当，带不来显式的效益，一直以来都合规和事件驱动，技术挺密集但市场还不如小龙虾。所以，干这行别指望能发什么大财，从业的最好还是能多少喜欢或擅长干这块活，人生在世只有时间不可逆转地在流逝，工作又占了你很大一块生命，能有个感兴趣有成长的工作何其幸事，如果又能碰到些有意思的人那就更好。\n文章写尽天下事 不敢低头见苍生问国外针砭时弊 谈国内鸦雀无声\n加西亚马尔克斯说过一句话，“摆烂从来没有让我快乐过，我只是爽。”\n孤单，是因为心里没有人，寂寞，是因为身边没有人。从不奢望做的每个选择都正确，只希望能承受每个选择的结果。\n写小说最大的好处是：我始终能成为故事里最偏爱的那一个。\n如果你到30岁了还没有结婚、生娃、买房你会发现生活真的没有什么压力🐶\n我本将心照明月，奈何明月照沟渠\n其实：人生中出现的一切，都无法拥有，只能经历。深知这一点的人，就会懂得：无所谓失去，而只是经过而已；亦无所谓失败，而只是经验而已。用一颗浏览的心，去看待人生，一切的得与失、隐与显，都是风景与风情。          ——人类所能犯的最大的错误.就是：试图用健康.去换取其身处之物。很多所谓辉煌的人生，不过是欲望的囚徒。在这个物质战胜灵魂的年代，几乎所有人都搭上了欲望的列车，却把心遗落在了站台……          回首间，才忽然发现，原来，我一生的种种努力，不过只为了周遭的人对我满意而已…最后才发现，我只剩下一副模糊的面孔，和一条再也不能回头的路！\n针砭时事 背影\n钱没了 可以再赚 良心没了赚的更多了\n熟人不敢下手，生人不敢开口。没有了一见钟情的资本。少了日久生情的条件。人群中是个段子手，人群后是个单身狗。\n当你定下一个艰巨的、阶段性的计划的时候，有几本励志书放在床边，绝对是最好的精神鸦片，你备着那么几本书的好处就是，你什么时候坚持不下去了，随手拿起来一番，就像精神鸦片给你打一针，又能坚持三天，成功学的书需要换着看，不能短时间内重复看。——罗永浩\n别在一开始就否定自己，觉得自己不行做不到。快速的否定自己，给自己找个借口固然可以让自己获得短暂的轻松感，但是这样一来，自己的人生也会越活面越窄，越活可性能越少，多花点时间计划一下如何让自己能够做到，路径是什么，要的技能是什么，你会发现很多事也并不是这么难……别给自己设限。——Hao Chen\n\n\nZukr - 魔法师\n\n每位父母都在心目中对孩子有一个属于他们自己的定义，而那往往是一种他们曾经向往的生活，于是他们会在潜意识里习惯于把这个定义“强”加到孩子身上。同时，受到国内大气氛的影响，难免又会与周围的人做比较，比较孩子的同龄人，比较自己的同龄人，然后受到他们的影响，仿佛正应了那句话——“没有对比就没有伤害”，接着便开始形成一种“错觉”：比子女，学习没人家孩子好，写作业应付了事，老是喜欢玩；懂事没人家孩子懂事，一天到晚总喜欢顶嘴，惹大人生气；比自己（大人），工作比人家辛苦，一天到晚都在忙，最后没时间陪孩子；挣钱没人家挣的多，人家又是单位（老师），又是公务员的，那是双职工，干一份工作的活，挣两份工作的钱；自己呢，是挣辛苦钱，每天起早贪黑也就够个养家糊口，人家呢，那是赚钱，按时按点上下班，生活规律又自在，有车有房有存款，逢年过节就旅游……总之就一句话，似乎别人家的优秀已经成为了一种常态。而年龄上的差异，局限在文化水平上的差距，交流沟通上便有了深深的代沟……\n当你毫无征兆地从日常的社交圈中销声匿迹，才会发现不曾有人因为你的消失而担忧，一切如常，没有你的世界别人一样过的很好，你，可有可无……\n听过一首歌吗？十一年，从懵懂好感 到 情愫初生，到 心生爱慕，兜兜转转，分分合合，我有遇见你的运气，却没有留住你的本事，最后终归还是错过了，也许……这就是爱情吧\n每个人的闪光点不同，就不会形成聚光灯，多是射线，照向属于每个人独特的方向，鲜有交集\n放假一個多月了 夾縫于原生家庭每天各種鷄毛蒜皮的事情中突然明白了一個道理——😶家 要常回少待 就像健身增肌進食 少食多餐常回 不觉太想念 時常可挂念少待 初回衆歡喜 久了會生厭\nEnglish is a confusing language with many inconsistencies!😵‍💫\n读书如饮水，冷暖人自知，文字如清风，入眼入心底。\n以前总觉得自己少年老成，觉得自己未来目标明确，一直努力朝着一个方向努力，很少有娱乐项目，喜欢这种近乎自虐的自律感，甚至有优于那些整日刷剧打游戏的同龄人的错觉，现在接触的各国朋友多了，圈子大了，再想想，自己还年轻，应该多折腾，人生的路还没走几步，就觉得一眼看到了头，这不好~\n追求通用性，而不是不可替代性！——通用(全栈)型人才网络上很多人会讲，要提高你在职场中的「不可替代性」，但实际上，你永远都是可替代的。所以真正需要你注意的关键之处在于，你要保证你的经验、技能具备通用性，即换家公司，也可以发挥价值，这会使你有更多的就业选择。\n我很，怀念我们刚认识那会，大家都有些拘谨和真诚~终究还是错付了😭\n1）一笔当先走前锋，莫言放弃，人间值得，未来可期；2）耳机后继有缘/援，不放手，愿流年不负，愿岁月可期；3）平板压阵出场，收拾心情，致未来——生活明朗，万物可爱 ~\n之前觉得简书的 markdown 支持不错，在线写文挺方便，还研究过一段时间的简书钻，赚了点小钱，后来发现风气不好及时退场了，今天突然收到短信🈲账号了，打开一看封禁原因是涉及🔞……至此，内心对国内的社交写作平台最后一丝侥幸也消失殆尽了💔销号前截个图留着来过的纪念吧……简书处理效率还是很高的，申诉了不到一小时解封了，然后删除账号🌚\n女孩纸一定要记住爱自己，一定要让他高攀不起，不要活的太卑微，你爱到了骨子里，他也能毫不犹豫在你心口上插一刀，你一定要长大，不要在该奋斗的年纪去想那些无所事事的东西，把你想给别人的一切，先留给自己，剩下的让别人来努力，要记住人生没有左右，一个往前，一个向后🍃——有故事的女同学\n新的生活经验，收款最好不要是信用卡🌚现在的骗子真多啊。    朋友接了一个大活儿，分包给同行一半。完工，交付，对方信用卡付钱，都是email进行，一切顺利。   谁知没几天，信用卡支付平台说那张卡是盗用的，要求把钱退回去，否则交讨债公司。   朋友欲哭无泪，不但自己白做，还要自掏腰包，把付给伙伴的钱也退回去。   报警有啥用\n\n程序员真是世界通用工种\n大多数人过着受变幻莫测的命运所掌控的随遇而安的生活。很多人受迫于其出生的境遇和生活的必需而保持一条笔直且狭窄的生活道路，在这条路上，没有向左转或者向右转的可能。– 毛姆\n最基本的，是要有一次写一个词的耐心，直至达到所需的长度。太多人缺乏这种耐心了。一旦你习惯了，写起来就会毫无困难– 黑泽明\n简洁是写作风格的第一要素。尽量简洁，少用副词修饰。不要卖弄，不要自我陶醉，最重要的是准确描述一个故事。——斯蒂芬·金在《写作这回事》\n我感觉很多进安全圈的人动机是不纯的，他们进安全圈的初衷并不是想去保护什么，而是想去破解和偷窥别人的东西……——Hao Chen\n人总是在懵懂无知的年龄做选择，在清醒的年龄承担后果\n人生不只有谈情说爱，事业成就，还有家庭矛盾，岁月蹉跎，茶米油盐，读不懂的诗和去不了的远方。一个游走于代码和威士忌之间，总想拔剑的女人\n“我来这个世界，不是为了繁衍后代，而是来看花怎么开，水怎么流，太阳怎么升起，夕阳何时落下。我活在世上，无非想要明白些道理，遇见些有趣的事。生命是一场偶然，我在其中寻找因果。”\n一个码农的自我修养，看见代码就想跑一下，这是病，得治！\n「我们要怎么做才能不上那辆大巴车？」\n看到上条微博评论区有人这么问， 我知道很多人的回答都是「应润即润」。就好像上海解封后，我和同温层的朋友第一次见面就聊润，一心想润：你要去哪里？准备得怎么样了？护照更新了吗？群名叫 IUNGERE IN ROMA, 群公告写「如果最终无法真的到达罗马，会受到诅咒噢。」\n于是夏天过去后，陆陆续续好多朋友、博主，发 post 的定位都变成了国外。我看到他们 ip 显示着荷兰、美国、加拿大、英国，玲琅满目的自由国度，但今天时间线上无一例外的哀鸿遍野。他们感受到的痛苦不比我们少，他们呐喊的力度不比我小。\n润是一个选择，但润不是百药。对一个出生在这里的人来说，只要你在这里有家人，有朋友，有童年，有喜欢的电影院和街边小店，有爱过的人，有在街头散步时感受到“难以言表的，在记忆里无从归类的，混合着青柠檬味道的，像雪花在你还没意识到的时候落在肩头然后非常温柔地消逝的瞬间”，你就还是会痛苦，深深的痛苦。\n所以有时候我觉得很悲哀，就像原罪一样。我们生下来就在那辆无处可逃的大巴上，往后用尽一生的力气，也只是驶向一片白茫茫的无依之地。\n谈生产率/ 效率的人和文章都太多了，但其实人最缺的可能是 motivation 和心理上的满足感吧一个人如果没办法心甘情愿的去做一个事，效率和执行力就都无从谈起；即便是自我 pua 也没办法永久持续的内在因素没有，外在压力没有，基本上努力就不可持续\n我们的现状，是我们的观念和由此做出的选择所带来的结果。不同的价值观、学习观导致了不同的人生。\n人这一辈子，或多或少会遇到几次改变命运的机会。每抓住一次，人生就会上一个台阶。但当机会来临时，你不一定能识别出来；你发现了机会，但因为没做好准备，抓不住机会。所谓成功，其实就是多年的积累，迎上一个改变命运的机会。但在这之前，你能不能熬得住，这是个问题。\n夫妻之间，穷时考验的是妻子；富时考验的是丈夫；激情退去时，婚姻才刚刚开始；婚姻的本质是陪伴和责任；而成熟的爱，靠得是良心！\n《游戏力》里说：“孩子不断需要关爱和照顾，就好像有一个杯子，不断需要蓄水。”\n\n\nJess 打破原生家庭之环的人，只能是你自己。\n\n我说洼地女性别的东西可能没有，被性骚扰的经历绝对人手一大把。\n男性友人表示不信。\n我说你问过你身边最亲的女性吗？比如你的妻子、姐妹、母亲？\n没有。\n那你觉得，你身边最亲近的女性会主动和你分享这些经历吗？她们是否会觉得羞于启齿，你们的第一反应会是支持、关心还是质疑，指责？\n沉默。\n然后我分享了一下我的经历。\n小学的时候，我爸经常把我丢给司机。这名20多岁的司机，在带我吃完饭之后，经常把手伸到我的衣服里，以摸下我肚子看看吃饱没有的借口，把手往我的阴部伸。\n那时候我还不到10岁，也没人教过我性知识，所以我什么都不懂。但是有生理性厌恶，会借口出去玩、痒痒等把他推开。\n为什么我知道是不到10岁，因为10岁那年我爸和我妈离婚了。\n20年后，30+的我鼓起勇气和我生父说了这件事。\n生父：“不能，你记错了。”\n我又和我妈说起这件事，我妈倒是没质疑我，但也没有支持，话锋一转痛骂我的生父：一切都是他的错，一点好作用不起，我这辈子真是瞎了眼…\n我就开始后悔和她说了。\n初中上学途中，和闺蜜被一个20多岁的男人拦下。\n他骑着自行车横在我们俩面前，路很窄，我俩很难前行。\n他开始问路。\n我一直盯着他的眼睛，努力弄清他想去哪，他则一直咕哝着说不清。\n突然闺蜜使劲掐了我一下，示意我低头看。\n我一看，裤子拉链开着，一条疲软的鸡鸡耷拉在外面。\n我俩扭头就跑。\n还是初中，我妈带我坐公交车。\n她坐着，我站着。\n感觉我左边的人一直在撞我。\n我想是车里太挤了，于是侧身转了90度，我左边的人变成了我前面的人。\n他仍然继续撞我。\n但这次我能看到他的裆部，有点湿的印记。他就是在用这顶我。\n我很慌，和我妈说我要坐，我妈很不满的站了起来，数落我不能吃苦。\n高中胸部已经发育了，去我小叔家做客。\n小我4岁的初中生堂弟，突然眼睛停留在我的胸部，嘴角一挑：“哟，发育了啊？”\n我直接死机，不知道该怎么回答，条件反射一样否认：“没有！”\n他，从容不迫的，伸出了一只手，放在我的乳房上摸：“那这是什么？”\n我说你有病吧？！然后离开，至今不敢告诉家长。\n大学去面试兼职。\n男生在停车场边上聊天，我和一个女生嫌晒，钻到了两辆车中间的树荫下。\n我俩盯着对方密切的聊天。\n余光里有个胖男人晃了过来，我们默认他是来开车的，没有抬头。\n直到他走到面前。\n我俩一抬头，一条疲软的屌离脸20cm。\n沉默三秒，尖叫逃跑，激烈的向男生解释，求助，他们不信\n还是大学，19岁的我带着男同学16岁的表妹逛西单。\n我俩走街串巷一会儿，突然发现有人尾随。\n我现在都记得那个人的样子，浅色鸭舌帽，灰色t恤，个子不高，一直低着头。\n表妹快哭了，我说别慌，我们去麦当劳。\n我俩几乎一路小跑，终于找到一家麦当劳。\n没想到那个男人也跟了进来，就坐在门口不远处\n那是工作日的上午，麦当劳人很少。我们俩一起去女厕所呆了20分钟，出来一看，那个男人还在。\n我去求助女性服务员，服务员像看神经病一样看我：“我们管不了，要不你报警吧！”\n最初我俩真的想报警，但服务员的态度让我们开始自我怀疑：万一被警察骂怎么办？\n抱着最后一丝希望，我打了我班男生的手机。\n万幸我班男生也有三个翘课来西单玩的，大家接力找到了他们，半小时内他们就赶到了。\n他们来我们身边一落座，我们还没来得及指认，那个男人站起来就走了。\n接下来的剧情，就是我俩被这三个救命恩人骂的狗血淋头。\n说我们俩琼瑶剧看多了大白天的大西单的大北京的哪来的流氓会看上你们这俩穷学生。\n这件事我想了十多年，想不通。\n我一边觉得男生骂的有道理，一边确定那人确实在跟踪我们。\n后者如果不是有表妹可以双重认证，我都想推翻自己，因为太诡异了。\n直到今年铁链女一出，有朋友讲起她舍友在大省会的小巷被囚禁一宿惊险逃生的故事。\n我突然想起我们最开始发现被尾随，也是在西单的小巷里。\n朋友当时读大一，舍友说去银行取钱，一天一夜都没回来。同学们到处找不到。第二天傍晚她自己回来了，抱着舍友们哇哇大哭。\n她说她被两个女人套近乎，傻乎乎地跟着走进一个小巷，被关了起来。她说想借电话，女人说手机没电了。可她明明听到女人接电话，觉得不对劲，第二天趁两个女人带她转移时跑掉了。\n朋友也是铁链女事后才反应过来：舍友差点就被拐卖了。\n朋友说年轻的时候只觉得舍友的经历奇怪，压根儿没往拐卖这方面想。毕竟偌大的省会城市，光天化日之下。\n她这么一讲，我也跟着恍然大悟，困扰我十几年的疑惑解开了。\n我和同学表妹是不是也差点被拐卖？那个小巷的尽头是不是也有一辆无牌面包车？\n第一份工作在体制内，经历就更丰富了。\n比如开会时公开问你几罩杯。\n比如聚餐完假装不胜酒力要把胳膊架在你肩部。\n比如出去玩要和你跳舞，跳的时候手一定要无意间扫过屁股。\n比如旅游时晚上来敲你的房门。\n因为我一直很不服，有一位处级干部曾意味深长的对我说：“从开始看不惯，到后来跟着干。”\n因为洼地女性地位不如狗，受害者一直被指责，年轻的我本着一种诡异的羞耻感，一直把这些秘密埋在心底。\n慢慢我明白了这不是我的错，这是整个社会的错。\n我开始变得大胆了些，主动和身边的女性聊性骚扰。\n虽然不算意料之外，但这些女性有一个算一个，争先恐后分享自己的创伤记忆时，我还是感慨万分。\n我和两个闺蜜叮嘱性教育的重要性时，强调了儿童性侵的毒爪，八成来自亲人朋友。\n然后我分享了被堂弟袭胸的故事。\n闺蜜A：…这么说来，我小时候和我表哥午睡时，表哥一直搂着我，手正好放在我的胸部，我能感觉到他在揉。可我不敢肯定他是不是只想抱着我，无意中手动了几下…所以我不敢动…好多次呢…\n闺蜜B：其实我那个变成植物人的三姨夫…我妈一直骂我没良心，不去看他。可是她不知道，我小时候他摸过我，我看见他就恶心。\n初中的时候，我偶尔去他家睡觉。有时候三姨不在家，他就会趁我睡着了的时候，来我的床边坐下，摸我的脸，摸我的胸，摸我的脚。有时候还把手伸进衣服里…我害怕，只能装睡。\n两个表姐也分享了来自熟人的性骚扰故事。\n冬天时，姐俩晚上都缩在暖和的炕头看电视。每次都是这么巧，大人出门打扑克时，一个远亲叔叔就会来找她们“取暖”。\n他进门就脱鞋上炕，两只手在被子里乱摸，去摸两个表姐的腿和脚。\n大表姐不敢说话，二表姐每次都骂他。后来告诉了舅妈，舅妈从此禁止他进门。\n自从爸妈离婚后，我很少和亲爸那边的亲戚走动。\n二姑和二姑父是例外，他们一直对我特别好，所以有时我还会去他们家吃饭。\n我妈经常夸二姑父人品好，说二姑没有生育能力，二姑父还不离不弃。\n但有一天，我亲爸突然让我离他远点。\n我问为什么，亲爸沉吟一会儿，说：“你二姑父把你小姑的女儿强奸了。”\n我无法确定这件事的来龙去脉。\n我爸嘴里的故事是这样：\n你二姑指责你小姑的女儿勾引自己老公。\n你小姑起诉你二姑父强奸未成年。\n你二姑父被抓起来后，我被迫出面调停。最后他赔了一笔钱，你小姑撤诉。\n我问：表妹还好吗？\n我爸笃定的说：她确实有问题，天天不三不四的，浓妆艳抹的，不学点好。\n这就是为什么你们的女性至亲都选择深藏自己的创伤。\n因为一旦展示伤疤，很可能要经历来自你们的二次羞辱。\n被尾随的故事，男性友人听完：你们当时穿的是不是很性感？\n暴露狂的故事，他问：你在暗示你长得美吗？\n前几天鉴别男杀猪盘，女性一片叫好。鉴别女性杀猪盘，男群友：你是不是嫉妒她的美貌？\n我搞的时政群，群里有一个男群友性骚扰一名女群友。\n某次男群友因对我的管理不满而退群，女群友站出来揭发他。但是她手下留情，没有公开发证据，只说想看的可以私她。\n群里的男性十分默契，迅速形成了同盟，群起而攻之，进行了声势浩大的荡妇羞辱，并“合理推测”她是我安插的暗桩：“两个女人要造反！”\n我去问安慰女群友，女群友说也有个别男性真的私信要证据，看完之后，继续在群里攻击她。\n另一个女群友说，我曾经经历过她的事情，不同的是，我当场公开甩出了证据，但也照样被狙成筛子。\n永远不要低估男性在捍卫自己利益时的团结程度。\n果不其然，时政群的灵魂，众群友的男性导师，来私信我踢她了。\n男性导师第一次暗示拉黑，我装傻。\n第二次明示“移群”，我回个👌。\n第三次继续push，意思是我如果不从，我就危险了，不是合格的管理者，我继续👌。\n她在群、她手握证据、她绝不退缩，尚且被质疑+羞辱至此，若真的把她移除，男性导师会带领男性们搞什么大动作？我不敢想。\n所以我坚决不从，自焚保她\n\n这是一个墙内颇有知名度的、有着君子形象，以疼爱妻女而出名的精神导师。\n就很妙。\n而群内这些谈吐不凡的男群友们，私下里言语骚扰也很在行。\n比如哺乳期说想尝我的母乳。\n比如问我精力旺盛是不是性欲也一定很强。\n比如一言不合就私信告知自己的性经历。\n比如看到我在喝酒就问我喝完是不是很想要\n我昨天临时起意写这个串推，没想到一口气写了这么多，也没想到会收获这么多共鸣，姐妹们真的太不容易了，抱抱大家！\n评论区也有很多男性表达了善意与支持（肯定远不如女性多，但比起微博算多了），好的知道了希望你们继续努力洼地男德火车头靠你们带了（性转版mansplain，亲自指引男权前进方向）\n我昨天想，嗯，我的经历应该都写完了。\n今天一觉醒来又想起好几个🙃\n高中流行穿肉色丝袜。\n我只穿了两天，为什么呢？\n因为前桌男生会在做题受挫时，弯腰“爱抚”我的腿，从膝盖到脚踝。我一缩脚，他就回头邪魅一笑，从眼镜上方盯着我：“好滑，好舒服。”\n一身鸡皮疙瘩。\n我后来不穿了他还抗议来着🙃\n这个摸丝袜的同学后来也蛮惨的，他上高中时很努力，但成绩一般。\n高考居然超常发挥，上了211线。\n他爸爸喜出望外，大摆宴席，结果喝到脑溢血，成了植物人。\n很多同学出于同情去看他，我心里却总过不去这个坎儿，不想见他。\n聚会时看到他也不想说话。\n下次要是见到他，一定要勇敢一点，去斥责他！\n另一个男同学，是我很多年的好朋友。\n到了30+，各自有了家庭孩子，又相隔千里，很少见面，偶尔在网络上问候一下。\n我知道他的职业应酬多，大烟大酒到处飞。\n但时隔五年后见面，他当着另一个男同学的面伸手就捏我的屁股，我是没想到的。\n还笑嘻嘻的看着我说：“我就喜欢大屁股。”\n我抬手就是一巴掌\n我后来想过为什么我对他敢直接扇回去，对别人从来不敢。\n还是和他足够熟，足够有底气。\n我知道这个巴掌扇过去，不会产生我承受不起的代价。不用害怕体力的悬殊，也不必担心被泼污水。\n然后我心中腾起一股深深的悲哀。\n那个曾经清爽的白衣少年，在父权社会里，在声色犬马中，堕落成了什么样子啊！\n还有一个事情，至今无法释怀。\n大学有个男朋友，谈了两年。\n我们感情很稳定，见了双方父母很多次，经常在对方家里一住好几天。\n至今记得在他家做饭、纳凉，看世界杯。\n记得他说小时候挤公交车上下学，怕丢了车票，舔一下贴脑门上。\n记得和同学们一起唱k，他突然西装革履的出现，捧着一束玫瑰。\n大学临毕业时，有一次我俩晚上在校园溜达。\n我说要去wc，他陪我去了最近的教学楼。\n那个楼实验室多，自习室少，所以晚上人不多。\n我小便完，回头擦屁股时，看见右边隔板下伸过来的手机摄像头。\n我吓的整个人一软，差点瘫在那。隔壁听到声音不对，迅速收回了手机。\n我还记得那个深红色的长长的机身\n我不记得在厕所呆了多长时间，是几秒还是几分钟，只记得大脑空白了一会，然后突然想起：我有男朋友等在外面！\n我赶紧出了厕所，他就在门口，我扑过去，颤抖着、小声的：我被偷拍了！隔壁有手机伸了过来！他还在里面！快去喊同学！去叫老师！\n当他听懂之后，他没有质疑我。他说，太危险了，我们跑吧！\n我当时整个人是木的，听完他的话更是脑子里嗡嗡的，只感到他在拽我，但我不理解为什么要跑，或者说，我十分不愿意跑，所以脚步挪动的十分缓慢。\n他一边使劲拽我，一边小声训我：快点，别磨蹭，这种人肯定有刀什么的，小心他追上来！\n我回头看着空荡荡的走廊，静止的女厕所蓝布帘，被他拖出了教学楼。\n他一路把我拽到了最近的操场边上才停下，问我没事吧，我没回答，死死的盯着他。\n他看我不说话，开始打电话呼朋唤友。\n十几分钟后过来几个男同学，他派他们去楼里“抓人”，说自己要陪着我。\n男同学们当然是一无所获啦。\n这段感情以我的出轨告吹。\n我出轨是错的，但我一点也不后悔，至今没有负疚感。\n当时我们已经租好了房子，作为我俩的甜蜜爱巢。\n这事之后我说房租太贵，请了两个同学合租。我和女生一间，他和男生一间。\n这应该是信心滑坡的一个预兆。\n我不能说他做的不对，我也没法说服自己他做的对。\n然后我开始自我怀疑，是不是我要求太高，是不是我看错了，是不是没发生过。\n一道深深的裂缝\n我们都是父权社会下长大的天然父权主义者。尤其是未曾体验压迫与剥削、生就既得利益者的男性。\n所以我很习惯爹味。我倾向大部分男性不是故意忽视，而是天生麻木\n所以当这个男推友质疑我被摸是因为学习差、学校差，因为我和男生边界不清，甚至亲自盖章他是我男友时，我没有转推\n我倾向于他是无意的。\n事情发展到这里，就很典了。\n在指责我之后，进一步质疑我说谎。\n我一向钦佩男性牢不可破统一利益联盟。\n你看，他们彼此认识吗？NO。\n但这流淌在血脉里的brotherhood，会让男性们条件反射般主动泼脏水。\n至于这么做是否会助长侵害行为，是否会造成二次伤害，他们不在乎。\n“踩住喉咙，禁止发声。”\n\n教育昨天女儿在床上翻来覆去睡不着，我老公说那你出来玩吧！然后把她领出来要用ipad学英语。\n\n我不认可他的决定，于是一下子变得很烦躁，没有控制好情绪，冲她冷冰冰硬邦邦的甩出了一句：“那你周末不要想去xx家玩了。”\n女儿哇的一声大哭了起来，回屋睡觉了。\n我在客厅生了半天气，然后决定面对这个问题。\n我先主动和老公聊了一下，列出我不认可的理由和期望：睡前故事选择的是太容易让娃爆笑的lanky box；尽早入睡的理由是什么有没有和娃沟通；即使沟通失败、即使一定要起来玩，是否应该选择更加容易入睡的消磨时间方式？毕竟睡前玩电子设备会令大脑更加兴奋，更加不利于入睡然后咯吱他半天，发泄我的不满\n然后进娃的卧室搂着她，一边亲额头一边道歉，说妈妈错了，妈妈不应该生气，你睡不着也是我们的原因，因为电没有给你放完。妈妈不应该说令你伤心的话女儿叼着牙套笑嘻嘻的享受着我的道歉，然后把牙套拿出来问我：“你是怎么把爸爸逗笑的？”我说咯吱他啊，就是这样咯吱。然后开始咯吱女儿她哈哈大笑\n今天早上醒来之后，女儿第一句话就是：“妈妈，我怎么记得你昨晚冲我发火了？”我说是啊，对不起，妈妈没有控制好自己的情绪，妈妈不应该说威胁你的话…然后亲亲抱抱。\n今天一天，她在自己玩、看电视、吃饭途中都会停下来问我：“妈妈，你昨天为什么要冲我生气？”\n我继续耐心道歉，像第一次道歉一样。\n《游戏力》里说：“孩子不断需要关爱和照顾，就好像有一个杯子，不断需要蓄水。”\n孩子的照料者aka我们，就是加水的人；而水就是我们的爱与关注、耐心的陪伴、及时的回应和给予安全感。\n孩子最早的那杯水，就是来自于我们。\n那些内心安稳、可以解决自己情绪问题的孩子，都是水杯被蓄满的孩子。\n每个水杯都会漏水。虽然根据孩子天生的气质特征，漏水的程度各不相同，但孩子们都会遇到矛盾与挫折，这时水杯里的水就会被颠簸出来。\n但是如果是蓄满的水杯，会泼洒却不至于见底。\n而家长及时的反馈，则会重新注入被泼洒出去的水。\n我女儿今天一天都在主动跟我要水，想重新注满自己的水杯。\n若是不能及时为孩子续杯，有的孩子为了防止水全洒光，就会选择盖上盖子。这时他们就会表现的冷冰冰，用拒绝一切来防止自己的水被掏空\n甚至有一些孩子在续杯无望时，会去偷窃别的孩子的水。因为他们通过霸凌和偷盗等行为破坏掉别人水杯的同时，还能博得父母的关注。是的，被打被骂也是他们渴求的关注。\n所以每一个熊孩子都是家长的锅（先天性反社会人格罕见，拒绝举例）。\n我们家长难么？难。我们曾经都是未被蓄满水杯的孩子。可是毕竟我们长大了。\n我们不再是无力的少年，命运之舵掌握在我们自己手里。还有孩子的舵。\n不追求完美，只追求进步，一点一滴也是进步，对不对？\n父母也不要忘了给自己续杯。作为娃娃的蓄水池，如果我们自己干涸了，又如何给娃娃添水呢\n“育儿先育己”“鸡娃不如自鸡”。娃娃唤醒了我们最伟大的爱， 我们用它来理解曾经那个小小的自己，于是我们有了重新成长的机会\n这是一场与孩子共同成长的探索之旅\n我们实力演绎自尊与自爱，就是给孩子最好的礼物\n中国社会是所谓的关系社会，可惜全是反人类的关系。至于最重要的亲密关系，我们反而弃若敝屣。\n孩子经历的第一段亲密关系就是亲子关系。想培养勇于挑战、乐于合作的孩子，就要蓄满爱之杯，就要在这段关系中建立深入的情感联结。\n组成这个情感联结的，是我们与孩子经年累月的相处中成千上万的微小互动\n2图\n有一次我老公问我脚怎么回事。我说哦，小时候在家里踩了一颗钉子，镶脚里了。我第一反应是会被我妈骂死，所以自己偷偷拔了出来，血洞哗哗流血也不敢吭声。后来这里就经常出问题\n他很吃惊，说你怕你妈怕成这样吗？我说是啊，我小时候不小心踩我妈一脚都要被骂半小时的\n他不理解，因为他没有过这种经历\n\n👆这就是父母在点滴中赐予孩子的恐慌感与不信任感\n这些创伤记忆让我们不敢直面问题，这些言传身教让我们学会无情甩锅。也为我们长大后变成得过且过、虚伪冷血、逃避责任的成年人打下了坚实基础。做人都战战兢兢，遑论去抗争，去挑战？\n跑题了。总之，是家长亲手杀死了那个单纯好奇、真诚勇敢的孩子。\n\n和姐妹们聊性侵，triggered\n先看中文语境里备受褒扬的“听话懂事”的孩子会怎样👇\n美国心理学博士徐桂凤：研究显示，“容易受到性侵犯的儿童大多数具有服从性好、自信心水平低等特点”，因为服从性好，他们会顺从“长辈”的要求，无论自己内心是否抗拒和不舒服；因为自信心水平低，他们不敢说出自己的感受\n\n根据儿童性侵维基https://en.wikipedia.org/wiki/Child_sexual_abuse，90%儿童性侵由熟人进行：大约 30% 是孩子的亲属，通常是兄弟/父亲/叔叔/堂兄弟；大约 60% 是其他熟人，例如家人的朋友/保姆或邻居。\n那么当熟人定律碰到👆条说的“听话懂事”加成，这些不敢说不又渴求关爱的孩子该如何自救呢？\n这就是家长的威权带来的效果\n性教育里非常重要的一个点就是【信任问题】，所以我想在聊性教育之前把这个掰扯清楚\n我放男女被性侵的两条串推，没有一人求助父母。既然这个串推一不小心转成了judge父母风，就继续好了\n如果日常生活中孩子都无法信任我们，又如何要求他们在遇到侵害的第一时间求助我们呢\n我们又能否做到信任他们？\n👆说到信任，我想问：如果孩子选择向你求助，面子&gt;孩子的中国家长，是会信任孩子并为孩子出头，还是会因为“熟人面子”而质疑孩子或选择当鸵鸟？\n还有，判断孩子是否遭遇性暴力的重要标准是查看ta的情绪表现。\n咱们中国孩子人均被家长逼成了影帝，情绪全是照着家长要求演的，这个标准怎么应用才好？\n\n最可怕的结果：父母为了面子/逃避现实/软弱，而质疑孩子甚至责怪孩子，给求助的孩子造成更深的二次伤害。家长应是孩子的坚实后盾，是孩子最信任的人，而不是卑鄙懦弱的叛徒\n欧盟防性侵underwear rulehttps://www.coe.int/t/dg3/children/underwearrule/default_en.asp\n1.你的身体是自己的(请反思逼孩子同意别人亲/抱的恶臭文化)2.可以/不可以的接触(即使是医生/看护人，孩子不舒服时也有权利说不)3.好秘密/坏秘密(信任的重要性)4.预防和保护是成年人的责任 (别甩锅)\n问题来了，爱体罚的中国家长该怎么教这些呢？\n\n体罚这件事我不想说，因为认可的人不用说，不认可的人说了也没用\n首先这词就很恶心，明明就是打人，是赤裸裸的身体和心理的双重虐待，是严重的侵犯人权。怎么就变成“罚”了？\n然后从生活经验上说，要在中国找一个从来不打孩子的家长，太难了。既然中推天花板，那么来，不打孩子的家长来评论区举下手。\n从生活经验上说，育儿群里讲究循证的家长算进步了，可他们面对打孩子的证据就是管不住手。\n从循证上说，被自己最信任的人虐待造成的创伤，是超越孩子的心理/生理承受能力+损害他们自我意识的。那么大脑为了自我保护，会进行意义错位——为自己挨打的经历寻找合理性。\n那么这种合理性就会延续到下一代。\n很少有家长能意识到自己只是在麻木又机械的重复着自己的童年创伤，把他们传递给一代又一代。\n如果能意识到，就先使劲表扬自己吧：你比绝大多数中国家长优秀了太多。\n然后努力的做好一点点，再好一点点。从把孩子当成一个有尊严的人开始，从不在孩子面前给自己造神开始，从敢于向孩子低头认错开始。\n\n想了很久不知怎么说。只贴发达国家的研究很无力。为什么无力，因为土壤不一样，我们没有那份peace。👇图是各国广泛使用的心理学本硕教科书《伯克毕生发展心理学》的第八章，说的很明白。\n作为父母，想为孩子撑起一片天，首先要担起自己对社会的责任。没人能做到独善其身，社会是千百个你我汇聚成的。\n\n👆不是为打孩子找理由，而是想提醒家长，我们只有担起让社会正常化的责任，才有机会做一个正常的父母。毕竟人是社交性生物，我们造就了环境，也被环境所左右\n当我们面对强权唯命是从时，当我们被侵犯了私权一声不吭时，当我们满腹委屈却自我阉割时，无论是当下还是未来，弱小的孩子都是最大的牺牲品\n\n之前说了虐待行为的源头是儿时创伤，这几条说的是压力aka我们造就的社会带来的影响\n心理学术语displacement：“在这种无意识的心理防御机制机制下，头脑用一个新的目标来代替原本会给自己带来危险/不可接受的目标。”\n经典例子踢猫效应：家庭中地位较高的人通过虐待较低级别的人来取代他们的挫败感。\n\n另一个术语Displaced aggression/转向攻击：\n动物/人类对外部刺激/挑衅感到恐惧/激动，但不能/不愿意将攻击导向刺激源时，会将侵略指向最近的人。在猴子中，愤怒会转向对手的亲戚或朋友。\n人类因为不能/认为攻击刺激源不明智时，会将攻击转移到第三方（通常是较弱小的人），有时体现为家庭暴力的形式\n儿时创伤和👆说的外部压力，是家长虐待孩子的原始心理驱动，所以要好好讲。只有知道自己为什么会这么做，才有可能不这么做。\n但更重要的是，这些心理驱动为什么能代代相传？因为政府对家庭暴力和社会压迫的故意纵容\n\nhttps://twitter.com/liying_2015/status/1269100880894193665?s=46&amp;t=btoCMAWcd-7Is5s5oh5qyw父母对子女是有恩还是有仇，要看父母具体对子女做了什么，假如由于父母的身份就认为天然正确，并且天然有恩，这类人99.85%也会认为统治者天然正确，对屁民天然有恩，所以子女对父母没有任何权利，只有感恩的义务，屁民对统治者没有任何权利，只有感恩的义务，这就是祖国传统文化博大精深的奴性思维家庭是社会的最小单位，无论哪个国家哪个社会，都在很大程度上是家国同构的，家庭内的关系，家庭内的价值理念，不可能与国家程度的关系，国家程度的价值理念发生根本性的冲突。所以观察家庭，就可以理解社会和国家，观察统治者鼓励什么样的家庭关系，就可以理解它在维护什么样的统治结构祖国传统文化坏在哪里，就坏在主流的儒家观念把君权父权夫权抬得太高，臣、子、妻只有无限的义务，没有任何权利，这就是一种奴隶主义的道德观。整个社会只存在两种人，就是暴虐的奴隶主，和下贱的奴隶，除此以外任何健全、高贵、自由的人格都无法发展任何单方面的好或坏，都是不道德的，既然一个人不应该做另一个人的奴隶，那么好或坏就应该对等，对我好就回报它好，对我坏就回报它坏。父母爱我，就用爱回报，否则就去你妈的。国家保护我，就用忠诚和奉献回报，否则也去你妈的。以奴隶对待我，却自称父母和国家，要求我以爱回报，就应该勇敢地反叛他们所谓好人，就是你要温良恭俭让，要对自己高标准严要求，以便我来欺负你，剥削你，奴役你，控制你，你假如不肯，你就是道德败坏，丧尽天良。这个逻辑无论匪vs屁民，家长vs小孩，都是一样的，都来自祖国传统文化博大精深而且这种人永远默认地把自己带入父母、统治者的地位，所以尽管他们在现实生活中很多时候处于奴隶的地位，但他们的心态、价值观念，实际上都是潜在的、还未得势的暴君您国人表面上看好像是奴隶，其实骨子里都是些潜在的、还没得势的暴君，数学老师的言论就代表这种微型暴君的典型心态。您国人尽管处在奴隶的地位，但其实是认同、支持暴君的价值观念的，这才是暴君制度能够维持的根本原因。爱自由的人不可能长久地做奴隶，只有认同奴隶制度的人才会世世代代做奴隶 \n\n被驯化的奴隶一边委屈的哭着，一边听话的驯化着新的奴隶。\n\n从小被虐大的人自带奴隶思维：\n暴力是社会的合理组成部分。我崇尚它，因为它可以迅速解决问题，因为上位者是为了我好。\n顺从与冷漠可以保护我。如果我实在憋不住，就去找更弱势的人发泄吧！我也可以使用暴力\n我很卑微。我无法共情。我难以维持关系。我不敢相信别人。我不知道我要什么。我很原子化。\n\n我们被有毒的父母抚养成人，进入有毒的社会，继续浸淫着有毒的文化。\n然后我们生出来一张白纸，用自己满腹的有毒墨水在上面写满了有毒的文字。等到完成对这张纸的有毒社会化，我们再把他们放进社会。\n我们一代又一代，顺从又麻木的重复着这个循环。\n如果我们不主动防毒，想不出孩子能有什么未来。\n\n早上想到自虐型人格障碍，把科普贴在这里吧，希望能帮到想自救的人和警醒到有养育责任的家长\n“选择受虐、回避最大利益、自我牺牲、奴役他人、认为自己高贵圣洁。”https://en.m.wikipedia.org/wiki/Self-defeating_personality_disorder虽被DSM-IV-TR主体排除，但依然支持诊断。\n我甚至更确定我们是200年前的野蛮人了。我们的通病居然会被排除。\n\n陪我女儿看Clifford the big red dog，小女主说与众不同并不危险，格格不入不是被霸凌的理由，独一无二才能改变世界。也许女儿现在听不懂，但这些耳濡目染的故事会慢慢影响到她吧。然后感叹中国人是多么害怕与众不同，多么不敢发出不一样的声音，多么想隐身于人山人海中，让谁都无法发现自己。我们的人格在幼童期萌芽，若被小心呵护，青春期本应是自我膨胀的巅峰。却一路都在被家长和社会用最极端的手段压制，甚至扼杀。于是我们在应该最张扬的年纪最慌张，最自我的年纪找不到自己，只想把自己藏起来。神可以填满缺位的自我，更是绝佳的藏身之处。没有人格，就模仿神好了；不知该说什么，就复述神的话；不敢独立行走，就和神的粉丝们统一动作。于是产生了廉价的幻觉：我好安全，我好有力量。还好我们从不缺神。从娱乐圈的偶像，到被拟人化拟萌化的“你兔”，再到擅于听床的国师。一声令下，千军万马\n\n👆划重点：自虐型人格障碍【根植于童年创伤】。\n想起以前看criminal mind，hotchner说很多妓女儿时曾被父亲强奸。她们选择重复儿时的性虐待，因为这会合理化她的心理创伤。\n👇研究https://icasa.org/docs/prostitution_-_draft-6.doc\n大多数妓女是性暴力的受害者，乱伦和儿童性虐待是她们成为妓女的驱动因素。\n家长，家长。\n\n家长的心理虐待是卓有成效的。我妈一辈子憎恶小动物，其实是姥爷赐予的心理创伤让她不敢爱吧，毕竟经历过残忍的失去\n我小时候偷偷买的松鼠和兔子都被她连夜送走了。工作后马上养狗，每年回老家都寄养。后来有了老公做盾牌才敢带回家，依然被我妈骂的狗血淋头\n狗子养老送终后养了猫，到现在都瞒着她\n\n《阿甘正传》“我觉得人的心智成熟应该是一个逐渐剔除的过程。知道自己最重要的是什么，知道不重要的东西是什么。而后，做一个简单的人。”\n梭罗在《瓦尔登湖》里说过这样一段话：“你需要深深地扎入生活，吮尽生活的骨髓，过得扎实，简单。把一切不属于生活的内容剔除得干净利落，把生活逼到绝处，最基本的形式，简单，简单，再简单。”\n在《极简主义》一书中，有这么一句话：“极简主义不是要你一无所有，而是要你穿越物质的海洋，找到真正重要的东西。”\n人有自我保护机制，在绝望的时候总是会自动给自己打气加油：“坚持住，未来一定会好起来的。”希望是活着的唯一动力，哪怕是虚假的。\n大多数人坚持他们一开始的任何事情——不管是什么原因决定了他们的选择。\n学编程发现父权思想真是根深蒂固，在学二叉树的时候 都是叫父节点 子节点 甚至还有的叫兄弟节点 完全看不到女性的身影 好像是男的生孩子一样 而外国明明叫 parent node 国内却只保留了父节点 学 mysql 的时候也一样 有父表 子表 就是没有母表 明明女性才是孕育后代的一方 在计算机领域完全被抹杀了 希望姐妹们多多学习计算机 在高新产业多占据一些地位 不要被男人完全占领地位\n我喜欢找到提高生活效率的方法，即使找到一种更快的方式去做某件事需要比简单地做它更多的时间。 - 永远流利\nEmail 可能是最后一个我们还和世界在连接的一个东西。owenyoung\n最好冒着被认为是傻瓜的风险保持沉默，而不是说话并消除别人对此的怀疑。 —— 莫里斯·斯威策， 《鹅夫人》，她的书\n也许小说是一种同理心健身房，可以提高你同情他人的能力。 - 被偷走的注意力\nCPU是一个博士生，GPU是一屋子小学生CPU像媽媽，家裡大小事全包，但重活不做。那GPU就像爸爸, 平常躺在沙發上看電視，就只做重活。但是媽媽能否取代爸爸，可以但不好。但是爸爸能否取代媽媽，那就基本完全不行。https://youtu.be/VLdtWvRLQbc\n其实所有纠结做选择的人心里早就有了答案，咨询只是想得到内心所倾向的选择。最终的所谓命运，还是自己一步步走出来的。——东野圭吾《解忧杂货店》\n“你说四大皆空，却紧闭双眼。要是你睁眼看看我，我不相信你两眼空空？”“来生若有缘分……”“我只想今生，不想来世”\n世间安得双全法，不负如来不负卿。\n曾虑多情损梵行，入山又恐别倾城。\n知乎关于一见钟情的回答“说他师徒四人立在殿下，那三人模糊，她眼里唯见他。大红的袈裟金光闪闪，掩不住他灼灼之华。很长的一时间里，都没有找到比这更美的一见钟情。”\n誓言是世界上最靠不住的东西，只有你对别人还有用的时候，别人才会遵守誓言。——江南\n徐良，汪苏泷，许嵩，本兮，海明威，by2，孙子涵时过境迁，岁月荏苒全世界不再说爱枫林残，秋殇别逢场戏，笑素颜海的对面，山水之间心曾触动爱，后会却无期几个名字，几十首歌却是一段零零后们共同交织的青春年华\n鲁迅的那段话“愿中国青年都摆脱冷气，只是向上走。 不要听自暴自弃者的话。 能做事的做事，能发声的发声。 有一份光，发一份热。 就令萤火一般，也可以再黑暗里发一点光。”\n幸运的人一生被童年治愈不幸的人要用一生治愈童年\n人可以堕落，但你要知道什么时候需要爬出来，人可以执迷不悟，但你要知道什么时候需要坚持不懈。https://www.1point3acres.com/bbs/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=70885&amp;pid=984290\n“路人来去匆忙，把温柔丢在一旁”\n当老实成为贬义，当好人变成异类，当背叛成为理所当然的时候，人类的气运似乎也走到了尽头。\n是非成败转头空，青山依旧在，几度夕阳红。\n有个人愿意即使不说话也跟你挂着语音，听着彼此的呼吸声，翻书声，打字声。说不喜欢我，我也不信。但是这就是我喜欢的内敛的浪漫。好像没有什么情欲，但点滴的暧昧正是恰好。我现在不喜欢可以表达出来的感情了，喜欢这些幻觉。https://twitter.com/onlyswan/status/1591463148691017729\n人面不知何处去，桃花依旧笑春风\n终生工作，目的是与有工作能力的人类保持联系。技能永远要高于收入，这样才能做到上班最多七分力。为此必须每周要付出10小时学习时间。\n人的一生，其实就是时间和注意力分配的过程，你所专注的一切，反过来定义了你是谁，因此要格外珍惜你的注意力，认真选择你的情绪和思想所聚焦的对象。如果你只是不停被喧嚣带走注意力，或总是纠结于错误的事与人，迟早你会被外界塑造或污染，成为你不想成为的人，白白浪费掉你仅有一次的生命。\n我最害怕的是，我以为自己是那只特别的，清醒的又无可奈何的猪，到头来其实也只是埋头吃食的一员。 ——乔治·奥威尔《动物农庄》\n我们的迷茫与惆怅应是一粒种子，在沉思尝试中孕育更博大的事业和胸怀，怀揣万物于胸中，奔赴下一程山水。——梭罗《瓦尔登湖》\n如果你潜意识里认为学习是为别人（比如父母）学的，工作是为别人做的，那么你就很难发自内心地热爱学习和工作了。为自己而活，是最根本的人生动力。\n看各自身后长路，雪依然飘扬如瀑。\n只一眼，翩若惊鸿\n爱或情借来填一晚，终须都归还，无谓多贪。\n好书，第一遍大抵是难懂的，很多人就说多读几遍，但也未必是多读就能懂的，有些需要经历需要阅历，才能品味到个中韵味，而这我个人认为当与阅历有关，而非年龄，只不过多数人是年龄到了才有相应的阅历罢\n主要还是看自己吧，书嘛，无所谓好坏，无所谓阶段，喜欢了，便去读，即便是多识了几个字也是好的，我们沉浸在各种应试考试中已经身心俱疲了，偶尔读本书排解身心，就该随心而动，少些功利性\n我们小学是大通铺，不知道你了解不？就不知道谁是开创者，在洗手间，直接对着水龙头冲脚，然后也不擦，穿着拖鞋直接回宿舍，上了上铺，到别人床铺挨个踩一圈［不到十个人的并铺］然后脚干了回自己床铺，后来被发现了，就演变成了大家互相伤害了大扫除，大家都翻着裤脚，光脚到处跑感觉特别好玩，满地是水，前段时间看天才基本法的小学生，是真怀念啊~又想起来一些人和事，小学的时候，有一个男生学习贼厉害，不过是学霸级别的，不是一个班，全校他第一，我第二，挺惺惺相惜的，都是当时怀仁九小的小博士，当时我还和英语老师合影了，可惜没照片共享，后来都保送了初中屿宏但我落魄了，也就不联系了，想想那个时候学习已经非常功利化了，还都是小孩子啊~小学我班里还有个大姐头，家里有矿，就花钱顾别人跑腿，挤超市服务部捎东西，也真是蛮好玩的，对了，我当时一个人写半个班的作业，还赚到了人生第一桶金呢~还是类比天才基本法的人物，初中的时候我班当时有个带黑方框眼睛的男生，一脸天才样，很有裴之的感觉，学习特厉害，我一次也没考过他，当时的学神，我很崇拜他呢\n凡王之血，必以剑终，汝必以痛，偿还僭越，汝必以眼，偿还狂妄，汝必以血，偿还背叛，我重临世界之日，诸逆臣皆当死去。\n我渴望能见你一面，但请你记得，我不会开口要求要见你。这不是因为骄傲，你知道我在你面前毫无骄傲可言，而是因为，唯有你也想见我的时候，我们见面才有意义。———西蒙·波娃《越洋情书》\n葛优大爷：勇敢的去做你认为正确的事，不要被世俗的流言蜚语所困扰，记住，要像荷花一样，出淤泥而不染我大抵是病了，横竖睡不着。坐起来静静地看着窗外，这悲伤没由得来。黯然看着床头的两个枕头，一个是我的，另一个也是我的……人在饥饿的时候只有一个烦恼，可是吃饱了之后便有了无数烦恼说实话我不善于赞扬别人，所以我只能用白描的办法描绘呈现在我面前的美好事物。技艺再精湛的画家，对大自然本身所缔造的美的表现也只是皮毛。站在你这样的女孩面前，我常常感到有无限的失望和气馁，幸好能给我这种感觉的女孩，在女性中只是凤毛麟角，我面前的你就是那其中的一位，我也很幸运能够在合适的时间，合适的地点，遇见这个值得我一生去陪伴，去呵护的您。裸体一旦成为艺术 便是最圣洁的；道德沦为虚伪，便是最下流的歪理一旦成为教条 便是最野蛮的；思想沦为麻木，便是最可悲的是色情就不要传播，是艺术就不要打码人生就是那么回事就是踢足球也许一大帮人在那跑来跑去也许你整场都没踢进去一个但是你还得玩命踢\n生活是种律动，须有光有影，有左有右，有晴有雨，滋味就含在这变而不猛的曲折里。\n如果好人没好报，为什么我们还要做好人？我们坚持一件事情，并不是因为这样做了会有效果，而是坚信，这样做是对的。—— 哈维尔\n智慧好像永远是过期的，总是到你真正知道该怎么选的时候，已经没有了选择的机会。然后，又得到了一道不知道怎么选的题。\n《杀死一只知更鸟》有一段话说“你永远不可能真正的去了解一个人，除非你穿过她的鞋子去走她走过的路，站在她的角度思考问题，可当你走过她走的路时，你连路过都觉得难过”\n他说我在人们的印象中是个沉默寡言、性格内向的人，想知道我有什么看法。我回答：“那是因为我从来都觉得没什么好说的，所以宁可把嘴闭上。”——加缪《局外人》\n还没准备好，生活就换了个模样；在路口迷茫，哪一边是家的方向；生日的愿望，这一次是否有人听见；把话藏心中，让思念飘散在星空；也会偶尔沮丧，也会偶尔难过，谁又能知道笑容后的脆弱——仙王的日常生活3片尾曲《时空尽头等你》\n愿你的选择映照你的希望，而不是你的恐惧。——纳尔逊·曼德拉\n赚钱的速度越快，时间过得越慢；赚钱的速度越慢，时间过得越快。​​​人们在乎的其实并不是金钱，而是他们的生命。\n见的人越多，经历的事越多，就越会认同一个观点：人过什么样的生活，都是自已选的。国家和民族亦同。不必启蒙，不必心忧天下，不必管他人闲事。自己做好选择，趋利避害即可。\n能给予他人最大的福利，就是让一个人很早就开始为自己的选择承担责任。所有的愚蠢，基本是因为不必为自己的选择负责。\n一个人能不能教你一些东西，并不取决于他知识和水平比你高多少，而取决于你有多想向他学。\n有意义的生活，从来都不是用玻璃罩将自己罩起来，而是接近现实，走进关系，成为亲人的肩膀，朋友的一束光，以及社会的中流砥柱。——M·斯科特·派克《少有人走的路》\nhttps://github.com/qianguyihao/blog-list《观念的力量》一书的前言有一段话，我将其进行改编：这些博主才华横溢，满怀自由精神， 他们的观念具有一种无法遏制的力量。我无比羡慕那些正准备阅读这些文章的人，他们面对的是一场精神的盛宴。\n人活着要尽量的分裂，最好能千人千面，网络和现实、身边和远方、工作和生活，在不同环境下展露自己不同的面目，比如工作上的同事不要动不动就去倾诉日常的烦恼或分享生活的喜悦，人与人的悲欢并不相通，而生活中有共同爱好的朋友，比如驴友钓友炮友，他们也不关心你做什么工作的，只关心你的活儿好不好https://twitter.com/53zhao/status/1595584076224016384\n爱情是一种偏见。你爱你需要的，你爱使你感觉好的，你爱使你感觉方便的。当你知道只要有机会认识，世界上还有一万个人可以让你更爱，怎么能说你只爱一个人？只不过你永远无法认识他们。——布考斯基《苦水音乐》\nやらなくてもいいことなら、やらない。 やらなければいけないことなら手短に。没必要的事不做，必要的事尽快解决。——折木奉太郎《冰菓》\n一个人的幸福程度，往往取决于他多大程度上可以脱离对外部世界的依附。其实他人非地狱，自己对他人有多在意，才是地狱。——《他人即地狱》知乎评\n残昼狼狈地逃窜在暮霭边挤开一角沉重云天他孤身垂眸 缄默不言过客皆问他背负哪一段过往沉默 仍是不语凉风牵起他的衣角无谓何方 人潮张皇总有人绝望从初生走向墓地唯一的那绚烂际遇回望乡里年年日落西.\n值得实现的一切生活目标都需要付诸实践。事实上，生活本身就是一个长期实践过程，是完善我们行动的持续努力。一旦掌握了适当的实践技术，新的学习任务就会变成一种充满快乐和安宁的无压力体验，一个安排你所有生活内容、促进正确看待所有生活难题的过程。——托马斯·斯特纳\n健康的怀疑态度往往是理解所介绍方法的最佳方式——质疑它；如果可能，你要证明它是错的。这将使你参与其中，而参与是理解的关键。\n互联网把彼此间的沟壑填平了。」关注一个人好像参与到对方生活，看发布的博文似乎也能感同身受那些喜怒哀乐。不过睫毛轻眨，就能掌握你日常起居。但不是的，世界瞬息万变，不间断的讯息在刺激感官，点赞更像萍水相逢时礼貌的微笑而已。我们并不能触达彼此，除非见面、拥抱，真实抚摸肌肤纹理。https://twitter.com/coooky2x10/status/1603074115262648320\n“人一定要改掉的四大毛病：改掉轻易的掏心掏肺，改掉毫无底线的心软，改掉一错再错的忍让，改掉没有原则的善良。”——稻盛和夫\n用一句话形容当今社会：“聋子听见哑巴说瞎子看见了爱，傻子信了。”\n我们可以有所作为，投入最多的人将获得最大的幸福。我们可以全力以赴。我们可以当仁不让。我们可以……关注我们面前的机会。——马克·范·多伦\n只要有足够的信息，几乎每件事情都可以做得更好。而在当今的世界，你可以获取的信息是无穷无尽的。\n我们永远无法为那些全新的事务真正做好充分的准备。我们不得不进行自我调整，而每次彻底的调整都会使自尊心陷入一场危机：我们要经历考验，我们要证明自己能行。这需要我们充满自信，克服内心的恐惧，直面剧烈的变革。——埃里克·霍弗\n当被世界恶意相待，不被人理解，无处逢迎的时候，离开，也许是种解脱——自言自语\nhttps://twitter.com/bitfish1/status/1604327361838608385世上本来没有🐏，感染的多了，就有了🐏我大抵是阳了，横竖都睡不着，坐起来吃了粒布洛芬，这悲伤没有由来，黯然地看着床头的抗原检测试剂盒，一条杠是我的，另一条杠也是我的隔壁阿嫂的咳嗽声一下下的传来，顿时感觉手里的水有些冷。抗原检测不是那么要紧了，要紧的是赶快把高烧加咳嗽的赶快送去看大夫，可是急切里，哪来的驴车。水还的接着喝。鲁迅要是活到今天大抵也会阳的，阳了也大抵是这个样子：发朋友圈或发推特，好像不发就是白阳一场的样子。我茫茫然从抽屉里翻捡出两盒药，一盒是过期的，另一盒也是过期的。哎~生起病来也是没来由的。默默地倒一杯开水喝了点，惊不小心烫到了自己的嘴。等水凉了一点儿，我看见刚刚一堆过期的药片……也罢！这种小病，熬一熬总是会过去的！\n我恢复了原来的样子 不悲不喜 不爱也不渣 时而迷茫时而清醒 脸上笑容少了“但始终温柔”\n其实，我怕突然有个人对我好，我会认真，会上瘾，可又怕你突然没了新鲜感，而我却对你有了依赖\n我是真心待你， 但不执着于你，换个说法：有你很好，没你也没关系。只要能在夜里翻来覆去的时候有寄托，等不到天黑，烟花不会太完美！\n一见面就问你谋生方式的人，本质是在计算对你的尊重程度。——罗素\n今天这个年代，所有的信息和知识，只要你想，基本上都可以免费得到。如果一个人蠢，那么他就是想蠢，没有别的解释。 ​​启蒙是没有任何意义的。\n知道一个人是坏人，但一定要等到伤害到自己才愿意确认这一点，是人性的一大弱点。\n人是一个整体，不可切分，也无法单项优化。一个优点后面也许连着彻骨的伤痛；一个缺点背后也一定有成长的隐情。你看到的是冰山一角，海面之下的东西，除非你爱他（她），你根本没耐心看。\n想成为强者最重要的一条：不要让自己随随便便就容易动感情，不要自欺欺人地进入一种刻奇的情感状态。\n宫崎骏说：“其实我很早就知道我们不合适，但我还是拒绝了所有人，陪你走过一段没有结果的路。虽然时间不长，但毕生难忘。想想真是心酸，留住你和放下你，我都做不到。\n叹长安尽头无故里，伤往事不悔遗憾事。我站在风中思绪凌乱又乱，释怀了又释怀……\n因为你在局外，开导不了自己，是因为深陷局中……“人不都是这样吗？可以扛着满满的负面情绪去开导别人，却唯独不能放过自己。”\n“隔离可能是压死骆驼的最后一根稻草。有时候你能承受生活中的很多苦难，却会因外卖洒了，杯子破了而感觉人生无望。”\n没有所谓玩笑，所有的玩笑都有认真的成分。\n你担心什么，什么就会控制你。\n人生是痛苦的，他人即地狱。\n人懂得太多会发现，想不撒谎很难。\n人生如钟摆，在痛苦与无聊之间摆动。\n如果我们能对低劣的人、事、物保持一种近乎冷血的冷漠，不被我们的廉价好奇心和浅薄的社交欲所影响，我们的生活质量本可以保持在一个相对高的水准上。说到底我们欠缺的是纪律，或者是“意志力”。\n有心者有所累，无心者无所谓\n其实每个人心里，都有一方小小的角落，藏着那个孩子一般的自己。平时不轻易表露的孩子心性，撒娇、任性、渴望宠爱，都在这里，只留给那个能够看到这一方角落，愿意去拥抱这个小孩子的人。\n《人间失格》里有这样一句话：你自人山人海中来，原来只为给我一场空欢喜。你来时携风带雨，我无处可避；你走时乱了四季，我久病难医。\n深情是我担不起的重担，情话只是偶尔兑现的谎言。——张小娴\n在我眼里，爱情就是生活中的细节堆砌起的城堡，说出来好像也稀松平常，但又会让你记得很久。\n程曦说：“有的爱意，并非波涛汹涌，而是沉浸在无数件你数不清的小事里，就像天空中的那些繁星，虽然是微光，但当它们浩瀚的出现在你眼前时，一样没有人不会被感动。”\n在漫长的岁月里，很多喜欢都会被消磨殆尽，这个时候，细节里的长情，才能不断地为感情做加法。\n马德说：“真正推动爱情的，不是浓烈的爱，而是琐碎的光阴。”感情里最高级的浪漫，就是一件件琐碎的小事。我认为的爱情是：无论世界怎么变，我就是想和你待在一起。爱情并不一定要轰轰烈烈，有时候细水长流的故事才更动人，一句话，一个拥抱，一个故事都可以成为你我感情的见证。\n你们棋逢对手又势均力敌，你们心有灵犀又百聊不厌。\n经历过就会明白：最舒服的关系，莫过于“聊得来”。\n所谓“聊得来”，是无论你聊起任何话题，对方都聊得下去，不是因为对方见多识广，而是对方极其感兴趣。了解的、对方会说你不知道的部分；不了解的，对方会问。你知道的部分、听过的，对方懂得分享感受；没听过的，对方的好奇也让你充满言说欲。\n真正舒适的关系，是经过开始的热情之后，都会趋于平淡，之后断断续续的聊天，但事事有回应，平时每个人都在积极过着自己的生活，彼此成长，这才是最理想的状态呀！无论爱情，还是友情，皆当如此。——自言\n人与人之间的关系，说到底，就是在某个特定的时空，你能提供对方需要的价值，这个关系就建立了。当你或者对方无法提供这个价值，或者得到这个价值需要付出的成本太高不划算了，这个关系就结束了。想通了这一点，就释然了。想要更永恒长久的价值，去信仰里找，世俗生活中是没有的。这些道理讲出来是很残酷的，但事情也可能完全相反，无关任何理由，就是一场人性的考验。人生中每一次利益悠关的决定，都是一出人性的大戏。\n时间宝贵的成年人，不以冷漠的态度对你，甚至还能倾听你，已经是偏爱的表现了。\n哪里有人会喜欢孤独，不过是不喜欢失望\n她那时候还太年轻，不知道所有命运赠予的礼物，早已在暗中标好了价格。——《断头王后》茨威格\n旧人不知我近况，新人不知我过往，近况不该旧人知，过往不与新人讲，纵你见人何其多，再无一人恰似我\n我发现, 当我去点开一个人的 blog 的时候, 很自然的就会想去了解这个人.\n涯中易见云如海,海上难逢枣似瓜\n流年似水，似水流年；烟霞花草，花草烟霞\n自从厌倦于追寻，我已学会一觅即中；自从一股逆风袭来，我已能抵御八面来风，驾舟而行\n郭麒麟：我对什么事都不抱有任何期待，我就是都已经想到最丧的结果，然后所以那还有什么可丧的呢\n已识乾坤大，犹怜草木青\n只有坚强有力的人才能有一种真正的温柔。那些表面上温柔的人通常只不过是软弱，这种软弱很容易变成尖酸刻薄。——拉罗什福科《道德箴言录》\n上善若水 唯有强者才能做到真正温和接融万物 不卑不亢 不傲不羁中庸之道 平淡为真\n“世界上只有一种真正的英雄主义，就是认清了生活的真相后，还依然执着地热爱它。”——罗曼·罗兰\n常相守是个考验，随时随地，一生。——《士兵突击》朝夕相处语录 #爱情 加标签分类\nStay simple &amp; Stay Naive\nSmell Smelly, Taste tasty.闻着臭，吃着香\n用半生的力气，反复学习着抛弃一个念头：「等我怎么怎么样了，就能去做什么和什么了。」\n@OdysseysEth 效仿 @xiaoyuz ，总结了34 条人生信念。关于选择1、战略上避轻就重，战术上避重就轻。先做正确的事，再正确的做事；2、对小决策，决策速度大于决策质量；对于重大而难逆转的大决策，要收集足够多信息尽量保证做对；3、不将决策结果等同于决策质量。不追求最好的 “某个可能的未来”，而是追求最好的某种可能性；4、决定者要做 “选择题”，而不是做 “是非题”。创造足够多的「可选择权」，寻找并把握「非对称回报」；5、把大部分金钱投入到不需要再作出决策的资产上，因为持续作出正确的决策很难；6、底线的作用是防止目标被摧毁。不考虑有可能穿越底线的方案；关于态度7、只向最好的人学习。不理会其他人的 “建议”/ 评价；8、不轻易做判断和决策。多对自己和他人说「我不知道」；9、在 “成为自己” 这条跑道上，没有人能与你竞争；10、如果无法比对手更好的反驳自己的立场，那么没有资格拥有某种观点；11、用贝叶斯定理修正自己对某个事物的信念值；关于认知12、凡事都反过来想：想要成功，先弄清什么让人失败；想要幸福，先看什么事会导致不幸福。「减少错误」要比「追求正确」有效得多；13、人无法用一套思维方式正确认知世界的。广泛地吸收知识，建立多元思维模型；14、扩大认知半径，减少行动半径。聚焦能力圈；15、以问题为起点，会结束于更多的、另外的问题。以目标为起点去思考决定才可能达到目标；关于生活16、吃得健康、持续锻炼、保证睡眠；17、保持对「已拥有事物」的欲望；18、正念。专注在当前正在做的事情，任何事情；19、当消费妨碍自由时，保持极简。当消费带来长期回报时，尽可能的投入；关于行动20、与其提高自己的意志力，不如给自己创造无需调用意志力的环境；21、2 分钟能做完的 3 秒内执行，否则加入计划列表；22、先做最难的事情，用迎难而上代替逃避；23、做有复利效应的事情；24、树立能够避免重复性决定的规则，比如吃饭、穿衣；关于交往25、对事不对人。以 XYZ 模式沟通：”当你在 Y 情境下做 X 的时候，我感到 Z”；26、恋爱 / 结婚并不意味着拆除、推倒所有的围墙，建起匆忙的共同生活。而应向对方交付自己最大的信赖，委托彼此成为自己孤独感的卫士；27、沟通比默契更重要。不揣度他人是怎么想的，只看他人是怎么做的；28、情绪的背后都隐含一定的目的。不压抑也不放纵它，这是很好的自省 / 了解彼此的机会；29、表达前先理解对方的认知能力，非其人不语；30、和长期伙伴玩长线游戏；关于输入 / 输出31、不看实时新闻。保持「高信噪比」。让优质的信息流过自己；32、不必在意错过。反复阅读最优秀的信息；33、帮助他人成长。置身 / 塑造不安全的环境激励自己；34、记录生活 / 思考，定期输出文字。\n我不会无缘无故黏着一个人，也不会无缘无故疏远一个人我可以对你很好，也可以无话不说原因很简单，是你的态度决定了我的温度你若淡了，那我也就算了，你若算了，那我也就忘了…\n暗知识通常被运气所掩藏，缺失必要的暗知识会被解释成运气不好，但是更根本的原因是掌握知识的不完备性。\n为什么有的人年纪轻轻思想深度却远高于常人？因为极致的、揪心的痛苦不分年龄。如果一个人没有被狠狠摧毁过三观，没有被蛮横推翻过世界观，更没有那种「原来我之前所有都是错的」的痛苦，那扯什么思想深度，都是装 x 的。\n只有去穿越和反思痛苦，才能得到远高于常人的思想深度，没有捷径。\n每个优秀的人，都有一段至暗时光。\n「黑色生命力」（ Black vitality ）\n一个人只有能够从书中感受到痛苦，这份痛苦就会变成加厚思想的原材料。\n好好睡觉好好运动才能做你想做的事，加油上午：如何保持白天清醒，晚上又能轻松入睡？想要保持清醒，关键是提升皮质醇。皮质醇升高，会增强你的免疫系统、新陈代谢、集中注意力的能力。1.看阳光：醒来后30-60分钟内看到明亮的阳光，也会刺激皮质醇升高。在多云的日子出门走走，因为你需要比晴天更多的光线2.体温的升高也会引起皮质醇升高。锻炼（任何运动都可以）也能增加体温。 如果你的目标是最大限度地增加体温，那么最好的锻炼时间是 ① 醒来后立即运动、② 醒来后的 3 小时、③ 醒来后 11 小时。 如果你在下午锻炼，建议运动后洗个热水澡来降低体温，这样能帮助你的身体为晚上的睡眠做好准备。3.咖啡因 在醒来后的 90 ~ 120 分钟后，再摄入咖啡因。 避免在下午 4 点后饮用咖啡因，这样会影响晚上的睡眠，如果你一定要喝，限制在 100 毫克或更少。 如果你想在早上锻炼之前第一件事就是摄入咖啡因，那么你可能会在下午早些时候体力下降。4.食物\n\n在早上吃东西会让你更加清醒，促进新陈代谢和体温的升高，让你感觉更加清醒。\n但如果你在早上吃很多食物，它会把血液和资源从大脑中转移到消化食物上，然后你会立刻感到疲劳。\n\n晚上：到了晚上，做一些能让自己更容易入睡的事情。和白天类似，也是光和温度。5.热水澡：降低体温，这样更容易入睡。6.温度 &amp; 睡眠环境保持环境非常黑暗或昏暗。如果你半夜醒来，也尽量少开灯。控制室温，可以适当降低室温 3 度。如果你是因为太暖和而醒来，那你睡觉的时候一定不要穿袜子，可以从被子里将手和脚伸出来。7.帮助持续入睡的工具提升床或床垫的高度 Elevating Feet ：把床脚抬高 3-5 度（注意这里说的墙脚是你躺下后，脚的位置），抬高后，有助于淋巴引流。需要注意，孕妇和有血管疾病的人慎用。8.最低温度你可以因为旅行的原因，导致出现 Jet Lag（时差问题），也有可能有了孩子，需要早醒。此时可以利用「最低温度」效应帮助你调整生物钟。首先「最低温度」，指的是人体一天里的最低温度，一般是在你正常醒来的前 2 小时，比如你一般在 7 点醒，那你的体温一般会在 5 点的时候达到最低。可以在此时间前或者后，做一些能提高生物钟的活动，比如观看亮光，锻炼等，从而影响你的生物钟：\n\n如果是在达到最低温度前 12 小时（还是用前面那个案例，那就是早上 34 点），然后进行锻炼，或者喝咖啡，这样会令你的生物钟延迟，意味着你会更晚睡觉，第二天也会更晚醒来。\n如果是在达到最低温度后 1~2 小时，进行锻炼等，这样会令你的生物钟提前，意味着你会更早睡觉，第二天也会更早醒来。\n\n9.红灯如果你需要在睡眠周期中保持清醒，例如，为了旅行早起，或者需要给婴儿喂食，使用红灯。这样不会扰乱生物钟的昼夜节律。\nFitness Toolkit: Protocol &amp; Tools to Optimize Physical Health1.Soleus Push-Ups\n\nSoleus 是指比目鱼肌，位置大概位于你的小腿后侧，如果你有健身习惯的话，在练下肢前，都需要使用泡沫轴放松一下这个部位。Soleus Push-Ups比目鱼肌俯卧撑是一种非常神奇的健身方法。你需要坐在椅子上，双脚先处于放松状态，然后提起后脚跟，脚趾保持着地，当后脚跟提到极限、比目鱼肌肉有明显的拉伸感后，后脚跟再落回地面。\n\n2.Zone Two Cardio\n\nZone Two Cardio 二区有氧训练。这个二区指的是心率区二区，大约是你的最大心率 的 6070%，要想监控这个指标你需要一些智能设备（Jimmy：BTW 最新的 Apple WatchOS 支持了此功能）。每周最好进行 180200 分钟的二区有氧运动。而Andrew 的习惯是每个周日都会进行慢跑 6075 分钟，另外如果不想慢跑，也可以进行一次长途的徒步，可能是两个半小时到三个小时，甚至有可能是45 小时。如果进入二区有点困难，可以考虑穿增重背心，当然也可以背一袋重物。\n\n\nSauna\n根据研究发现，人如果一周去一次桑拿房，并且在桑拿房内待够最少一小时（可以分3~5次进入，一次20分钟），做完桑拿后，你会获得大量甚至 16 倍的生长激素。\n\n\nStatic Stretching\n静态拉伸，这个我在健身的时候也经常做，特别是完成健身后，都需要拉伸下，这样能帮助你更好地恢复。Andrew 则是推荐大家在即使不运动的时候，也进行一些拉伸，比如睡前，亦或者在站立办公时候。\n\n\nHanging from a Bar\n这个是 Dr Peter Atia 提出的一个衡量身体是否健康的方法。简单说来，就是抓住单杠，并使身体吊在上面，40岁男士的话，需要坚持 2 分钟，女士则为 1 分半。各位可以试试，是否能坚持那么久。\n\n\nDeliberate Slow Breathing\n在洗澡的时候，或者在开车的时候，可以进行一个非常简单的训练——故意慢慢呼吸三到五分钟。它能帮助你更好地放松，以及恢复。\n\n\n\n产品沉思录\n万尼瓦尔 · 布什在 1945 年的《As we may think》中描绘到：网络不仅能作为一个即时的出版机器（如微博、微信），它也可以被用来创造一个图书馆（如 Wikipedia ），一座数字花园。均衡的信息饮食，需要多种来源：短与长、简单与复杂、琐碎与崇高、熟悉与新奇。我们希望成为知识摆渡人，让你在产品之路上前行时不再孤单；我们也想斗胆做一些穿越时间的事情，想试着看如果积累了十年以后，这座数字花园会变成什么样子；过去埋藏在地下，挖出来时是煤炭，是你今天的炉火。\n羔羊计划《圣经》里面常说太阳底下无新鲜事，所有的事情都曾经发生过，场景会改变，但行为和结果不会。\n短篇小说《蛋》中描述的世界观人生观，一旦你活过所有时间的所有人的生命之后，你才会发育到足够成熟去获得新生。于是突发奇想觉得人都在学习工作中找寻前世的人，去找回曾经有的技能。每遇到一个人引发的似曾相识，每遇到一个物件或者知识的似曾相识，似乎都在找回，于是一些人耗费一生找回，于是一些人只找回了一半。我知道这是种精神胜利法，不过没关系他能说服我学习。学习的过程也是找回的过程。——《蛋》\n人最大的痛苦就是,你知道什么是对的,却永远做出错误的选择,无法跨越知道和做到的鸿沟。\n不管你一个星期里如何安排时间，最重要的是锻炼的时间加起来要达到 150 分钟。\n我生命里最大的突破之一，就是我不再为别人对我的看法而担忧。此后，我真的能自由地去做我认为对自己最好的事。只有在我们不需要外来的赞许时，才会变得自由。—— 罗伊•马丁纳\n人世间真是难处的地方，说一个人“不通事故”，固然不是好话，但说他“深于世故”，也不是好话。——鲁迅《南腔北调集•世故三昧》\n我们对他人的好感，往往可以掩盖住，也许是因为矜持。但是我们对于他人的恶感，是绝对掩盖不住的。如果你感受到了恶意，一定是真实的，不是你过于敏感。\n快乐分享错了人，就成了显摆。难过分享错了人，就成了矫情，甚至是一个笑话。  \n《饮食男女》里有一句话：人生不像做饭，不能等万事俱备才下锅。想做什么尽管去做，不要有完美主义的包袱，千万别等机会失去了，才后悔当初没抓住。\n《士兵突击》里许三多所说，“我们不应该太舒服，太舒服了会出问题”。\n熬过低谷，花期不远，温和灿烂，乘风破浪，生活不倦，温暖无限。今天最喜欢老大的温柔歌声了。❣🍉\n《永恒》以星辰为名，以黑暗为姓\n朋友之间从来不聊严肃东西也是这个道理。只要聊到专业和非专业的边界，聪明的人立刻点到为止，“你自己去看吧”是最好的回答。以专业身份分享，以专业身份收费，对方听一次就记住了。这是最高效的，不浪费彼此时间，时间才是最昂贵的费用。\n《美国往事》里有这样一段台词：“当我对所有的事情都感到厌倦的时候，我就会想到你。想到你在世界的某个地方生活着、存在着，我就会愿意忍受一切，你的存在对我很重要。 ”“互相支撑”才是喜欢的本质吧，“喜欢”它并不是说在一起的时候多么甜蜜，而是那些不能在一起的时刻，也能相互成为彼此的力量。\n有人教我不知道的事情，却不让我觉得自己很笨，喜欢这样的人\n“我不知道遇见你是对是错，但我知道遇见你我开心过”   ——灰原哀\n“爱，就是科学与逻辑永远无法确释的程序”          ——灰原哀\n人们花费一生的时间都在思考他们真正想要的生活方式。——加夫列尔·加西亚·马尔克斯\n少年，追风赶月莫停留，平荒尽处是春山。\n少年终究成大叔，美女到底变阿姨，但只要心不老，那就青春常驻。——自言\n不管我們能不能見面不管你會不會忘了我，我只想告訴你一個祕密 從琴房到教室一共是108步——《不能說的祕密》\n我在情感上的愚钝就像是门窗紧闭的屋子虽然爱情的脚步在屋前走过来又走过去我也听到了可是我觉得那是路过的脚步那是走向别人的脚步直到有一天，这个脚步停留在这里，然后门铃响了。—-余华《第七天》\n即使以为自己的感情已经干涸得无法给予，也总会有一个时刻一样东西能拨动心灵深处的弦，我们毕竟不是生来就享受孤独的。——马尔克斯《百年孤独》\n每次回家，都在鲁迅的《故乡》里打转。所谓乡愁，无所谓有，也无所谓无，漩涡似的存在，越是挣扎，越是挣脱，一遍遍更深。苏珊·史都华《渴望》：怀旧情绪是­一种没有对象的感伤，是一种渴望，渴望那种­不曾真正存在过的完美的过去。\n不采而佩，于兰何伤？兰之猗猗，扬扬其香\n花有花期人有时运，怀爱与诚静等来日，在自己的世界里独善其身，在别人的世界里顺其自然。——晴\n威廉·德雷谢维奇：“绝对不要为你的一辈子做好计划，因为人的变化在两三年内都是巨大的，而且时刻会产生新的想法；你真正可以做到的是，想好现在要做什么。”\n朋友说，“好想恋爱啊”只是一种无助时刻的吐槽，其实根本不想。其实就是缺乏一个可靠的可以依靠，缺乏一个会倾听的人可以聊天，缺乏一个不会厌烦的人满足分享欲。\n今天高铁上一堆人在餐车排队付款，结果一大段路没网络信号。车上 100 的也找不开。我很得意的跑到队首，掏出钱包，有零有整的什么钞票都有，买到一堆吃喝。睿智的人到哪里都能独领风骚。\n很幸运一路都是自己撑过来的所以少了谁的陪伴都无关紧要\n官宣吧 就用鲁迅的风格https://mp.weixin.qq.com/s?__biz=Mzg5NDYyNjQ2Mw==&amp;mid=2247484919&amp;idx=1&amp;sn=1aa885b02707be476e1703d89835b60c&amp;chksm=c01dfa07f76a7311ebeaa1f7633dee375434641206b21b9fb7cafab6fa5c6f953f773edd2be2&amp;scene=132#wechat_redirect问了问心 它说情不自禁我大抵不再是一个人了 身边有你 身后有你 身后亦是你告诉桃花不用开了 我等的人来了路灯的三个影子一个是我的 另一个也是我的 还有一个是我们的心事是藏不住的 用嘴巴捂住就会从眼睛里冒出来我寄给你的信 总要送往邮局 不喜欢放在街边的绿色邮筒中 我总是疑心那里会慢一点我真傻 真的  我单知道我喜欢他 不知道他竟也喜欢我以后的每个春夏秋冬我都会陪着你直到从青涩时光到 白发苍苍近视的感觉不太好受就是奇怪模糊的世界总能认出你\nV2EX 这套系统设计的初衷，是关于时间的隐喻。你在这里所做的每一件事情，都会消耗你的时间。倘若一件事情做完之后，无法得到任何有意义的回应，那么这件事情就像是白做了。如果一个人持续做那些无意义的事情，那么他实际上就是在浪费他的时间。\n\n30 岁，让我成熟和改变的不是生日而是生活You are what you do. Not what you say, not what you believe, not how you vote, but what you spend your time on.你的所作所为将决定你是怎样的人。重要的不是说什么，信什么，或站在哪边，而是把时间花在什么上。（理解认识他人也一样）\n\nFor a great payoff be especially curious about the things you are not interested in.为了获得巨大回报，要对自己不感兴趣的事情特别好奇。（好奇是最好的动力）\nYou are as big as the things that make you angry.让你生气的事情有多大，你的心胸就有多大。（有一句类似的更火的中文版：人的胸怀是委屈撑大的。）\nThree things you need: The ability to not give up something till it works, the ability to give up something that does not work, and the trust in other people to help you distinguish between the two.你需要三样东西：不奏效不放弃的毅力、不奏效敢放弃的魄力，以及对能够帮你分辨两者的人的信任。（敢于放弃也敢于不放弃，更重要的是明白何时做出选择）\nDon’t be the smartest person in the room. Hangout with, and learn from, people smarter than yourself. Even better, find smart people who will disagree with you.不要做房间里最聪明的人。和比你聪明的人在一起，并向他们学习，找到那些不同意你观点的聪明人更好。\nRecipe for success: under-promise and over-deliver.成功的秘诀在于谨慎承诺和超出预期。\nWork to become, not to acquire.工作是为了成为而不是获得。\nIf you can avoid seeking approval of others, your power is limitless.如果你能避免寻求别人的认可，你的力量就是无限的。\nDon’t be the best. Be the only.不要做最好的。做唯一的。\n人们总是高估自己一天能做的事情，却低估自己一年能做的事情。\n风起月渐明，雨落草更青。\nHe who has great power should use it lightly.有权者当慎用之。\n有些人和你疏远，不是你做错了什么，而是你没有他可利用的价值。如果偶尔还联系你，并不是惦记你，而是打探一下你有没有新的利用价值\n强调努力学习与认真做事，不是为了追求世俗意义上的成功，而是为了你们将来有更多的选择自由。如果有一天，你们觉得周遭的环境不适合自己，有一点防身的本领，至少让你们不至于失去“仰天大笑出门去”的豪气，无需一味地忍耐或者委屈自己，仰人鼻息地过上一辈子。劳东燕说的。\nHome is not where you live but where they understand you.栖身之所不一定是家，有人懂你之处才是家\nYou don’t love someone because they’re perfect. You love them in spite of the fact that they’re not.爱一个人，并非因为TA完美无瑕，而是明知不完美，仍旧会爱上TA。\n人间烟火气，最抚凡人心。\n车如流水马如龙，花月正春风。\n远方又是风乍起，坐看余生云涌时。\n浮云一别后，流水十年间。\n烟火星辰，所愿皆成真。\n春去秋往万事胜意，山高水长终有回甘。\n万般熙攘化清风朗月，四方梦想皆如愿以偿。\n鹊桥仙·纤云弄巧 宋·秦观纤云弄巧 飞星传恨 银汉迢迢暗度金风玉露一相逢 便胜却 人间无数柔情似水 佳期如梦 忍顾鹊桥归路两情若是久长时，又岂在 朝朝暮暮\n非急事不电话\n路虽远，行则将至，事虽难，做则必成\n如果你有权，规则就是为你服务的，如果你有钱，规则是可以变通的，如果你没权又没钱，那么规则就是为你量身定制的！\n打的一拳开，免得百拳来\n三十六门阴阳计，计计噬魂入骨飞，人间风景何处美？身下玉人把萧吹\n“林朝夕小姐，在这漫长而美好的一生里，如果你真找到了想做的事情，那么无论何时你决定再次开始，都不算晚。”\n落日归山海，山海藏深意。\n富贵险中求，也在险中丢，求时十之一，丢时十之九\n核心就是实力！弱国无外交！人弱无语权\n因为有一股强大的和谐之力笼罩此间，因此，此间风光，不足外人道矣。后来有诗云：天明云净水色清。软玉温香抚不尽卧推云峰共云雨。一声娇啼入郎心。\n肤如雪，玉山隆，锦绣袍里攀玉峰。温如玉，柔无骨，擎天一柱顶股中。\n口也忙。手也忙。佳人含羞不设防。嫣红两点撩人处，长枪刺破花芯房。\n轻柔慢动细细来。身下一朵梅花开。晚来一阵雨兼雪，一点一点流下来。\n夜色中。天做被，地当床，怀中搂抱娇女郎。树儿颤，发儿偏，一动一颤飞上天。又是一遭，又是一遭，一声又比一声高。月儿羞，月儿羞，悄悄把头收…..\n正所谓是：夜半三更恋不休，两身合一共风流，金枪鏖战方寸地，寸心甘露淋小头。这一夜，睡不休，一动一颤入仙舟！这一夜，夜无眠，一夜春风不得闲！\n百年大小荣枯事，过眼浑如一梦中。\n游子一身轻，浮萍无归处\n古有云，青天白云人间月，独照山河万日明\n软玉温香在怀，胜却人间无数\n抬玉足，抚玉臀，一动一静入云霄。眼迷离，身渐颤，一浪又比一浪高。\n世人皆道长生好，哪有人间闺房妙？半亩青田一入开，此处不与外人道。\n念念不忘,必有回响,不忘初心,方得始终\n菩提何来有证果,今日方知我是我\n彼岸花，开一万年，落一万年，花叶永不相见。花是曼珠，叶是沙华，花开时不见叶，落叶时不见花…….情不为因果，缘注定生死！\n奈何桥上道奈何，是非不渡忘川河。三生石前无对错，望乡台边会孟婆\n焦虑的本质：欲望大于能力，又想快速得到结果。因此控制焦虑有两条路径，降低欲望，同时对事情不要有太高的预期；提升能力，让自己可以更好地去做更多的事情。还有一点就是保持耐心，耐心靠坚持和毅力是不够的，需要提升认知，具有长远的目光才能够判断一件事情急也是没用的，掌握事物发展的规律。\n升米恩，斗米仇。\n人微言轻，注定人尽可欺。\n自古真情留不住，唯有套路得人心。\n王尔德有一句名言：“任何人都能对朋友的不幸感到同情，可要消受一个春风得意的朋友，则需要非常优良的天性。”\n富在深山有远亲，穷在闹市无人问。\n古话说：“使人有乍交之欢，不若使其无久处之厌。”\n见人只讲三分话，常留七分在心中。\n将军有剑，不斩蝼蚁；欲成大树，不与草争。\n“我以为别人尊重我，是因为我很优秀，后来才明白，别人尊重我，是因为别人很优秀。”\n风起于青萍之末，浪成于微澜之间，友交于微末之时。每个人都在时间的激流中，被冲向不同的港口。没有谁能一直跟上彼此的步伐，与其强行拉着旧友上路，不如在路上去寻找新的同伴。\n查尔斯·布考斯基：“早上没有人叫醒你，晚上没有人等你，你可以做任何你想做的事。你怎么称呼它？自由还是孤独？”游走在自由边缘的孤独我从容的躺下，度过我并不肯定的时光…\n我们这块土地、这些人，终其一生，大多所行，不过苟且二字。所谓风光，不过苟且有术，行路坎坷，不过苟且无门，基本不过如此而已。——陈寅恪\n如何才能过上自己想要的生活？过上自己想要的生活，最重要的是你要有赚钱的能力。有钱意味着你的人生有更多的选择权。你想出国读书，你就可以出国读书。你不想工作了，你就可以辞职不做。\n《纸牌屋》:只有当遗憾取代了梦想，人才算老。\n真正的男女关系，既谈钱，又谈性。女的不太矜持，男的不太抠，这才是成年人的交往。金钱不能衡量感情，但可以过滤。——莫言《晚熟的人》\n明月依旧在，不见当年故人\n太宰治在《人间失格》这本书中写道：“相遇总是猝不及防，离别都是蓄谋已久，我们要习惯身边的忽冷忽热，也要看淡那些渐行渐远。”\n长大之后才明白那句话：“散伙是人生的常态，我们又不是例外。”那些曾与我们推心置腹的人，总有一天会不得不在光阴的流逝中分道扬镳。从年少时的无话不谈，到长大后的无话可说。维系一段友情需要小心翼翼，而结束一段友情，有时候只是一个不经意。\n人生的每一个阶段都会遇到一些人，因为相似的目标，我们结伴同行。\n年少时，曾幻想着遇见便是永远；长大以后，才明白哪有什么永远。所谓永远，便是用一生的时间，越走越远。人生，就是在一段漫长的旅途中，一边遇见，一边再见。\n终有弱水替沧海，再无相思寄巫山。\n梁实秋在散文《送行》中写道：“你走，我不送你，你来，无论多大风多大雨，我要去接你。”\n成年人相处最好的方式，就是来时珍惜，去时释然，尽己所能，顺其自然。\n梭罗在《瓦尔登湖》中感慨过：“把人生中最美好的阶段用来赚钱，以便能够在人生中最没价值的阶段，享受一点值得怀疑的自由。”\n王小波曾说：“当你看多了外界的勾心斗角，当你被工作的苦、生活的难折腾得疲惫不堪，你就会发现——家，就是你在这世上最后的去处。”\n然而，当这所“最后的去处”满布荆棘，充斥硝烟，家便不再是避难所，而是格斗场，无论胜负，永远没有赢家。\n当我们觉得自己不被理解的时候，不用自怨自艾，也不必自我怀疑，我们可以自我安慰「做自己就好」，而且这并不一定是自己的问题，没人理解也许只是没遇到合群的人罢了。尝试着勇敢向前走，如同鹤立鸡群、丑小鸭的故事，我们需要做的，就是走出去，直到遇到属于自己的鹤群/鹅群，方能合群。——自言\n随着年龄的增长，身处在熟悉的事物中，越来越感觉时间的流逝在加快一般，于是生活总是过得匆匆忙忙，仿佛在与时间赛跑，为了改变这种焦虑的症状，我开始追求扩大生命的广度，不断迎接崭新的事物，去往不同的城市与国度，体验全新的生活，以此在主观感觉上减缓时间的流速，积淀生命的厚度。——自言\n我什么都没有忘，但是有些事只适合收藏，不能说，也不能想，却又不能忘。——史铁生《我与地坛》\n当人们抱怨孤独时，他们的意思是没有人能理解他们所说的话。被人理解意味着分享共同的过去、共同的情感和语言……简尔言之，就是分享共同的生活方式。——以赛亚·柏林《个人印象》\n内卷最大的问题是付出与回报不成正比。其次的问题是，如果你没足够强的竞争力，那么从内卷中被淘汰只是时间问题。想赚钱重要的是规避激烈的竞争，寻找竞争不那么充分的细分市场。真正的聪明人是不参与竞争的。在商业领域，充分内卷的领域叫红海，没内卷的领域叫蓝海。你的蓝海在哪？\n打工人最好每个月更新简历，意义就是时刻提醒自己，你的工作是否有产出、有成绩。不然干了一年最后发现没啥成绩，那之后一旦失业，就很难有竞争力。\n情到浓时衣易解，轻解，再解，光滑一片犹胜雪；玉体横陈为君摸，一摸，再摸，翻云覆雨一天多；狂风骤雨床微颤，激战，再战，白天黑夜床已烂…….\n罗衫轻解，玉体横陈，点点春光尽收眼；呼吸急促，双眼迷离，欲语还羞任君抚。千里袭杀，跨双峰，渡平原，溪谷潺潺水，别一样清，谷尽头，青草掩嫣红，贼子藏身处，手持长枪欲上马……\nAfter all this time?「一直这样吗？」Always.「从未变过」\n出自法国诗人瓦雷的《海滨墓园》，很多人可能是从宫崎骏动画《起风了》得知的。Le vent se lève, il faut tenter de vivre.纵使疾风起，人生不言弃。\n我的笔上刻的是＂闻说笔端有风月＂，iPad上刻的是＂皆晓书中藏金银＂\nTime you enjoy wasting, was not wasted.你所享受到当下的每分每秒，都值得。\n悟已往之不谏，知来者之可追。实迷途其未远，觉今是而昨非。\n青春是中年的一杯下午茶。\n「沧浪之水清兮，可以濯吾缨；沧浪之水浊兮，可以濯吾足。」很多种理解方式，我最认同还是，不管环境如何，总能使利于自己，总能上进，总能自适，自在随心。很乐观很理想的一句话，不这么想我可能早就抑郁了吧。\n我在有四个扬声器的 iPad pro 上刻的是：「对巨大的声音，保持怀疑。」在 AirPods pro 上刻的是：「对细小的声音，侧耳倾听。」\n当初想着用一个学术型 ipad 全面替代电脑，在 iPad 上刻了 May the papers be with you!在 Apple pencil 上刻了 Keep writing.\n在哲学史上有一个忒修斯之船的悖论：如果一条船在大海上航行，每遇到船受损的时候就用新的木头进行替换修补，那么直到所有的木头都不是原来的木头，那这艘船还是原来的那艘船吗？\n「熬低谷」就是没人一起帮忙解决问题、表达情绪无人回应、甚至没人理解你到底有什么问题、对生活前景失去希望。\n其实真正熬过低谷、再过上正常日子后，也往往并不会觉得有天差地别的幸福感，就好像一个人的皮肤厚实得像野兽一样后，无论春夏秋冬都不会有太大感觉了。我也很不喜欢这个结局，但事实上是，回不到从前了。\n其实大劫大难之后，人也不一定有很明显的变化，其实他还是他，可能他不再笃信真实的世界，但尖锐的人还是会尖锐，可能他换了一种尖锐的表达方式。温柔的人还是会温柔，可能他减少了温柔外露的时间。别太害怕人会因为大事发生重大变化。糟糕的从来不是变化，而是没被发现的阴暗。\n而今识得愁滋味，欲说还休，欲说还休，却道天凉好个秋。\nYou have to force yourself to be good, and then live proudly. 请逼自己优秀，然后骄傲的生活\n很遗憾的是，我们没当面说分手；很遗憾的是，我们没有兑现所有承诺就分开；很遗憾的是，我并不知道那一次，是我们最后一次见面，就这样了。讲真的，我从来都不相信，一个人一生，只会爱一个人，但我可以肯定的是，总有那么一段岁月，你会碰到一个，你想用一生去爱那个人。我性格就是这样，开心的时候，拼命讲话，不开心的时候，可以整天都不出声，我不会记仇，但是谁对我好，我都很清楚。——周星驰\n如果不够悲伤，就无法飞翔，可没有梦想，何必远方。\n若把夕阳比作风 来去自由满江红黄昏无垠落日晚，浛浛微风寥寥笙可怜九月初三夜，露似真珠月似弓。一道残阳铺水中，半江瑟瑟半江红。\n我羡慕你西装革履，你羡慕我青春四溢\n我虽然身无分文，却能够满腹诗书。你少年创业洪涛起，我墨客砚墨题沧桑。也许少年及第登科，也许少年家财万贯。我追求内在，你拼搏外在。\n我们永远不要在自己所看重的事情上，投入不切实际的期待，附加不着边际的价值。因为人生唯一确定的，就是不确定的人生\n小时候，看星爷的电影，不太懂，喜剧，解压，好笑但怪怪的，反正开心就好。\n现在呢，看星爷的电影，有点懂，悲剧，压抑，不羁却孤独的，再也开心不来。——自言\n一切恐惧都源于火力不足。\n请你务必一而再，再而三，三而不竭，千次万次，毫不犹豫地救自己于水火之中。——罗翔\n草太在关上最后一扇往门的祝祷语是“我深知我命如蜉蝣，死亡如影随形，但我仍旧祈祷，哪怕再多一年，再多一日，再多一时，我们也要活下去。”——铃芽之旅\n“我真的太喜欢温柔的人了，尤其是那种看着冷漠，实则温柔到骨子里的人。”\n空空落落又满满当当，昏昏沉沉又明明白白！\n生活就像一杯白开水，你每天都在喝，不要羡慕别人喝的饮料有各种颜色，其实未必有你的白开水解渴，人生不是靠心情活着，而要靠心态去生活。调整心态看生活，处处都是阳光\n抑郁是什么？抑郁就是白天有说有笑，晚上凌晨睡不着觉，旁人看似一切正常，只有自己知道晚上一个人偷偷的藏在被子里痛哭的感觉，也只有自己知道压垮自己最后的稻草有多轻。\n希望百事可乐 万事芬达 心情雪碧 一周七喜 祝你也祝我\n“当你的压力大到快要崩溃时，不要和别人去讲，也不要觉得自己委屈，要像余华说的那样，在夜深人静的时候，把心掏出来，自己缝缝补补，然后睡一觉，醒来又是信心百倍。无人问津也好，技不如人也罢，你都要试着安静下来，自己该干什么就干什么，而不是让烦躁和焦虑毁掉你本就不多的热情和定力。心可以碎，手不能停，该干什么干什么，在崩溃中继续前行，才是一个成年人的素养。”\n七苦八难是生活，苦尽甘来是人生，愿你在咖啡一样苦的日子里，能遇到一勺一勺给你加糖的人\n\n怀才就像怀孕，时间久了会让人看出。\n我发现那些乐观的人，总是看到更光明的未来，他们甚至不会抱怨。因为当人们抱怨的时候，他们失去机会，并且被抱怨遮挡了思想。机会永远藏在人们抱怨的地方。\n绝大多数的人是因为看见而相信，只有少数的人是因为相信而看见。\n如果一个人不愿意放弃任何东西，那么什么也得不到。\n人生没有彩排，每一天都是现场直播。\n你改变不了特朗普，你连你妈都改变不了。你要改变你自己。\n人生如果错了方向，停止就是进步。\n我们永远要把不好的时间想得长一点、想得远一点、想得更糟糕一点，这才叫“自信”，自信不是说明天就会好，自信是明天不好，我也得活下去。\n如果你看了很多书，千万别告诉别人，告诉别人,别人就会不断考你。\n性格和情商，主要还是由后天学习和塑造的。\n做事情，3个度：看问题的角度，看问题的深度，看问题的广度，这3个度不一样。你看问题的角度、深度和广度不一样，你自然就会不一样。深度会决定你的洞察，广度会决定你的视野，而角度，是你看问题的独到之处。\n你的钱是带不去棺材的，留下来让别人糟蹋，还不如你自己花了。\n我们没有办法跟别人拼昨天，我们也许也没有办法跟别人拼今天，但我们必须跟别人拼未来。\n今天所谓的一技之长，明天可能变成无计可施。要知道：一时长，并不是一世长。\n错误会让你与众不同，机器就很少犯错误，但你愿意成为机器吗？\n年轻人无所畏惧，年纪大总是担心忧虑。所以说，年轻人的丧，是因为他们心态老。\n绝不放弃，就会发光；若有光芒，必有远方。是金子，在哪里都会发光。如果只是暂时还未发光，那么，你需要的是坚持。\n眼光决定你的心态，心态决定你的行动，行动决定你的结果。\n要时常提醒自己：“你有什么、你要什么、你放弃什么？”\n世界会因你而改变；你不改变，世界就会改变你。——马云\n当你学会了不轻易的去喜欢和信任任何一个人，包括爸妈朋友，那么如何与自己厌恶鄙夷的人相处，对你来说就是小菜一碟，很轻松的事了。因为世人的一切，对你来说都是平等的，和光同尘。珍珠和灰尘在你眼中没有什么本质的区别，你不会轻信人，也不会强烈的鄙夷一个人。\n人与人之间始终保持着一种无法消弭的距离，承认这种距离，才不至于把自己的意见强加到对方身上；承认这种距离，才不会去肆意利用或评价对方。——莫里斯·布朗肖\n习惯是如此之轻，以至于无法察觉。又是如此之重，以至于无法挣脱。——沃伦·巴菲特\n想拉近一个人的关系，减少信息层和事实层的交流，多一点情感的交流。交朋友，少查户口，以共同的经历兴趣爱好或者夸奖对方的穿着打扮入手，把话题逐渐切到情感层。多问多方的情绪感受，多问对方的情感经历，多问对方的童年故事，一步步的深入了解。这样情感层的互动越多，心与心之间的距离就越近。\n低效的加班，并不能带给你事业的长久发展。事业拼到最后是拼体力，太过用力跑不远。先睡觉，早起干活，保障充足的睡眠，效率反而更高。晚上不加班不行？其实除了要当晚做出决定的紧急任务外，大多数人加完班发个邮件，基本第二天才被查阅。你早上五六点起来干活，也只晚发了几小时，其实不耽误。\n这个点了还有人在公司吗？ 年轻人不要用命换钱。你们和公司是同居关系，同居关系就不值得拼到生命权被破坏。 变态加班的地方，要学会闹中取静，找机会给自己放松，也就是摸鱼。要在工作中学会合理地休息。\n一个人的本性是无法被改变的。很多人随着经历的增加，性格也会发生一些改变，但所有的经历，只是让他的本性更真实地展现出来而已。\n这短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。\n乔布斯有句话：我特别喜欢和聪明人交往，因为不用考虑他们的尊严。\n日常生活中，尽量少提及政治、婚恋、宗教等话题，避免给自己找些不必要的麻烦。\n“要求朋友变恋人是我这辈子做过的最蠢的决定。” #陈奕迅 #最佳损友\n尼采曾说过：“没有音乐的人生将是一场错误。对此，我深信不疑。在快乐时，在悲伤时。总会有那么一段旋律与你同行。”\n旅行不是济世良药，但却是一片阿司匹林。虽然解不了生活的毒，但化得了生活的苦。\n世界是一本书，不旅行的人只看到其中的一页。\n人之所以痛苦，在于追求错误的东西。\n缘起，我在人海中看到你 缘灭，我看到你在人海里#哲学 人间失格里有这样一句话：“仅一夜之间，我的心判若两人。”奇哉，仅一夜之间，我心竟判若两人。总有一个人他从人山人海中来过来时携风带雨你无处可避，走时乱了四季，你久病难医\n“奶奶常挂在嘴边的一句话：朋友或是恋人 能走过三个月的已是不容易，能坚持六个月的值得珍惜，能相守一年的堪称奇迹，能熬过两年的才叫知己，超过三年的值得记忆，五年后还在的应该请进生命，十年后仍然在的，那就不是朋友了已经是亲人，是生命的一部分。在这个善变的时代，且行且珍惜哦感谢和你相处不离不弃的人”\n不再寻找爱情，而只是去爱。不再渴望成功，而只是去做。不再追求空泛的成长，而是开始修养自己的性情。\n很认可一句话：我们发自己的光就好，别强行给他人点灯。\n《人间值得》中写道：千万不要尝试去改变一个人，那样不但得不到自己想要的结果，还会让自己处在痛苦之中，无法自拔。\n四月，是你的谎言丨灵感手抄本原谅我，事到如今还是热衷一些温热的谎言说喜欢你，说去看你夏天过去了，秋天也过去了一半我甚至没有查过去你城市的路线——余秀华《一无是处的遇见》\n我不幸懂得：有时只有借助谎言才能诉说真实。有时也只有借助玩笑才能诉说真实。——芥川龙之介《罗生门》\n诚实的生活方式，其实是按照自己身体的意愿行事，饿的时候才吃饭，爱的时候不必撒谎。——加西亚·马尔克斯《霍乱时期的爱情》\n说谎和沉默是现在人类社会日渐蔓延的两大罪恶。实际上，我们经常说谎，动不动就沉默。——村上春树\n其实我希望你对我说谎，因为人只为了非常害怕失去的一样东西才说谎。——奥尔罕·帕慕克《纯真博物馆》\n人是一种会自己骗自己的动物。我们吃了很多无益的苦，虚掷了不少年华，所以有人就想说，这种经历是崇高的。这种想法可以使他自己好过一些，所以它有些好作用。很不幸的是它还有些坏作用：有些人就据此认为，人必须吃一些无益的苦、虚掷一些年华，用这种方法来达到崇高。这种想法不仅有害，而且是有病。 ​​​​——王小波《人性的逆转》\n大人很怪的，平时总教育我们要诚实，讲真话，不能撒谎，自己却经常鬼话连篇。——麦家《人生海海》\n一个人懂得太多就会发现，要不撒谎很难。——维特根斯坦《文化与价值》\n十一个古代表达爱情的唯美爱情诗句《君生我未生，我生君已老》\n君生我未生，我生君已老。 君恨我生迟，我恨君生早。\n君生我未生，我生君已老。 恨不生同时，日日与君好。\n我生君未生，君生我已老。 我离君天涯，君隔我海角。\n我生君未生，君生我已老。 化蝶去寻花，夜夜栖芳草。\n《卜算子》 李之仪\n我住长江头，君住长江尾。 日日思君不见君，共饮长江水。\n此水几时休，此恨何时已。 只愿君心似我心，定不负相思意。\n《诗经•邶风•击鼓》\n击鼓其镗，踊跃用兵。土国城漕，我独南行。\n从孙子仲，平陈与宋。不我以归，忧心有忡。\n爰居爰处?爰丧其马?于以求之?于林之下。\n死生契阔，与子成说。执子之手，与子偕老。\n于嗟阔兮，不我活兮。于嗟洵兮，不我信兮。\n《上邪》\n上邪! 我欲与君相知，长命无绝衰。\n山无陵，江水为竭，冬雷震震，夏雨雪，天地合，乃敢与君绝!\n《鹊桥仙》 秦观\n纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却、人间无数。\n柔情似水，佳期如梦，忍顾鹊桥归路!两情若是久长时，又岂在、朝朝暮暮!\n《雁邱词》 元好问\n问世间情是何物，直教生死相许。\n天南地北双飞客，老翅几回寒暑。\n欢乐趣，离别苦，就中更有痴儿女。\n君应有语，渺万里层云，千山暮雪，只影向谁去。\n横汾路，寂寞当年箫鼓，荒烟依旧平楚。\n招魂楚些何嗟及，山鬼暗啼风雨。\n天也妒，未信与，莺儿燕子俱黄土。\n千秋万古，为留待骚人，狂歌痛饮，来访雁邱处。\n《江城子》 苏轼\n十年生死两茫茫，不思量，自难忘。\n千里孤坟，无处话凄凉。 纵使相逢应不识，尘满面，鬓如霜。\n夜来幽梦忽还乡，小轩窗，正梳妆。\n相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。\n《离思》 元稹\n曾经沧海难为水，除却巫山不是云。取次花丛懒回顾，半缘修道半缘君。\n《蝶恋花》 柳永\n伫倚危楼风细细，望极春愁，黯黯生天际。草色烟光残照里，无言谁会凭栏意。\n拟把疏狂图一醉，对酒当歌，强乐还无味。衣带渐宽终不悔，为伊消得人憔悴。\nThe worst part of life is waiting. The best part of life is having something worth waiting.人生最痛苦的莫过于等待，然而最美好的却是等待最值得期待的东西。\nTo lose is not terrible, but it is that you are stuck on the “lose” idea.失去并不可怕，可怕的是你执着于“失去”这个念头。\n英文爱情语录：我喜欢现在的自己，我怀念过去的我们。I like to present myself,I miss our past.我喜欢现在的自己，我怀念过去的我们。\nThose that have gone won’t come back again.Those coming back are no longer perfect.过去的不再回来，回来的不再完美。\nI wait you don’t know how much courage.It’s far more than I love you three word more need courage.一句我等你，不知道需要多大的勇气。它远比我爱你三个字，更需要勇气。\nSometimes,the same thing,we can go to the comfort of others,but failed to convince yourself.有时候，同样的一件事情，我们可以去安慰别人，却说服不了自己。\nGood day gives you joy while bad day gives you experience.So never regret every single day of your life!美好的日子给你带来快乐，阴暗的日子给你带来经验。所以，不要对生命中的任何一天怀有遗憾。\nBe yourself,don’t change for anyone.If they don’t like you at your worst,then they don’t deserve you at your best.勇敢的做自己，不要为任何人而改变。如果他们不能接受最差的你，也不配拥有最好的你。\nWithout respect,love lost.Without caring,love boring.Without honesty,love unhappy.Without trust,love unstable.没有尊重，爱会走掉。没有在乎，爱会无聊。没有诚实，爱会不爽。没有信任，爱会不牢。\nDon t set your goals by what other people deem important.Only you know what is best for you.别人认为重要的，并不就是你的追求。只有自己才知道什么最适合自己。\nLove comes fast.You either risk it,or you regret it.爱来的这么快——要么冒险，要么后悔。\n适应了鞋子舒服的束缚，逃避光脚的自由是自然的选择。\n每一段感情，都要经历期盼与失望;陌生与熟悉;自由与束缚;犹豫与坚定;甜蜜与心碎哭泣和伤痛并不重要，只要我们曾经微笑，事后有过思念。那么你还是对这个人有感情的，然后我们可以再去回忆或者继续寻找没有一种爱是不需要反复验证就可以成功的，所以我们不必失望。\nFirst I need your hand ,then forever can begin.我需要牵着你的手，才能告诉你什么是永远\nActually I wanted to say on that day,Shall we never get apart,OK?其实，那天我想说的是，“我们永远不要分开了好不好?”\nHappiness can be found even in the darkest of times. - Albus Dumbledore.即使在最黑暗的日子里，也能寻到幸福。\nDon’t judge someone’s past, when you haven’t walked their journey!如果你没有经历过别人所经历的事情，就不要去评判一个人的过去!\nFading is true while flowering is past.凋谢是真实的，盛开只是一种过去\nall or nothing, now or never.要么没有，要么全部。要么现在，要么永不。\nBefore finding the right people, the only need to do is to make yourself good enough.在找到合适的人之前，唯一需要做的，就是让自己足够的优秀。\nYou have no wrong, I am not wrong just a gust of wind, blew the comm.你没有错，我没有错只是一阵风，吹熄了承诺。\nDon’t wait to be lonely, to recognize the value of a friend.不要等到孤独了，才明白朋友的价值。\nEverytime you come to mind, I realize I’m smiling.每次想到你，我就发现自己是微笑着的。\nForgetting someone doesn’t mean never think of him, but thinking of him with a calm heart.忘记一个人，并非不再想起，而是偶尔想起，心中却不再有波澜。\nI apply to get into your life.我申请，加入你的人生。\nI regret to know you, you let me feel the pain when you are not around me.很后悔认识了你，你让我感受到你不在我身边时的痛苦。\nAsk you a silly question, if I like you, how should I do?问你一个好傻的问题，如果我喜欢上了你，该怎么办?\nDon’t let a little dispute break up a great friendship;不要让小小的争端损毁了一场伟大的友谊\n《剪刀手爱德华》我爱你不是因为你是谁，而是我在你面前可以是谁。I love you not for who you are, but for who I am with you.\n《蓝莓之夜》一个人总要走陌生的路，看陌生的风景，听陌生的歌，然后在某个不经意的瞬间，你会发现，原本是费尽心机想要忘记的事情真的就那么忘记了。One is always on a strange road, watching strange scenery and listening to strange music. Then one day, you will find that the things you try hard to forget are already gone.\n《恋夏500天》爱情，要么让人成熟，要么让人堕落。Love makes man grow up or sink down.\n《当哈利遇见莎莉》爱情是灯，友情是影子，当灯灭了，你会发现你的周围都是影子。朋友，是在最后可以给你力量的人。Love is a lamp, while friendship is the shadow. When the lamp is off,you will find the shadow everywhere. Friend is who can give you strength at last.\n有些事，不是不在意，而是在意了又能怎样。人生没有如果，只有后果和结果。成熟，就是用微笑来面对一切小事。\n走过流年悲喜沉浮，历阅尘世沧海桑田，喜欢这样的自己，恬静浅笑，安然面对生活给予的苦辣酸甜。握一份懂得，盈一怀暖意与淡泊穿行于浮华俗世，以一袭最温婉姿态，于淡淡的疼痛中温暖清寒岁月，轻舞时光，向暖流年，痛到泪流，不言苍凉，回眸处，我自从容，傲视沧桑，即使心已百孔千疮，步履已然蹒跚。\n人在说自己的母语、方言的时候，那种畅快的状态，是最接近生命本真的。说别的语言都像在无意识地扮演另一个人。能在生活中大部分时候说自己的语言，是种让人嫉妒的特权。\n任何被你当做常识的信息，在这个世界上，都有二三十亿人不知道。\n公式一：月现金流=月收入总和-月支出总和\n公式二：财务自由=被动收入&gt;月支出总和\n终身学习（认知杠杆）* 全栈技术（时间杠杆）* 投资理财（财务杠杆） =&gt; 被动收入（人生杠杆）\n要分得清生活中什么最重要，持续稳定的情绪，良性的财务状况，可控的生活节奏，理性的生活观念，而不是某个人到底爱不爱你，别人到底是不是认可你。\n每个人能承受的重量不一样，不要用自己的想象去轻易评价别人经历的人生\n小时候渴望的东西没钱买，长大后再多钱也买不回来了\n欲买桂花同载酒，终不似，少年游。便邀东风揽明月，春不许，再回头。便饮东风齐揽月重行故地儿时路，雪不停，白了头！残柳不语雁不误，西风转，世已秋。踌躇举杯对孤影，尚未语，泪先留。故亭漫步旧时路，均不再，难别求。路遇故人相回头，顾无言，泪便流。\n孤独到极致就是自由！\n自是浮生无可说。人间第一耽离别。\n夏虫不可以语冰。\n井蛙不可以语海。\n凡夫不可以语道\n因为太过独立，所以失去了被保护的资格，后来变得又倔强又强势，活成了自己都讨厌的模样，不善言辞，不会低头，不会撒娇，不会卖萌，不会说好听话，更不懂巴结人，除了逞强就是冷漠\n不要对任何人抱有精神上的洁癖，这个世界上，每个灵魂都半人半鬼，凑近了，谁都没法看。\n红尘看破不过是浮沉，生命看破不过是无常。\n我的骄傲，不允许我把这崩溃的日子告诉别人，只有我一个人知道，仅一夜之间，我的心判若两人。\n友情以上 恋人未满 不甘朋友 不敢恋人\n习惯之所以难以改变，就是因为它是自己巩固的——越用越强，越强越用。要想从既有的习惯中跳出来，最好的方法不是依靠自制力，而是依靠知识。\n任何事情都没有完美的解决方案，最佳解决方案常常是妥协的结果。 ——冯唐\n我想，如果生活暂时很艰难，也许可以让自己做一段时间的傻瓜。把外界都屏蔽，去做一些不费脑子的事情。给自己的心一个机会，好好休息，慢慢恢复。看起来被浪费的时间，无畏的挣扎，都是你日后再站起来重新跟生活搏斗的资本。\n最穷不过要饭，不死总会出头\n\n《三体》\n\n你的无畏来源于无知。\n弱小和无知不是生存的障碍，傲慢才是。\n给岁月以文明，而不是给文明以岁月。给时光以生命，而不是给生命以时光。\n无言是最大的轻蔑。\n失去人性，失去很多；失去兽性，失去一切。\n我爱你，与你有何相干？毁灭你，又与你有何相干？\n在疯狂面前，理智是软弱无力的。\n任何事物，在你开始怀疑并且想突破它的时候，是最吸引人的阶段。\n自以为历尽沧桑，其实刚蹒跚学步；自以为掌握了竞争的秘密，其实远没有竞争的资格。\n一个人，一旦觉得自己比别人有优越感，觉得高人一等，离倒霉就不远了。\n这里本就没有路，你若想走，那它便是一条路，你若不想，那它便只会是一片荒野。\n对和错只不过是站在不同的视角观看罢了。\n当你开始和你的敌人共情的时候，你的是非观就已经被颠覆了。\n在意义之塔上，生存高于一切，面对生存，任何低熵体都只能两害相权取其轻。\n仅靠生存本身是不能保证生存的，发展是生存的最好保障。\n一个人的鉴别能力是和他的知识成正比的。\n大多数人到死都没有向尘世之外瞥一眼。\n成功的反面并不是失败，不是突如其来的空虚，而是提供给你一种还不赖的生活。差不多的繁忙程度，差不多的生活形态，差不多的高朋满座。\n只不过，日复一日的生活渐渐散发出一股酸腐的气味。和你厮混的人也越来越模糊和不体面。仿佛是泳池的水被慢慢抽干，最后只剩下池底枯黄的落叶。\n起初，你毫无察觉；后来，你假装没有察觉，最后，你接受自己已经沦为二流的事实。\n\n网上冲浪像赶海。要么早点，比如快天亮的时候；要么及时，比如海鲜刚冲到岸上的时候。不然，就只能指望别人截图了，不体面。\n如果有一天，你不再寻找爱情，只是去爱；你不再渴望成功，只是去做；你不再追求空泛的成长，只是开始修养自己的性情——你的人生一切，才真正开始，纪伯伦\n不在意别人说什么，是一种无上的自由。这种自由有人自小就有，有人则需要通过自身的成长和时间的沉淀来获取。\n人，有了物质才能生存；人，有了理想才谈得上生活。——雨果《悲惨世界》\n人的社交，从被动逃避转变为主动面对，才会有最深刻最重要的改变。只有变得主动，才有无限提升能力的机会。\n如今，人们只不过是从物质折磨变成了精神折磨，祥子一直都在啊……——《骆驼祥子》\n拖延的最大坏处还不是耽误，而是会使自己变得犹豫，甚至丧失信心。不管什么事，决定了，就立刻去做，这本身就能使人生气勃勃，保持一种主动和快乐的心情。——史铁生\n诚实大多数时候不会使事情更简单，反而导致­尴尬和不必要的浮想联翩。——王朔\n在追求、恋爱的过程中，男性最好不要对女性敞开心扉，坦诚自己脆弱的一面。少部分母爱泛滥的女孩或抖M除外。恋爱很多时候是基于性与幻想的游戏，过分坦诚、倾诉、表达太多需求感会产生褪魅的效果。男性注意保持情绪稳定，不要在女性面前示弱、表达太强的情感需求，否则你的恋情大概率会失败。\n人类最大的弱点之一就是自命不凡的幻想。——罗翔\n当你能够享受你喜欢的事情就是富有，比如说，我一个房子都没买，但是我喜欢弹琴，我买很多吉他，我买吉他比买房子更有愉悦感。并不是说有钱人的标配一定是劳斯莱斯、别墅。」李健《小镇故事》\n推荐3部超级好看的综艺真正强大的人会“让天下以我的是非为是非”，有自己的判断，不会轻易摇摆。《酌见》第一期：探访万通集团的创始人——冯仑\n人要接受自己的有限性，承认自己是有限的。——罗翔因为你害怕承认自己的普通，却不知道，人没法驾驭超过个人能力的事情。在这种情况下，你越卖力，越会弄巧成拙。\n当没人知道你在干什么的时候，生活会变得更好。\nThis is your permission to stop looking to be liked by people don’t even like themselves.不必让所有人都喜欢你，他们甚至连自己都不喜欢。\nHappy people are ok with not pleasing everyone快乐的人可以不取悦所有人。\nMaturity is understanding why someone behaves the way they do, while also understanding we’re not responsible for what people have gone through in their past. If someone is hurtful or abusive, it’s not our job to try to fix them. lt’s theirs.真正的成熟是理解某些人的某些行为，同时也明白我们不必为他们的过去而负责。如果对方受到某些伤害或者虐待，我们的工作也不是去解决，因为这是他们自己的事情。\nWe say we fall in love, but authentic love makes us rise.我们说我们坠入爱河，但真正的爱让我们振作起来。\n恰是韶华，正逢年少，怎得辜负青春一场。\n外向是生活所需，孤独是自我享受\n理解得越多，就越痛苦。知道得越多，就越撕裂。但是，他有着同痛苦相对称的清澈，与绝望相均衡的坚韧。——勒内·夏尔\n突然被这句话戳到，每一个人对别人伸出援手的时候，都是在救赎不一样的自己吧\n我以为我很想谈恋爱的，但是当爱靠近的时候，我却下意识会主动推开。我开始讨厌出去玩的时候，要照顾对方的情绪；我开始厌倦每天晚上有人打扰我的独处时间，讨厌一天三餐的问候，讨厌对方给我分享他的生活，报备自己在哪里，此刻在做什么；我不想了解对方过去发生了什么，和前任有什么故事，未来的日子想怎么走;或许我最终拒绝爱的原因，还是恐惧。一个人自由自在，无拘无束了好一段时间，情绪逐渐趋于稳定，生活轻松，真害怕回到爱一个人的时候，不想再对一个人抱有期望，感觉爱和被爱都有点累。也或者是我对爱的要求太高，总觉得人不该见了几面就轻易说出喜欢和爱这样的字眼。想慢慢来的背后，还有对爱的质疑，总觉得不该是这样，不该只有这样。上学的时候，我总以为人可以心动无数次，以为真心有很多，但现在才发现，很多东西都在不知不觉中就消失了，也回不来了。从恋爱脑到看清爱情，这个过程，我找回了真正的自己。但也确实发现，人生本就寂寞如雪，爱无法承担起全部。\n芝兰生于深谷，不以无人而不芳君子修身养德，不以穷困而改志——Hao Chen 座右铭\n因为我经历过网暴所以很喜欢下面这三句话\nGreat minds discuss ideasAverage minds discuss eventsSmall minds discuss people\n我试着翻译一下：\n卓越之识论道，平常之识论事，狹隘之识论人。\n无论一个人怎么样，都不应对TA上纲上线进行“批斗”。因为这么做都跟文革没啥两样…… ​​​——左耳朵耗子\n上智论道 中知谋事 下识断人\nhttps://blog.kevinzhow.com/posts/in-memory-of-haoel/zh\nLife is getting late, beyond the darkness is the dawn, why is the endless running around?\n心若没有栖息的地方，到哪里都是在流浪。——三毛\n真正自由的人，从不奢求得不到的东西，也不做不喜欢做的事。——卢梭\n同善良人交往，不是图他可以好到什么地步，而是他不会坏到什么地步。人与人的交往，首先需要的是安全感，然后才是成就感和愉悦感。——王朔\n一束花的仪式感，永远不会过时。\n紫色紫罗兰的花语是在梦境中爱上你，对我而言你永远那么美。\n白色紫罗兰的花语是让我们抓住幸福的机会吧。盛夏的清凉\n【小雏菊】它的花语是：“深藏在心底的爱。”\n【薰衣草】它的花语是：“等待爱情，希望它能等来那个照亮世界满眼是自己并带来满天星辰的人。“\n【桔梗】它的花语是：“白色是矢志不渝的爱，永恒的爱，蓝色是无望等待的爱。”\n【满天星】它的花语是：“我甘愿做配角，瞒着所有人爱你，我携满天星赠予你，仍觉满天星辰不及你。”\n【彼岸花】它的花语是：“花开无叶，叶生无花，相念相惜却不得见，独自彼岸路。”\n【向日葵】它的花语是：“入目无他人 四下皆是你 有你时 你是太阳 我目不转睛 无你时 我低头 谁也不见。”\n【洋甘菊】它的花语是：“逆境中的坚强，苦难中的力量，以清新的姿态治愈，世间因有她而总是希望不灭。”\n【玫瑰香槟】它的花语是：“爱上你是我今生最大的幸福·想你是我今生最甜蜜的痛苦·一生只钟情你一个人 。”\n【紫藤】它的花语是：“沉迷的爱，醉人的恋情，为情而生，为爱而亡。”\n【黑色曼佗罗】它的花语是：“无间的爱和复仇，绝望的爱，不可预知的死亡和爱。”\n【蓝花楹】它的花语是：“在绝望中等待爱情，你来或不来它都在枝头绽放，在绝望中永恒期待。”\n【蒲公英】它的花语是：“无法停留的爱!既然留不住，就让它走，不牽绊、不勉强、幸福就好。”\n【雏菊】它的花语是：“深藏于心底的爱。我爱你藏于心底，希望你能记得我。”\n【白玫瑰】它的花语是：“我足以与你相配，你不知道，为了你，我想变成更好的人，因此发奋，以实现这句话。”\n智者不入爱河，愚者自甘堕落，遇你难做智者，甘愿沦为愚者，虽说万家灯火，缺无一盏为我，愿你游遍山河，仍觉人间值得。\n建议把罗翔老师的这段超燃的话刻进骨子里：“请你务必一而再，再而三，三而不竭，毫不犹豫的救自己于这世间水火。” 人生不过三万天，借了副皮囊而已，何必执着于种种。 真正的成熟应该是，我摒弃了过去，然后一往无前，我不再去怀念过往，伤害与爱我都能淡然处之，不将就，也不较真。 永远不要质疑你的付出，就像树扎根一样，你的付出默默的在为你的未来铺路。毛姆说：“无论在谁面前，只要你不欠他的，就没有必要唯唯诺诺，你的软弱，会让对方更加看不上你。心软和不好意思，只会杀死自己，理性的薄情和无情才是生存利器。” 薄情和无情看似少看一点温暖，但是相对于软弱却是让自己幸福的一种方法，对于那些感情用事和不能摆脱的弱点，不如学会随缘放下，不要去纠缠不休。 诗意的人生，就是用顺其自然的态度，过随遇而安的生活。 你要把眼下的事处理好，才是对未来埋下最好的伏笔。与当下的世界去交手，只要世界光明不灭，生命不息，那么你的坚持亦不止步，热爱永不停息。 月不会一直圆，山不会一直青，人们都说倨傲的棱角会被现实磨平，但我们也会迸发出向云而冲的勇气。 山前有路，山后未必有曙光，所以请坚持下去，只有自己拓宽了自己的路，才足以谈人生。\n出来见见世界之大，跟真实的世界多碰撞几次，才知道自己究竟在哪里擅长、又在哪里渺小。\n一个人没有对未知，对生命的敬畏，是一件很可怕的事情，很可能害人害己\n杨绛先生说：“当你试着不理一个人的时候，其实你的内心已经受伤很深了，沉默是一个人最大的哭声，微笑是一个人最大的伪装，不是只有眼泪才代表悲伤，不吵不闹才是最后的绝望，或许只有经历过的人才会懂！”一个人极度心寒的时候不是哭而是沉默，那淡淡一笑，虽然眼角没有眼泪，但是那种淡漠已经不需要任何发泄了。微笑掩盖悲伤，沉默诠释一切。有时候我们受了委屈、受了伤会哭，那是需要安慰，但是当我们不哭的时候，选择微笑或是沉默，那便不需要安慰了。因为那是一种放弃的选择，无需治疗，无需安慰。#摄影#情感#文案\nThere’s always something you will not cherish until you lost it.总有一些东西，失去了才懂得珍惜。\n“十有九人堪白眼，百无一用是书生。\n人到了一定年龄，就会发现，你需要的不再是一场轰轰烈烈的爱情，而是一个不会离开你的人。真正让一个人感动的，从来不是耳边的情话和昂贵的礼物，而是下意识的惦记，语气里的温柔和满眼的在乎#爱情#热门#情感#感动#相伴#情感共鸣#陪伴@微信派 @微信创作者 @微信时刻 \n“乐观和爱才是生活的解药。人生有三把钥匙:接受、改变和离开，不能接受就改变，改变不了就离开。懂得放下，学会释怀。如果事与愿违，请相信一切自有安排。”\n且借人间二两墨，一笔相思一笔错。再赊红尘三杯酒，饮下四季韶华落。\n错把陈醋当成墨 写尽半生纸上酸更怕醋墨两相掺 半生苦涩半生酸。\n余生一半烟火一半清醒。清风抚我容，万事藏于心……不言不语。静如冷月，独自行……\n然而，莫泊桑在其小说《一生》的结尾写下来这样的一段话（官方原文）。\n您瞧，人生从来不像意想中那么好，也不像意想中那么坏。\n这句话后来被一个足球评论员这样说到：\n生活可能不像你想象中那么好，但也不会像你想象中的那么糟。我觉得人的脆弱和坚强都超乎了自己的想象。有时，我可能脆弱得一句话就泪流满面；有时候，也发现自己咬着牙走了很长的路。\n你就会发现这生活，「除了亲人离去和疾病伤害的痛苦是真实的，其他的痛苦都是你的价值观带给你的。并不是真实存在的」，你也就不会特别想要在这个题目下找到你想要的答案了。\n在《无声告白》中也曾说：\n我们终此一生就是为了摆脱他人的期待，找到真实的自己。\n木心曾经说过：\n所谓万丈深渊，下去，也是前程万里。\n尼采曾经说过：\n一个人知道自己为什么而活，他就可以忍受任何一种生活。\n那天洗脸照镜子想到个教学方法，我起名为弗曼镜子教学法，费曼学习法都听过，学完一个东西，用通俗的语言教会别人，这个镜子学习法呢，一般适用于具象化的事物教学，第一遍学习，面相你的学习者和你示范的动作是镜面对称的，第二遍实操的时候，让他们脑海里想第一遍的操作，去复现你那个方向的操作，在这个回忆思考复现的过程里，就是对知识的复习和重构，在玩的这个过程里，看似只是又做了一遍反方向的，但回忆第一遍和重构第二遍的过程中其实相当于又做了两遍，这样就用表面上两遍的时间，做了三遍的功夫，堪得上事半功倍，同时还避免了孩子们因一件事情重复次数过多而失去耐心和乐趣，以及在玩耍中学习的本质，当然，如果时间较紧张，或者换个角度说，我个人觉得，实践是最好的学习，没多少人喜欢理论说教，太枯燥了，尤其是小孩子，更容易听得睡着，听得走神，所以减少理论的讲解，把时间更多地放在实操上，让他们自己在实践中发现问题，然后引导他们解决问题，这样的学习我觉得效果至少是比我们老师先示范讲解一遍，再让他们去实操来的更好些，同时气氛也会更轻松活跃一点，不会一开始孩子们都坐着一旁屏气凝神地围观你一个人在那操作，最后眼睛看会了，但是手不会。就是教小孩子，很重要很重要的一点，就是你要尽可能和他们打成一片，你对自己身份的定位不是老师，放低一点，可以是大哥哥大姐姐，甚至效果更好可以再低一点，是他们一群孩子当中的孩子王，作为教导者引导者话事人，你的教学权威不一定得是老师，也许孩子王的权威更容易让他们接纳，从而激发他们作为孩子，潜意识里的模仿行为和好胜心理，就是你也可以，那我怎么不行。另外，权威方面的竖立，要讲究恩威并施，当然，这是另一个话题，我们以后再论。能很快拼出乐高的，快速归纳总结的能力，对平面图形的分辨能力，对抽象化构造图纸的渲染想象力，对数学几何立体感，以及搭建中具象化逻辑思维的培养，都很有帮助。专注力，耐心，毅力，坚持，面对问题，解决困难，能玩进去乐高的孩子，都很聪明要和他们打成一片，减小孩子们本能的抵触心理，防御心理——自言\n人类毕生都在与时间抗争。他们本想执著地眷恋一个爱人、一位友人、某些信念；遗忘从冥冥之中慢慢升起，淹没他们最美丽、最宝贵的记忆。\n——普鲁斯特《追忆似水年华》\n似水流年才是一个人的一切，其余的全是片刻的欢娱和不幸。\n王小波 《似水流年》\n如果你经常跟一个女孩子聊天，聊一个星期，你就会发现她已经成为你的习惯，聊两个月，你就会依赖她，时间长了，即使是陌生人也一样会上瘾，会依赖，最后会喜欢，不管你有多理智又有多么强大的自控能力，都没用。当她可以隔着屏幕影响到你心情的时候，不要去问为什么，因为她已经入了你心。当你习惯在早上醒来第一时间和她说早安，又在睡前互道晚安，当你习惯跟她分享日常，毫无戒备的和她说关于你的一切，那你们的关系已经在慢慢的转变，如果突然有一天她不在 你就会感觉失去的不仅仅是她，而是你精神支柱，你的心也空了。暖味关系，看似不是爱情，却像极了爱情，它会让很多人沦陷。在这个手机不离手时代，有太多的人因为无聊而找另一个人聊天，从开始有一句没一句，到后来彻底沦陷在别人甜言蜜语中 最后连自己都分不清到底是依赖还是喜欢。日久可以生情，孤独的人总是很容易感动，对一个人产生好感并没有错，错就错在不该隔着屏幕去喜欢一个人。当有一天你突然发现她没有了以前的关心，没有了那些甜言蜜语，有的只是敷衍和冷漠的态度时，你慌了，你会寝食难安，胡思乱想，可不管你怎么努力都没能让你们回到从前，那时候你才明白什么叫无能为力，时而开心、时而心痛、时而不舍、时而想放弃，这种想纠缠又想放弃的感觉真的会把人折磨的疯掉。这时你才明白错了，也清醒了，隔着屏幕聊出来的感情只不过是一时的新鲜感而已，恋爱上头的那一瞬间虽然像极了爱情可它终归不是！甚至连喜欢都算不上，在这个暖昧横行的时代，新鲜感上头谁都可以是宝贝，所谓的一见钟情只不过是见色起意罢了，始于习惯，陷于依赖，迷于肉体，折于时间，最后败于现实。稀里糊涂的相遇，始料未及的喜欢，早已注定的散场，她只动了嘴，而你却傻傻的动了心，恋爱其实就是一种会让人上瘾毒药。爱上一个不能在一起的人，那种思情之苦没有人能体谅，整天整夜睡不着，满脑子胡思乱想，再这样下去，不死也会颠，这种滋味也只有经历过的能明。故事以你打扰开始以我的多余终结，始于心甘情愿，终于愿赌服输，你低估了我想陪你走下去的决定，我也高估了在你心目中位置，你是我患得患失的梦，我却是你可无可恋的人，就这样吧，故事以你的打扰开始，以我多余结束，脸红相遇，眼红散场。也许这本就是陪你演的一场戏，你锻炼了演技 ，我却入了迷，曾经发了疯的想 如今拼了命的忘，你从未入戏，而我却赔上了自己……是不是像及了最初恋爱的时候？\n不论从哪个点出发，最终都可以和你相遇。莫比乌斯环山水一程，三生有幸，晴空万里，烟花永恒——晴\n人的心智成熟的过程，是一个逐渐剔除的过程，知道自己，接受自己，而后做一个简单的人。\n没关系的，你可以和我分享快乐，也可以和我抱怨委屈，我都听着，我们是一伙的。\n有希望是件好事，也许是世间最好的事情，好的东西从不会逝去。\n爱是弥天盖地的比雾还浓\n有时候孤独是好事，一个人就自己多长本事，多看世界，多走些路，把时间花在正事上，变成自己打心底喜欢的那种人。——网易云热评《像我这样的人》\n善良和喜欢，都是免费的，但不是廉价的。\n如今才知道，从没有从天而降的幸运，也没有突如其来的惊喜，更没有横空出世的奇迹；有的只是千番投入、万般辛苦后的得偿所愿，苦尽甘来。——周冲《我更喜欢努力的自己》\n关关难过关关过，前路漫漫亦灿烂。\n既然在别人的世界里微不足道，那何不在自己的世界里熠熠生辉，往昔已不可回头，未来可以改变。\n原来自己一个人，也可以去到很远的地方。\n生命是有光的，在我熄灭之前，能够照亮你一点，就是我所有能做的了。我爱你，你要记得我。——张嘉佳《云边有个小卖部》\n过错是暂时的遗憾，而错过了，就是永恒的遗憾。\n抬头仰望，别浪费了月亮。\n你是非常可爱的人，真应该遇到最好的人，我也希望我就是。\n只要我想的少，快乐就会追着我跑。\n这吹不出褶的平静日子，也在闪光。\n想和你见一面，因为秋天，是适合拥抱的季节。\n钱没了可以再挣，工作没了可以再找，朋友没了可以再交，爱情没了可以再遇，你生来一无所有，何惧从头再来\n痛终有时，爱必将至\n其实活着还真是件美好的事，不在于风景多美多壮观，而是在于遇见了谁，被温暖了一下，然后希望有一天自己也成为一个小太阳，去温暖别人。\n——三毛\n知识是为了思考，不是为了炫耀。\n流年知冷暖，人间未有味\n像不需要钱一样工作，像无人观看一样跳舞，像从未受过伤一样去爱。\n心情低落，眼见离新班次驶发还余了些时间，于是在路旁顺手拦了辆摩托，把行李箱用皮绳绑在车尾，戴上头盔，随便指了一个方位，让司机开。\n中年男人把龙头一摆，轰起油门，车子像猛然被抽了一鞭子的兽，红着眼眶喘着粗气一跃跃出好远。\n高原的早春，日光灼热，信风猎猎。满世界都是热烘烘的风，风穿过我的头发，我的手指，我的脚踝，风把男人叼着的廉价香烟圈喷在我脸上，风把风里他咆哮的问题吹得好远好远。\n越开越热，血液里都是热，仰起头看太阳，因为太过明亮，周遭的草木都暗了一度。\n田野，荒地，男孩，土狗，尾气，尘烟。\n风依然庞大无形，人穿梭在风里，像穿梭在慢慢融化的黏稠黄油里。\n所有的一切，连带着遭逢的零碎的烦恼心绪，都被草莽地阉割完毕。\n不晓得跑了多久，车子停下来，靠拢高铁进站口。我翻身下车，整理衣摆，问司机要收多少钱。\n中年男人一笑，被烟草熏黄的牙齿和被风熏黄的脸庞都格外亲切。他说，\n「七块钱。」\n“从那天开始就没再主动找你，恢复了我原来的样子，独立自由没有依赖，就像从来没认识过一样，我知道放弃一定很遗憾，但有些事情再坚持下去也没什么意义。”\n“即便是你最心爱的人，心中都会有一片你无法到达的森林，我不会以爱之名束缚你，你可以做任何你想做的事情，但我希望你做任何事情之前，都可以想起我，并为我拒绝一些人和事，我希望我们谈的不只是恋爱，是信任是忠诚是陪伴是考验，是我们一直不会分开。”“你知道什么是偏爱吗 偏爱就是他收到两条信息 会毫不犹豫先回你的 偏爱就是他对所有人都板着脸的时候 还能对你笑 偏爱就是不管他做什么决定 都会先考虑到你 其实最让人有安全感的 不是爱 而是偏爱.”\n“后来我喜欢成熟的男孩子 大概他会问我身上的钱够不够用 你在哪 我来接你 带你去吃 给你买了 我陪你 而不是只会喝酒打游戏整天和我吵架 还说我无理取闹 不愿意在我身上花时间的人 爱是有洁癖的 我可以不过问你的往事 但这段感情开始了就不能有瑕疵  我不要博爱的天使 只要偏心的恶魔!”\n我发现，每个接近我的人，只是一时好奇，贪恋我微弱的光，可昼夜交替才是人间真实啊，太阳也有燃尽时，当欣赏完我的光，便会觉得索然无味了，黑夜来临，而她们只想看阳光，厌倦黑夜的压抑，更没有耐心去感受寻觅黑夜中的星光和月光，此间的光虽然清冷，可它们也是光啊，可惜世人往往只喜欢温暖的阳光……我现在只想做只刺猬，我要张开我所有的刺，让他们疯狂生长，再不想任何人靠近我，好讨厌好讨厌好讨厌这种感觉。难道好朋友只能分享喜乐，不能共担哀苦么我到底还是天真了，以为不越界就能长久……可我忘了喜欢不止是一个人的事情啊破碎的人自艰却温暖着别人淋雨的人有伞却遮雨给别人一夜无言日升月落 昼夜更替 循环往复 原地踏步雨过天晴，阳光洒落，倏忽间觉得有点晒，于是，这一次我打起了伞月光皎洁，清冷难安，踌躇不前，索性转身离开——自言\n毕淑敏说过：友谊有的时候是那样脆弱，一句不经意的言辞，就会使大厦顷刻倒塌。所以陈奕迅在歌里唱道：为何旧知己，到最后变不到老友。来年陌生的，是昨日最亲的某某。\n古人说：“人生有四然，来是偶然，去是必然，尽其当然，顺其自然。”\n成年人的世界，聚散离合、分道扬镳，都是再自然再正常不过的事情。\n面对关系的破裂，不必追，不必问。告别一段旧的关系，才能迎来新的开始。\n愿你感恩所有遇见，释怀一切遗憾，未来奔赴更好的生活。\n《完美世界91》小子，人生就是如此，没有人能陪你一直走下去，即便以后没有相见之日，你也该明白，自己要走的路。\n“散伙是人间常态 希望我们是那个例外”\n“我会一直等你，希望你也一样”\n早知道后劲那么大、不遇见就好了\n是缘也是劫\n我用情付诸流水  爱比不爱可悲\n这世间遗憾有很多种，如果注定有遗憾，我希望至少我们在一起互相陪伴过\n很喜欢村上春树的一段话：“不是所有的鱼都生活在同一片海里，人各有不同，无论遇到什么样的人都不稀奇。无论活成什么样子，都会有人说三道四，这个世界我们只来一次，看喜欢的风景，做喜欢的事，你不一定非要活成玫瑰，你愿意的话做茉莉做雏菊，做向日葵，做无名小花，做千千万万。”\n慢热，沉默，喜欢独处，三观正，不记仇，健忘体质，比你想像的深情，也比你以为的冷漠。\n“’愿我们都是 喝完酒能被接回家的人，而不是深夜只会用酒精麻痹自己的傻子”\n可我已经不相信爱了，唯有权势金钱地位不可辜负，早就不是屠龙少年了，不想再反这黑夜，只想做人上人，做别人的梦魇\n花若盛开，清风自来。\n总有不期而遇的温柔，和生生不息的希望。\nThere is always unexpected tenderness, and the hope of life and growth in nature.\n别慌，月亮也正在大海某处迷茫。\nDon’t panic, the moon is lost somewhere in the ocean.\n生活坏到一定程度就会好起来，因为它无法更坏。\nLife gets better when it gets worse, because it can’t get worse.\n请记得那些对你好的人，因为他本可以不这样。\nRemember those who treat you well, because they could not.\n在不为人知的未来，我们平安快乐就好。\nIn the unknown future, we are safe and happy.\n有幸在风华正茂的年纪，明白爱最没用。\nFortunately in the prime of the age, know that love is useless.\n你跋山涉水去见的人根本不会牢记你，他只会记得自己跋山涉水见过的人\nThe person you travel a long way to meet will not remember you, he will only remember the people they have traveled a long way to meet\n终于在这场盛大的期许里，失望而归。\nFinally in this grand expectations, disappointed and return.\n被丢弃一次的小朋友，就会质疑所有人的爱。\nA child abandoned once will question the love of all.\n人生不能太过圆满，求而不得未必是遗憾。\nLife can not be too perfect, seeking and not necessarily regret.\n\n个性签名：总有不期而遇的温柔，和生生不息的希望\n\n初恋就是用来失去和回忆的。\n如果伱经常跟一个人聊天，聊一个星期，伱就会发现他已经成为了你的习惯，聊一个月，伱就会依赖他，时间长了，即使是陌生人也一样会上瘾，会依赖，最后会喜欢，不管伱有多理智又有多么强大的自控能力，都没用。当他可以隔着手机屏影响到伱心态的时候，不要去问为什么，因为他已经入了伱的心。当伱习惯在早上醒来第一时间和他说早安，又在睡前互道晚安，当伱习惯跟他分享日常，毫无戒备的和他说关于伱的一切，那伱们的关系已经在慢慢的转变，如果突然有一天他不在了，伱就会感觉失去的不仅仅是他，而是伱的精神支柱，伱的心也空了。暖味关系，看似不是爱情，却像极了爱情，它会让很多人沦陷。在这个手机不离手的时代，有太多的人因为无聊而找另一个人聊天，从开始的有一句没一句，到后来彻底沦陷在别人的甜嘴蜜舌中，最后连自己都分不清到底是依靠还是喜欢。日久可以生情，孤单的人总是很容易忽略，对一个人产生感情并没有错，错就错在不该隔着手机屏去喜欢一个人。当有一天伱突然觉得他没有了过去的关心，没有了那些 甜嘴蜜舌，有的甚至敷衍和冷漠的语气时，伱慌了，你会坐立难安，胡思乱想，可不管伱怎样努力都没能让伱们回到过去，那时候伱才明白什么叫无能为力，时而开心、时而心痛、时而不舍、时而想放弃，这种想纠结又想放弃的感觉真的会把人折腾的发麻。这时伱才明白错了，也清醒了，隔着手机屏聊出来的感情只不过是一时的新鲜感而已，暧昧上头的那一𣊬间虽然像极了爱情可它终究不是❗️甚至连喜欢都算不上，在这个暖昧横行的年代，新鲜感上头谁都可以是宝宝，所谓的一见钟情只不过是见色起意而已，始于习惯，陷于依赖，迷于肉体，折于时间，最后败于现实。稀里糊涂的相遇，始料未及的喜欢，早已注定的散场，他只动了嘴，而你却傻傻的动了心，暧昧关系其实就是一种会让人心动魔药。爱上一个不能在一起的人，那种思念之苦没有人能感受，夜夜难眠都闭不上眼，满脑子胡思乱想，再这样下去，不死也会疯，这种滋味也只有体验过的都懂。故事以你打扰开始以我的多余结束，始于心甘情愿，终于愿赌服输，伱低估了我想陪伱走下去的勇气，我也高估了在伱心里的地位，伱是我患得患失的梦，我却是伱可有可无的人，就这样吧，“故事以伱的打扰开始，以我多余结束，脸红相遇，眼红散场。也许这本就是陪伱演的一场戏，伱锻炼了演技，我却入了迷，曾经发了疯的想 如今拼了命的忘，伱从未入戏，而我却赔上了自己… ..”\n她总是很晚才睡，别人总说她性格开朗又大大咧咧，但只有她自己知道她内心一片荒芜，她总会莫名其秒掉眼泪，把很多事情往最坏的方向去想，她就算流着泪哭到窒息也会嘴硬说 我没事，她很独立，能自己做的事绝不求助别人，她发起火会说脏话，她多愁善感又敏感焦虑，她果断又优柔寡断，她矛盾又清醒，她勇敢却又胆小，没人愿意拾起那么破碎的她，她是个可以治愈别人的人，却治愈不了她自己，她无限的去表达自己却又隐藏自己，她希望有人能看到她大大咧咧外壳里包裹着腐朽生锈的灵魂#抑郁\n短暂的陪伴到底是赏赐还是惩罚。你不贪心，便是赏赐\n你知道吗，刚认识你的时候，只想单纯的交个朋友，真的没有动过心，结局你却让我意难平，我没有后悔遇见你，只是觉得好遗憾，没能和你走到最后，没能成为你的例外和偏爱，而你却成了我爱而不得的无奈。在留下你和放下你的事情上，我一件都没有做到，明明不想失去，却又无能为力，说真的那种想放弃又想爱的滋味真折磨人，爱了这么久最后连个像样的交代都没有。突然觉得好心疼，我遇了不该遇的人，也聊了不该聊的天，加了不该加的人，#晚霞\n折磨你的从来不是任何人的情绪，而是你心存幻想的期待，世间万物都在治愈你，唯独你不肯放过你自己\n教育的滞后性就像一个闭环，多年以后才会意识到，子弹命中的瞬间，才是教育的完成时\n三生有幸遇见你，纵使悲凉也是情即使余生不是你，此生一程已足矣\n“奶奶常挂在嘴边的一句话：朋友或是恋人 能走过三个月的已是不容易，能坚持六个月的值得珍惜，能相守一年的堪称奇迹，能熬过两年的才叫知己，超过三年的值得记忆，五年后还在的应该请进生命，十年后仍然在的，那就不是朋友了已经是亲人，是生命的一部分。在这个善变的时代，且行且珍惜哦感谢和你相处不离不弃的人”\n曾奇峰说，主动治万病。\n主动意味着人格成熟，也意味着生命力旺盛。小孩子才会嗷嗷待哺，成年人要学会主动出击。\n向女生表白太早的话，会说我还不了解你。向女生表白太晚的话，因为没有新鲜感，会说我们还是做朋友比较好。那什么时候是刚刚好？女人对男人兴趣正浓的时候。过早的表白比过晚要好，一旦处成了朋友，转正男友希望渺茫。\n爱情应该是这样——不应该因为爱情而自卑，应该因为爱情而优秀。让人卑微的关系，必须抛弃。\n千万不要因为爱情就混淆彼此。爱情其实应该是自由的。因为爱而在一起，但不是因为爱就改变现状。不分你我是爱情婚姻中最大也最容易被忽视的雷。你是你，我是我，各有角色。老公是老公，老婆是老婆，独立又相互依赖，亲密的关系才能长久。\n感情生活里，先有独立才有生活。心态不独立，生活不自立，就别谈爱情。亲密关系里的倦怠感从何而来？必然是这段关系不再支撑彼此的成长了，而是累赘。\n三毛：人这一生，匆匆而过，若说真有所图，也不过是一份温暖和惦记。\n主动并不掉价，主动是自己创造机会。即使你不想主动，也要设法让对方主动，而不是坐在那里傻等。我就是这么被老婆搞定的——她不露声色地主动。\n“我开始讨厌一些人的出现打乱我的生活  短暂的陪伴只能在特定的一段时间里彼此讲过真心话而已”\n我希望你不会忘记 有个男孩 伴着你的发梢 吻过你的耳根。——自言\n那些将要去的地方，都是素未谋面的故乡。\n——王小波《黄金时代》\n每个人会在岁月中渐渐变成另外一个人。只不过在现实生活中，这个过程细润无声难以察觉。如果长期保持记录的习惯，比如日记或工作记录，你可以在前后对照发现这一点。\n离开某些人，不是因为他们不好，而是和他们在一起时，自己不好。\n———土巴堪布\n生命中两大乐事：思想自由和行动自由。\n——毛姆\n自己太有趣了，所以跟谁谈恋爱，精神上都是向下兼容谢耳朵不是给莱纳德婚礼祝福也这么说：我希望你们给彼此的快乐像我给自己的一样多🤣\n无人问津也好，技不如人也罢，你都要试着安靜下来。去做自己该做的事情，而不是让烦恼和焦虑，毁掉你本就不多的热情和定力。\n心可以碎，手不能停，该干什么干什么。在崩溃中继续前行，这才是一个成年人的素养。\n（余华）\n\n怦然心动\n\n有人住高楼，有人在深沟，有人光万丈，有人一身锈，世人万千种，浮云莫去求，斯人若彩虹，遇上方知有。——韩寒译本《怦然心动》有些人沦为平庸浅薄，金玉其外，而败絮其中。可不经意间，有一天你会遇到一个彩虹般绚丽的人，从此以后，其他人就不过是匆匆浮云。\nThe higher I got, the more amazed I was by the view.\n我爬得越高，眼前的风景便愈发迷人。\n达利欧说：当真相与愿望不符时，大多数人抗拒真相。\n当人在一无所有的阶段，应该把所有时间精力都倾注在让自己变强上，心无旁骛。当你变强后，一切都会有的。\n韩寒说过：处对象就该历经一下异地恋，感受一下喜悦忧虑难以分享，欢歌笑语流泪不可以相拥，隔着屏幕联络直至你基本上发狂，学好拒绝诱惑，学好解决一个人的時间，学好照顾好自己。也仅有那样，在真实在一起，甚至白头到老，你才会心怀感恩。\n“如果你现在不努力让自己过上想要的生活，那么以后，你就会浪费大把的时间，去应付你不想要的生活。”\n如果优秀成了一种防御……所谓防御，是指防御机制，百度词条上的解释是：“精神分析学派用语。个人在精神受干扰时用以避开干扰，保持心理平衡的心理机制。最早由弗洛伊德提出，常在无意识状态下使用。\n这个解释容易把人看晕，其实就是，在一个成长的过程中，会遇上各种各样难以应对的情绪，为了防止这些情绪把自己搞得太难受，于是就发展出了一些方式阻止自己体验到那些情感。比如当一个孩子觉得不被父母所爱时，他可能会在内心做一些处理，让自己感觉根本不需要父母，从而避免感受到父母不爱自己的绝望和恐惧。\n说白了，就是用一种自己可以接受和应对的方式，去阻止自己感受到不能接受的内容。\n林清玄《和时间赛跑》\n「什么是永远不会回来了呢？」\n「所有时间里的事物，都永远不会回来了。\n你的昨天过去了，它就永远变成昨天，你再也不能回到昨天了。爸爸以前和你一样小，现在再也不能回到你这么小的童年了。\n有一天你会长大，你也会像外祖母一样老，有一天你也度过了你的所有时间，也会像外祖母永远不能回来了。」\n以后，我每天放学回家，在庭院时看着太阳一寸一寸地沉进了山头，就知道一天真的过完了。虽然明天还会有新的太阳，但永远不会有今天的太阳了。\n向之所欣，俯仰之间，已为陈迹，犹不能不以之兴怀，况修短随化，终期于尽！古人云：「死生亦大矣。」岂不痛哉！——《兰亭集序》\n诚如斯言，长大以后，经历过和恋人的相遇，和亲人的离别，方知道似水流年是一个人所有的一切，其余的都是片刻的欢愉和不幸，转眼间就跑到那似水流年里去了。\n1.所有的生活都是合理的，我们没必要相互理解。\n–刘慈欣《朝闻道》《坍缩》\n能去山顶的人，不在半坡留恋\n直起腰来，我望见蓝色的大海和帆影\n成功的定义只有一种，用自己喜欢的方式度过一生。\n知屋漏者在宇下，知政失者在草野。\n尽量减少每日内需要做决策的次数，不要想着凡事都要自己操心，把有些无关紧要的事忽略掉或者授权给别人来做就好。\n所以Derek给年轻自己的建议是：当你什么都想做，又不知道该做哪件事，选一件先做起来吧。\n接受现实，用别人的尺子丈量自己不如想想怎么把自己的牌打好\n和20岁相比，他早已明白自己想要的是什么，以及想成为怎样的人。\n和30岁出头比，他变得平和了许多，可以理解生命中的大多数与少部分，也在某种程度上，成为了理想中的自己——一个被称为“实力派”的演员，一个温柔的父亲，以及一个正直且真诚的人。\n一个真性情的演员。——胡歌\n我希望你不会忘记 有个男孩 伴着你的发梢 吻过你的耳根——自言\n如果你现在不努力让自己过上想要的生活，那么以后，你就会浪费大把的时间，去应付你不想要的生活。\n当人在一无所有的阶段，应该把所有时间精力都倾注在让自己变强上，心无旁骛。当你变强后，一切都会有的。\n没啥故事，我自己悟出来的感慨，我的优点曾被人看到，好奇，喜欢，在意，但我的缺点，偏执，极端，不被人接受，于是，离开，抛弃，放弃，最终，我弄明白一些事情，我们穷其一生要找的，是看到我们所有缺点，仍坦然接受的人，因为在对方眼里，是，我见过你的阴暗，但现在，我要做你的一束光，像温柔的人养一只调皮捣蛋爱惹祸的小猫小狗，叫人头疼，也让人心疼——自言\n我看向你，满眼皆是缺点可我接受了这些缺点，因为我喜欢你——自言\n浮雪三尺\n韩寒说过：处对象就该历经一下异地恋，感受一下喜悦忧虑难以分享，欢歌笑语流泪不可以相拥，隔着屏幕联络直至你基本上发狂，学好拒绝诱惑，学好解决一个人的時间，学好照顾好自己。也仅有那样，在真实在一起，甚至白头到老，你才会心怀感恩。\n达利欧说：当真相与愿望不符时，大多数人抗拒真相。\n重生文之所以出现且火起来，大抵是每个人心中都有一些难以释怀的遗憾，终于能在书中得以圆满，当我们已重生的姿态再出现在这世间，多了几十年的阅历，仿佛生活也由此变得游刃有余，可追究会随着年龄的增长再次踌躇不前——自言\n建议所有畏手畏脚的年轻人，反复阅读这句话：所有人的看法和评价都是暂时的，只有自己的经历和成绩是伴随一生的。几乎所有的担忧和畏惧，都是来源于自己的想象，只有你真的去做了，才会发现有多快乐。\n不是浪漫至死的爱情，激情澎湃的恋情，就是平淡又平凡的生活气息，最宽慰人心，那种平和，心安又心定，又狠狠心动的感觉，就像一颗健康的心脏，强劲有力的跳动着，带着韵律节奏，随和又自然——自言\n生活原来只是无数的瞬间。\n我像一个赤着脚走在砾石中的孩子，脚被硌的很疼，却继续睁大眼睛寻找那一枚枚漂亮的小贝壳。瞬间的快乐足以支撑起漫无边际的疼痛。原来所有的快乐都从痛苦中诞生。\n鲜活的生活，泪水和笑容一样让人羡慕。\nhttps://m.douban.com/book/review/1131872/\n一场深刻而没有结果的爱情，对于一个男人是一次生命的新生，对于女人是一次痛苦的分娩，所以，在许多年之后，当我们的心灵变得平静，总有一天，我们会深深地感激那个曾经深深地伤害过我们的人，并由衷地为他（她）祝福。\nhttps://m.douban.com/book/review/1313589/\n\n《言叶之庭》\n\n《雨之语》我感到有些冷因为我在蒙蒙细雨中独自前行我的手心和额头都湿了不知从何时起 我变得阴暗似乎只要一直倚靠在这里就能等来光明\n向我倾诉着一天之中不曾获知 也不曾期待的琐事静寂与燥热的白天都在雨滴的细语中悄然改变我听着这些声音不知何时又像平时一样入睡了\n雷神小动，虽不零，吾将留妹留者雷神小动，刺云雨零耶，君将留\n\n《嫌疑人X的献身》\n\n一个人对他所不了解的东西，总是会有一些夸张失真的想法。最通情达理的方式就是不要勉强自己。好像之前的那场暴怒消除了我精神上的痛苦，也清空了我的希望。面对这个布满启示和星星的夜晚，我第一次敞开心扉，接受了这个世界温柔的冷漠。原来一个人竟能爱人到如此地步。\n\n《局外人》\n\n对于世界，我永远是个陌生人。孤独没有什么不好，我就是个局外人。经过这场盛怒，我就好像净除了痛苦，空乏了希望，面对这布满象征的星空，我第一次敞开心扉，接受世界温柔的冷漠。\n\n《我是猫》\n\n比起猫来，人类是过分清闲了才会无聊，想着法子折腾自己来开心。\n据说人关于爱的法则头一条就是：“于己有利时，不需要爱别人。”\n没有比承认自己愚蠢更高尚的了。在自知之明前，一切自命不凡的人都是要低下头来，甘拜下风的。\n\n《睡眠革命》\n\n锚定一个固定的起床时间，即使周末或者节假日\n一个完整睡眠周期是90分钟，包括：打瞌睡、浅睡眠、深睡眠、快速眼动睡眠四个过程。\n大部分成年人需要4-5个睡眠周期就够了\n比如你最合适的睡眠周期是5个周期，要早上7点起床，那么晚上11点半就必须睡了。这个时间点再往前提早20分钟左右就是上床的时间普通人的入睡期大约是20～30分\n按周规划睡眠时间是最好的，不必纠结于某一两天睡眠周期不够\n每周获得35个睡眠周期是最理想的。28（每晚睡6个小时）-30个睡眠周期也比较理想。\n下午1-3点可以睡足一个90分钟的睡眠周期或者只睡30分钟（千万不要让自己陷入深度睡眠）\n如果头一天晚上只睡了4个睡眠周期也可以通过白天的时间补足一个睡眠周期达到我们每天的睡眠需求。\n睡前和醒后的一个睡眠周期也是非常重要\n高效睡眠 图片整理\n用自然光唤醒（或者借助自然光唤醒灯）；注意听到闹钟不要马上坐起来；不要立刻打开手机。有定时功能的日光灯\n放假学习的关键在于专注，专注的关键在于做到以下三点：1、一个坚持：坚持早起\n2、一个改变：学习时间移到上午\n3、一个方法：15·45·90工作法\n根据不同的学习任务选择不同的专注时间段学习。比如15分钟适合背单词，而90分钟更适用于刷真题。每15分钟小休息一下，每3个15分钟，也就是45分钟后休息10分钟左右，每90分钟长休息15～20分钟。\n不需要强迫自己保持专注力，聪明人只在有专注力的情况下学习。\n保持卧室的凉爽，或者冲一个热水澡。总之要让你的身体经历从温暖到凉爽的变化。这样有助于睡眠。\n开着窗帘睡觉醒来后在床上睁着眼睛再躺5分钟。这是为了持续接受太阳光的刺激，提高血清素水平。\n避免连续三个晚上睡眠周期不足争取每周至少有4个晚上能获得理想的睡眠时间。\n白天睡觉需要利用好午后（下午1—3点）和傍晚（下午5-7点）这两段睡眠修复期\n睡前1～2小时洗澡，可以帮助刺激身体的体温调节系统，促进热量有效排出，达到体温下降的效果。\n早饭不要吃太油，不要吃升糖太快的东西，会困。\n早上起来是注意力和认知能力最高的时候，然后是午觉后，再其次是运动或洗澡之后\n昼夜节律： 智慧睡眠的7个要点1． 走到户外！ 让日光调整你的生物钟， 而不是人工光线。2． 花时间了解一下你的昼夜节律， 以及它将如何影响你的生活。 让你的亲友也加入进来。3． 了解你的各项高峰和低谷数值， 监控那些会在你身上自然而然发生的变化。 使用穿戴式健身追踪器进行测量。4． 睡眠质量最高的时间出现在凌晨2-3点。 如果在日出之后才去睡觉， 你就违背了你的生物钟。5． 早上放慢速度。 醒来之后立马陷入一团忙乱之中， 早晚会毁了你的身体。 睡眠质量和我们早上醒来之后的所作所为息息相关。6． 在晚上， 蓝光是一种不合时宜的光线， 尽量让蓝光变得暗淡。 不妨多利用红光和黄光， 甚至是蜡烛光。7． 想象自己此刻在一个岛屿上、 坐在篝火边的场景： 在你目前正在做的事情中， 哪些和这一场景起了冲突？ 你打算如何纠正过来？对目前的日常安排做出一些简单的改变， 使你自己的身体状态更加吻合人体昼夜节律。\n把咖啡因当成高效的表现增强剂使用， 而不是出于习惯去喝咖啡， 并且一天的咖啡因摄入量不要超过400毫克\n用鼻子呼吸、 放松心情、 实现从明亮到昏暗的过渡。\n每隔90分钟休息一会儿， 总比每隔1小时休息一会儿来得容易一些。\n不要一次加满2升水， 然后坐在办公桌前一动不动。 每次只倒一小杯水， 这样你就可以经常去加水。\n日间小睡： 智慧睡眠的7个要点1． 利用午后休憩时机（下午1—3点） 给自己安排一个可控修复期， 是弥补夜间睡眠周期的完美方法， 这也与你的昼夜节律彼此协调。2． 黄昏（下午5—7点） 是次优的休憩时机， 因为此时人的睡眠需求极高。 但这一时段的日间小睡应控制在30分钟之内， 这样才不会影响晚上的睡眠。3． 白天睡不着？ 没关系。 只要花30分钟放松一会儿， 暂时脱离周围的世界片刻。4． 至少每隔90分钟休息一会儿， 消除大脑的疲劳， 提高注意力的集中水平。 在休息时不要使用电子设备， 你无需让自己自始至终地受到电子设备的控制。5． 不要受到你所在的企业文化的影响， 切莫先入为主地给那些白天睡觉的人贴上“ 懒惰” 的标签， 而应着手构建一种接受日间小睡和休憩的企业文化——你若不打盹儿， 就会输得很惨。6． 使用冥想或正念应用软件， 或者把玩某个珍爱的私人物品，暂时脱离当前的环境。7． 如果你真的无法脱身， 那就巧妙地安排一天的工作。 在午后倦怠期， 不要让自己困于太费神的工作\n住床垫和床架重要性比率： 你可以把100％的预算全部花在购置床垫上， 因为床架主要是装饰性的。\n让房间保持在16～18摄氏度是最理想的， 最符合这一自然进程。 当然， 不同的人对温度的敏感度不同。 \n睡眠环境： 智慧睡眠的7个要点1． 你的卧室不应该成为你生活空间的延伸。 如果可以的话， 把它重新命名为你的身心修复室。2． 清空你的房间（哪怕只在你的脑海中） ， 只把睡眠、 修复、休息所必需的东西拿回房间。3． 让你的房间隔离外界光源， 这样室外的光线就不会干扰你的睡眠。4． 让你的房间比家中其他地方更凉爽， 但不是更寒冷。5． 你的房间能给你带来安全感——放上你最爱的泰迪熊或者爱人的照片， 或者再次去查看一下门窗是否锁好， 都有助于营造安全感。6． 让房间的装饰风格保持中性， 保持房间洁净， 避免任何可能刺激大脑的东西（色彩鲜明的图片， 或让你产生可怕联想的书籍） 。7． 控制房间中电子设备的使用——在夜间关闭待机灯。 把手机拿出房间， 或至少放在你看不见的地方（并设置成静音） 。\n\n《上瘾》亲手打造习惯养成类产品习惯是指我们下意识做出的举动。成瘾”指的是长期且被动地依赖某种行为或是某个东西。集网络连接、海量数据、超快网速三者于一身的技术正在使这个世界上瘾成性。生产习惯养成类产品可以让商家稳占竞争优势。上瘾模型将用户面临的问题与企业提供的应对策略衔接在一起，二者频繁互动，促成用户养成习惯。习惯养成类产品起初都是非必需品（比如维生素），可一旦发展为习惯，它们就会变成必需品（比如止痛药）。\n上瘾模型的四个阶段1. 触发一是该行为简便易行，二是行为主体有这个主观意愿。习惯往往是被日复一日的生活逐渐打磨而成，但是，习惯形成过程背后的联动效应却都是始于某个触发。\n\n外部触发通过发出行动召唤来暗示用户，这是打造习惯养成类技术的第一步。我们身边的任何东西都有可能充当行动召唤。外部触发通常都潜藏在信息中，这些信息会告诉用户接下来该做些什么。选择项越多，用户用于权衡的时间就越久。太多的或者无关的选项会让他们游移不定，不知所措，甚至就此罢手。4减少有关下一步行动的思考时间，这会提高某种行为发展为无意识习惯的可能性。外部触发通过将信息渗透在用户生活的各个方面来引导他们采取下一步行动。\n\n类别\n\n付费型触发做广告或是通过搜索引擎做推广\n回馈型触发正面的媒体报道，热门的网络短片，以及应用商店的重点推介，\n人际型触发（病毒式增长）熟人之间的相互推荐是一种极其有效的外部触发\n自主型触发它每天都会持续出现，所以用户最终会选择认可它的存在。\n\n付费型触发、回馈型触发以及人际型触发都是以争取新用户为主要目标，而自主型触发以驱动用户重复某种行为作为重点，目的是让用户逐渐形成习惯。\n\n\n\n内部触发情绪，尤其是负面情绪，是一种威力强大的内部触发，能给我们的日常生活带来极大的影响。诸如厌倦、孤独、沮丧、困惑或者游移不定等情绪常常会让我们体验到轻微的痛苦或愤怒，并使我们几乎在一瞬间就不自觉地采取行动来打压这种情绪。外部触发可以培养新习惯，而内部触发造就的情感纽带则可以让新用户变成你产品的铁杆粉丝。\n\n\n内部触发通过用户记忆存储中的各种关联来提醒他们采取下一步行动。编写用户情境体验要进入某种情绪状态，你可以尽可能多地问问自己“为什么”。通常当你问到第五个“为什么”时，你所期冀的情绪状态就会出现。丰田生产系统中被大野耐一称为“5问法”的著名方法通过问5个“为什么”，人们能够很轻松地发现问题的实质并找出相应的解决方法。\n\n朱丽为什么需要使用电子邮件？\n\n答案：为了接收和发送信息。\n\n她为什么要接收和发送信息？\n\n答案：为了分享并即时获取信息。\n\n她为什么想要分享和获取信息？\n\n答案：为了了解她的同事、朋友和家人的生活。\n\n她为什么想要了解他人的生活？\n\n答案：为了知道自己是否被别人所需要。\n\n她为什么会在意这一点？\n\n答案：因为她害怕被圈子所抛弃。\n恐惧感是她身上最强大的内部触发，因此，我们在设计产品时，应该考虑使它能减轻用户的恐惧心理。要开发习惯养成类产品，设计者需要揣摩用户的心理，了解那些有可能成为内部触发的各种情绪，并且要知道如何利用外部触发来促使用户付诸行动。\n弄清楚用户为什么需要某个产品或服务，是设计者务必要掌握的关键信息。\n2. 行动人们在期待酬赏时的直接反应斯坦福大学说服技术研究实验室的主任福格博士构建了模型。借助这套模型我们可以相对容易地了解人类行为背后的驱动因素。\n福格认为，要使人们行动起来，三个要素必不可少。第一，充分的动机；第二，完成这一行为的能力；第三，促使人们付诸行动的触发。福格行为模型可以用公式来呈现，即B=MAT。B代表行为，M代表动机，A代表能力，T代表触发。让我们借助福格曾经引用的一个例子来解释一下该模型的原理。设想一个场景：你的手机响了，而你却没有接，这是为什么？\n可能是因为手机放在包里，你一时间没找到。这个时候，你没有能力接电话，导致行动受阻。换句话说，你的能力被限制住了。\n也许你以为对方是电话推销员，不想接听。动机不足导致你对来电置若罔闻。\n也可能来电很重要，你也够得着手机，但是手机铃声被设置为静音了。这个时候，就算你有强烈的动机，并且能轻易接通电话，但还是没接上，因为你压根儿就没听见手机响。这就意味着，触发没有出现。\n触发提醒你采取行动，而动机则决定你是否愿意采取行动。爱德华·德西博士是罗切斯特大学的心理学教授，同时也是“自我决定论”的开创者，他对动机的定义是：行动时拥有的热情。\n福格博士认为，能够驱使我们采取行动的核心动机不外乎三种。\n第一种，追求快乐，逃避痛苦；第二种，追求希望，逃避恐惧；第三种，追求认同，逃避排斥。他指出，所有人的行动都受到这三组核心动机的影响，每一组中的两个要素就像是杠杆的两端，其上下摆动的幅度会导致人们做出某种举动的可能性相应地增加或者减少。\n蕴含在广告中的动机也许没有哪个行业会像广告业那样把动机表达得如此直白。广告策划人常常会猜透用户的动机，并借此来影响他们的习惯。经常被广告商利用的动机就是老话所说的“性卖点”。作为一种由来已久的广告设计元素，暴露而性感的身体（通常是女性身体）几乎可以用来给所有产品做宣传\n内部触发是人们生活中频繁出现的一种内心之“痒”，而适当的动机会鼓励人们用行动来消除这种痒痛。但是，设计人员发现，就算触发生效，动机强烈，用户仍常常不按照设计者期望的轨迹前进。这是为什么？就是因为可行性不足，换句话说，用户没有能力轻松自如地使用这个产品。\n福格总结了简洁性所包含的6个元素，即影响任务难易程度的6个要素，它们是：\n\n时间——完成这项活动所需的时间。\n\n金钱——从事这项活动所需的经济投入。\n\n体力——完成这项活动所需消耗的体力。\n\n脑力——从事这项活动所需消耗的脑力。\n\n社会偏差——他人对该项活动的接受度。\n\n非常规性——按照福格的定义，“该项活动与常规活动之间的匹配程度或矛盾程度”。\n\n\n先解决能力，其次是动机。\n启发与感知启发，是指我们的大脑利用过往的经验，在对事物做出判断的过程中抄了近道。稀缺效应环境效应锚定效应「如有折扣」人们在做决定时，往往只被某一方面的信息所吸引。赠券效应\n行动是人们在期待酬赏时最直接的反应。根据福格博士建立的行为模型：1.要促成某种行为，触发、动机和能力这三者缺一不可。2.要增加预想行为的发生率，触发要显而易见，行为要易于实施，动机要合乎常理。3. 人类行为不外乎受三种核动机的影响：追求快乐，逃避痛苦；追求希望，逃避恐惧；追求认同，逃避排斥。4. 时间、金钱、体力、脑力、社会偏差、非常规性等六个因素会对用户的能力产生影响。能力还会因人因地而异。启发法是指我们借助认知经验对事物做出快速判断。产品设计者可以从上千种启发法中选择一些来获取灵感，提高产品的吸引力。\n3. 酬赏多变的酬赏转变为持续的热情满足用户的需求，激发使用欲\n多变的酬赏主要表现为三种形式：社交酬赏，猎物酬赏，自我酬赏社交酬赏人类是社会化的物种，彼此依存。社交酬赏，抑或说部落酬赏，源自我们和他人之间的互动关系。为了让自己觉得被接纳、被认同、受重视、受喜爱，我们的大脑会自动调试以获得酬赏。\n猎物酬赏人们追逐资源，追逐信息，其执着程度不亚于追逐猎物的桑人猎手。\n自我酬赏体现了人们对于个体愉悦感的渴望。在目标驱动下，我们会去克服障碍，即便仅仅是因为这个过程能带来满足感。很多时候，完成任务的强烈渴望是促使人们继续某种行为的主要因素。\n保障用户的自主权你有权接受，也有权拒绝。\n要想使用户对产品抱有始终如一的兴趣，神秘元素是关键。\n创造内容的过程则蕴含着“无穷的多变性”。\n○ 所谓社交酬赏，是指人们从产品中通过与他人的互动而获取的人际奖励。○ 所谓猎物酬赏，是指人们从产品中获得的具体资源或信息。○ 所谓自我酬赏，是指人们从产品中体验到的操控感、成就感和终结感。○ 在自主权受到挑战时，我们会感到自己失去了选择的自由，通常会对某种新的行为习惯产生排斥。心理学家称之为“逆反心理”。因此，保障用户的自主权是吸引他们的关键。○ “有限的多变性”会使产品随着时间的推移而丧失神秘感和吸引力，而“无穷的多变性”是维系用户长期兴趣的关键。\n4. 投入投入并不意味着让用户舍得花钱，而是指用户的行为能提升后续服务质量。添加关注，列入收藏，壮大虚拟资产，了解新的产品功能通过用户对产品的投入，培养“回头客”\n我们总会高估自己的劳动成果付出过劳动的人会给自己的折纸作品附加更多的价值，阿雷利将这种现象称为“宜家效应”。宜家让客户自己动手组装家具。通过自己动手，客户对自己组装的家具会产生一种非理性的喜爱\n我们总会尽力和过去的行为保持一致我们总认为自己可以按自己喜欢的方式自由行事，我们的判断不会受到自己过去行为的影响。但事实上，研究表明，我们过去的行为可以清晰准确地预知我们未来的行为。\n我们总会避免认知失调为避免这种不喜他人之喜的认知失调，我们会慢慢改变自己对过去不喜欢的事物的看法。\n在一个标准的反馈回路中，给出提示、采取行动和酬赏用户这三大步骤能够改变我们的即时行为。与第三章中讨论的行动阶段不同，投入阶段与客户对长期酬赏的期待有关，与即时满足无关。投入阶段背后的大思路是利用用户的认识，即使用（个人投入）越多，服务越好。就像一段良好的友谊，投入的努力越多，双方受益越多。\n○ 行动阶段使用户即时获得满足，而投入阶段主要与用户对未来酬赏的期待有关。○ 对产品的投入会令用户形成偏好，因为我们往往会高估自己的劳动成果，尽力和自己过去的行为保持一致，避免认知失调。○ 用户只有在享受了各种酬赏之后才会对产品进行投入。○ 用户对产品的投入不仅可改进产品服务质量，增加用户再次使用产品的可能性，还能令储存价值以内容、数据资料、关注者、信誉或技能等形式自然增长。○ 用户投入可通过加载下一个触发的方式令用户重新开始上瘾循环，从而增加了用户反复进入上瘾循环的可能性。\n操控模式现在你可以利用上瘾模型询问自己关于如何让用户上瘾的五个基本问题：\n\n用户真正需要什么？你的产品可以缓解什么样的痛苦？（内部触发）\n\n你靠什么吸引用户使用你的服务？（外部触发）\n\n期待酬赏的时候，用户可采取的最简单的操作行为是什么？如何简化产品使该操作行为更轻松容易？（行动）\n\n用户是满足于所得酬赏，还是想要更多酬赏？（多变的酬赏）\n\n用户对你的产品做出了哪些“点滴投入”？这些投入是否有助于加载下一个触发并储存价值，使产品质量在使用过程中获得提升？（投入）\n\n\n○ 为帮助习惯养成类技术的设计者评估其操控用户背后的道德责任，首先要确定其工作性质属于四象限中的哪一个。你是一名健康习惯推广者、兜售商、娱乐用户者，还是经销商？○ 健康习惯推广者会使用自己开发的产品，并相信该产品可极大提高人们的生活质量。他们获得成功的概率最高，因为他们最了解其用户的需求。○ 兜售商相信自己的产品可极大提高人们的生活质量，但自己并不使用该产品。他们必须谨防骄傲自大和脱离实际，因为他们在为自己并不了解的人提供解决方案。○ 娱乐用户者会使用自己的产品，但并不相信该产品可提高人们的生活质量。他们可以获得成功，但在某种程度上无法提高他人的生活质量，其产品往往缺乏持久力。○ 经销商既不使用产品，也不相信该产品可提高人们的生活质量。他们获得长久成功的概率最低，在道德上往往处于不利地位。\n案例研究○ 《圣经》应用程序作为桌面网站根本无法吸引用户。移动界面可通过频繁提供触发的方式增强程序的可访问性并增加用户的使用量。○ 《圣经》应用程序通过将有趣内容前置并提供经文音频的方式增强了用户采取行动的能力。○ 将经文分解成短小的片段之后，用户发现每天阅读《圣经》变得更加轻松。保持下一个经句的神秘感会增加一种可变酬赏。○ 在应用程序中每添加一条评注、一个书签，或高亮显示存储数据（以及数值），都会进一步增强用户的参与度。\n习惯测试假定你要对一款产品、产品用户以及有意义的数据进行研究，步骤如下：第1步：确定用户\n习惯测试的第一个问题是——哪些人是产品的习惯用户。记住，你产品的使用频率越高，形成用户习惯的可能性就越大。\n第2步：分析用户行为\n希望你已确定了一些满足习惯用户标准的用户。可是多少用户才算够呢？我的经验是5%。虽然活跃用户的比例应该比这一数字高得多才能维持业务，但5%是一个很好的基本标准。\n不同用户和产品进行互动的方式略有不同。即使是一个标准的用户流，他们使用产品的方式也会带有各自独特的印记。用户行为有助于建立一种可识别的用户模式，例如用户的来源、用户注册时所做的决定、使用该服务的用户好友数量。要对用户数据进行筛选以确定是否存在相似之处。你要找到一条“习惯路径”，即你最忠实的用户共同具有的一系列相似行为。\n第3步：改进产品\n有了新的见解之后，注意力应重新回到产品上，要想办法推动新用户朝忠实用户所采取的习惯路径前进。这一过程可能包含注册渠道更新、内容变更、功能去除或现有功能增强。\n很多习惯养成类产品一开始都被看作“维生素”，即可有可无的产品，但随着时间的推移，这些“维生素”通过出色的解痒或镇痛疗效成为人人必备的“止痛药”。\n○ 上瘾模型有助于产品设计者为习惯养成类技术制定一个初始标准，还有助于从现有产品的习惯养成潜能中发现隐性的弱点。○ 一旦产品被开发出来，“习惯测试”有助于确定产品粉丝，找出哪些产品因素有助于用户形成习惯（如果有的话），搞清楚产品的这些方面为何会令用户行为发生改变。习惯测试包括三个步骤：确定用户、分析用户行为和改进产品。○ 首先，深入研究数据，确定人们的行为方式和使用产品的方式。○ 其次，对这些发现进行分析，找出习惯用户。要想得出新的推测，研究忠实用户的行为和习惯路径。○ 最后，改进产品，吸引更多用户走上习惯用户所走的路径，然后评估结果，视需要继续修改。○ 敏锐观察自己的行为有可能带来新的见解和创建习惯养成类产品的机会。○ 在某些领域中，新技术会令上瘾模型中的循环速度更快，循环次数更频繁，或循环过程更有价值，找到这些领域可为开发新的习惯养成类产品提供绝好的机会。○ 新生行为——很少有人看或做，但最终会满足大众市场需求的新行为——能为今后带来突破性的习惯养成机会。○ 更改界面会使用户行为发生变化，并带来商机。\n两个因素第一，频率，即某种行为多久发生一次；第二，可感知用途，即在用户心中，该产品与其他产品相比多出了哪些用途和好处。若某种行为发生的频率足够高，被感知到的用途足够多，就会进入我们的“习惯区间”，进而演变为一种默认的行为方式。只有当某种行为的发生频率足够高、可感知用途足够多时，它才可能发展为习惯。\n如何做假如你要开发一款习惯养成类产品，请先回答以下问题：◆你的企业模式要求用户形成什么样的习惯？◆用户能利用你的产品解决什么样的问题？◆用户目前是以什么方式在解决他们的问题？为什么必须要解决这个问题？◆你希望用户和你的产品之间发生何种程度的关联？◆你希望将哪种用户行为发展为习惯？\n触发◆参照你在上一章“现在开始做”这个环节中提供的答案，完成以下练习：哪些人会使用你的产品？◆你期望用户形成什么样的习惯？◆想出三个能够促使用户使用该产品的内部触发，可参照本章中介绍的“5问法”。◆哪一个内部触发在用户身上出现的频率最高？◆利用出现频率最高的内部触发和你期望塑造的习惯，完成以下这个简短的用户情境设计：每当用户感到……（内部触发），他就会……（预期习惯的第一步）。◆回到前一个问题，在迈出通往习惯的第一步时，用户会做什么？何时何地可以启动外部触发？◆如何才能在用户的内部触发被触动时及时地引入外部触发？◆想出至少三种能触发你的用户关注现有技术（电子邮件、推送通知、短信等）的常规方法。接着，请发挥你的想象力，构思至少三种超出常理且目前难以实现的方法，来触发用户关注你的产品（可穿戴式电脑、生物传感器、信鸽等）。你会发现这些疯狂的念头会激发新的洞见，而它们未必真的不可理喻。若干年后，新的科技手段将会把目前难以想象的构思都变为现实。\n行动◆假设你是用户，想象一下自己会在怎样的情况下对一个产品或服务产生浓厚的兴趣。首先是感受他们的内部触发，最后想象他们期待的结果。在获得酬赏之前，用户一般要经历哪几个阶段？这个过程与本章列举的例子中呈现的简单性有什么不同？与竞争对手相比，你的产品或服务有何特色？◆是什么原因限制了用户完成某项任务的能力，而这一行为有可能变成他们的习惯？时间金钱体力脑力社会偏差非常规性◆构想三种可验证的，能使用户更易于完成预期任务的方法。◆考虑如何利用启发法来更轻松地促成用户的某种行为。\n酬赏◆挑选5名用户进行开放式访谈，了解他们对你产品中的哪一个部分感兴趣。问问他们，在使用该产品时，是否有过喜出望外的体验，是否格外中意产品的某个特性。◆定期审核产品或服务的使用步骤，想一想，哪一种方式能够减轻用户的负担？这种方式是否在满足用户需求的同时，还能让他们产生依赖？◆为你的产品构想出三种吸引用户的酬赏方式：社交酬赏——来自他人的认同。猎物酬赏——资源、金钱、信息。自我酬赏——操控感、成就感、胜任感。\n投入参考上一章“现在开始做”部分你想出的答案，完成以下练习：◆查看你的上瘾流程，看看你的用户正在做哪些“点滴投入”？其中哪些投入可以增加他们成为回头客的可能性？◆想出三种方式令用户对你的产品进行小小的投入，以实现：◆加载下一个触发；将储存价值以数据资料、内容、关注者、信誉和技能的方式显现出来；确定“加载一次触发”需要多长时间才能令你的用户成为回头客。如何减少拖延以缩短上瘾循环周期？\n操控模式◆花一分钟时间思考一下你自己属于操控模式中的哪一象限。你使用自己的产品或服务吗？这会影响积极行为还是消极行为？你对此感觉如何？如果你正在以某种方式影响他人的行为，问问自己是否对此感到自豪。\n参考你在第五章“现在开始做”部分的答案，完成以下练习：◆按本章所介绍的方式进行习惯测试，确定长期参与型用户的行为模式。◆注意自己下周使用日常产品时的行为和情绪，问问自己：◆触发我使用这些产品的因素是什么？这些因素是外部的还是内部的？◆我目前使用的这些产品是自己预期中的产品吗？◆这些产品如何通过增加外部触发或鼓励用户对其所享用的服务进行投入的方式改进自己的用户加入通道，吸引用户再次参与？◆和自己社交圈以外的三个人进行交谈，搞清楚他们移动设备的首页上是哪些应用程序。让他们像往常一样使用这些应用程序，看看自己是否能从中发现任何不必要的或新生的行为。◆想出五种能为你的业务创造新机会或带来威胁的新界面。\n\n\n《搞定》如果你的大脑空空如也，总是处于一切就绪的状态，那么它就会向一切事情敞开大门。——铃木俊隆\n\n任何没有找到应有的位置和恰当存在方式的事务，都会盘踞在我们的脑海中，成为悬而未决的问题。\n持续不断且毫无成效地深陷于我们不得不处理的事务当中，是对时间和精力的最大浪费。——克里·格利森\n我们需要把收集和积累的所有“材料”都转化成包含重要行动、项目和有用信息的明确清单。\n当想法对行动具有推动作用时，它就是有益的；当想法成为行动的替代品时，它就会成为行动的障碍。——比尔·雷德尔\n通常，盘踞在你脑中问题的数量与解决问题的效率成反比。\n对一件事情不需要进行两次相同的思考，除非你喜欢重复思考。\n混乱不是问题，关键在于需要多久才能发现其内在的相关性。——道克·奇尔德和布鲁斯·克莱尔\n只有在人类生活的主要领域，即人们训练自身反应、学习控制自身环境的过程中寻求自由的原则，才能得出有用的自由定义。——沃尔特·李普曼\n悬而未决的事务存在两个地方，即任务所处的实际位置和你的大脑。大脑中的未竟之事会折磨你的心志，从而分散你的注意力。——卜拉马·库马里斯\n\n每一件悬而未决的事情都必须存储在你的收集系统中，而不是在你的大脑里。\n你应该尽可能地控制收集工具的数量，越少越好，够用即可。\n你必须定期清空这些设备。\n\n要么将所有事情留在头脑中，要么将其清空。如果走中间路线，两头都不可靠。\n通过最少的收集工具收集具有潜在意义的所有新事务，可以使你轻松审查并评估这些新事务的性质。\n出错好过模棱两可。——弗里曼·戴森\n做事情时，并不需要花费很多心力，但是在决定做什么时，却要投入大量的精力。——阿尔伯特·哈伯德\n如果某项工作不能一步完成的话，那么，你就需要建立某种机制来提醒自己还有事情尚未处理。如果你没有建立这样一个提醒机制的话，这件事情很有可能会回到你的大脑中，重新成为一个盘踞在你大脑中的悬而未决的问题，并时刻干扰你的工作。\n工作安排越有弹性，人们越能承担繁重的工作。——迈克尔·麦格里菲，医学博士\n成功的关键因素：每周回顾一切需要采取行动的事情，我们都应当对其进行定期的回顾，以使我们的大脑不再花费精力来记忆和回想这些事情。每周做一次这样的清理工作，以便将这种“活在当下”的状态带入你的日常生活中。\n生活中的大多数事务之间都存在复杂的联系。如果不考虑这种联系而一味孤立地处理问题，肯定无法得到满意的结果。——詹姆斯·费尼莫尔·库珀\n大多数人并未真正拥有一个完善的系统，他们之所以无法从回顾中真正有收获，正是因为他们无法做到总揽全局。他们总是模糊地感觉好像还有些事情被漏掉了。而一个完善的系统，将形成一个良性循环：你建立的系统越完备，你就越信赖它；你越信赖它，你就越有坚持运行这个系统的内在动力，而每周回顾则是保持系统完善性的关键步骤。\n每一个行动决策都是凭直觉做出的。问题在于，如何从希望这个选择是正确的过渡到对它的正确性深信不疑。\n事情总是多得做不完，你可以每次只做一件事。无论是否已经采取行动，关键在于使自己保持良好的状态。\n完成你的项目，履行你的义务，兑现你的承诺——然后，你的潜意识和意识都会获得成功，从而令你获得满足感、自尊感和唯一感。——约翰·罗杰\n当你着手处理平凡琐事的时候，必须着眼于大局，这样一来，所有的烦琐小事才能够沿着正确的方向发展。——阿尔文·托夫勒理性思维的关键是更加理性的思考。不要仅仅忙着做事情,而是要站在旁边静静想一想。——罗谢尔·迈尔通常，做出一个艰难决策的唯一途径就是，回到目标上来。如果你对自己行为的动机缺乏清醒的认识，你就不可能尽力而为。只有经历过，才能积累经验。你的大脑希望填补存在于现状和目标之间的空白，不过大脑的行动毫无章法可言。计划把你卷入到工作中，但是你必须自己想方设法冲出来。——威尔·罗杰斯通过行动让自己感觉良好，要比通过让自己感觉良好来实现更好的行动容易得多。——O·H·莫尼尔只有在对未尽事宜做到心中有数的情况下，你才会觉得释然。\n人们很容易抗拒和回避自己明知需要纳入考虑的任何问题。只有行动才能掌握世界，而不是思考。手比眼更重要……手是思想的利刃。——J·布朗劳斯基\n焦虑和内疚并不是因为承担了太多工作而造成的，而是由于你撕毁了同自己的约定而导致的。当你大脑中别无他物时，你将“活在当下”，“心如止水”，工作与娱乐合而为一。关于个人成长有句老话：“有些东西，你越是抵制越难以摆脱。”最近我一直都在体会这句话对许多人和他们的工作来说是多么正确。如果你不清楚自己当前的工作究竟是什么，而且也不愿意去整理一份全面客观的清单，那么要想让自己的工作与众不同或更为出色，将很有难度。\n成千上万的人渴望永生，可是他们却不知如何打发一个下雨的星期天下午。——苏珊·厄兹（Susan Ertz）生活要稳定有序，这样在工作中你就能够充满动力和创造性。——古斯塔夫·福楼拜（Gustave Flaubert）身处流水之中人可以站立不动，但在人类洪流中却难以做到如此。——日本谚语普通人根本不知道如何让自己的生命创造价值，可他们却希望拥有另一个永恒的生命。——阿纳托尔·法朗士（Anatole France）尽力而为的时候，我们并不知道会给自己或别人的人生带来什么样的奇迹。——海伦·凯勒平静的心态不会感觉烦扰或恐惧，无论幸运与否，都会按照自己的节奏继续前进，就像雷雨中的时钟一样。——罗伯特·路易斯·史蒂文森我可以通过改变态度改变我的生活。不愿接触荆棘的人，绝对不要尝试去采摘花朵。——亨利·大卫·梭罗（Henry David Thoreau）\n是否曾经停下来思考，却忘了重新开始？——佚名只有到了我们认为生命一无是处的时候，生命才开始具有意义。——P·D·邬斯宾斯基（P. D. Ouspensky）人们之所以孤独, 是因为他们建造围墙而不是桥梁。——W·E·钱宁（W. E. Channing）生活就是你在制订其他计划时所发生的一切。——约翰·列侬（John Lennon）距离不是问题，最难的是迈出第一步。——杜·德芳夫人（Madame Du Deffand）\n责任很好逃避，逃不了的是逃避责任的后果。——E·C·麦肯齐（E.C.McKenzie）\n\n\n《曾有一个人，爱我如生命》\n\n安妮宝贝：每个男人的最初，都会有一个樱花般的女子，飘落在生命里，注定颓败。\n\n《时间管理：小强升职记》\n\n任何人成长的力量，都来自于自己的内心。衣柜整理法：收集的关键是将一切引起我们注意的东西放在收集篮里，在清空大脑的同时达到心如止水的境界。\n水龙头哗哗地流着，在下水口处形成了一个旋转的水涡，褐色的泥水带着过去的气息，眷念地打着圈，却被干净的新水冲得快速流走，越来越淡，渐渐消失。似水流年，原来是这个意思，新的流入，旧的流走，怎么抓也抓不住。——《那些回不去的年少时光》\n青春如同悬在头顶上面的点滴瓶。一滴一滴地流逝干净。\n他没有金手指却屡屡脱险，我当认为因他是主角。直到他穿上不良帅衣服时，恍惚间懂了，他一直都在变，直到活成自己最讨厌的样子才保全了身边人和自己。少年心境是江天一色无纤尘，直到万物自来湿我衣，轻舟已过万重山，终不似当年模样。你长大了，终不似当年模样\n他日若得脱身法，生吃黄连也是甜。\n陈寅恪曾言：“众生皆在苟且之中，或为生活奔波，或为理想奋斗，终其一生，不过是在这纷繁世间寻求一个安身立命之所。”正如杨绛所说：“人生苦短，因为苦和短，我们才马不停蹄，一意孤行。”\n画中山水无色，薄雾清冥，烟笼寒江，那道遗世孤立的身影处在落花时节中，立在那苍茫天地之间，只有一道孤寂背影。清风无味，芳华黯然，人间景色虽美，若无一人相伴，再美的景色填不了心中的孤寂，真是令人神伤啊\n日程规划是时间块，规划性强，但错过也就错过了，错过是因为做了别的事情。提醒事项是时间点，是任务，必须要完成，打勾才会消失。日历和提醒事项是两个独立时间纬度的事物。提醒事项的特点是，我们可以把什么事都往里面“扔”，想到什么扔什么，扔完可以立即忘记，到点了，它会以最高的姿态提醒你。如果你暂时不想完成，选择隐藏提醒，事项也仍然保留在 App 里最显眼的位置。而日历不会，过去的也就过去了。\n世界是由懒人创造的。这个世界实际上都是靠懒人支撑。世界如此精彩都是拜懒人所赐。现在你应该知道你不成功的主要原因了吧？懒不是傻懒，如果你想少干，就要想出懒的方法。要懒出风格，懒出境界。像我从小就懒，连肉都懒得长，这就是境界。——马云第一次给雅虎员工的演讲\n人的一生，凡是关键的决定，凡事真正改变命运的决定，都不是咨询别人咨询出来的。这样的决定是自己内心强烈渴望的，甚至都不敢拿出来讨论，生怕被别人知道，生怕被别人打击了自己的内心，生怕说出来就做不成了。这样的事就是命中指引你去做的事，是天命之路。\n男的的一大没意思的点是，随着年纪的增长，他们会越来越漠视情感，而且他们认为这是一种成长。\n\n推荐3部超级好看的综艺其中第5季第1期，对话B站“顶流”——罗翔，让我印象深刻，他提出了一个观点：人要接受自己的有限性，承认自己是有限的。我很认同。每个人都有无限的欲望，我们会和别人比家庭、比工作、比身材、比身价；我们都想做被人羡慕的佼佼者，谁都不想承认自己不如别人。于是，我们在无尽的比较中，麻木活着。学霸成绩好，我要每天拼命看书，缩小差距；同事业绩第一，我要加班跑业务，提升竞争力；大学同学升职高层，我这个月多报几个班，争取早日翻身。但在这个过程中，我们会不停地受打击，会怀疑否定自己的能力，会迷茫和焦虑，很是痛苦。为什么？因为你害怕承认自己的普通，却不知道，人没法驾驭超过个人能力的事情。在这种情况下，你越卖力，越会弄巧成拙。\n\n\n特别会聊天的人，思维方式是怎样的？\n\n让他觉得自己很需要你很多时候大家说话，根本目的都是渴望被理解，你能让他说得越多，他就越放松，越觉得自己需要你。如何引导提问\n最舒服的聊天应该是你先主动袒露，让对方放下戒备之心。而不是一个劲儿地去探究对方。心理学研究指出，当人们看到你的缺点或弱点时，他们会感到你是真实可靠的，没有虚伪，从而产生一种亲密感。也就是「自我暴露」。一般来讲自我暴露的层级可以分为：问候、聊事实、聊观点、聊感受、聊自卑，聊秘密。按照等级层层暴露，层级越高，你们的亲密度也就会越高。\n马东有一句话我很喜欢：「被误解是表达者的宿命。」\n\n你最勤奋的时候达到什么程度？\n\n我当时就悟出一个道理，如果一个东西是你必须学会的，你早晚都要下功夫把它学会，之前偷懒没学到的后面一定会加倍努力补回来，所以该学什么东西的时候一定要好好学会。知识只能靠自己掌握，学会了就是你的，学不会谁也帮不了你。\n出国这个事就让我明白了一个道理：千万不要让你本来努力就可以得到的东西，因为懈怠而失去了机会。很多事情都没有想象的那么难，想干什么就去做吧，然后别给自己留后路，一个劲的往那奔。\n但是无论在什么情况下，人都是有选择的。自己主动选择去做它总比被迫去做要好。\n那时候我又明白了一个道理，是你自己的任务，只有你自己能完成它，你绝望的时候，谁也帮不了你，只能靠自己。\n孤独是伴随喧嚣的后遗症\n索达吉堪布说:“当生活再也没有惊喜和感动，你会发现，其实孤独，就是最大的自由。”浮生若梦，最后的通透\n人生是海，只有浮出水面换气的功夫，永远无岸。\n为什么成年人很怀念小时候呢？是因为孩子的角色最少\n编辑部的故事深夜emo 「只要想起一生中后悔的事，梅花便落满了南山」。人生中总有一些「想得而不可得」的遗憾，每每想起这些遗憾，心中都久久不能释怀。欲买桂花同载酒，终不似，少年游。一条黄河路，道不尽一个时代的繁华。霓虹入眼，万花如海，一个又一个传奇在90年代初的中国轮番上演。城市激荡转型，个人命运转折，狂飙突进，也大浪淘沙。在改革的春风下，人人只争朝夕。也许对于其他地方的中国人而言，当年的社会面貌不像《繁花》里的上海那样光彩夺目。但那仍然是每一个平凡人都能够做梦、通过奋斗改变人生的时代。就像路遥在《平凡的世界》里说的那样：“其实我们每个人的生活都是一个世界，即使最平凡的人也要为他生活的那个世界而奋斗。”\n主演葛优那句“勇敢地去做你认为正确的事情，不要被世俗的流言蜚语所困扰，记住，要像荷花一样，出淤泥而不染”依旧是经典片段。\n山水勿相逢，此生不复见，从此春秋两不沾，风月不相关。\n\n都重生了谁谈恋爱啊\n\n枪打出头鸟，挣钱要趁早。　　恋爱狗不谈，早睡身体好。\n有空多读书，烦就摸摸脚。　　软饭不硌牙，富婆真的好。人生座右铭2.0版本\n《魔眼少女》里的那句名言：“不要因为别人的意见而改变自己的选择，做你认为对的事情。”\n帘外雨潺潺，春意阑珊。罗衾不耐五更寒。梦里不知身是客，一晌贪欢。独自莫凭栏，无限江山。别时容易见时难。流水落花春去也，天上人间。\n若非群玉山头见，会向瑶台月下逢。\n上车睡觉，下车尿尿，到点拍照，回去忘掉。\n彼时，傍晚的风悠扬地吹过了琉璃瓦，浮动了他额前的碎发，似乎吹透了他那四十岁的破旧灵魂。人生在世，其实很多时候都是为了存在感而活着的。你希望有人会记得你，希望这趟尘世没有白来，希望能留下些故事让后来人说。而不是希望自己活的像是个透明人，燃烧了自己也照不亮人生。\n等到第二天早上，灿烂的晨曦透过窗户洒入房间，外面又是一个万里无云的碧蓝晴空。\n故事的开端是一个富家千金的内心独白，讲述了社交能力基本为零的她对友情的渴望与向往。青春期本身就是一个无比外放的年龄段，而珍贵的友情就像是闪闪发亮的宝石，没有女孩不喜欢宝石，就像没有人希望一直活在独自的世界。但对于完全不熟悉甚至有些恐惧的事情，很少有人能成功地踏出第一步。不敢主动的少女就这样一直偷偷地期望着，想要一个大大的好朋友从天而降，喜欢她又对她好。那年盛夏，蝉鸣不绝，因为高考的结束，面冷心怂的天仙少女彻底离开了校园，过上了更加单调且孤独的日子，只能每天泡在图书馆去看别人的冒险。她很羡慕魔眼少佩姬苏，有忠诚的蓝狗做伙伴，有可以变成沙子的朋友陪在身边，还有勇气在宇宙间的各个星系到处遨游。她不想要那么多，她只要一个好朋友，让他带自己去同学都去过的小商品城冒一次险就满足了。这个愿望一直持续到某个烈日炎炎的中午，那天她正在看魔眼少女的第三卷，忽然有种被人注视的感觉，于是转过头茫然地看去，没想到和一个“长相普普通通”的男生产生了默契地对视。——第297章 我们的故事\n不过他不打算让袁友琴再做饭了，而是等着老爹下班回来，直接去济州最好的饭店里搓了一顿。顺便，他还给两口子发了个红包。其实这种事其实压根儿不需要过年过节做，因为不管你什么时候做，那天的他们都会感觉自己是在过节。江勤有过一次失败的人生，但这个失败并不仅仅只是因为没钱没房没老婆，还因为他浪费了自己的人生，亏欠了自己的父母。他看过很多重生文，主角要么快意恩仇，要么放飞自我，要么整天盯着裤裆里那点事，但真轮到他的时候，他才发现自己的心态完全不是这样的。他死过一次，总觉得现在的时间是借来的，是用来还债的，于是对所有东西都感到无比珍惜。这种心态其实是有些病态的，他不知道好还是不好，但归根结底，他都不希望再给自己留下遗憾，或者给别人留下遗憾。\n八月底的盛夏，白天的气温仍旧居高不下，近夜的晚风也带着略微的燥意\n不良情绪确实会影响交感神经，造成胃肌收缩缓慢，导致胃动力不足，从而减弱食欲。\n一个人对另一个人的印象并不是固定的，这种印象往往会随着信息接收范围的增大和信息接收渠道的增多而发生变化，不同阶段的印象与印象之间甚至会产生对立。当你对同一个人产生了截然相反的印象，这种感觉就很容易让人怀疑人生。\n生活这件事是需要自己经历才有意义的，谁都没资格自以为是地去打破别人的憧憬，哪怕你真的懂很多，但也要考虑人家想不想知道。\n时间的流逝是可以从光线的变化中感受到的，尤其是黄昏时分，屋内忽然昏黄，忽然变暗，仿佛太阳的坠落开始加速。\n很快，一本故事书就被看完了，日落也到了最灿烂的一刻。小富婆看着黄昏的残阳透过窗棂留在白墙上的一抹斜影，眼眸被染成了瑰丽的火红色，连睫毛都灿若金丝。保姆室的窗框本来不大，但影子落在墙上却被放大了一倍，把两个人都框在了日落前的夕阳之中。\n高筑墙，广积粮，缓称王\n空山新雨后，天气晚来秋\n秋日的日光通过窗棂撒入室内，营造出了半明半暗的恍惚感，让江老板有点分不清是早上还是下午。\n友情这个东西是有情感上限的，一旦上限满到要溢出的时候，很多的喜欢都是通过动作来表现的。因为语言虽然可以优美也可以精细，但在描述情感时还是会苍白无力，而有些从内心发出的热烈，只有相互触碰的亲密才能进行传递。比如牵手，比如拥抱，比如亲吻。\n傍晚的红日开始朝着西面沉去，厚重的云层逐渐被残留天际的斜眼染透，勾勒出了比白天更加清晰的轮廓。\n北方的冬至大多数人吃的是饺子，而南方的冬至大多数都是吃汤圆的。饺子香，汤圆甜，各有各的妙处。\n暖烘烘的宿舍里，窗外是深邃的冬夜，虽然没有飘雪，但寒风的声音还是隐约可闻的。\n套路在精不在新，有用就行，这叫一招鲜，吃遍天。\n岁月是一场有去无回的旅行好的坏的都是风景\n生活不是你活过的样子，而是你记住的样子\n其一，小孩子看世界，与大人不同，比如身高等生理特点有限制，“矮人看戏何曾见，都是随人说短长”。其二，有阅历或经历（含影视、图像等等）城市的摩天大楼有参照系。\n她以为自己做好了准备回去，所以对即将迎接的现实并不害怕。但她这才反应过来，她并不是不害怕，只是没有实感。亲人的离去不是一时的大雨，而是一生的潮湿。\n“祝她生日快乐，学业顺利。”陈源，“并祝愿她在今后的日子里，旦逢良辰，顺颂时宜。一岁一礼，一寸欢喜。”\n于道各努力千里自同风呀朋友\n在唱之前，陈源还拿起一罐啤酒，咕噜咕噜的下肚.足足喝了三分之一。“润嗓子是吧？”周宇说。“茶能明目，酒能开嗓。”\n旧游无处不堪寻，无寻处、惟有少年心\n因为自尊，所以胆怯；因为胆怯，所以退缩；因为退缩，所以落后；因为落后，所以不甘；因为不甘，所以心中戚戚你有故事我有酒\n傲娇，金毛，败犬，三缺一龙族，傲娇楚子航，金毛凯撒，败犬路明非，缺一个芬格尔\n“你帮过的人不一定会帮你，但帮过你的人极有可能再帮你。”\n年少有七难：钱难赚，情难断，话难言，心难懂，命难改，路难走，人难做。\n\n逼我重生是吧\n\n人海冷漠，你是人间炽热。星河滚烫，你是人间理想。\n早一点确认心意，但不要太早确认关系。\n我可跟你说，你以后可不能做舔狗啊，有的人的心是海绵体做的，他妈的越舔越硬。\n好女孩别辜负，坏女孩别浪费。\n你可真是老奶奶钻被窝——给爷整笑了。\n暖男排狗后边\n去你妈的命运，命是弱者借口，运是强者谦词。\n看成败，人生豪迈，不过是从头再来。\n不要害怕重新开始，因为这一次，你不是从头开始，而是从经验开始。\n对对对，太阳升起是鸡叫出来的，呵呵哒\n所谓有趣的灵魂，实际上就是这个人的信息密度和知识层面，都远高于你，并愿意俯下身去听你说那毫无营养的废话和你交流，提出一些你没有听过的观点，颠覆了你短浅的想象力及三观。\n洗澡的时候，水温变得忽冷忽热，你知道的，这是有人跟你共用水资源了。\n没有随时可以抽身的本事，那就要做好被对方拿捏的准备。\n无所谓，我会出手。\n用最省的布料，挣最多的钞票！\n暂停时间本是神技，但摄影与记录让我们窥探了神的技能。\n亲人的离去不是一时的暴雨，而是一生的潮湿。\n骆驼趾、鲍鱼线就是瑜伽裤运动之后贴身在私密部位形成特殊的形状\n短暂的陪伴是奖励，但你的贪心和期待永远是最大的惩罚。\n夜晚当然是属于所有人的，但对于有些女孩来说，这声问候却不是的。晚是全世界的晚，安是只给你的安。那么，晚安\n就像是元稹写的一首诗。戏调初微拒，柔情已暗通。低鬟蝉影动，回步玉尘蒙。转面流花雪，登床抱绮丛。鸳鸯交颈舞，翡翠合欢笼。眉黛羞频聚，朱唇暖更融。气清兰蕊馥，肤润玉肌丰。无力慵移腕，多娇爱敛躬。汗光珠点点，发乱绿松松。\n立场不同，屁股决定脑袋\n玩归玩，闹归闹，别不计后果的开玩笑\n余华：我在情感上的愚钝就像是门窗紧闭的屋子，虽然爱情的脚步在屋前走过来又走过去，我也听到了，可是我觉得那是路过的脚步，那是走向别人的脚步，直到有一天，这个脚步停留在这里，然后门铃响了。有人就是这样，如果你不敢开门，他还是会站在门口等你，反复按你的门铃，然后告诉你，我真的没有走错。她以前也从没想过要给任何人打开这扇门，哪怕有人坚持不懈地按铃，也不管用的。可偏偏这是一个浑不吝的家伙。他跟个劫匪一样，是他妈破窗进来的。他就这样不讲道理的把她的一切都给占用，全部打上他的符号与痕迹，还嬉皮笑脸地把这儿当作自己家似的，隔三差五的就从破掉的窗户里再窜进来。\n他出声：“你有没有听过这样一句话：貌美，如稚子抱金过街，路人皆为盗匪！”\n人不是活一辈子，不是活几年几月几天，而是活那么几个瞬间\n若夫淫雨霏霏，连月不开，阴风怒号，浊浪排空\n亮剑 生日\n新年快乐宝贝，我们各许一个愿望吧，让对方实现。今天是我生日，我想让你陪我一起过怎么过？让我生日\n旅游出行，带多一身衣服——谁说穿着衣服就不能淋浴了？\n因此，他只需略施“手段”，便可让她宫亏一溃！\n慢慢的，章琪琪的【大冒险】来到了经典的《章口就来》这一阶段。程逐直接把她抱起，然后一同进入了次卧的卫生间。没错，是次卧，不是主卧。他知道这位网红校花肯定放不开，肯定也做不到一起洗。所以，他看了一眼她今天的穿搭，看了一眼白衬衫和百褶裙，心中多了一项选择。谁说穿着衣服就不能淋浴了？“咚！”淋浴间的门被用力关上。花洒里开始出热水。在这逼仄狭小的空间里，热水从高处而下，把二人全都淋透了。他就一直亲她，让她一时之间也无法去管周围发生的一切。\n她只是下意识的在让自己的脸颊和头发尽量避开花洒里涌出的热水。白色的衬衫在沾水后变得半透明，然后全部紧贴在肌肤上。衬衫是丝制的，触感一下子都变了。这种体验别说是未经人事的网红校花了，就算是那种专属于榜一大哥的女网红，都不一定体验过。玩，还是程逐会玩。因此，此刻的章琪琪真的有几分意乱情迷。她真的彻底上头了，感觉人都要疯掉了。搞笑的是，在这种情况下，她仅存的一丝理智是形象管理！头发如果微湿，倒也无所谓。\n如果完全湿漉漉了，挺麻烦的。还有就是她今天用的化妆品都很好，是能起到一定的防水效果的。可如果热水这么一直冲，那也不是个事儿啊。因此，她在跪下来的时候，直接把水给关了。就这样，绿茶学姐开始了自己【大冒险】的最终章—《小逐呸琪》。跪下来的章琪琪脑袋前后摆动，微湿的长发也随着脑袋在空中微微晃动着，发丝处的一些小水滴也因此而酒落。随着跪坐，她那尖尖翘翘的屁股在此刻把百褶裙的后边给撑得鼓鼓的。但在整个过程中，她几乎都是闭眼的状态，哪怕偶尔睁眼，她也不敢与正在居高临下地俯视她的程逐对视。\n程逐时而会伸出大手，把她贴在脸颊上的湿发给捋到后头去。这种温柔的小举措于章琪琪而言，就像是得到了肯定一样。她开始更加卖力了。几分钟后，程逐感觉到自己衣服上的水温已经不热了。这可不行，大家都容易着凉。“起来吧。”他道。然后，湿重的衣服就被逐一扔了出去。他还拿起了浴巾，很温柔很细心的先裹到了绿茶学姐的身上，然后才开始给自己擦水珠。二人离开了卫生间，来到了次卧内。程逐浴巾没丢，也拿了过来。\n除此之外，他的手机也被丢在了床上。本来是放在裤子口袋里的，他又没喝多，可不会让手机进水。此刻，手机开始发出声响，收到了微信。程逐怀疑是奕奕发来的！他准备伸手去拿手机，想要打开来看看。可这深更半夜的，章琪琪也不会这么想。酒后的她，觉得是林鹿发来的！“别看！”她双手捧住了程逐的脸颊。虽说在程逐看来，绿茶都是要驯的。可今天毕竟特殊。\n算了，就都依她吧。他微微点头，嘴唇便又触碰到了一起。程逐的手放在她平坦的小腹上，能感觉到她的紧张，因为这个位置无比紧绷，时而还会轻颤一下。他向下看了一眼，得出了结论：“她还真是天生的啊。”传说中的四象之一。要知道，这神兽可是天之四灵之一，西方之神，主杀伐！程逐觉得很贴切。毕竟今天一杀就是以亿为单位….可不是主杀伐？章琪琪见程逐盯着看，忍不住抬手捂住了自己的脸庞。程逐俯下身子，凑到她的耳边，明知故问：“这也是天生的？”闭着眼睛且捂着脸庞的章琪琪微微点了点头，轻轻的嗯了一声。狗男人的大手越过一片荒芜之地，开始在寸草不生的地方..寻找水源？大自然里，哪怕是荒芜到了沙漠这种程度，也是会存在水源的，不是吗？他又开始了新一轮的挑豆，与先前不同的挑豆。在他的指捣下，学姐的口申时而会流出一些声音来。大家如果去过早餐店，就应该知道，如果有馒头被你的手摸过了，店主就会叫你买走，觉得被你摸得不干净了，它就是你的了。现在这样的馒头现象，也在这位大户人家和程逐身上发生。不干净了。\n是他的了。时机已经成熟，程逐却并不着急。他现在最先做的是伸出自己的双手，强行把章琪琪遮住自己脸庞的双手给拿开。紧接着，他就看到了一张面带媚态，泛着红色，眼波流转，小口微张的迷离脸庞。程逐的手机在此刻又响了一下，又收到了一条疑似来自于奕奕的微信，像是在助兴。他一言不发，一会儿看看她的脸，一会儿目光又向下，如此反复了数次，宛若询问。绿茶学姐也什么话都没说，只是看着他的眼睛，然后无比紧张地缓缓闭上了自己的双眼，宛若默许。众所周知，大户人家非常人所能进出。但程逐不一样，他是亿万富翁啊，而且他的事情比较急。他急着给孩子…..上户口。\n此刻的网红校花，真的是羞耻感又到了一个新的高度。可偏偏没羞多久，就彻底沦陷到了那一层又一层的涟漪之中。呈一条直线后，大户人家的户型图便完美的呈现在了程逐的面前，不得不说，户型拥挤!在他的作用下，被撑得很开，竟被撑得宛若成了一个包裹着的圆。外面有一圈圆形，里面也有一圈圆形。像是肉泳圈。程逐低头看着，感觉有肉被自己挤了进去，然后又有肉被自己带了出来，如此反复。学姐真的感觉自己今晚可能就会当场死掉。窗外的雨在此刻突然又变大了，雨声格外清晰，甚至显得有几分嘈杂。但这些声音，却也无法完全遮盖住次卧内的声音。那寸草不生的荒芜之地，程逐探寻到了一座肉井。打井的工作完全后，里头自然就有着珍贵的井水满溢而出。这个雨夜，打湿了整座杭城。也让程逐家中的浴巾一塌糊涂。\n不得不说，从小就学跳舞，上了大学后还开始上瑜伽课的女生，柔韧性就是好。程逐握着脚腕就是轻轻一斑，差点掰成了一字马…这个世界有时候就是这般残忍，你求而不得的女孩，可能已经被人掰来掰去了。而像她这种先天瑜伽裤圣体，有着自己的神奇之处。在这种情况下，程逐是不会猴急的。因为他一直觉得，吃馒头之前，要给馒头先刷酱。所以，他就一直提着东西在那刷啊刷，刷啊刷。这个画面很诱人，会让人非常有食欲。把它挤开，给它蘸酱，它自己闭合….如此反复。这位杭城的网红圈顶美本来就很紧张，甚至心中还有小小的害怕，觉得自己就要经历人生中的一场蜕变了。结果，蜕变一直不开始。章琪琪早就紧紧闭上了眼睛，觉得时间过得很缓慢，也很煎熬，“学弟，我难受..”学姐在心中想着。最终，她睁开眼睛，瞟了一眼。然后，她就看到程逐一直低着头，忙得要死。他现在很专注，玩得不亦乐乎。这让学姐的羞耻感在这一瞬间又开始不断飙升。随着体温的升高，她觉得酒劲上涌的更加厉害了，人都有点越发晕乎了。\n也让程逐家中的浴巾一塌糊涂。它就像是一副水墨画。本已有了朵朵鲜艳的梅花，然后梅花又被水给浇了，在画卷上渲染开来。到了后面，学姐已经开始不断地变换称呼。她也不说事儿，就一个劲的喊人。一会儿是程逐，一会儿是学弟。“程逐…程逐..”“学弟….你…学弟….”程逐的大手紧紧抓着她的小腿，最后，他竟看到了视觉冲击力极强的一幕。她先是平坦的小腹处产生震颤，然后这股震颤竟开始一路蔓延，让她那浑圆的大腿腿肉都在轻轻发抖。他抓住这个间隙，松开了双手，然后再度俯下身去。章琪琪立刻抱住他，然后主动亲了上来。一人嘴里传出一声闷哼，一人嘴里流出一声呜咽，双唇分离，程逐气息粗重地低头看向她，只见学姐正闭着眼睛，却张着嘴巴进行口呼吸，舌头抵在了下齿处，清晰可见，又红又润。\n你引以为傲沾沾自喜的手段，却是她心里刺痛又不愿拔去的针\n最终，整条黑色长裙，只覆盖住了她那平坦的小腹，所有的布料都在她那盈盈一握的腰肢处堆积。目光顺着裙子堆积处向上看，是坚挺傲人的风光。目光顺着裙子堆积处向下看，是浑圆修长的美景。当然，还有卿盆大雨后，那稀疏处的蜷曲与润泽。/ 引自《逼我重生是吧》幼儿园一把手第六百九十一章《迷离的夜》\n后面的情节如下：轻拢慢捻抹复挑，初为《霓裳》后《六幺》。大弦嘈嘈如急雨，小弦切切如私语。嘈嘈切切错杂弹，大珠小珠落玉盘.⋯•\n迁行至院门之前，漫步于浅草之地，手触银铃金环以轻叩门扉，莫惊园内乌鹿虫鱼，待门缝自启方可跻身入内。门后初见回廊狭窄曲折宜徐行，不可急躁莽撞，闻此间之声，观水波之景。复行数十步，回廊自得开朗今日，事记\n就让这大雨全都落下就让你看不见她脸上的挣扎\n只有这种大雨夹道而来，才能让强硬的我服软\n愿为星与汉，光影共徘徊\n写的真的好，男人看了发神经，女人看了断月经，这本书是抑郁症的克星，是植物人的闹钟，这种无敌的文笔优雅的写出了村里五保户对寡妇的思念和爱而不得的心情。\n边界感的渗透尺度以及视角上照顾行为的心灵体验\n焚香博情？真特么不是人啊\n单方面舔才是舔狗，互相舔那是69\n\n智者不入爱河愚者爱河漂泊半夜三更，死去的梗攻击了在看的各位——自言\n你用自己短缺的东西去帮助别人，你倾尽全力了，对别人来说只是杯水车薪，这样做吃力不讨好，别人还会觉得你死要面子；但你用自己的长处去帮助别人就不一样了，举手之劳对别人来说都是莫大的帮助，你自己轻松，别人也受益，人家还会对你感恩戴德。\n本以为你最多是窗纱擦屁股——要漏一手。没想到你是小叶子过河——全凭那股浪劲儿！\n老太婆进被窝，给爷整笑了\n忆往昔峥嵘岁月稠。恰同学少年，风华正茂；书生意气，挥斥方遒。\n“无钱莫入众，言轻莫劝人，待到功成后，把酒言初心。”——《增广贤文》\n理想不曾消逝，只是不再坚持终究活成了自己最讨厌的样子\n张雪峰大实话几乎所有好单位，子弟占八成(电力烟草)。计算机卷到离谱，付出前辈成倍的努力也许只能换来温饱！文科的尽头是考编，大一就可以开始准备了！学金融家里没资源，只能去做临柜！如果孩子不想读书，带他去这四个地方看看！第一是汽车客运站，第二是火车站，第三是高铁站，第四是飞机场。看看那些人穿什么衣服，有什么样的素质，再问问孩子：“你想成为哪类人”\n要不怎么说 屠龙少年终成恶龙呢  普罗大众终究要被时代洪流 生活裹挟着走向自己曾深恶痛绝 厌弃的方向，只有极少数人才能在生活的围城里，进进出出，游刃有余人啊 得通透  理想主义撑不起普通人的生活——自言\n怕就怕，你只是学了几年，就想要风光的地位，你只是读了几本书，就想要成为博学的人;你只是努力了一阵子，就想成为人上人，你只是坚持了一会儿，就想俘获某个人的心;你只是三分钟热度，就想找出自己热爱什么……\n当你30岁的时候，去买18岁的东西，去20岁想去的地方，已经毫无意义。世界上没有那么多的来日方常，只有世事无常。\n少年不游愁上头，又回眸，山路山首皆有优，费华年，苦笑不负他年志，天生才华染白了头。\n欲买桂花同载酒，终不似，少年游。便邀东风揽明月，春不许，再回头。重行故地儿时路，雪不停，白了头。残柳不语雁不误，西风转，世已秋。踌躇举杯对孤影，尚未语，泪先留。灯下残人魂在游，终不悔，亦不语。把酒言欢随风去，故人离，世人愁。凄凄山月夜欲寐，寻一梦，盼回头。伶伶游子趋断肠，人不在，尽留愁。故亭漫步旧时路，均不再，难别求。\n【永远都不要做的事】​1、跟知己上床。2、和情人结婚。3、把每个同事当成朋友。4、到朋友公司打工。5、在上司面前知无不言。6、轻信上司的许诺。7、喜怒哀乐都挂在脸上。8、在人堆里大声讲手机。9、习惯于给自己找借口。10、超车过去，看开着车有着窈窕背影的MM的脸。11、对MM的”不”字信以为真。12、指望前女友回心转意。​【做人的底线】（1）不做第三者，即使再喜欢。（2）骗我可以，如果被我知道超过两次，请你有多远滚多远。（3）如果你拿我不当回事，我会以同样方式对你。（4）我可以装傻，但别以为我真傻。（5）我可以容忍，但别超过我的底线。（6）我不是没脾气，只是不轻易发脾气。（7）任何真话，我都能接受。​【让你成熟至少5岁的8句话】1、如果你不喜欢现在的工作，要么辞职不干，要么闭嘴不言。2、学会忍受孤独。3、不要像玻璃那样脆弱，做个内心强大的人。4、管住自己的嘴巴。5、会创造机会。6、若电话老是不响，你该打出去。7、不要草率结婚。8、写出你一生要做的事情，把单子放在皮夹里，经常拿出来看。​【成功者的习惯】1.微笑。2.气质纯朴。3.不向朋友借钱。4.背后说别人好话。5.听到某人说别人坏话时只微笑。6.过去的事不让人全知道。7.尊敬不喜欢你的人。8.对事无情，对人有情。9.多做自我批评。10.为别人喝彩。11.喜欢自己。12.学会聆听。13.说话时常用我们开头。​【建立人脉的15个提示】1、学会换位思考；2、学会适应环境；3、学会大方；4、学会低调；5、嘴要甜；6、有礼貌；7、言多必失；8、学会感恩；9、遵守时间；10、信守诺言；11、学会忍耐；12、有一颗平常心；13、学会赞扬别人；14、待上以敬，待下以宽；15、经常检讨自己。​【年轻的我们必须懂得】1、你不勇敢，没人替你坚强。2、没有伞的孩子必须努力奔跑！3、自己选择的路，跪着也要把它走完。4、不要生气要争气，不要看破要突破，不要嫉妒要欣赏，不要拖延要积极，不要心动要行动。5、宁愿跑起来被绊倒无数次，也不愿规规矩矩走一辈子。就算跌倒也要豪迈的笑。​【人生三大遗憾】不会选择，不坚持选择，不断地选择；​【人生三不斗】不与君子斗名，不与小人斗利，不与天地斗巧；​【人生三修炼】看得透想得开，拿得起放得下，立得正行得稳；​【人生三大陷阱】大意，轻信，贪婪；​【人生三大悲哀】遇良师不学，遇良友不交，遇良机不握；​【人生三大不争】不与领导争锋，不与同事争宠，不与下级争功。​【人脉中需有的十种职业人】1、票贩子。2、旅行社。3、律师。4、人才市场/猎头公司/银行。5、当地公务人员/警察。6、名人。7、保险/金融/理财专家。8、维修人员。9、媒体联络人。10、医生/护士/养生专家。​【慢慢成熟的标志】1、早上无论多困，也会马上起床上班；2、喜欢吃家常便饭多于外面的餐馆；3、喜欢隐身，网络签名长时间不更改；4、低落的时候选择一个人呆着；5、打电话给朋友的次数少了；6、可以让你开心的人或事，越来越少了；7、没结果的事情，渐渐就少做了；​【职场情商训练7法】1、把看不顺的人看顺；2、把看不起的人看起；3、把不想做的事做好；4、把想不通的事想通；5、把快骂出的话收回；6、把咽不下气的咽下；7、把想放纵的心收住；你不需每时每刻这样做，但这样多做几回，你就会：1、情商高了。2、职位升了。3、工资涨了。4、人爽了。​【让你少奋斗10年的工作经验】1、不要停留在心灵的舒适区域；2、不要推卸责任。3、不要拖延工作；4、不要认为理论上可以实施就大功告成了；5、不要把改善工作能力仅寄托在公司培训上；6、不要认为细节不重要；7、不要表现得消极；\nhttps://mp.weixin.qq.com/s/bjU30YwXIHSHi_p2iqqaSA​当我心无牵挂的时候，贫穷对我来说只是晚上吃馒头和吃牛排的区别，无损我的快乐。可当我爱上一个人的时候，我才深深的感受到，什么是贫穷所带来的自卑。\n生似繁花，玉纱漫漫。来时，空空如也，如蜉蝣。去时，满腹经纶，如昙花。\n《骆驼祥子》里有一段话:“这世间真话本就不多，一个女孩的脸红胜过一切的对白”可后来有了胭脂，便分不清是真情还是假意。\n便邀东方揽明月，春不许，再回头\n内心一阵酸楚，《杀死一只知更鸟》里说，你永远不能真正了解一个人，除非穿上他的鞋子，走他走过的路，你连路过都会感到难过。 普通人的生活有多难，北漂一族更难，但是还有好多人会站在岸上说，没有人请你们来，我们只能无奈摇摇头，然后抬起头不让自己的眼泪流下来，以维护我们最后的尊严。\n生活就是这样，我们总是在不知不觉中变成自己曾经讨厌的样子，然后浑然不知，等到某天被提醒时，还会一脸惊愕的说，我有说过吗？\n爱是自由意志的沉沦，你说你爱的很理性，很克制，而我说，你爱的好懦弱。\n我本以为人生最大的遗憾是所爱隔山海，山海不可平。后来才知道，海有舟可渡，山有路可行，山海皆可平，难平是人心。可是没有人不遗憾，只是有人不喊疼，即便是盛世长安3万里，不也处处写尽的遗憾吗？高适蹉跎半生，暮年得志，不遗憾吗？李白潇洒肆意，空有大鹏之志，却沦为阶下囚，最终了然一生，不遗憾吗？裴十二一介女子文不输李白，武不输高适，只因女子之身，报国无门。少年杜甫怯意灵动，却最终只能南村群童欺我老无力，不遗憾吗？无人不冤，有情皆孽 ，一切都在变 ，且都难遂本心。\n人字有两撇，一撇写进前半生，写的是执着，一捺写进后半生，写的是释怀。\n我们要做的是 心有山水不造作 静而不争远是非，且停且忘且随风，且行且看且从容，不念过往，不惧将来[微笑]\n小时候，读刻舟求剑时感觉他好傻，难道不知道剑会沉，舟会走，水会流吗。长大了才知道，在岁月的长河里，我们一次次的返回某个节点，想要找回自己失去的东西，却没意识到自己只是站在船边徘徊，失去的终究是找不回了，就向是安抚自己的灵魂。如同上坟，对逝者的思念，只是慰籍生者的内心……\n我曾以为，浮世万千，吾爱有三，日月与卿，朝为日，月为暮，卿为朝朝暮暮。却不曾想浮世万千不得有三，水中月，镜中花，梦中你。月可求，花可得，唯你求而不得。最后才明白多情自古空余恨，好梦由来最易醒，辞别再无相见日，终是一人度春秋。\n稳定的情绪背后是一个人的疯狂\n只要对象换的快，没有悲伤只有爱\n你孤独吗？年少时我坚信的是“莫愁前路无知己，天下谁人不识君”。可后来才发现，“相识满天下，知心无几人”。那些想倾诉的事，终是止于唇齿，掩于岁月，匿于年华。不可说，不能说，不必说。芸芸众生，三千繁华，五光十色，我却格格不入。可是，没有人不孤独，只是有人不愿说罢了。古来圣贤皆寂寞，那些诗词歌赋句句不提孤独，可句句不都写满了寂寞吗？苏轼的“拣尽寒枝不肯栖，寂寞沙洲冷”，柳宗元的“孤舟蓑笠翁，独钓寒江雪”，还有我们熟知的杜甫晚年那句“万里悲秋常作客，百年多病独登台”，字字道尽了孤独才是常态，句句写满了“求上得中，求中得下，求下而不得”才是人生啊！人生就是一场孤独之旅，而我们能做的是以欢喜之心走遍人间四季，享受忙碌，适应孤独。夏虫不必语冰，井蛙不必语海，逢人不必言深。愿大家与孤独相安，与万事言和！\n形象一定要走在能力前面，不然你的能力很容易被低估。——毛姆除非你的能力大到人尽皆知，比如马云，颜值形象便是浮云，甚至成为他的独特性。——自言\n理性永远在帮感性收拾烂摊子\n凡真实的，必会相遇。——Ting\n“不听的人必须去感受”——不知道火炉有多烫的人只能去摸一次，才知道它有多烫。人教人教不会人，事教人才教的会人\n客居此间越廿年，归去无牵亦无痕。\n有些事不是过去了，只是接受了\n长发及腰，拉屎要撩\n人无法同时拥有青春和对青春的感受。\n释怀过往，则拥有了当下：拥有了当下，亦遇见了未来。\n僧人说，昼行要惜阴，日用要惜物。正如同水滴能石穿，绳锯能木断。任何事物都并非一蹴而就，而是无数次的细微改变而产生质变。\n星汉离宫月出轮，满街含笑绮罗春。花前每被青蛾问，何事重来只一人\n天下英雄唯你我，赤壁夷陵两把火\n且视他人之疑目如盏盏鬼火，大胆地去走自己的夜路。史铁生《病隙碎笔》，别管别人怎么看你，不要犹豫胆怯，大胆走自己的夜路就是了。\n人心鬼蜮、笑脸魍魉\n终是庄周梦了蝶，你是恩赐也是劫我与春风皆过客，你携秋水揽星河。看那高楼平地起，愿有岁月可回头。春风得意马蹄疾，芙蓉账下现修罗。世间必有双全法，卷破重云终见晴。\n放下个人素质，享受缺德人生，拒绝精神内耗，有事直接发疯，与其委屈自己，不如为难别人放下助人情结，尊重他人命运\n百年难遇萧容鱼。世间绝无沈幼楚。人间遍地是黄慧，罗璇已是上上签\n我阅遍众多论坛，发现网友们把苹果贴纸贴在友商产品上的这种行为，就像青春期的叛逆一样冲动得难以控制。这种NTR的背德感令人颅内愉悦\n世界名画——男默女笑\n化蝶为君正衣冠，来生再续今世缘\n悬溺一响，纯爱登场卜卦一响，全是幻想安河桥一响，遗憾收场\n泾溪石险人兢慎，终岁不闻倾覆人。却是平流无石处，时时闻说有沉沦。\n《骆驼祥子》里有一段话:“这世间真话本就不多，一个女孩的脸红胜过一切的对白”可后来有了胭脂，便分不清是真情还是假意。\n高中语文课本里有两个特别遗憾的故事，《孔雀东南飞》和《氓》前者爱而不得，后者得而不惜\n心中无爱一身轻\n《你的名字》告诉我们爱情可以跨越时空《天气之子》告诉我们爱情可以跨越生死《言叶之庭》告诉我们爱情可以跨越年龄《玲芽之旅》告诉我们爱情可以跨越种族《秒速五厘米》告诉我们以上全都是扯淡 生活不是电影 错过了就真的错过了\n有人策马入长安有人辞官归故里\n就蒜强行挤进对方的心，你也永远还是个橘外人。\n《他从地狱来》\n小说写作总结简：开篇简单直；微微铺垫，直入剧情快：三行出主角名字少：开篇少配角悬：悬念=签约=期待=追读=付费。\n引出故事-拉悬念-继续提高悬念-人物出场有转折-拉悬念-解谜-为爽点铺垫-渲染反派牛，打脸更爽-打了小的来了老的-爽点爆棚\n书名：四字以上简介：背景 外挂 风格 主线第一章两千字，500金手指，500背景，1000第一个剧情冲突第二章第一次冲突完毕，金手指赋予好处，第二个冲突若隐若现第三章第二个冲突进行时\n喷神的喵屋老子就喜欢你看不惯我又干不掉我的样子。https://www.zhihu.com/column/c_217848471\n新手作家扫榜到底怎么扫？https://www.zhihu.com/question/427900982\n剧情：套路、接梗、主角身份、能力、职业、朋友、对手、冲突、冲突的开始和结束主体结构：节奏、铺垫、爽点「奇遇、升级、寻宝、泡妞、发财、欺人、助人」、爆发点、毒点、雷点主线-支线、断章、细节、人设超能力：时间线跳跃、催眠、读心、记忆碎片、穿梭、灵魂出窍、透视、时间暂停、题材：都市架空、平行世界\n点子记录gpt列出大纲和章节标题\n哥谭-教父灾难营造漫威宇宙超能力三代蜘蛛侠都失去了挚爱的人，即便你拥有超能力，可命运或许早已在冥冥之中给每个人和事标注了砝码。失落的神去塔玛的人力有时尽，我是神，神定就是天！人定胜天光只是看着不行动，迟早会后悔的哦。送花情节，花语重生之躺平人生：自己的葬礼（倒叙） 错位时空 灵魂接轨重生日记寻踪 探亲十八线小城（地图放大100倍都找不到的城市）一线大城（不用放大就能看到的城市）白筱泽 白筱诺（被白筱泽家庭领养，被告知父母车祸而亡，实则被父母抛弃，后又企图要回她做政治联姻的工具）三魂七魄 幽灵(霖)眼(炎) 破幻身(笙)天使议会：米迦勒、加百列、拉斐尔、乌利尔和耶利米尔五位天使，收集《黑客》的天使堕天使：路西法侠岚剧情 原点 哥谭寻找自己缘之空 碰瓷我的姐姐  张子枫起点孤儿院  碰瓷疯人院 自杀小队 X特警 妇联 毒液 地狱骑士 时间规划局君临天下，失落的神我的同学一亿岁萤火虫粥饼纶歌名梗侠岚龙族序列零口水鸡户部尚书肩膀起伏可户可口 查户口月票加更入深户阳茄糊口侠岚剧情失落的神我有一剑-那一袭素裙-司藤那一抹马面裙摆惊艳了时光参考抖音装饰服装起点！初心！来时的路。做自己的神一脚踹下楼顶在死亡的边缘舞蹈荧光海emo网易云歌曲讲台强吻视频起点扫榜分析，逆推大纲我在起点扫榜的那几年虚无境-新人境-签约境-首订境-上架境起点孤儿院什么 我的大学室友都有对象了我这个主角还没谈过恋爱别问 问就是强者注孤生笑死 头一次见鬼怕鬼的灵魂不一定只有一个  不同的地点不同时间线上因为执念什么的原因 都可能留存了一缕魂魄在原地游荡  直到有外在的力量打破这个平衡 就想叫醒发呆的人一样穿越其他世界时间线起点网友评论：“守护全世界最好的幼楚，于无声处动人心，弱水三千只取一瓢，愿尽余生之慷慨，后宫之主”“百年难遇萧容鱼。世间绝无沈幼楚。人间遍地是黄慧，罗璇已是上上签”twit 替我爱她 傻瓜请不要叫我单身狗 那样太伤自尊了 叫我母单花车到山前必有路 有路我也刹不住黑客小说  好基友拉斐尔神笔马良 画笔 文笔有的车子在这种暴雨中根本开不起来，有的车子却能在这种天气中开到飞起。直率热烈，我只是生气了，又不是不喜欢你了看着他的眼睛平静道：我没有生气，我只是不喜欢你了。微观经济学上的一个概念叫沉没成本，现在多被用于心理学方面。直指人性，人就是这样，你越是付出，就越想得到一个结果，越无法放手，越是怎么都不甘心。文体两开花先推后拉，极限拉扯三不原则：不主动，不否认，不拒绝千里救援梦开始的地方言灵 言出法随令尊慈欲与飞燕比翼「你爸妈上天了」带你走遍天南地北回到过去再爱你他身体微微侧过，倚靠在案台右侧，百无聊赖地看着她在锅碗瓢盆前忙碌，手法娴熟地右手持刀，伴随着咚咚咚的声音，将整个胡萝卜切成了一片片，像多米诺骨牌一样整齐有序地倾倒向一旁，俨然一副贤妻画风，嘴里则讲着有些无聊的笑话，试图为她的枯燥忙乱平添一分愉悦。直到她探手打开右上方壁挂橱柜的小门，伸手去拿放在最底层盐盒的时候，他突然也伸出胳膊，将手轻轻覆在了她的手上，彼此右手相叠，嘴角翘起，脸上终于流露出按耐不住的笑容，身子则离开案台，向前半步，顺势微微前倾，将脸凑了过去，注视着不明所以转过头看向他的女孩，两人眉眼相对，鼻尖只有一指宽之隔，他打趣道：波龙清蒸，无需多盐。说完，左手便挽上了她纤细白皙的脖颈，拇指拂过耳垂，轻轻摩挲，接着微微用力朝着自己一推，他的胸口贴着她的右侧肩膀，颔首间，四片唇瓣就印在了一起。像个艺术家一般，仔细雕琢着，微微向右侧头，眼神忽的飘向了案板上切好的胡萝卜，脑海中浮现出四个字，红润可口。浅浅品味片刻，他按着她的手，改成抓握，执子之手，拿取盐盒。身子也顺势恢复了直立，看着女孩愈发红润的嘴唇，忍不住低头又轻轻啄了一口。没有进一步品尝更加香甜的柿舌。能力吸收器，克隆，升级积分存储三个从血魔手里学到的血魔毒虫只见程逐开口道：“黄金脆带鱼下锅没有，下锅的话就算了，没下的话帮我换成那个野生黄鱼好了。”野生黄鱼很贵，非常贵。如果是在新荣记吃的话，一道野生黄鱼随随便便就是四位数。现在虽然是15年，可野生黄鱼这东西食材价格就贵，算是一般人不会点的菜了。店家一听要把普普通通的黄金脆带鱼给换成野生黄鱼，心中立刻乐开了花。“还没下锅，这就给您换。”程逐直接皱眉，然后大手一挥道：“算了，那都不要了，反正都还没下锅。”从你的全世界路过当《晴天》的前奏声响起时，现场立刻响起了欢呼声。这首歌直接引发了全场大合唱。它的青春气息实在是太强了，很多人不由得都会想起自己青春期里的爱恋。那个时候的感情，好像都是很简单的。你的草稿本是不能给人看的，因为里头可能总会出现某个人的名字，你总会在一大堆乱七八糟的草稿里写下那几个字。每次班里搬桌椅挪座位的时候，你心里可能也在计算着和她的距离。初恋总是纯粹而又美好的。但也总是让人难以忘记的。人，永远只相信自己所相信的。造谣一张嘴，辟谣跑断腿。书中很多情节是各种网络段子和热搜事件东拼西凑而成的，筱白自己做了一些故事延伸，但难免存在某些情节太科幻，想法过于天马行空，或者不合理的地方，各位看官兄弟姐妹多多担待。没办法，基本的恋爱情节总要有的，这样故事才更加生动完整，奈何筱白只有场短暂而可悲的网恋经历，实在撒不出太多更接地气的爱情的糖了，只能勉强大家看看这些似曾相似的段子和故事了，orz…\n既然两个人是稀里糊涂的开始的，那就这样一直稀里糊涂下去，其实也挺好的。——人生在世，难得糊涂\n翌日，演唱会风波还在持续着。双子 双鱼等 青儿女主刻画  马面裙 高马尾轮奸倾向的描写开场时间倒流 重启-回归原点 起点在何方让我能够再爱你一次 让一切归零 从头开始这一次 希望不会再让你受到一点伤害回归原点 你会来找我吗重新认识一下  担心怕事 龙族擦肩而过\n唔 不要  别 别碰我 滚啊你们  救命衣裙凌乱  裸露在外地香肩上晶莹的汗珠 在灯光下闪烁着晦暗不明的光泽  随着身体不自禁的颤抖  一两颗从白皙分明的精致锁骨上向内划入  一两颗则从肩膀上抖落  顺着背脊划去 同时伴随着一阵轻痒  身子又忍不住抖了抖几缕碎发洒落在脸颊上 从眼睛上斜斜划过 越过白中泛红的鼻梁 搭在了带着一丝青紫又红肿的薄唇上  在剧烈的反抗挣扎中 痛苦悲愤的泪水从眼眶中挥出 和额头发丝间因苦苦挣扎而生出的汗珠  交织在一起  无声却重重地砸落在\n已有之事 后必再有  已行之事 后必再行你想好了吗  即便你重启这个世界的时间线  也会未必能改变结局\n明白了 不过你只有三次重启世界时间线的机会喔  而且…这一次就是第三次了喔 也就是你最后一次机会了 你确定还要继续吗好吧 那…祝你好运 说完 背着手蹦蹦跳跳的远去了 身影渐渐融入了远处的雾气中 直至消失不见 下一刻 远处的雾气突然剧烈波动 瞬间变得浓郁  滚滚而来 随着视线的模糊 袭来的浓雾将哥哥的身影吞噬了进去哥哥从文 弟弟习武 这一次让我来吧  别忘了  你是弟弟  我才是哥哥哦看着他的背影  呢喃道  欢迎回来 我亲爱的哥哥超兽武装 侠岚 不良人 原点 画江湖之灵主\n你这懦弱的家伙  明明还有一次机会  你却因为害怕退缩了  这就算了  你心灰意冷之下  选择随他而去  把力量都过继给了我  将我从你身上彻底剥离了出来  让我具象化重生了  你自己离开了  却丢下我一个人\n我不是多么调皮 也没那么喜欢捣蛋 我只是用这种咋咋呼呼的方式来排挤我内心中的孤独与不安\n番外 早啊美女 弟弟复活\n柯南主角不在的日子\n我还是曾经那个吃货 没有一丝丝改变胖子野兽 美女 瘦子 高个  四人成行 经典小队搭配\n我只要略微出手  就已经是巅峰晴天等歌曲系列电影画面致敬 肖的救赎 教父\n这一次 不要管我 先去找她  用最快的速度 找到她 然后保护好她\n美滋滋 嘬根小烟 盘一圈战术性蚊香\n你干嘛哎呦 小黑子语录\n围大 无需多言\n“恭喜你啊，克服了抑郁症。你是怎么做到的？”“很简单啊，我让自己爱上他”“然后呢？”“然后他就会离我而去，就像每一个我爱过的人。”\n奇怪的性幻想 幻想有人爱我\n“这个世界就是个草台班子  整个世界都在演戏 别人都在认真演，就你不入戏” 当虚伪成为常态 清醒便是罪过\n以身入局胜天半子\n能好好做朋友，就不要发展成恋人，爱情这东西太极端，要么一生，要么陌生，所以叔本华说过：你只有知道了书的结尾，才会明白书的开头\n克隆 读心术 灵魂出窍 穿越 时间暂停倒流\n不疯魔不成活非偏执狂不能生存\n墓后玩家\n当时我就告诉自己，我一定要红透半边天的\n幽灵地狱犬-和狗主人的日常-穿梭-无视物理障碍-法师玩成了战士巡阴人三部曲阴阳猫双子好像是两男，那会不会有一男一女，或者两女的情况呢\n武功山打卡姿势发功隔空驭物\n\n超能力回收者超能遍地走，我是回收狗写轮眼-掌纹-获得超能力，代价：当前寿命余额仅剩7天；补充方法：回收全新的不同等级超能力可获取不同期限的寿命额度S级十二个月，A级六个月，B级三个月，C级一个月，D级一周超能力传递输出，每次消耗当前等级一半的寿命额度，重新吸收不再获取寿命额度\n\n能力吸收-烙印过程中弱化-彻底固化恢复完整版这就是一场梦，梦醒能力开始渐渐复苏，真正的故事也才刚刚开始……\n赋能驾驭物克隆复制找全超能力  永生 失落的神回归 意念黄粱一梦哥哥 这里是梦开始的地方林夕梦\n一周超人\n愤怒是无能的狂怒，漠然才是我的本色滔天怒火之后，深入骨髓的冷漠，方可苏醒失落的神，蔑视众生，荒芜万象，归于沉寂\n虽然单章短小，但胜在耐力超强，天下武功，唯快不破\n零使？时使？零食？灵石？不同颜色不同形状鹿头十二生肖图腾坠落的天使？脑后的光轮堕落的心追溯超能力觅物「未知感应」寻踪「已知线索」-双兄弟能力唯一性，多元性当能力具象化为一个人的代表特征时，对某些人来说，本来的名字就容易渐渐被遗忘，而能力便成为新的名字或代号；一个正常的名字往往普普通通，很难被人记住，而以能力起名的称号更容易被人铭记传播终结的炽天使-鬼刃仞灵魂收割者僵尸围城-真人版塔防蒸汽城武器之都阴阳树下阴阳术-魂墓-魂木花开花落几番晴人力有时尽铁皮顶的独栋小屋，紧挨着一棵枝繁叶茂的槐桑树拔地而起，树前的空亭小屋旁，摆着一辆出租车样式的破旧车俩，不远处还废弃这两辆，连轮子都没有，只剩下外面的空架子出海-遗失的城堡-水下失落的国度群魔乱舞，那有没有什么修炼等级体系之类武力体系混乱，众多体系林立、彼此没有相对的强弱之分、没有清晰明确的等级、没有尺度衡量、秩序崩塌、全凭借每个人独特能力的运用和个人智慧怕火怕声音的毒液镜像世界 如影随形 影子只是融入了黑暗 不是消失游蛇记\n为你封印自身 实力颜值 一切 俯身吻额头 解除封印\n在这条路上 我们无数前辈前仆后继挥洒热血却不为世人所知\n披着毛毯坐在电脑前椅子上\n有人要跳楼 有人跳楼了 据说场面很血腥 惨不忍睹 摔成肉泥了\n到我了到我了 苍蝇搓手邻居洗澡放歌撞了荧火虫  星星点灯 虫儿飞\n学过世界历史的都知道，二战比一战时间要久一点\n活埋场景  傻子撒在脸上\n远赴人间惊鸿宴，老君山上吃泡面\n讲真 我一直觉得我写的书还没有书友的评论好看，如果我是抛砖，那书友们就是引玉，每一位书友都是这本书的宝藏\n重回起点 回收我的超能力开局华哥俯卧撑举铁 身体素质觉醒超现实 超物种主义成龙历险记 符咒我不是人失魂落魄的神祇或许我，看不到她但是我，想让她看到我春风不解风情站时花紧闭 ，立时花正开，户内雾迷离，不过方寸地，多少世人迷\n我还是那句话，狭路相逢，命贵的让路\n兄弟就算要退场也要挺直了腰杆子不枉费轰轰烈烈地爱过这一场 \n优雅永不过时\n我记得看过一句话:“那些身上有印记的人，其实就是为了让上一辈子他们不想忘记的人更容易找到。”\n坐看风卷残云阿婆说我是一只狗  猫眼看世界我和狗主人的奇幻之旅不是 小白 你来真的啊 主角竟然真是一只狗  当然了 我的狗主人是通狗语的这个世界终于颠成了我想不到的样子\n之后解锁万兽语 来了 好大儿  老登 大哥家人们 不好意思地说  我谈恋爱了 就在这个多数人类好像比较在意的节日 520 不过目前我家老登并没有过节  可怜的牡丹母单狗啊身体互换  吃饭脸太圆 糊一脸  舌头太短了吧  都舔不到自己脸上的食物残渣 落后的人类我们的名字合起来 据说还是一个知名歌星的名字呢汪汪队\n你的名字：“彼方为谁，无我有问；九月露湿，待君之前”天气之子：“天气因你逆转 世界因你天晴”铃芽之旅：“去我喜欢的人那里”动漫文字化\n神金啊你神啊 可不可以让我感受一下 暮色回响\n没有横空出世的幸运，只有不为人知的努力，加油各位\n我曾捡到一束光，日落时还给了太阳，我知道那不是我的太阳，但有一刻，太阳确实照在了我身上。日落归山海，山海藏深意，没有人不遗憾，只是有人不喊疼！无能为力时，人们总爱说顺其自然，我抓不住时间美好，只好假装万事顺遂的样子。\n我问妈妈：“不结婚可以吗？”妈妈说：“如果外面烟花四起，街坊邻居饭香四溢，大街上一家人手牵手，你能忍住不哭就可以”。\n疯人院拉丝\n超能力克隆者 吸收者 寻觅超能力 剥夺上下其手 前倨后恭恶灵骑士 赋予超能力寻找超能力之旅处处留情\n理可顿悟，事须渐修。知易行难，人生的走向是由无数个选择彼此纵横交错勾勒而成的，悲观的人看待人生，好似纷乱如麻，剪不断，理还乱，可换个视角看待，人生的美好恰恰在于繁杂之中的不确定性，在于未知。身处迷雾中前行，会恐惧，会迷茫，会手足无措，也可当成探索，当次一场刺激的旅游，因为人生不是无边境的迷雾，终有拨云见日的一天，纵使结局好像原地踏步，途中经历，走过遇到的，或人或事，亦是风景。\n工作一年，我明白了大人说的社会不是你想的那样到头来，我们和家人不过都是活在自己的偏见中，这样的偏见可自知却难自知。可自知是能意识到自己思维层面上的不足，难自知是我们在社会阶层上作为底层普通人，狭隘认知带来的局限性，难以走出去。人生的痛苦由此诞生，清醒却无力改变便是痛苦根源。\n自由职业的快乐：一台笔电，一曲音乐，人生何处不风景，久居办公无心情你以为的自由职业，实际可能一地鸡毛，毫无快乐可言\nhttps://zhuanlan.zhihu.com/p/576497837https://zhuanlan.zhihu.com/p/694843356https://zhuanlan.zhihu.com/p/113059871新手作家扫榜到底怎么扫？https://www.zhihu.com/question/427900982喷神的喵屋https://www.zhihu.com/column/c_217848471\n墓后玩家当时我就告诉自己，我一定要红透半边天的\n剧情：套路、接梗、主角身份、能力、职业、朋友、对手、冲突、冲突的开始和结束主体结构：节奏、铺垫、爽点「奇遇、升级、寻宝、泡妞、发财、欺人、助人」、爆发点、毒点、雷点主线-支线、断章、细节、人设超能力：时间线跳跃、催眠、读心、记忆碎片、穿梭、灵魂出窍、透视、时间暂停、题材：都市架空、平行世界\n幽灵地狱犬-和狗主人的日常-穿梭-无视物理障碍-法师玩成了战士巡阴人三部曲阴阳猫双子好像是两男，那会不会有一男一女，或者两女的情况呢\n武功山打卡姿势发功隔空驭物\n\n超能力回收者超能遍地走，我是回收狗写轮眼-掌纹-获得超能力，代价：当前寿命余额仅剩7天；补充方法：回收全新的不同等级超能力可获取不同期限的寿命额度S级十二个月，A级六个月，B级三个月，C级一个月，D级一周超能力传递输出，每次消耗当前等级一半的寿命额度，重新吸收不再获取寿命额度\n\n能力吸收-烙印过程中弱化-彻底固化恢复完整版这就是一场梦，梦醒能力开始渐渐复苏，真正的故事也才刚刚开始……\n赋能驾驭物克隆复制找全超能力  永生 失落的神回归 意念黄粱一梦哥哥 这里是梦开始的地方林夕梦\n\n真正的爱是不会责备的，就像广东人不会责备凉茶没有用，而是怪自己太上火。\n我自飘零我自狂，犹如野鹤游四方我愿如君星与夜，日日相伴相皎洁\n生平至此 有你的光陰 都值得虛度\n人生最好的状态就是知世故而不世故，历圆滑而弥天真，明现实而不势利，善自嘲而不嘲人。已识乾坤大，犹怜草木青\n富则入道润其根、穷则观屏勤其手\n阳光洒肩头，仿佛自由人\n歌曲：鸟之诗，爱之梦，花之泪，心之漾，云之海，泪之曲，东之韵，花之舞，天之痕，缘之空，光之舞，风之颂，雨之寂\n在繁华中自律，在落魄中自愈\n乌列尔（Uriel）—领导天体星辰并守护冥界拉斐尔（Raphael）—守护人类的灵魂米迦勒（Michael）—以色列守护者加百列（Gabriel）—掌管天堂的炽天使与智天使https://zh.wikipedia.org/wiki/%E5%A4%A9%E4%BD%BF%E9%95%B7\n小时候看刻舟求剑，觉得这个人好傻。他难道不知道剑在河中央掉下了水，跑到河边已经找不到了吗？长大以后才明白，在岁月的长河里，多少人一次又一次跑到河边按照曾经刻下的某个节点，想找到已经失去的东西。失去的东西永远不会回来，因为你已经不是曾经的你了，故地重游，故人重逢，本身就是刻舟求剑。\n牛马一生不得闲，闲时已与山共眠。\n人生最大的成功，就是用自己喜欢的方式过一生。\n上次独自住老宅，是高考后，独自在家住了一月，爸妈在南方工作，当时房子还是老模样，简陋不堪，一床一桌一电脑，与乡村生活格格不入，青春期喜欢写点东西发QQ空间。那时写道：人来人往，世事沧桑，春去秋来，岁月无情，唯有老宅，无论我内心外在如何变换，都会像个忠实无言的老友，随时迎候我的归来。https://x.com/gly277/status/1857764627008164044\nhttps://yazhouziyuan135.buzz/play/3245288.html\n寻找意义和建立意义，没有捷径，它只来自漫长的积累。\n如果真的有顿悟，顿悟只来自于自己的头脑；如果真的是神谕，神谕只来自于自己的眼睛。\n愿你蹚过世俗的这趟浑水，仍不失内心的洁白；愿你路过形形色色的人间，仍不沾染一身的世故；愿你不卑不亢，也有岁月打赏\n一位著名学者说过：珍惜你的不良嗜好，因为它是你热爱生活的主要原因。\n当你有了女友，意味着再也不会坐靠窗的位置，可是以后的旅途里有她陪我，她就是我已经找到的最美的风景\n开学了，同学们要注意自己的遗容遗表，在学校记得穿寿衣，不得穿着过于冥显的奇装异服，下课拿自己的水碑接水，跑操注意跟上阴乐，下午的阎保健操已经纳入检查范围，上课灵声响了要安静下来，不得与牢尸在课上作对，同学们之间要合墓相处。\n《明朝那些事儿》的结尾说：所谓千秋霸业，万古流芳，与一件事相比，其实都算不了什么。这件事情就是：用你喜欢的方式度过一生。\n旅行不一定要探索新的风景，也可以重温过去的美好某个时刻，我们喜欢一件事，一个东西，往往是因为一个人\n“清贫做了他的衣裳，汗水和天赋抬着他进赛场”“风雪压他许多年，终于得以见青天”“倘若穷途末路，那便势如破竹”“他偏要自己发光，不去折射别人光芒”“从预赛第六打到决赛第一，一枪龙吟十九洲，打破了家徒四壁，扶直家人弯了半辈子的腰”“塞纳河畔，划来了一艘小船，那是谢瑜的轻舟已过万重山”\n你不在的日子里 我企图找些事情做 打发一下无聊的时光 可是连点开手机输个字都是你的身影\n弹簧发圈戴在手腕上是呈现一种莫比乌斯环的倾斜角度的，这是女孩子扎过头发后撑出来的形状，如果只是很紧的一个圆圈状，那可能并没有属于它的女主人童年心血来潮，想写一本小说，想成为一名作家，大人劝道，你年纪轻轻，尚无半点阅历，怎写得了一本小说，自己又不是那种想象力极度丰富，万里挑一，天赋异禀的选手，我不理解亦不信邪，于是千千万写手中多了一名扑街，直到有一天我拥有了一个很好的女朋友，才渐渐明白了这些事情，原来好的小说真的源于生活，又高于生活想做的事情一点没做，记忆已经被拉回了和你在一起的时光里，猝不及防又理所应当——自言自语\n一辈人有一辈人要做的事\n期待是一种很微妙的绑架也是苦难日子里的救赎\n少年人逞一时之勇，哪懂生死，嘴上说不惧，就真的不惧吗\n很多时候 羡慕的爱情其实对方就像彼此的影子所以王小波那句话  我觉得也是爱情的最高境界 爱自己是终生浪漫的开始这个自己何尝不可以是另一个性别的自己\n而我之所以会被掀帘子这样的细节打动得那么深，只是因为我自己也是这样的人，而且很少有人注意到这一点，把自己渴望认可的潜在盼望投射到了对他的欣赏上面。\n我们的伤痛大部分其实都是「 悲其不幸，哀己无能，痛失所爱 」这三种大致的情形造成，这也是最容易把读者代入进来，写哭他们的一个模板。\n仿佛用力过猛搓红了一般  又没来得及清洗  还残留着洗洁精润物无声 却惊起啪声一片——自言自语\n拿着几千的工资，受几万的苦。这叫千薪万苦！——奥德彪\n不是我请客  是所有看我书的兄弟  一起出力 我就是个跑腿的 带着兄弟们的钱 宴请志同道合臭味相投的四面八方朋友——自言自语\n其实人生不需要一直在高光时刻，在历史的巨浪退潮时，精英们更加需要调整好心态。财富不过是秩序的泡沫，事业是时代的加持，爱情是随机的概率，甚至亲情也不过是基因的漂流。\n脚趾羞耻症 低头一看  人字拖\n每天早晨路上都是朝气蓬勃的老年人和死气沉沉的年轻人。生不如死的中年人\n我前女友总拿分手威胁我，有一次又作妖，我知道她又要提分手，我就抢在她前面说，你再这样就分手吧，她给我来一句，你根本不爱我，你爱我的话就不会把分手挂嘴边。就这句话，醍醐灌顶！\n躺在床上 我转身翻了个身 却发现连数据线都不够长\n小孩：爸爸我想去动物园爸爸：你打开车窗就是\n力田不如逢年，善仕不如遇合。\n《你的名字》告诉我们爱情可以跨越时空《天气之子》告诉我们爱情可以跨越生死《言叶之庭》告诉我们爱情可以跨越年龄《玲芽之旅》告诉我们爱情可以跨越种族《秒速五厘米》告诉我们以上全都是扯淡 生活不是电影 错过了就真的错过了\n超能卡牌大师-小玉，你中毒了开篇\n有些人坐飞机就可以见到，而有些人，坐时光机才可以。\n看到一条很治愈的评论:“又舍不得你，又和你结不成婚，又想多陪你走一段路，这道题该怎么解?”底下的回复是:“大鱼海棠里的鼠婆说:不要预设和别人共度一生，就自然的相处，命运把你们带到哪里就到哪里。天有道，自不会让有情人分离:天若无道，人就该遵循天命。”村上春树说:“你不是我权衡利弊的选择，而是我明知不可为而为之的坚定，这是我对这份感情最大的诚意，说实话我比你更知道我们之间不会有结果，我忽略所有人的劝解，包括我自己，经常安慰自己，一会儿觉得无所谓，一会儿又无法释怀，知道没有结果的事还要去试，就算只陪你走一程。怎么形容呢，你存在我每个双手合十的愿望里，我多想和你有个好结局，可偏偏感情不是其他东西，不是努力就会有个好结果的事情。\n老爹的蜥蜴干\n人终会被年少不得之物，困其一生，暮年浮光之景，将之瞬息点醒，又终会因一物一事而解终生之惑。\n我们所唾弃的金钱权力  当他真正放在你手里的时候  你就会感受到她的魅力  然后放不下了这就是清醒的沉沦\n不想很早的回去考编制进单位  就是很清楚  进去了  混日子等升职  那就是过早的活成了自己最讨厌的人这个事情也许是迟早的事情  那我希望还是能晚一点 再晚一点  多享受一段屠龙少年的时光\n解决阴影最好的办法就是在恰当的时机，直面阴影，然后燃起一团熊熊大火，狠狠抛向阴影诞生的地方，让滚滚的光焰照亮一切，驱散曾经所有的阴影——自言自语\n时代变了 这个年代不提倡吃苦 而是让自己变得幸福\n只许佳人弄身姿，不许才子说花词，若非平台禁文墨，提笔倾尽虎狼诗！\n与你若只如初见 何须感伤离别你和我 曾经有共同爱好谁的耳边 总有绝句在萦绕\n万家灯火 千万故事 感官先生\n一川烟草，满城风絮，梅子黄时雨\n你决定不了一个人的出现，也挽留不了一个人的离开。你能做的只有珍惜不期而遇的惊喜，也要接受突如其来的离别。可人生就是马不停蹄的相遇和错过\n怀旧空吟闻笛赋，到乡翻似烂柯人\n我与旧事归于尽，来年依旧迎花开。\n1.让你爱的人爱上你 这本身何尝不是一种超能力2.爱不是一种剥夺 是自主舍弃 爱情是有排他性的 不是我在剥夺他爱上别人的可能 是我们双方自主舍弃了自己千千万万个爱上别人的可能3.70亿人中 我们在这个时间遇见这个人 为什么不是命中注定?4.如果相爱是谎言 那我们是心甘情愿地接受这个谎言 并且我们都在为能弄假成真努力5.您方说爱是自由意志的沉沦 我曾无比认同 但现在我好像更愿意说：爱是自由意志的退让何谈亏欠?是我情愿。\n近了，带了来灼伤远了，给不了温暖适当，遇不上正眼直到没了火焰（激情等做燃料）燃尽，寒冷侵袭，我才能出现在回忆里。可那也并非爱情。\n毛姆说的。“你想干什么？”“我想游手好闲。”\n“哭是解决不了问题的”“可是没有人哭是为了解决问题”\n唯有考试，能够改变命运——朝为田舍郎，暮登天子堂。\n什么是情绪价值呢？\n看见情绪，照顾情绪，感同身受，这就是情绪价值\n情绪价值是一个人的，个人素养，表达能力，高情商和共情能力的结合。而这是一个个人独有的，稀缺的，且不一定能所有社交中给予到所有人的。\n问世间情为何物，直教生死相许\n哪有什么真心换真心，有的只是速度换声音潮韵 浪花一波又一波拍打在海岸上，水花反弹回来最是一夜春好处，潮起潮落肉有痕\n腰窝 双手撑在腰上，大拇指张开，嵌在腰窝处，虎口贴在腰两侧，其余四指配合大拇指做出微抓龙爪手壮，拿捏~\n人在身边，手机靠边夜以继日、一日一夜、不知疲倦，不懂停歇\n雨声，水声，女声…..声声入耳口事，胸事，户事，事事关心口腔，胸腔，腹腔，腔腔热血\n远嫁的姑娘，谁不是那个异客\n岂曰无衣？与子同袍！\n一场雨后 天空和地面互换了身份抬头万里暗淡 足下星河生辉\n于暴雨中行走，伞是倒划星空的船\n强者为王的世界，强者吃人弱者甚至都没有活着的理由，一句好话换不来他人的重视，一篇舆论却能杀死很多人，透过雾霾是更黑的云\n如果有一天…，你的情绪不能用语言说出来，那就抬头看看天空吧！它那么大，一定可以包容你所有的难过和委屈。\n远看森林一片，近看红门两扇，呲溜进一小偷，外面留俩坏蛋\n村无烟火只剩房，地里长草不出粮。儿时玩伴今何在，各自漂泊在他乡。远离家乡实无奈，千里奔波为求财，浪迹天涯谋生计，借酒消愁泪满腮，天生命苦为钱愁，早出晚归修地球，历经千辛皆为子，省吃俭用到白头，故乡难容我肉身，他乡不容我灵魂，四海为家常在外，回到家乡成客人，错把陈醋当成墨，写尽半生纸上酸，更怕醋墨两相掺，半生苦涩半生酸，随手举杯酒一壶，前路靳棘难踏足，杯中酒三分，酒中杯七分，悲喜自渡，冷暖自知。……初来人间不知苦，潦草半生一身无，转身四望来时路，才知生时为何哭。\n年近五十志渐衰，久叹青春不重来。东拼西闯无一获，额头青丝一半白。目神散，面染霾，满腹累赘腿难抬。岁月赠我百斤肉，可曾留下一两财？！如果茶能醉人，谁还会去喝酒？如果糖能解愁，谁还会去抽烟？如果没有心酸往事，谁又能体会这人间疾苦。\n蜡笔小新和哆啦A梦场景都一样，一样的房间外貌，一样的空地，关键是空地上水泥管都一样——自言\n朝闻晨露，夕望晚霞……信步碧瓦朱檐，饱卧篱下花阴……\n当你老了，回顾一生，就会发觉：什么时候出国读书，什么时候决定做第一份职业，什么时候选择谈恋爱，什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你做出选择的那一日，在日记本上，相当沉闷和平凡，当时还以为是生命中普通的一天。By 陶杰《杀鹌鹑的少女》\n\n《哈佛谈判术》\n促进关系3个智慧一、让对方参与， 增加对方沉没成本。1、人只会记得自己跋山涉水去见的人，不会记得跋山涉水来见他的人。2、要经常麻烦客户，让其做力所能及的事，建立强链接，由交易到交情。二、制造障碍， 不能让对方为所欲为。三、似走非走， 留有余地，掌握主动。套路要在可控范围内。\n情感偏见7个动机矛盾问题，根源上杜绝自我中心主义（egocentrism）过分自信（overconfidence）非理性乐观（irrational optimism）优越感错觉（illusion of superiority）自利归因（self-serving attributions）错误地将善意当成示弱的表现只会使双方之间产生矛盾后悔厌恶（regret aversion）当人们作出错误的决策时，会对自己的行为感到痛苦。为了避免后悔，投资者常常作出一些非理性行为，俗称马后炮\n攻心策略8个突出对方可能的损失，而不是突出对方可能的收益\n分散对方的收益，集中对方的损失你在街上散步，捡到10美元；第二天你在另一条街散步，又捡到10美元。你打开钱包发现你丢了20美元。\n使用“被当面甩门”技巧door in the face先极端后温和把同样的要求放在一个肯定会被拒绝的更高的要求之前\n使用“登门槛”技巧foot in the door先温和后极端一旦人们同意了初始请求，他们在心理上就做好了准备去经历初始要求中可能包含的过程。对方同意你一个要求后，在第一个要求的基础上自然形成的其他要求被拒绝的可能性就降低了。原因是人们乐于证明自己过去的决定没有错误，并有保持言行一致的心理。\n利用辩护的力量如果你可以找到一个支撑你提出要求的理由，那么你的辩解就有可能增加对方同意合作的可能性对不起，我只有5页，我可以先用复印机吗？对不起，我只有5页，我能先用复印机吗？因为我想复印一下。\n利用社会证据助你一臂之力接线员正等你致电 改成 如果线路忙，请稍后再拨为自己正名，给自己立形象心理学家将这种现象称为社会证明（social proof）\n做象征性的单方面让步填写完调查问卷可获得50美元-&gt;填写就可获得1美元，无论写完否标准的经济学理论，为解释这种现象制作经济学模型1美元不是奖励，而是一种单方面的让步\n用参照点支持你的报价与要求人们愿意花很多钱从“豪华度假宾馆”买啤酒，而不愿意从“破烂的杂货店”里买同样的啤酒。\n应对攻心策略6个系统性地准备使用评分系统将信息和影响清楚地分开换个角度看对方的报价安排反对派尽量不在时间压力下与对方谈判\n·类比推理通过对两种不同场景中经验教训的比较和对比来进行学习。·锁定价格一个数字，比如首先报价的价格，功能是让对方谈判人员的注意力和预期集中在价格上，从而有利于己方解决谈判中的不确定性。·行为决策研究对人类思维偏离理性进行的全方位研究。该研究已经在经济学、心理学、金融、法律、医药、营销和谈判等领域中引发了科学革命。·最佳替代方案（BATNA）如果当前谈判不成功，谈判人员会选择的其他方案（如打破谈判僵局）。·有限认知谈判人员在决策过程中无法看到与其决策相关而且唾手可得的信息。·认知偏见谈判人员因为思维方式中出现偏见而犯的系统性错误。·竞争心激发一种情绪状态，源自敌对情绪的上升，会让谈判人员有“不顾一切取得胜利”的想法。·相机合同双方同意将一些悬而未决的问题留待日后解决的合同。直到谈判中不确定性源头被处理后，才处理这些未决的问题。这种合同能让双方“赌”他们各自对未来发展趋势的预测孰对孰错。·相机让步在谈判中，让步和对方的行动紧密相连，这是一种让对方知道只有对方作出让步，自己才会回馈对方的姿态。·对比效应让人们在判断事物时不根据事物的绝对或客观尺寸来做判断，而是根据事物与参照点对比后对人产生的相对感觉（可能武断）来判断。·局部合作一方与另一方在某些议题上合作，而在某些议题上仍然保持竞争或对抗关系。·消除偏见策略谈判人员了采取的旨在减少自己自然产生的决策偏见的措施。·独有价值提议你能以低于你竞争者的价格更实在地提供给你谈判对手的资源，而这些资源又为谈判对手所重视。·“被当面甩门”（DITF）策略通过首先要求对方同意你一个较极端而对方几乎肯定拒绝的要求来增强对方与你合作的意愿。·自我中心主义我们的观点和预期以自利的形式让我们产生偏见。·固有信念谈判人员往往没能创造价值，这是因为他们认为“利彼之契于己不利”。也就是说，即便有扩大收益的可能，他们还是相信谈判中的总收益是固定的。·“登门槛”（FITD）策略一种以对方同意我方初次请求的意愿会导致对方奉献提高倾向为前提的攻心策略。其效果是在同意我方初次请求之后，对方会自然而然地同意接下来的其他请求。·框架效应谈判人员常有的一种表现，即处理涉及估计收益的方式与处理估计损失的方式不同。讨价还价优越感错觉一种导致人们认为自己在各个方面比他人更优秀的偏见。·无意视盲因为人们过于将精神集中在某一个特定的任务上而忽视了环境中显而易见的信息。·激励相容正文中找不到经过谈判确定，旨在限定对方的行为与双方所达成协议的精神相一致的条款。·信息不对称谈判中各方对信息的掌握程度必然不同。·局内人视角谈判人员以个人身份参加决策或谈判时最常采用的视角。局内人视角更容易引起偏见，而且比局外人视角更多地依赖直觉。·研究型谈判一种谈判的思维方式与谈判方法。其主要目的是发现对方经常隐藏起来的或尽力保护的兴趣和利益、持续目标、需求以及所受的限制。·非理性乐观一种积极、正面的错觉。其效果是让我们大多数人相信自己的未来比他人更美好、更灿烂。·习得乐观人们过高估计自己成功机会的想法是一种习得的、功能性的属性。从理论上说，不现实的高度乐观会让人们在回绝面前对自己的观点坚持不懈。·利益交换在谈判过程中交换让步的行为。具体来说，就是一方将另一方重视的东西让出，而另一方则在其他方面进行回馈。·厌恶损失人们避开损失的倾向。·边际效用与递增变化相关联的快乐感。比如谈判人员会因为得到了意料之外的让步或因为对方在让步之后继续让步而感到高兴。·动机性偏见源于人们脱离客观事实看世界的错觉。具体来说，就是觉得自己更公平、更慷慨、更应得到想要的东西、相比其他人更有可能获得成功。·竞标后谈判一种包含竞标和谈判的活动。首先竞标缩小了最佳候选人的选择范围，其次再与这些候选人进行一对一的谈判。·提高奉献倾向人们倾向于向自己或他人证明自己早前决策或行为的正确性，在这种强烈的心理作用下，人们会在其做法已然失败的情况下继续坚持对自己不利的做法。·非零和谈判一方的收益不等于另一方损失的谈判。在这种谈判中，交易的总价值取决于双方对价值创造策略的运用。·互利互惠法则一种广为认同的法则。其核心内容是双方在谈判中都应该回馈另外一方的善意或让步。在谈判中，互利互惠法则能让双方轮流作出让步。·局外人视角谈判人员不以个人身份参加决策或谈判时最常采用的视角。局内人视角更不容易引起偏见，而且比局内人视角更少地依赖直觉。局外人视角能帮助谈判人员归纳各种情况并让谈判人员找出对方相关的行为模式，从谈判中得到经验教训。过分自信·总的底线对所有议题进行权衡评估后得出的“退出谈判”的代价。如果你抛弃你的最佳替代方案，这就是你应该在谈判中得到的最小总价值。一般在估算总的底线时，有必要使用评分系统。·寄生式价值创造谈判双方从未参加谈判各方身上抽取价值。·帕累托最优协议协议中一方的收益不以另一方的损失为代价。·帕累托改进一种对交易进行的改进。改进结果是双方中至少有一方受益而又不损害另一方的利益。·积极错觉对自己的能力和未来产生了不现实的积极信心。这种信心能保护我们的自尊，让我们在面对困难的问题时也能坚持下去，从而毫无疑问地对我们的精神和物质状态产生积极的影响。·协议后协议在签订首份协议后继续通过谈判签订的协议。签订协议后协议的目的在于创造额外的价值。·囚徒困境一种竞争的情况，参与双方采用非合作策略时，个体受益；采用合作策略时，则集体受益。·心理偏差大幅度地偏离理性，其结果会让本来可靠的谈判策略失效。·反应性贬值谈判人员贬低某一让步或提案价值的倾向，而仅是因为该让步与提案是由被视作对手的另一方提出的。·参照组遗漏失误因为谈判人员没有适当地考虑到对方的实力而导致的常见的具有损害性的失误。·参照点谈判人员用来进行比较的明显对照物。参照点能影响谈判人员对议题价值或方案价值的判断。·底线谈判人员退出谈判的底线。如果对方提供的价值等于谈判人员的底线，那么谈判人员对是否接受就没有兴趣了，这样谈判人员会更有可能选择自己的最佳替代方案。·自利归因一种将功过按利于自己的方向归结原因的做法。谈判人员会通过自利归因而自我感觉良好。·社会证明一种心理学法则。谈判人员在自己的行为缺乏根据或支撑时会寻找其他类似的行为来引导自己或支持自己。·偏见税我们相信自己对个体的刻板印象，而忽视有关该个体的有用信息。偏见税就是我们在这个基础上作出影响他人的决策时付出的代价。·刻板印象用个体的特征去衡量个体所属团体中所有其他个体，而没有注意到每一个个体独一无二的特性。·目标价格谈判人员希望在谈判中得到的价格，也称为谈判人员的期望准位（negotiator’s aspiration level）。·价值创造增加谈判的整体价值，让双方都能有获得额外价值机会的行为。比如谈判人员发现对方的议题次序然后与对方进行利益交换的行为就是价值创造。·印象偏见谈判人员过于关注事物的显性特征而忽视其隐性特征，结果可能对谈判人员的自我满意度产生影响。·感性自我与理性自我人们内心经常面对选择，即自己想做的与自己觉得应该做的。·假赢现象竞标者虽然在竞标中胜出，但付出的代价要超过竞标对象本来的价值，其原因是竞标者没有考虑到对方的信息优势。·零和谈判一方的收益等于另一方损失的谈判。也称为“收益固定谈判”或“分配式谈判”。·议价区域（ZOPA）谈判中所有双方可能接受的谈判结果的集合区间。在单议题价格谈判中，该区间位于买卖双方的底线之间。\n\n你我皆凡人 生在尘世中\n耗子妄想喝猫奶，自己命运自己改！\n但，枯树逢焰刹那华，焰灭树寂复如沙\n东风夜放花千树，更吹落，星如雨\n枯木逢春直到烟花绽放的那一刻，枯树也开了花\n天道是死，修行是活，生灵万事，只为不死\n待到秋来九月八，我花开后百花杀。冲天香阵透长安，满城尽带黄金甲。\n“真正的离别，没有长亭古道，也没有劝君更尽—杯酒，只是在一个和往常一样的清晨，有人留在了昨天。”          ——余华\n很久以前看过一个评论，：“死人以后为什么要宴请宾朋”“告诉人们，这个家还没有散”\n梦是现实的延续，现实是梦境的终结\n我也不知道我下一秒会怎么对你怼你，夏心语。所以好好活着，毕竟我两在一起的时间，往后会很长哦。\n以身入局，胜天半子\n今日之举，不过权计\n烧去剑阁八百里 蜀中自有一片天\n韬光养晦，待夺天时时机已到，今日起兵！\n君子当屈身守份 以待天时\n昨日之仇，如芒在背\n人生三大错觉：手机震动、她喜欢我、我能反杀、自己不会沦为普通人、时间还长父母未老\n当对方陈述观点时，无论观点对错，说“典”当对方支持自己不支持的人或事时，说“孝”当对方辩论，或是开始细致解说时，说“急”当自己难以理解对方表达的观点时，说“乐”当对方要求你表达不存在的观点时，说“蚌”当对方产生足以称为立场的观点时，说“批”当自己说出自认为一针见血的话时，说“赢”当无法对对方言论进行有效反驳时，说“麻”\n我告诉你我喜欢你，并不是一定要和你在一起，只是希望今后的你在遭遇人生低谷的时候不要灰心，至少曾经有人被你的魅力所吸引，曾经是，以后也会是。\n每个人都会在成年以后盛情款待年少拮据的自己。\n人无法同时拥有青春和对青春的感受\n世人总因年少不可得之物而困其一生，却又因一事一景而解其终身之惑。\n吹风机的花语就是停电的爱\n劝架切记拦着不认识的那边，能抱走就别在原地拉扯。我小伙伴堂兄，带女友去网吧玩，结束时候看见自己朋友和相熟的小混子准备打架就冲上去当和事佬。小混子领头被他拉着说和呢，谁知道混子里有个不认识他的，冲他背来了一棍子，结果打脑袋上了当场没了。拉架就要立即将不熟悉的一方带离现场，别拉自己人，省的吃亏\n选人比追人更重要值得的人，才值得去爱\n情不知所起，一往而深！爱不知所终，却无怨无悔！\n“有什么建设给年轻人吗？”“投个好胎吧！”\n人生最大的分水岭就是羊水\n这个城市就像森林，每个猎人都是猎物\n最好的大学在高中的憧憬里，最好的高中在大学的回忆里\n是高中生的恋爱的确真的纯粹太多了。但凡过了这个年龄，就会出现特别离谱的价值观。也是网上的东西看多了，受到了有利于自己的洗脑。\n看到这句话，突然就想到以前送给她的那句：此时相望不相闻，愿逐月华流照君\n成熟的女朋友会自己撩自己\n孤独这两个字拆开，有孩童，有瓜果，有小犬，有蚊蝇，足以撑起一个盛夏傍晚的巷子口，人情味十足。稚儿擎瓜柳蓬下，细犬逐蝶深巷中。人间繁华多笑语，唯我空余两鬓风。孩童水果猫狗飞蝇当然热闹，可都与你无关，这就叫孤独。\n因为命运交织在一起的情愫，是不一样的。\n想起那句话：女孩爱一个人的时候会想什么？会想以后。\n老，老爷丸，丸砸\n盖伦出轻语，沉默又破防\n君取他人即如此，今朝亦是寻常事\n当所处的事件足够大的时候，领先半步是天才，领先一步是疯子，领先一整条路，你就是所有人的敌人。\n由此可以得出一条永远没错或者罕有错误的一般规律：谁是促使他人强大的原因，谁就自取灭亡。因为这种强大是由于他用尽心机否则就是使用武力促成的，而那个变成强大的人对于这两者都是猜疑的这也是历代开国帝王杀功臣的原因之一\n一步一行，便无惧陷入泥沼。一《崩坏：星會铁道》\n过去无法更改，未来无法预料，所以我很珍惜眼前的时光。一一《原神》旅程总有一天会迎来终点，不必匆忙。不要相信你的眼睛，眼睛会说谎。去追寻便好，哪怕是须臾的光亮，我们至少拥有此刻。终点并不意味着一切，在抵达终点之前，用你的眼睛多多观察这个世界吧。\n怎奈松风明月三千里，天不许归期。一一《判官》\n神明不必注目我，我所在意的只有你的目光。一-《光与夜之森》\n山湖共语念无尽，明月清秋又一程。一一《盗墓笔记》\n老爷，请记住我右边的心路。一一《重返未来1999》\n当一个故事要结束的时候，我们总会想起它的开始。\n智者不堕爱河，愚者互相选择他们高喊着无爱者自由，可余光还是看向了被爱者也许我该追随黄昏而去，而不是期待明日的清晨。余光只是祝福，无爱一生孤独。\n殿下，终是要有所失，方才能有所悟\n《沸腾十五年》没有比抉择更能影响到一个人的命运和前程了\n","categories":["Self-improvement"]},{"title":"C 语言学习笔记之高级篇","url":"/2021/01/23/code_C_advanced_2/","content":"0x00 Preface适逢假期，走马观花地看完了参考里的三本书，另外仔细研读了《C、C++指针经验总结》，精辟的语言让我对指针方面的理解总算是登堂入室，相比之下，其他书长篇大论的论述，着实有些生涩难读，故大致将一些注意到的细节整理到该文，以作后期查阅，并勉强冠上“高级篇”的标题，往后有更深的理解再作补充吧。\n0x01 Main body\n一个函数如果使用了指针作为形参，那么在函数调用语句的实参和形参的结合过程中，必须保证类型一致，否则需要强制转换。\n\n如果一个整型常量的第一个字符是数字 0，那么该常量将被视作八进制数。\n\n&#39;&#39; 引起的一个字符代表一个整数，&quot;&quot; 括起的一个字符代表一个指针。\n\n一个‘L’的 NUL 用于结束一个 ACSII 字符串，两个‘L’的 NULL 用于表示什么也不指向（空指针）。\n\n结构中允许存在位段、无名字段以及字对齐所需的填充字段。位段的类型必须是 int, unsigned int 或 signed int（或加上限定符）。至于 int 位段的值可不可以取负值则取决于编译器。\n\n这个声明表示 “next是一个指针，它指向一个函数，该函数返回另一个指针，该指针指向一个类型为 char 的常量指针”。\n\n\n\n把 typedef 看成是一种彻底的“封装”类型；可以用其他类型说明符对宏类型名进行扩展；在连续几个变量的声明中，用 typedef 定义的类型能够保证声明中所有的变量均为同一种类型，而用 #define 定义的类型则无法保证。\n\n\n\n动态库文件的扩展名是 “s”，静态库文件的扩展名是 “a”\n\n堆中的所有东西都是匿名的，不能按名字直接访问，只能通过指针间接访问。\n\n\n\n从堆中获取内存的惟一办法就是通过调用 malloc、calloc、realloc 库函数\n\ncalloc 在返回指针之前先把分配好的内存的内容都清空为零\nrealloc 改变一个指针所指向的内存块的大小，可扩大可缩小，它经常把内存拷贝到别的地方然后将指向新地址的指针返回给你\n\n\n堆经常会出现两种类型的问题：\n\n内存损坏：释放或改写仍在使用的内存\n内存泄漏：未释放不再使用的内存\n\n\n二维数组不能直接传递给函数，更多维数组必须把它分解为几个维数更少的数组。\n\n从逻辑上删除一段代码：特别是代码内部有注释，注释不能嵌套！\n#if 0\tstatements#endif\n假如这个程序的源代码由几个源文件所组成，那么使用该函数的源文件都必须写明该函数的原型。把原型放在头文件中并使用 #include 指令包含它们，可以避免由于同一个声明的多份拷贝而导致的维护性问题。\n\n数组参数是以引用形式调用的，即传址调用；标量和常量是按值传递的，即传值调用。在函数中对标量参数的任何修改都会在函数返回时丢失，因此，被调用函数无法修改调用函数以传值形式传递给它的参数。然而，当被调用函数修改数组参数的其中一个元素时，调用函数所传递的数组就会被实际地修改。\n\ngets() 丢弃换行符，在该行末尾存储一个 NUL 字节（一个 NUL 字节是指字节模式为全 0 的字节，类似 ‘\\0’ 这样的字符常量）然后，gets() 返回一个非 NULL 值，表示该行已被成功读取。当 gets() 被调用但事实上不存在输入行时，它就返回 NULL 值，表示它到达了输入的末尾（文件尾）。\n\n字符串就是一串以 NUL 字节结尾的字符。NUL 作为字符串终止符，它本身并不被看作是字符串的一部分。字符串常量就是双引号括起来的一串字符。\n\n当 scanf() 对输入值进行转换时，它只读取需要读取的字符。这样该输入行包含了最后一个值的剩余部分仍会留在那里，等待被读取。while 循环将读取并丢弃这些剩余的字符。\nwhile((ch = getchar()) != EOF &amp;&amp; ch != &#x27;\\n&#x27;)\n如果输入中不再存在任何字符，函数就会返回常量 EOF（在 stdio.h 中定义），用于提示文件的结尾。EOF 需要的位数比字符型值所能提供的位数要多，这也是 getchar 返回一个整型值而不是字符值的原因。然而，把 getchar 的返回值首先存储于 ch 中将导致它被截短。\n\n如果一个多字节字符常量的前面有一个 L，那么它就是宽字符常量，如 L’abc’\n\n当一个字符串常量出现于一个表达式中时，表达式所使用的值就是这些字符所存储的地址，而不是这些字符本身。你不能把字符串常量赋值给一个字符数组，因为字符串常量的直接值是一个指针。\n\nsigned 一般只用于 char 类型，因为其他整型类型在缺省情况下都是有符号数。\n\n变量的缺省存储类型取决于它的声明位置。凡是在任何代码块之外声明的变量总是存储于静态内存中，即不属于堆栈的内存。对于这类变量，你无法为它们指定其他存储类型。\n\n在代码块内部声明的变量的缺省存储类型是自动的，即它存储于堆栈中。如果加上 static，可以使它的存储类型从自动变为静态。\n\n函数形参不能声明为静态，因为实参总是在堆栈中传递给函数，用于支持递归。\n\n当 static 用于函数定义时，或用于代码块之外的变量声明时，它用于修改标识符的外部链接属性，但只能在声明它们的源文件中访问；当它用于代码块内部的变量声明时， 它用于修改变量的存储类型，从自动变量修改为静态，用这种方式声明的变量在程序执行之前创建，并在程序的整个执行期间一直存在，而不是每次在代码块开始执行时创建，在代码块执行完毕后销毁。\n\n\n\n前缀后缀操作符的结果不是被它们所修改的变量，而是变量值的拷贝。\n\n|| &amp;&amp; 操作符具有短路求值性质，如果表达式的值根据左操作数可决定，就不再对右操作数求值；| &amp; 两边的操作数都要进行求值。\n\n连续赋值中各个变量的长度不一。\n\nC 可以用于设计和实现抽象数据类型 ADT，它可以限制函数和数据定义的作用域。这个技巧也被称为黑盒设计。通过 static 实现限制对那些并非接口的函数和数据的访问。\n\nstrlen 的结果是个无符号数，下面两等式不相等；如果把 strlen 的返回值强制转换为 int，就可以消除这个问题。\nif(strlen(x) &gt;= strlen(y))...if(strlen(x) - strlen(y) &gt;= 0)...\n此时 sim 相当于类型名而不是结构标签。\ntypedef struct&#123;\tint a;&#125;sim;sim x;\n对边界要求最严格的成员首先出现，对边界要求最弱的成员最后出现。这种做法可以最大限度地减少因边界对齐而带来的空间损失。(offsetof 宏)\n\n把位段成员显式地声明为 signed int 或 unsigned int，位段是不可移植的，使源代码中位的操作表达得更为清楚。\n\n如果操作系统无法向 malloc 提供更多的内存，就返回一个 NULL 指针，因此需要检查返回值。\n\n动态分配的内存必须整块一起释放。但是，realloc 函数可以缩小一块动态分配的内存，有效地释放它尾部的部分内存。\n\n定义域错误：如果一个函数的参数不在该函数的定义域之内；范围错误：如果一个函数的结果值过大或过小，无法用 double 类型表示。\n\n堆栈帧：一个函数分成三个部分：函数序（prologue）、函数体（body）和函数跋（epilogue）。\n\n函数序用于执行函数启动需要的一些工作，例如为局部变量保留堆栈中的内存。\n函数体是用于执行有用工作的地方。\n函数跋用于在函数即将返回之前清理堆栈。\n\n\n引用型定义\nvoid add(int a, int b, int &amp;c)&#123;\tc = a + b;&#125;\n对比转换：\nint ret = 0;void getRet(int &amp;r)&#123;\t++r;&#125;调用：getRet(ret);\nplain C（纯 C 环境）\nint ret = 0;void getRet(int *r)&#123;\t++(*r);&#125;调用：getRet(&amp;ret);\n\n\n\n0x02 Reference\n《C陷阱与缺陷》《C专家编程》《C和指针(第二版)》\n\n0x03 Postscript跟着这篇 文章 假期继续看了几本 C 进阶的书，实话说这个过程相当枯燥，而且很多东西还不曾实战过，所以只是加深了一遍概念，但整体而言对 C 的理解还是有了一定的进步，我一直坚信看过的那些书既然被奉为经典，必然有它的闪光之处，也许目前的学习效率有点低下，但在大学这个宝贵的人生阶段，不就应该多尝试，多踩坑，毕竟我们多是普通人，纵使偶遇大佬指点一二，少走些许弯路，终归还是要靠自己稳扎稳打，方能一步一个脚印地走出属于自己的路，愿诸君共勉！\n","categories":["Programming"]},{"title":"C 语言学习笔记之基础篇","url":"/2020/02/06/code_C_basis/","content":"0x00 前言概览这个系列主要是整理 C 语言相关的一些知识，方便后期的复习与检索，适用者为学过基础的入门者编写程序时提供快捷便利的检索条件，纯小白可先收藏。此系列大致分为基础篇、进阶篇、高级篇，本文为基础篇，主要是一些零散知识点的整理，内容没有先后顺序，建议读者 Ctrl+F 查询；同时本着极简原则，一些知识点会直接举例说明。\n0x01 切入正题注释/*单多行注释*///单行注释（C99）\n命名编译器只识别前 63 个字符，对于外部标识符只允许使用 31 个字符（C99/C11）；名称第一个字符必须是大小写字母或下划线，不能是数字，区分大小写，但标识符最好不要超过 8 位。\n变量与常量变量未初始化可能为 0 或垃圾值，不允许连续赋值，如 int a=b=c=5; 是不合法的。\n定义常量：#define identifier valueconst type variable = value;\n参数实参是传递给函数的特定值；形参是函数中用于存储值的变量。\n编译器编译器报错的位置比真正的错误位置滞后一行；无法检测语义错误，即遵循了 C 规则，但输出结果错误。\n使用调试器，通过跟踪程序执行步骤，记录每个变量，监视程序状态排错。\n关键字和保留标识符auto\t声明自动变量break\t跳出当前循环case\t开关语句分支default\t开关语句中的其它分支char\t声明字符型变量或函数返回值类型const\t定义常量do\t循环语句的循环体float\t声明单精度浮点型变量或函数返回值类型double\t声明双精度浮点型变量或函数返回值类型else\t条件语句否定分支（与 if 连用）static\t声明静态变量extern\t声明变量或函数是在其它文件或本文件的其他位置定义for\t循环语句goto\t无条件跳转语句if\t条件语句int\t声明整型变量或函数long\t声明长整型变量或函数返回值类型short\t声明短整型变量或函数返回值类型return\t子程序返回语句（参数可带可不带）signed\t声明有符号类型变量或函数sizeof\t计算数据类型或变量长度（即所占字节数）switch\t用于开关语句typedef\t用以给数据类型取别名struct\t声明结构体类型union\t声明共用体类型enum\t声明枚举类型while\t循环语句的循环条件void\t声明函数无返回值或无参数，声明无类型指针volatile\t说明变量在程序执行中可被隐含地改变unsigned\t声明无符号类型变量或函数register\t声明寄存器变量continue\t结束当前循环，开始下一轮循环\nC99 新增关键字_Bool  布尔值  _Complex  复数  _Imaginary  虚数  inline  restrictC11 新增关键字_Alignas  _Alignof  _Atomic  _Generic  _Noreturn  _Static_assert  _Thread_local\n基本数据类型及取值范围\n\n\n注：ANSI 标准定义 int 是占 2 个字节，TC 是按 ANSI 标准的，它的 int 是占 2 个字节的。但是在 VC 里，一个 int 是占 4 个字节的。\n\n类型转换自动类型转换：如下图强制类型转换：(数据类型) (表达式)\n\n注：转换后不会改变原数据的类型及变量值，只在本次运算中临时性转换；强制转换后的运算结果不遵循四舍五入原则。\n\n\n常用的算术转换是隐式地把值强制转换为相同的类型。编译器首先执行整数提升，如果操作数类型不同，则它们会被转换为上列层次中出现的最高层次的类型；常用的算术转换不适用于赋值运算符、逻辑运算符 &amp;&amp; 和 ||。\nprintf 输出 double 和 float 都可以用 %f 混用，而 double 还可用 %lf。而 scanf 输入情况下 double 必须用 %lf，float 必须用 %f 不能混用。\n格式符/占位符\nsizeof 是内置运算符，以字节为单位给出指定类型的大小。C99 和 C11 提供 %zd 转换说明匹配 sizeof 的返回类型。一些不支持 C99 和 C11 的编译器可用 %u 或 %lu 代替 %zd。默认右对齐，%-d 为左对齐。\n转义序列用于代表难以表示或无法输入的字符。\n\n从 C90 开始，可以用十进制、八进制、十六进制形式表示字符常量。\n\n运算符及优先级\n\n\n注释：https://zh.cppreference.com/w/c/language/operator_precedence#cite_note-1\n\n同一优先级的运算符，运算次序由结合方向所决定。\n括号成员是老大;      // 括号运算符 []() 成员运算符.  -&gt;全体单目排老二;      // 所有的单目运算符比如 ++、 --、 +(正)、 -(负) 、指针运算 *、&amp;乘除余三,加减四;    // 这个&quot;余&quot;是指取余运算即 %移位五，关系六;     // 移位运算符：&lt;&lt; &gt;&gt; 关系运算符：&gt; &lt; &gt;= &lt;=等与不等排行七;     // 即 == 和 !=位与异或和位或;     // 位运算: 位与(&amp;) 异或(^) 位或(|)    &quot;三分天下&quot;八九十;  逻辑与，逻辑或;    // 逻辑运算符: &amp;&amp; 和 ||十一十二紧挨着;    // 注意顺序: &amp;&amp; 高于 ||条件只比赋值高,    // 三目运算符优先级排到 13 位只比赋值运算符和 &quot;,&quot; 高逗号运算最低级!    //逗号运算符优先级最低\n循环\n在没有循环结构的情况下，break 不能用在单独的 if-else 语句中。\n在知道循环次数的情况下更适合使用 for 循环。\n在不知道循环次数的情况下适合使用 while 或者 do-while 循环。\n如果有可能一次都不循环应考虑使用 while 循环。\n如果至少循环一次应考虑使用 do-while 循环。\n\nswitch 语句时还应注意以下几点：\n\n在 case 后的各常量表达式的值不能相同，否则会出现错误。\n在 case 子句后如果没有 break; 会一直往后执行直到遇到 break; 才会跳出 switch 语句。\nswitch 后面的表达式语句只能是整型或者字符类型。\n在 case 后，允许有多个语句，可以不用 &#123;&#125; 括起来。\n各 case 和 default 子句的先后顺序可以变动，而不会影响程序执行结果。\ndefault 子句可以省略不用。\n自定义函数尽量放在 main 函数之前，若要放在 main 函数后面，需要在 main 函数之前先声明自定义函数。\n\n\n编译器不优化情况下，for 循环里 ++i 比 i++ 要快一些。\n\n存储类别自动（auto）静态（static）寄存器（register）外部（extern）\n只有 局部自动变量 和 形式参数 可以作为 寄存器变量；\n一个计算机系统中的寄存器数目有限，不能定义任意多个寄存器变量；\n局部静态变量 不能定义为 寄存器变量。\nauto 是局部变量的默认存储类, 限定变量只能在函数内部使用；register 代表了寄存器变量，不在内存中使用；static 是全局变量的默认存储类,表示变量在程序生命周期内可见；extern 表示全局变量，即对程序内所有文件可见\nVS2019 中，看任何变量的内存，将该变量取地址&amp;，拖入内存窗口来看\n微软的编译器设计，不同的变量之间有 8 个字节的保护空间（Mac 和 Linux是没有的）\n字符串函数\n获取数组长度int length = sizeof(arr)/sizeof(arr[0]);\n二维数组定义的时候，可以不指定行的数量，但是必须指定列的数量。\n0x02 References\n《C Primer Plus》C语言入门这一篇就够了-学习笔记C语言教程\n\n0x03 写在最后因为基础篇的知识点比较零散，好在断断续续写了几天总算写完了，细心的朋友可以发现我在文中指出了一些 C99 和 C11 的新特性与 C89 和 C90 作为区分，以便在不同的编译器上能够更好的排错。还有很多知识点没有提到，后期补充时会写在进阶篇和高级篇中，文中难免有纰漏之处，请读者不吝指出。\n","categories":["Programming"]},{"title":"debug resolution","url":"/2023/04/24/code_debug/","content":"Pref整理一些报错及处理方案。\npythonNameError\nDate: 23/04/23\nError:NameError: name &#39;mesage&#39; is not defined\nCause: 命名错误\nSolve: 可能上下文拼写问题message = &quot;Hello Python Crash Course reader!&quot;print(message)\nRefer:《python编程从入门到实践第二版》P61\n\nSyntaxError\nDate: 23/04/24\nError:SyntaxError: invalid syntax\nCause: 符号错误，一般单双引号引起\nSolve: 双引号内嵌单引号message = &quot;One of Python&#x27;s strengths is its diverse community.&quot;print(message)\nRefer:《python编程从入门到实践第二版》P71\n\nIndexError\nDate: 23/04/24\nError:IndexError: list index out of range\nCause: 列表索引错误\nSolve: 检查索引motorcycles = [&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]print(motorcycles[2])\nRefer:《python编程从入门到实践第二版》P102\n\nIndentationError\nDate: 23/04/24\nError:IndentationError: expected an indented block\nCause: 缩进错误\nSolve: 修改缩进for magician in magicians:    print(magician)\nRefer:《python编程从入门到实践第二版》P111\n\nTypeError - 修改元组元素\nDate: 23/04/24\nError:TypeError: &#39;tuple&#39; object does not support item assignment\nCause: 修改元组元素\nSolve: 元组元素不可变dimensions = (200, 50)# dimensions[0] = 250 错误\nRefer:《python编程从入门到实践第二版》P130\n\nKeyError - 字典键值读取\nDate: 23/04/21\nError:KeyError: &#39;points&#39;\nCause: print() 输出的字典键值不存在\nSolve: 用 get() 访问值，不存在时返回一个默认值alien = &#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;speed&#x27;: &#x27;slow&#x27;&#125;# print(alien[&#x27;points&#x27;]) 报错point_value = alien.get(&#x27;points&#x27;, &#x27;No point value assigned.&#x27;) # get() 第二个参数留空，默认返回 Noneprint(point_value)\nRefer:《python编程从入门到实践第二版》P176\n\nTypeError - 输入数值读取\nDate: 23/04/22\nError:TypeError: unorderable types: str() &gt;= int()\nCause: input() 返回字符串，用作数值时报错\nSolve: 采用 int()age = input(&quot;How old are you? &quot;)# age &gt;= 18 报错age = int(age)age &gt;= 18\nRefer:《python编程从入门到实践第二版》P200\n\nTypeError - 实参错误\nDate: 23/04/22\nError:TypeError： user_age() missing 2 required positional arguments: &#39;name&#39; and &#39;age&#39;\nCause: 没有指定实参\nSolve: 指定实参def user_age(name, age):    print(f&quot;&#123;name&#125;: &#123;age&#125;&quot;)# user_age() 报错\nRefer:《python编程从入门到实践第二版》P229\n\nZeroDivisionError\nDate: 23/04/23\nError:ZeroDivisionError: division by zero\nCause: 除以 0\nSolve: 设置异常try:    print(5/0)except ZeroDivisionError:    print(&quot;You can&#x27;t divide by zero!&quot;)\nRefer:《python编程从入门到实践第二版》P308\n\nFileNotFoundError\nDate: 23/04/23\nError:FileNotFoundError: [Errno 2] No such file or directory: &#39;alice.txt&#39;\nCause: 文件不存在，或文件名错误\nSolve: 设置异常filename = &#x27;alice.txt&#x27;try:    with open(filename, encoding=&#x27;utf-8&#x27;) as f:        contents = f.read()except FileNotFoundError:    print(f&quot;Sorry, the file &#123;filename&#125; does not exist.&quot;)\nRefer:《python编程从入门到实践第二版》P312\n\ntodo字符串连接问题\nDate: 23/03/23\nError:TypeError: can only concatenate str (not &quot;bytes&quot;) to str\nCause: python2/3 版本差异\nSolve: 前缀 b 指明格式out = response.replace(&#x27;;&#x27;, &#x27;;\\n&#x27;)  out = response.replace(b&#x27;;&#x27;, b&#x27;;\\n&#x27;)context.log_level = &#x27;debug&#x27;payload = b&#x27;a&#x27;*8 + p32(0x00000786)\nRefer:Python 字符串前面加u,r,b,f的含义\n\nC/C++流对象和布尔类型的比较\nDate: 23/04/14\nError:二进制 == 没有找到接受 std::basic_istream&lt;char,std::char_traits&lt;char&gt;&gt; 类型的左操作数的运算符(或没有可接受的转换)\nCause: while ((cin &gt;&gt; weight) == 0) VS2019 编译器对于流对象和布尔类型的比较操作进行了限制。\nSolve: 显式转换布尔类型bool cin_weight = static_cast&lt;bool&gt;(cin &gt;&gt; weight); //第一种/*(cin &gt;&gt; weight) 的返回值是流对象 cin，而不是读取的值。这里实际上是将流对象隐式转换为布尔类型，若不需要处理读取操作失败的情况，可直接使用 while (cin &gt;&gt; weight) 来循环读取输入。第二种，输入字母符号，和 weight 类型不同，读取失败，0==0 为真，执行循环；反之不执行。*/while (bool(cin &gt;&gt; weight) == 0) &#123;\tfflush(stdin);\tSleep(1000);\tcout &lt;&lt; &quot;请输入整数或浮点数！为避免死循环，程序已自动退出&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tflag = false;\texit(1);&#125;\nRefer:小型超市商品管理系统 GPT-3.5\n\n","categories":["Programming"]},{"title":"python 学习笔记之基础篇","url":"/2022/04/20/code_python_basis/","content":"Pref逢居家懈怠，为缓解焦虑，更好利用空闲时间，启动容易上手的 python3 学习！另，我已有 C 的基础，故一些相同知识点会略过。\n注释# 注释&#39;&#39;&#39; &quot;&quot;&quot; 多行注释，文档字符串#coding=utf-8 或 #coding=gbk 中文注释\n字符串字符串连接 &#39;a&#39; + &#39;b&#39;字符串复制 &#39;a&#39; * 5单双引号均可用，包含时区分开，如 “ ‘ “\nprint() 返回 None 值str()\ntitle() 首字母大写upper() 全大写lower() 全小写\nistitle() 返回布尔值，字符串只包含首字母大写isupper()islower()\nisalpha() 字符串只包含字母isalnum() 字符串只包含字母和数字isdecimal() 字符串只包含数字isspace() 字符串只包含空格、制表符和换行\nstartswith()endswith() 所调用的字符串以该方法传入的字符串开始或结束\njoin() 参数是一个字符串列表。\n&#x27; &#x27;.join([&#x27;My&#x27;, &#x27;name&#x27;, &#x27;is&#x27;, &#x27;Simon&#x27;])&#x27;My name is Simon&#x27;\nsplit() 默认以空格为分隔符拆分字符串，返回一个列表\nljust() 左对齐rjust()center() 居中插入空格来对齐文本；第一个参数是整数长度，第二个可选参数指定一个填充字符。\nstrip() 删除首尾空白，第二参数可选指定字符删除，字符顺序不重要lstrip()rstrip()\nspam = &#x27;SpamSpamBaconSpamEggsSpamSpam&#x27;spam.strip(&#x27;ampS&#x27;)&#x27;BaconSpamEggs&#x27;\nu r b f 前缀u「Unicode」以 Unicode 格式进行编码，常用于中文字符串r 去掉反斜杠的转义机制，常用于正则表达式，对应 re 模块b「bytes」bytes 类型字符串f「format」拼接字符串\nfirst_name = &quot;ada&quot;last_name = &quot;lovelace&quot;full_name = f&quot;&#123;first_name&#125; &#123;last_name&#125;&quot; # 字符串中插入变量的值print(full_name)\nbytes 和 str 互相转换str.encode(&#x27;utf-8&#x27;)bytes.decode(&#x27;utf-8&#x27;)\n正则表达式 regex正则表达式的函数都在 re 模块\n创建对象 re.compile()传入一个字符串值，表示正则表达式，返回一个 Regex 模式对象。\n匹配对象 search() group() 方法Regex 对象的 search()，未找到返回 None；找到返回一个 Match 对象。\nMatch 对象的 group()，返回被查找字符串中实际匹配的文本。mo 是一个通用变量名，用于 Match 对象。\nphoneNumRegex = re.compile(r&#x27;\\d&#123;3&#125;-\\d&#123;3&#125;-\\d&#123;4&#125;&#x27;)mo = phoneNumRegex.search(&#x27;My number is 415-555-4242.&#x27;)print(&#x27;Phone number found: &#x27; + mo.group())\n括号分组向 group() 传入整数 1 等，取得匹配文本的不同分组；传入 0 或无参数，返回整个匹配文本。groups() 获取所有分组。\nphoneNumRegex = re.compile(r&#x27;(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)&#x27;)mo = phoneNumRegex.search(&#x27;My number is 415-555-4242.&#x27;)mo.group(1)&#x27;415&#x27;mo.groups()(&#x27;415&#x27;, &#x27;555-4242&#x27;)areaCode, mainNumber = mo.groups()print(areaCode)415# \\( \\) 将匹配实际的括号字符phoneNumRegex = re.compile(r&#x27;(\\(\\d\\d\\d\\)) (\\d\\d\\d-\\d\\d\\d\\d)&#x27;)\n管道匹配多个分组 |返回第一次出现的匹配文本heroRegex = re.compile (r&#x27;Batman|Tina Fey&#x27;)mo1 = heroRegex.search(&#x27;Batman and Tina Fey.&#x27;)mo1.group()&#x27;Batman&#x27;\n只指定一次前缀batRegex = re.compile(r&#x27;Bat(man|mobile|bat)&#x27;)mo = batRegex.search(&#x27;Batmobile lost a wheel&#x27;)mo.group()&#x27;Batmobile&#x27;mo.group(1)&#x27;mobile&#x27;\n问号匹配零次或一次指代字符之前的分组，下同。\nbatRegex = re.compile(r&#x27;Bat(wo)?man&#x27;)mo1 = batRegex.search(&#x27;The Batman&#x27;)mo1.group()&#x27;Batman&#x27;mo2 = batRegex.search(&#x27;The Batwoman&#x27;)mo2.group()&#x27;Batwoman&#x27;\n星号匹配零次或多次batRegex = re.compile(r&#x27;Bat(wo)*man&#x27;)mo3 = batRegex.search(&#x27;The Batwowowowoman&#x27;)mo3.group()&#x27;Batwowowowoman&#x27;\n加号匹配一次或多次batRegex = re.compile(r&#x27;Bat(wo)+man&#x27;)mo3 = batRegex.search(&#x27;The Batman&#x27;)mo3 == NoneTrue\n花括号匹配特定次数一个数字，或指定一个范围（最小值，最大值）或不限定最值之一。\n(Ha){3} 匹配字符串 ‘HaHaHa’。\n(Ha){3,5} 匹配 ‘HaHaHa’、’HaHaHaHa’、’HaHaHaHaHa’。\n贪心和非贪心匹配Python 的 Regex 默认是贪心的，表示在有二义的情况下，它们会尽可能匹配最长的字符串。花括号的非贪心版本匹配尽可能最短的字符串，即在结束的花括号后跟着一个问号。\nnongreedyHaRegex = re.compile(r&#x27;(Ha)&#123;3,5&#125;?&#x27;)mo = nongreedyHaRegex.search(&#x27;HaHaHaHaHa&#x27;)mo.group()&#x27;HaHaHa\nfindall() 方法包含被查找字符串中的所有匹配。不是返回一个 Match 对象。在正则表达式中没有分组，返回一个字符串列表。有分组，则返回元组列表。\nphoneNumRegex = re.compile(r&#x27;\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d&#x27;)phoneNumRegex.findall(&#x27;Cell: 415-555-9999 Work: 212-555-0000&#x27;)[&#x27;415-555-9999&#x27;, &#x27;212-555-0000&#x27;]phoneNumRegex = re.compile(r&#x27;(\\d\\d\\d)-(\\d\\d\\d)-(\\d\\d\\d\\d)&#x27;)phoneNumRegex.findall(&#x27;Cell: 415-555-9999 Work: 212-555-0000&#x27;)[(&#x27;415&#x27;, &#x27;555&#x27;, &#x27;1122&#x27;), (&#x27;212&#x27;, &#x27;555&#x27;, &#x27;0000&#x27;)]\n字符分类\n\n\n缩写字符\n表示\n\n\n\n\\d\n任何一位数字\n\n\n\\D\n除 0-9 以外的任何字符\n\n\n\\w\n任何字母、数字或下划线字符\n\n\n\\W\n除字母、数字和下划线以外的任何字符\n\n\n\\s\n空格、制表符或换行符「匹配空白」\n\n\n\\S\n除空格、制表符和换行符以外的任何字符\n\n\n自定义字符分类 [][a-zA-Z0-9] 匹配所有小写、大写字母和数字。\n方括号内，普通的正则表达式符号不会被解释，不需要转义。\n非字符类 ^匹配不在这个字符类中的所有字符。\nconsonantRegex = re.compile(r&#39;[^aeiouAEIOU]&#39;)\n开始字符 ^ 结束字符 $开始处用插入符号 ^，表明匹配必须发生在被查找文本开始处。末尾加上美元符号 $，表示该字符串必须以这个 Regex 的模式结束。同时使用，表明整个字符串必须匹配该模式。如 r&#39;^\\d+$&#39; 匹配从开始到结束都是数字的字符串。\nbeginsWithHello = re.compile(r&#x27;^Hello&#x27;)beginsWithHello.search(&#x27;Hello world!&#x27;)&lt;re.Match object; span=(0, 5), match=&#x27;Hello&#x27;&gt;endsWithNumber = re.compile(r&#x27;\\d$&#x27;) # 匹配数字结尾字符endsWithNumber.search(&#x27;Your number is 42&#x27;)&lt;re.Match object; span=(16, 17), match=&#x27;2&#x27;&gt;\n通配符 . 匹配除换行外所有字符，只匹配一个字符atRegex = re.compile(r&#x27;.at&#x27;)atRegex.findall(&#x27;The cat in the hat sat on the flat mat.&#x27;)[&#x27;cat&#x27;, &#x27;hat&#x27;, &#x27;sat&#x27;, &#x27;lat&#x27;, &#x27;mat&#x27;]\n.* 匹配除换行外所有字符nameRegex = re.compile(r&#x27;First Name: (.*) Last Name: (.*)&#x27;)mo = nameRegex.search(&#x27;First Name: Alice Last Name: Sweigart&#x27;)mo.group(1)&#x27;Alice&#x27;\n.* 贪心模式。.*? 非贪心模式。\ngreedyRegex = re.compile(r&#x27;&lt;.*&gt;&#x27;)mo = greedyRegex.search(&#x27;&lt;To serve man&gt; for dinner.&gt;&#x27;)mo.group()&#x27;&lt;To serve man&gt; for dinner.&gt;&#x27;nongreedyRegex = re.compile(r&#x27;&lt;.*?&gt;&#x27;)mo = nongreedyRegex.search(&#x27;&lt;To serve man&gt; for dinner.&gt;&#x27;)mo.group()&#x27;&lt;To serve man&gt;&#x27;\nre.DOTALL 匹配换行NewlineRegex = re.compile(&#x27;.*&#x27;, re.DOTALL) # 让通配符匹配所有字符，包括换行。NewlineRegex.search(&#x27;First\\nSecond\\nThird&#x27;).group()&#x27;First\\nSecond\\nThird&#x27;\nre.IGNORECASE 不区分大小写匹配传入 re.IGNORECASE 或 re.I 作为 re.compile() 第二个参数。\nsub() 方法替换字符串Regex 对象的 sub() 传入两个参数。返回替换后的字符串。第一个是一个字符串，用于取代发现的匹配；第二个是要搜索的字符串。\nnamesRegex = re.compile(r&#x27;Agent \\w+&#x27;)namesRegex.sub(&#x27;CENSORED&#x27;, &#x27;Agent Alice gave the documents to Agent Bob.&#x27;)&#x27;CENSORED gave the documents to CENSORED.&#x27;\n使用匹配的文本本身，作为替换的一部分。sub() 第一个参数中输入 \\1、 \\2 表示输入分组 1、2 的文本。\n字符串中的 \\1 将由分组 1 匹配的文本所替代，即 (\\w) 分组。\nagentNamesRegex = re.compile(r&#x27;Agent (\\w)\\w*&#x27;) # (\\w) 匹配 A，\\w* 匹配 liceagentNamesRegex.sub(r&#x27;\\1****&#x27;, &#x27;Agent Alice told Agent Carol.&#x27;)A**** told C****.\n管理复杂的正则表达式忽略正则表达式字符串中的空白符和注释。向 re.compile() 传入变量 re.VERBOSE，作为第二参数。\n难以阅读：\nphoneRegex = re.compile(r&#x27;((\\d&#123;3&#125;|\\(\\d&#123;3&#125;\\))?(\\s|-|\\.)?\\d&#123;3&#125;(\\s|-|\\.)\\d&#123;4&#125;(\\s*(ext|x|ext.)\\s*\\d&#123;2,5&#125;)?)&#x27;)\n多行书写，加上注释：\nphoneRegex = re.compile(r&#x27;&#x27;&#x27;((\\d&#123;3&#125;|\\(\\d&#123;3&#125;\\))? # area code(\\s|-|\\.)? # separator\\d&#123;3&#125; # first 3 digits(\\s|-|\\.) # separator\\d&#123;4&#125; # last 4 digits(\\s*(ext|x|ext.)\\s*\\d&#123;2,5&#125;)? # extension)&#x27;&#x27;&#x27;, re.VERBOSE)\nsomeRegexValue = re.compile(&#x27;foo&#x27;, re.IGNORECASE | re.DOTALL | re.VERBOSE)\n数\n\n\n数学操作符\n操作「优先级从高到低」\n\n\n\n**\n指数\n\n\n%\n取模\n\n\n//\n整除\n\n\n/\n除\n\n\n*\n乘\n\n\n-\n减\n\n\n+\n加\n\n\nint()float()\n类假值0、0.0 和 &#39; &#39;（空字符串）被认为是 False\n大数 - 下划线分组universe_age = 14_000_000_000print(universe_age)14000000000\n多变量赋值x, y, z = 0, 0, 0\n变量名\n只能包含字母、数字和下划线\n不能以数字开头\n区分大小写，常用小写\n\n常量，全大写表示（无内置常量类型）\n列表列表名用复数\n[[&#39;a&#39;,&#39;b&#39;],&#39;c&#39;] 可嵌套\n子列表副本 [:]访问最后一个元素 [-1]列表连接 + 复制 *方法返回值是 None，方法属于单个数据类型，只能在列表上调用。\nindex() 在列表中查找值\n传入一个值，存在于列表中，就返回下标；不在就报 ValueError；有重复只返回第一次出现的下标。\nspam = [&#x27;hello&#x27;, &#x27;hi&#x27;, &#x27;howdy&#x27;]spam.index(&#x27;hello&#x27;)\nappend() 列表末添加元素，只能一个insert(0, ‘’) 插入元素\ndel bicycles[0] 仅删除元素pop() 删除列表末元素pop(0) 删除元素，可赋值使用remove() 根据值删除元素，有重复则只删第一个\nsort(reverse=True) 字母顺序排序（逆序）使用 ASCII 字符顺序；按照字典顺序排序，spam.sort(key=str.lower)，sort() 将列表中所有的表项当成小写。\nsorted() 临时字母顺序排序，不改变原列表\n\n非所有元素值是小写时，按字母顺序排列列表变复杂。\n\nreverse() 逆序len() 长度min()max()sum() 数字列表总和\n可变和不可变数据类型字符串可看作是单个文本字符的列表，列表相关操作也用于字符串。\nname = &#x27;Zophie a cat&#x27;newName = name[0:7] + &#x27;the&#x27; + name[8:12]\n遍历cats = [&#x27;alice&#x27;, &#x27;david&#x27;, &#x27;carolina&#x27;]for cat in cats:    print(cat)\n迭代spam = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]for i in range(len(spam)):    print(str(i) + &#x27; in spam is &#x27; + spam[i])\n多重赋值技巧列表的值为多个变量赋值，变量数目和列表长度必须严格相等。\ncat = [&#x27;fat&#x27;, &#x27;black&#x27;, &#x27;loud&#x27;]size, color, disposition = cat\nrange(5) 生成数值 0-4range(1,5) 生成数值 1-4range(5, -1, -1) 生成数值 5-0\n\nlist() 返回传递值的列表版本\ntuple() 返回传递值元组版本\n\nnumbers = list(range(1, 6))print(numbers)[1, 2, 3, 4, 5]list(&#x27;hello&#x27;) #可把字符串转成列表[&#x27;h&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;]\n列表解析# 一般写法squares = []for value in range(1, 4):    squares.append(value**2)print(squares)# 列表解析squares = [value**2 for value in range(1, 4)]print(squares)\n切片players = [&#x27;charles&#x27;, &#x27;martina&#x27;, &#x27;alice&#x27;]print(players[0:2]) # [:2] [-2:] [0:3:2]\n复制列表my_foods = [&#x27;pizza&#x27;, &#x27;falafel&#x27;, &#x27;cake&#x27;]friend_foods = my_foods[:]\n元组 tuple：值不可变的列表，可优化比列表快dimensions = (50,)\n\n注：元组是由逗号标识的，圆括号只是方便区分；若定义只包含一个元素的元组，必须在这个元素后面加上逗号。\n\n\n修改元组变量：不能修改元素，可给元组变量重新赋值\n\ndimensions = (200, 50)for dimension in dimensions:    print(dimension)dimensions = (400, 100)\nif 语句在所有算术、比较操作符求值后，依次求值布尔操作符 not，and，or\n# 圆括号只是提高可读性(age_0 &gt;= 21) and (age_1 &gt;= 21)\n\n检查在列表中是否包含\n\ndogs = [&#x27;alice&#x27;, &#x27;tom&#x27;]&#x27;tom&#x27; in dogs&#x27;jam&#x27; not in dogs\n# 依次判断，满足则执行后退出age = 12if age &lt; 4:    price = 0elif age &lt; 18:    price = 25else: # 可省略    price = 40print(f&quot;Price is $&#123;price&#125;.&quot;)\n字典alien = &#123;&#125; # 创建空字典alien = &#123;&#x27;color&#x27;: &#x27;red&#x27;&#125; # 定义字典aline = &#123;    &#x27;color&#x27;: &#x27;red&#x27;,    &#x27;point&#x27;: &#x27;3&#x27;, # 最后的键值对建议加上逗号    &#125;alien[&#x27;point&#x27;] = 5 # 添加键值对print(alien)alien[&#x27;point&#x27;] = 3 # 修改字典值del alien[&#x27;color&#x27;] # 删除必须指定字典名和键print(speed[&#x27;fast&#x27;]) # KeyErrorspeed_value = alien.get(&#x27;speed&#x27;, &#x27;No speed value assigned.&#x27;) # 用 get() 访问值，避免报错，第一个参数（必选）指定键，第二个参数（可选）返回键不存在时的值，留空默认 None\n遍历所有键值对 items()for key, value in alien.items(): # items() 返回键值对元组    print(f&quot;\\nkey: &#123;key&#125;&quot;)    print(f&quot;value: &#123;value&#125;&quot;)\n这些数据类型（dict_keys、dict_values、dict_items）可用于 for 循环，不能被修改。\n遍历所有键 keys()for key in alien: # 遍历字典，默认遍历所有键for key in alien.keys(): # keys() 返回键列表    print(key)\n按特定顺序遍历所有键 sorted()for key in sorted(alien.key()):\n遍历所有值 values()for value in alien.values(): # values() 返回值列表    print(value)\n无重复遍历所有值 set()for value in set(alien.values()): # 集合 set，用花括号创建集合，用逗号分隔元素\n\n不同于列表和字典，集合不会以特定的顺序存储元素\n\n多重赋值技巧在 for 循环中将键和值赋给不同的变量\nspam = &#123;&#x27;color&#x27;: &#x27;red&#x27;, &#x27;age&#x27;: 42&#125;for k, v in spam.items():    print(&#x27;Key: &#x27; + k + &#x27; Value: &#x27; + str(v)) #必须将整型转换成字符型\n某键设置默认值 setdefault()两参数：检查并为字典中某键设置一个默认值；该键不存在或没有值时使用它；若存在，方法就会返回键的值，不做修改\nwhile 循环input() 接受一个参数做 prompt，提示输入内容，返回字符串\nCtrl + C 向程序发送 KeyboardInterrupt 错误，退出无限循环\n一般循环prompt = &quot;\\nTell me something: &quot;prompt += &quot;\\nEnter &#x27;q&#x27; to quit.&quot;msg = &quot;&quot;while msg != &#x27;q&#x27;:    msg = input(prompt)    if msg != &#x27;q&#x27;:        print(msg)\n标志循环active = Truewhile active:    msg = input(prompt)    if msg == &#x27;q&#x27;:        active = False    else:        print(msg)\nbreakwhile True:    msg = input(prompt)    if msg == &#x27;q&#x27;:        break    else:        print(msg)\ncontinuen = 0while n &lt; 10:    n += 1    if n % 2 == 0: # 打印奇数        continue    print(n)\n在列表间移动元素names = [&#x27;alice&#x27;, &#x27;brian&#x27;]new_names = []while names:    temp = names.pop()    new_names.append(temp)for new_name in new_names:    print(new_name)\n删除为特定值的所有列表元素pets = [&#x27;dog&#x27;, &#x27;cat&#x27;, &#x27;dog&#x27;, &#x27;cat&#x27;, &#x27;rabbit&#x27;, &#x27;cat&#x27;]while &#x27;cat&#x27; in pets:    pets.remove(&#x27;cat&#x27;)print(pets)\n使用用户输入来填充字典responses = &#123;&#125;while True:    name = input(&quot;\\nname: &quot;)    response = input(&quot;response: &quot;)    responses[name] = response    repeat = input(&quot;Enter anything to continue or &#x27;n&#x27; to quit.&quot;)    if repeat == &#x27;n&#x27;:        breakfor name, response in responses.items():    print(f&quot;&#123;name&#125;: &#123;response&#125;&quot;)\n函数形参 parameter实参 argument\n实参def user_age(name, age):    print(f&quot;&#123;name&#125;: &#123;age&#125;&quot;)user_age(&#x27;Tom&#x27;, &#x27;18&#x27;) # 位置实参user_age(name=&#x27;Tom&#x27;, age=&#x27;18&#x27;) # 关键字实参def user_age(name, age=&#x27;18&#x27;): # 默认值，必须先列出无默认值形参def user_age(name, age, gender=&#x27;&#x27;): # 让实参变可选    if gender:        user = f&quot;&#123;name&#125; &#123;age&#125; &#123;gender&#125;&quot;    else:        user = f&quot;&#123;name&#125; &#123;age&#125;&quot;    return user\nprint() 有可选变元 end 和 sep，分别指定在参数末尾打印什么，在参数之间用什么隔开print(&#39;Hello&#39;, end=&#39;&#39;) 禁用换行\n返回字典# 在条件测试中，None 相当于 False；若包含 age，会添加到字典def build_person(first_name, last_name, age=None):    person = &#123;&#x27;first&#x27;: first_name, &#x27;last&#x27;: last_name&#125;    if age:        person[&#x27;age&#x27;] = age    return personuser = build_person(&#x27;tom&#x27;, &#x27;antonio&#x27;, age=18)print(user)\n传递列表def users(names):    for name in names:        msg = f&quot;Hello, &#123;name.title()&#125;!&quot;        print(msg)usernames = [&#x27;hannah&#x27;, &#x27;ty&#x27;, &#x27;margot&#x27;]users(usernames)\n在函数中修改列表def change(usernames, new_usernames):    while usernames:        temp = usernames.pop()        new_usernames.append(temp)def show(new_usernames):    for new_username in new_usernames:        print(new_username)usernames = [&#x27;hannah&#x27;, &#x27;ty&#x27;, &#x27;margot&#x27;]new_usernames = []change(usernames, new_usernames)show(new_usernames)\n禁止函数修改列表，[:] 创建列表副本change(usernames[:], new_usernames)\n传递任意数量的实参# 星号创建一个 toppings 的空元组，该形参必须放在最后def make_pizza(size, *toppings):    print(f&quot;size: &#123;size&#125;&quot;)    for topping in toppings:        print(f&quot;&#123;topping&#125;&quot;)make_pizza(6, &#x27;pepperoni&#x27;)make_pizza(8, &#x27;mushrooms&#x27;, &#x27;green peppers&#x27;)\n使用任意数量的关键字实参# 双星号创建一个 info 的空字典，该形参必须放在最后def build_profile(first, last, **info):    info[&#x27;first_name&#x27;] = first    info[&#x27;last_name&#x27;] = last    return infoprofile = build_profile(&#x27;albert&#x27;, &#x27;einstein&#x27;, location=&#x27;princeton&#x27;, field=&#x27;physics&#x27;)print(profile)\n函数模块化及别名&#x27;&#x27;&#x27;pizza.py&#x27;&#x27;&#x27;def make_pizza(size, *toppings):    print(f&quot;size: &#123;size&#125;&quot;)    for topping in toppings:        print(f&quot;&#123;topping&#125;&quot;)def show():    print(&quot;...&quot;)&#x27;&#x27;&#x27;main.py&#x27;&#x27;&#x27;import pizzapizza.make_pizza(6, &#x27;pepperoni&#x27;)pizza.make_pizza(8, &#x27;mushrooms&#x27;, &#x27;green peppers&#x27;)from pizza import make_pizza, show # 导入模块中特定函数make_pizza(6, &#x27;pepperoni&#x27;)from pizza import * # 星号导入模块所有函数，可能与当前程序的函数覆盖，不建议用import pizza as p # 指定模块别名from pizza import make_pizza as mp # 指定函数别名\n作用域\n全局作用域中代码不能使用局部变量\n\n局部作用域可访问全局变量\n\n不同的作用域中，可以用相同的名字命名不同的变量\n\nglobal 语句强制函数中的一个变量引用该全局变量\n\n\n类&#x27;&#x27;&#x27;类中函数称为方法，规定双下划线；调用 __init__ 方法创建 Car 实例，自动传入实参 self，必须有一个参数位于最前面，方法是一个指向实例本身的引用，让实例能够访问类中的属性和方法；Car 类创建实例时，只需给其他形参提供值；前缀为 self 的变量可供类中所有方法使用，可通过任何实例访问；类看作是如何创建实例的说明。&#x27;&#x27;&#x27;class Car:    def __init__(self, make, model, year):        self.make = make # 可通过实例访问的变量称为属性        self.model = model        self.year = year        self.odometer = 0 # 属性默认值    def info(self):        name = f&quot;&#123;self.year&#125; &#123;self.make&#125; &#123;self.model&#125;&quot;        return name.title()    def read_odometer(self):        print(f&quot;&#123;self.odometer&#125;&quot;)    def update_odometer(self, mileage):        # 禁止里程表读数往回调        if mileage &gt;= self.odometer:            self.odometer = mileage        else:            print(&quot;Don&#x27;t roll back an odometer.&quot;)    def increment_odometer(self, miles):        self.odometer += milescar = Car(&#x27;audi&#x27;, &#x27;a4&#x27;, 2019) # 根据类创建实例print(f&quot;&#123;car.make&#125;&quot;) # 访问属性print(car.info())car.read_odometer() # 调用方法car.odometer = 20 # 直接修改属性值car.update_odometer(35) # 通过方法修改属性值car.increment_odometer(10) # 通过方法递增属性值\n继承&#x27;&#x27;&#x27;创建子类时，父类必须包含在当前文件中，且位于子类前；父类也称超类（superclass）&#x27;&#x27;&#x27;class Car:    --snip--class EletricCar(Car): # 子类继承父类    def __init__(self, make, model, year): # 初始化父类属性        super().__init__(make, model, year) # super() 函数可调用父类方法        self.battery = 100 # 新属性，父类不包含    def info_battery(self):        print(f&quot;&#123;self.battery&#125;&quot;)    # 重写父类方法，符合子类的需求el_car = EletricCar(&#x27;tesla&#x27;, &#x27;model s&#x27;, 2019)print(el_car.info())\nclass Car:    --snip--class Battery:    def __init__(self, battery=100):        self.battery = battery    def info_battery(self):        print(f&quot;&#123;self.battery&#125;&quot;)    def get_range(self): # 续航里程        if self.battery == 100:            range = 315        elif self.battery == 75:            range = 260        print(f&quot;&#123;range&#125;&quot;)class EletricCar(Car):    def __init__(self, make, model, year):        super().__init__(make, model, year)        self.battery = Battery() # 将实例用作属性el_car = EletricCar(&#x27;tesla&#x27;, &#x27;model s&#x27;, 2019)print(el_car.info())# 在实例 el_car 中查找属性 battery，并对存储在该属性中的 Battery 实例调用方法 info_battery()el_car.battery.info_battery()\n导入类&#x27;&#x27;&#x27;car.py&#x27;&#x27;&#x27;class Car:    --snip--class Battery:    --snip--class EletricCar(Car):    --snip--\n&#x27;&#x27;&#x27;my_car.py&#x27;&#x27;&#x27;# 最好是导入整个模块from car import Car, EletricCar # 导入子类my_car = Car(&#x27;audi&#x27;, &#x27;a4&#x27;, 2019)print(my_car.info())my_car.odometer = 23my_car.read_odometer()\n文件读取整个文件 - read()&#x27;&#x27;&#x27;函数 open() 返回一个表示文件的对象，赋给 file_object（只在 with 内可用），用方法 read() 读取；关键字 with 在不再需要访问文件后将其关闭；close() 关闭文件可能存在各种问题；read() 到达文件尾时返回一个空字符串，表现为空行；文本文件内容都被解读为字符串。&#x27;&#x27;&#x27;with open(&#x27;demo.txt&#x27;) as file_object:    contents = file_object.read()print(contents.rstrip()) # 删除多余空行\n逐行读取 - for 循环&#x27;&#x27;&#x27;输出可能每行中间有一个空行，print() 调用有一个换行符，文件本身有一个换行符。&#x27;&#x27;&#x27;filename = &#x27;demo.txt&#x27;with open(filename) as file_object:    for line in file_object:        print(line.rstrip())\n创建包含文件各行内容的列表 - readlines()filename = &#x27;demo.txt&#x27;with open(filename) as file_object:    lines = file_object.readlines() # 读取文件每一行，并存储在列表中for line in lines:    print(line.rstrip())\n使用文件内容 - 空字符串filename = &#x27;demo.txt&#x27;with open(filename) as file_object:    lines = file_object.readlines()use = &#x27;&#x27;for line in lines:    use += line.rstrip()print(use)\n写入文件 - write() - rwar+w&#x27;&#x27;&#x27;读取模式：r 读、w 写、a 附加、r+w 读写；省略模式实参，默认只读模式打开文件；写入文件不存在则自动创建，存在则覆盖重写；只能将字符串写入文本文件。&#x27;&#x27;&#x27;filename = &#x27;demo.txt&#x27;with open(filename, &#x27;w&#x27;) as file_object:    file_object.write(&#x27;anything&#x27;)with open(filename, &#x27;a&#x27;) as file_object:    file_object.write(&#x27;\\naddition&#x27;)\n\n注：Windows 使用 \\ 显示文件路径，但在代码中用 /绝对路径较长，赋给一个变量使用；python 可处理的数据量没有限制，只要系统内存足够。\n\n异常处理ZeroDivisionError 异常&#x27;&#x27;&#x27;python 用特殊对象「异常」来管理程序执行期间发生的错误；避免用户看到 traceback&#x27;&#x27;&#x27;def spam(divideBy):    try:        return 42 / divideBy    except ZeroDivisionError:       print(&quot;You can&#x27;t divide by zero!&quot;)print(spam(0))\nFileNotFoundError 异常def count_words(filename):    try:        # 一般用 f 表示文件对象；        # 系统默认编码与读取文件编码不一致时，需指定编码        with open(filename, encoding=&#x27;utf-8&#x27;) as f:            contents = f.read()    except FileNotFoundError:        print(f&quot;Sorry, the file &#123;filename&#125; does not exist.&quot;)    &#x27;&#x27;&#x27;    except FileNotFoundError:        pass # 静默失败    &#x27;&#x27;&#x27;    # pass 语句还充当占位符，提醒你在程序的某处无操作，也许以后要做什么。    else:        # 分析文本        words = contents.split()        num_words = len(words)        print(f&quot;&#123;filename&#125; has about &#123;num_words&#125; words.&quot;)filename = &#x27;alice.txt&#x27; # 处理单文件count_words(filename)filenames = [&#x27;alice.txt&#x27;, &#x27;siddhartha.txt&#x27;] # 处理多文件for filename in filenames:    count_words(filename)\n存储数据 - jsonJSON（JavaScript Object Notation）\ndump() load()import jsonnumbers = [2, 3, 5, 7, 11, 13]filename = &#x27;numbers.json&#x27;with open(filename, &#x27;w&#x27;) as f:    # 该函数接受两个实参：存储的数据、文件对象    json.dump(numbers, f)with open(filename) as f:    numbers = json.load(f) # 加载信息print(numbers)\n保存和读取用户生成的数据# 如果以前存储了用户名，就加载它。# 否则，提示用户输入用户名并存储它。import jsonfilename = &#x27;username.json&#x27;try:    with open(filename) as f:        username = json.load(f)except FileNotFoundError:    username = input(&quot;What is your name? &quot;)    with open(filename, &#x27;w&#x27;) as f:        json.dump(username, f)        print(f&quot;We&#x27;ll remember you when you come back, &#123;username&#125;!&quot;)else:    print(f&quot;Welcome back, &#123;username&#125;!&quot;)\n重构&#x27;&#x27;&#x27;代码能正确运行，但将其划分为便于改进的一系列完成具体工作的函数，该过程称为重构。&#x27;&#x27;&#x27;import jsondef greet_user():    &quot;&quot;&quot;问候用户，并指出其名字。&quot;&quot;&quot;    filename = &#x27;username.json&#x27;    try:        with open(filename) as f:            username = json.load(f)    except FileNotFoundError:        username = input(&quot;What is your name? &quot;)        with open(filename, &#x27;w&#x27;) as f:            json.dump(username, f)            print(f&quot;We&#x27;ll remember you when you come back, &#123;username&#125;!&quot;)    else:        print(f&quot;Welcome back, &#123;username&#125;!&quot;)greet_user()\n重构 greet_user()import jsondef get_stored_username():    filename = &#x27;username.json&#x27;    try:        with open(filename) as f:            username = json.load(f)    except FileNotFoundError:        return None    else:        return usernamedef get_new_username():    username = input(&quot;What is your name? &quot;)    filename = &#x27;username.json&#x27;    with open(filename, &#x27;w&#x27;) as f:        json.dump(username, f)    return usernamedef greet_user():    username = get_stored_username()    if username:        print(f&quot;Welcome back, &#123;username&#125;!&quot;)    else:        username = get_new_username()        print(f&quot;We&#x27;ll remember you when you come back, &#123;username&#125;!&quot;)greet_user()\n测试模块函数的定义和调用&#x27;&#x27;&#x27;name_function.py&#x27;&#x27;&#x27;def get_formatted_name(first, last):    full_name = f&quot;&#123;first&#125; &#123;last&#125;&quot;    return full_name.title()\n&#x27;&#x27;&#x27;names.py&#x27;&#x27;&#x27;import name_functionprint(&quot;Enter &#x27;q&#x27; at any time to quit.&quot;)while True:    first = input(&quot;\\nfirst name: &quot;)    if first == &#x27;q&#x27;:        break    last = input(&quot;last name: &quot;)    if last == &#x27;q&#x27;:        break    formatted_name = get_formatted_name(first, last)    print(f&quot;\\tNeatly formatted name: &#123;formatted_name&#125;.&quot;)\n单元测试和测试用例 - unittest&#x27;&#x27;&#x27;运行 test_name_function.py 时，所有以 test_ 打头的方法都将自动运行。&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;test_name_function.py&#x27;&#x27;&#x27;import unittestfrom name_function import get_formatted_nameclass NamesTestCase(unittest.TestCase):    def test_first_last_name(self):        &quot;&quot;&quot;能够正确地处理像 Janis Joplin 这样的姓名吗？&quot;&quot;&quot;        formatted_name = get_formatted_name(&#x27;janis&#x27;, &#x27;joplin&#x27;)        # 断言方法：核实得到的结果是否与期望一致        self.assertEqual(formatted_name, &#x27;Janis Joplin&#x27;)# 特殊变量 __name__，该变量在程序执行时设置# 若该文件作为主程序执行，__name__ 将被设置为 __main__if __name__ == &#x27;__main__&#x27;:    unittest.main() # 调用它来运行测试用例&#x27;&#x27;&#x27;运行测试文件，输出如下：第一行句点表明有一个测试通过了；OK 表明该测试用例中的所有单元测试都通过了。&#x27;&#x27;&#x27;.----------------------Ran 1 test in 0.001sOK\n未通过的测试&#x27;&#x27;&#x27;使函数能处理中间名，但无法正确处理只有名和姓的情况&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;name_function.py&#x27;&#x27;&#x27;def get_formatted_name(first, middle, last):    full_name = f&quot;&#123;first&#125; &#123;middle&#125; &#123;last&#125;&quot;    return full_name.title()&#x27;&#x27;&#x27;运行测试文件，输出如下：第一行字母 E，指出有一个单元测试导致了错误；第三行指出 NamesTestCase 中的 test_first_last_name() 导致了错误；Traceback 指出函数调用 get_formatted_name(...) 有问题；最后指出整个测试用例未通过，因为发生了一个错误。&#x27;&#x27;&#x27;E================================ERROR: test_first_last_name (__main__.NamesTestCase)--------------------------------Traceback (most recent call last):  File &quot;test_name_function.py&quot;, line 8, in test_first_last_name    formatted_name = get_formatted_name(&#x27;janis&#x27;, &#x27;joplin&#x27;)TypeError: get_formatted_name() missing 1 required positional argument: &#x27;last&#x27;--------------------------------Ran 1 test in 0.001sFAILED (errors=1)\n处理未通过的测试&#x27;&#x27;&#x27;name_function.py&#x27;&#x27;&#x27;def get_formatted_name(first, last, middle=&#x27;&#x27;):    if middle:        full_name = f&quot;&#123;first&#125; &#123;middle&#125; &#123;last&#125;&quot;    else:        full_name = f&quot;&#123;first&#125; &#123;last&#125;&quot;    return full_name.title()\n添加新测试&#x27;&#x27;&#x27;用于测试包含中间名的姓名&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;test_name_function.py&#x27;&#x27;&#x27;--snip--class NamesTestCase(unittest.TestCase):    def test_first_last_name(self):        --snip--    def test_first_last_middle_name(self):    formatted_name = get_formatted_name(&#x27;wolf&#x27;, &#x27;mozart&#x27;, &#x27;amadeus&#x27;)    self.assertEqual(formatted_name, &#x27;Wolf Amadeus Mozart&#x27;)if __name__ == &#x27;__main__&#x27;:    unittest.main()&#x27;&#x27;&#x27;第一行句点表明有两个测试通过了……&#x27;&#x27;&#x27;..----------------------Ran 2 test in 0.001sOK\n断言方法unittest 模块中的断言方法，只能在继承 unittest.TestCase 的类中使用这些方法\n\n\n\n方法\n用途\n\n\n\nassertEqual(a, b)\n核实 a == b\n\n\nassertNotEqual(a, b)\n核实 a != b\n\n\nassertTrue(x)\n核实 x 为 True\n\n\nassertFalse(x)\n核实 x 为 False\n\n\nassertIn(item, list)\n核实 item 在 list 中\n\n\nassertNotIn(item, list)\n核实 item 不在 list\n\n\n模块类定义与调用&#x27;&#x27;&#x27;survey.py&#x27;&#x27;&#x27;class AnonymousSurvey:    &quot;&quot;&quot;收集匿名调查问卷的答案。&quot;&quot;&quot;    def __init__(self, question):        self.question = question        self.responses = []    def show_question(self):        print(self.question)    def store_response(self, new_response):        self.responses.append(new_response)    def show_results(self):        print(&quot;Survey results:&quot;)        for response in self.responses:            print(f&quot;- &#123;response&#125;&quot;)\n&#x27;&#x27;&#x27;language_survey.py&#x27;&#x27;&#x27;from survey import AnonymousSurveyquestion = &quot;What language did you first learn to speak?&quot;my_survey = AnonymousSurvey(question)my_survey.show_question()print(&quot;Enter &#x27;q&#x27; at any time to quit.&quot;)while True:    response = input(&quot;Language: &quot;)    if response == &#x27;q&#x27;:        break    my_survey.store_response(response)my_survey.show_results()\n测试类&#x27;&#x27;&#x27;test_survey.py&#x27;&#x27;&#x27;import unittestfrom survey import AnonymousSurveyclass TestAnonymousSurvey(unittest.TestCase):    def test_store_single_response(self):        &quot;&quot;&quot;测试单个答案会被妥善存储。&quot;&quot;&quot;        question = &quot;What language did you first learn to speak?&quot;        my_survey = AnonymousSurvey(question)        my_survey.store_response(&#x27;English&#x27;)        self.assertIn(&#x27;English&#x27;, my_survey.responses)    def test_store_three_responses(self):        question = &quot;What language did you first learn to speak?&quot;        my_survey = AnonymousSurvey(question)        responses = [&#x27;English&#x27;, &#x27;Spanish&#x27;, &#x27;Mandarin&#x27;]        for response in responses:            my_survey.store_response(response)        for response in responses:            self.assertIn(response, my_survey.responses)if __name__ == &#x27;__main__&#x27;:    unittest_main()\n方法 setUp()# 若 TestCase 类中包含 setUp()，python 将先运行它，再运行以 test_ 打头的方法。&#x27;&#x27;&#x27;test_survey.py&#x27;&#x27;&#x27;import unittestfrom survey import AnonymousSurveyclass TestAnonymousSurvey(unittest.TestCase):    def setUp(self):        &quot;&quot;&quot;创建一个调查对象和一组答案，供使用的测试方法使用。&quot;&quot;&quot;        question = &quot;What language did you first learn to speak?&quot;        self.my_survey = AnonymousSurvey(question)        self.responses = [&#x27;English&#x27;, &#x27;Spanish&#x27;, &#x27;Mandarin&#x27;]    def test_store_single_response(self):        self.my_survey.store_response(self.responses[0])        self.assertIn(self.responses[0], self.my_survey.responses)    def test_store_three_responses(self):        for response in self.responses:            self.my_survey.store_response(response)        for response in self.responses:            self.assertIn(response, self.my_survey.responses)if __name__ == &#x27;__main__&#x27;:    unittest_main()\n\n注：运行测试用例时，每完成一个单元测试，都打印一个字符：通过时打印一个句点，报错时打印一个 E，而测试导致断言失败时则打印一个 F。\n\n关键字\n\n\nFalse\nawait\nelse\nimport\npass\n\n\n\nNone\nbreak\nexcept\nin\nraise\n\n\nTrue\nclass\nfinally\nis\nreturn\n\n\nand\ncontinue\nfor\nlambda\ntry\n\n\nas\ndef\nfrom\nnonlocal\nwhile\n\n\nassert\ndel\nglobal\nnot\nwith\n\n\nasync\nelif\nif\nor\nyield\n\n\n内置函数\n\n\nabs()\ndelattr()\nhash()\nmemoryview()\nset()\n\n\n\nall()\ndict()\nhelp()\nmin()\nsetattr()\n\n\nany()\ndir()\nhex()\nnext()\nslice()\n\n\nascii()\ndivmod()\nid()\nobject()\nsorted()\n\n\nbin()\nenumerate()\ninput()\noct()\nstaticme\n\n\nbool()\neval()\nint()\nopen()\nstr()\n\n\nbreakpoint()\nexec()\nisinstance()\nord()\nsum()\n\n\nbytearray()\nfilter()\nissubclass()\npow()\nsuper()\n\n\nbytes()\nfloat()\niter()\nprint()\ntuple()\n\n\ncallable()\nformat()\nlen()\nproperty()\ntype()\n\n\nchr()\nfrozenset()\nlist()\nrange()\nvars()\n\n\nclassmethod()\ngetattr()\nlocals()\nrepr()\nzip()\n\n\ncompile()\nglobals()\nmap()\nreversed()\n__import\n\n\ncomplex()\nhasattr()\nmax()\nround()\n\n\n\nGit 版本控制1. 创建文件夹 git_practice2. 创建程序 hello_git.pyprint(&quot;Hello Git!&quot;)\n3. 忽略文件 .gitignore__pycache__\n\ngit bash: touch .gitignoredos: ren n.txt .gitignore\n\n4. 初始化仓库 git initInitialized empty Git repository in git_practice/.git/\n\nGit 用来管理仓库的文件都存储在 .git 中，不用管它但不能删除。\n\n5. 检查状态 git statusOn branch mainNo commits yetUntracked files: # 指出未被跟踪的文件  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)        .gitignore        hello_git.py# 当前无提交，但指出了可能需要加入仓库的未跟踪文件nothing added to commit but untracked files present (use &quot;git add&quot; to track)\n6. 加入仓库 git add .项目中未被跟踪的文件都加入仓库中，但未提交\nOn branch mainNo commits yetChanges to be committed:  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)        new file:   .gitignore        new file:   hello_git.py\n7. 执行提交 git commit -m &quot;Started project&quot;标志 -m 让后面信息记录到项目的历史记录中。\n[main (root-commit) a3f6a37] Started project 2 files changed, 2 insertion(+) create mode 100644 .gitignore create mode 100644 hello_git.pyOn branch masternothing to commit, working tree clean# 工作树是干净的，若非如此，可能提交前忘记了添加文件。\n8. 查看提交历史 git logcommit b4a4af78247b33c27de89b57d4dde2369f712ab4 (HEAD -&gt; main)Author: xxx &lt;xxx@gmail.com&gt;Date:   Mon Apr 24 16:34:50 2023 +0800    Started project\n每次提交 Git 都会生成唯一的引用 ID，长 40 字符。记录提交人，提交时间，及提交时的指定信息。\n精简版：git log --pretty=oneline\nb4a4af78247b33c27de89b57d4dde2369f712ab4 (HEAD -&gt; main) Started project\n9. 第二次提交 git commit -am &quot;Extended greeting&quot;标志 -a 让仓库中所有修改了的文件都加入当前提交中\n&#x27;&#x27;&#x27;hello_git.py&#x27;&#x27;&#x27;print(&quot;Hello Git!&quot;)print(&quot;Hello everyone.&quot;)\n# 检查状态，指出所做修改未提交On branch mainChanges not staged for commit:  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)        modified:   hello_git.pyno changes added to commit (use &quot;git add&quot; and&#x2F;or &quot;git commit -a&quot;)[main 35530cb] Entended greeting 1 file changed, 1 insertion(+)# 查看状态和记录，同上\n10. 撤销修改 git checkout .Updated 1 path from the index# 查看状态，输出工作树干净，文件中最后一行代码被删除。\ngit checkout 能恢复到以前的任意提交。git checkout . 放弃最后一次提交后所做的修改，恢复到最后一次提交的状态。\n11. 检出以前的提交 git checkout b4a4af末尾指定该提交的引用 ID 前 6 字符。\nNote: switching to &#39;b4a4af&#39;...HEAD is now at b4a4af7 Started projectgit checkout mainPrevious HEAD position was b4a4af7 Started projectSwitched to branch &#39;main&#39;\n检出以前的提交后，将离开分支 main，进入分离头指针（detached HEAD）状态。HEAD 指针表示当前提交的项目状态。\n12. 重置到以前的提交 git reset --hard b4a4af13. 删除仓库 rm -rf .git当仓库的历史记录弄乱了，无法恢复时，个人可删除历史记录，再重建仓库，不影响文件当前状态。\n可直接删除 .git 或 cmd 下：\nrmdir /s .git\n缩进规则的例外\n在源码文件中，列表可以跨越几行，直到结束方括号。行末使用续行字符 \\，将一条指令写成多行。\n\n标准库random# 创建与安全相关的应用程序时，勿用 randomfrom random import randint, choice# 随机返回两个整数之间（含）的整数randint(1, 6)# 列表/元组为参数，随机返回其中一个元素players = [&#x27;charles&#x27;, &#x27;michael&#x27;, &#x27;florence&#x27;, &#x27;eli&#x27;]choice(players)\n\n\n第三方模块自动排版pip install yapf\n\n\nRefer《Python编程快速上手——让繁琐工作自动化第一版》《python编程从入门到实践第二版》git - Windows下创建 .gitignore 文件Python 字符串前面加u,r,b,f的含义python格式化代码【自动排版】 yapf、black风格选择\nPS啃过 C/C++ 的选手，再学 python 进展之快着实超乎我的意料，晃荡大学四年，编程语言这方面总算开始有真正的基础了，汗颜啊！\n","categories":["Programming"]},{"title":"C 语言学习笔记之进阶篇","url":"/2020/05/19/code_C_advanced/","content":"0x00 前言概览此文再对 C 的内存、数组、结构体、共用体、预处理器、头文件、函数和指针等方面做一个总结概括。\n0x01 切入正题\nprintf() 转换说明修饰符\n\nprintf() 标记\n\nscanf() 转换说明修饰符\n\n除了 %c，格式字符串中的空白（空格、制表符或换行符）意味着其他转换说明都会自动跳过待输入值前面所有空白\n\nscanf(&quot;%c&quot;, &amp;ch) 从输入中第 1 个字符开始读取，scanf(&quot; %c&quot;,&amp;ch) 从第 1 个非空白字符开始读取\n\nstrlen() 返回字符串中的字符数（包括空格和标点符号，不包括空字符 \\0）\n\nprintf() 和 scanf() 都可以使用 * 修饰符来修改转换说明的含义，滞后赋值printf(&quot;This is :%*d\\n&quot;, width, This); 变量 width 提供字段宽度\n\nscanf(&quot;%*d %*d %d&quot;, &amp;n); 跳过两个整数，把第 3 个整数拷贝给 n\n\n\n\n\n在程序中，最好用 #define 定义数值常量，用 const 关键字声明只读变量。\n\nC99 规定使用趋零截断。即在某些运算中 -3.8 会转换成 -3；C 可以实现多重赋值。\n\n无论何种情况，只要 a 和 b 都是整数值，便可通过 a - (a/b)*b 计算 a%b。\n\n把循环测试和更新循环放在一处，就不会忘记更新循环。尽管把两个操作合并在一个表达式中，降低了代码可读性，还容易产生计数错误，但是却可以精简代码。\n\n如果使用前缀形式和后缀形式会对代码产生不同的影响，最好不要那样使用。如： b = ++i; 如果使用 i++，会得到不同的结果，应该使用下列语句： ++i;  b = i; 此时使用 i++，也不会影响 b 的值。\n\n编译器可以自行选择先对函数中的哪个参数求值，提高了编译器的效率，但是如果在函数的参数中使用了递增/递减运算符，就会有一些问题，对此，如果一个变量出现在一个函数的多个参数中，或者一个变量多次出现在一个表达式中不要对该变量使用递增/递减运算符。\n\n根据 C 标准，声明不是语句，这与 C++ 不同。赋值和函数调用都是表达式。没有所谓的 “赋值语句” 和 “函数调用语句”，这些语句实际上都是表达式语句。\n\n序列点（sequence point）是程序执行的点，在该点上，所有的副作用（side effect）都在进入下一步之前发生。语句中的分号标记了一个序列点。序列点有助于分析后缀递增何时发生。\n\nC99 规定：actual argument（译为实参）；formal parameter（译为形参）\n\n一般而言，所有非零值都视为真，只有 0 被视为假。如 while(goats) 替换 while(goats !=0)\n\n单独分号表示空语句。使用带空语句的 while 语句，所有的任务都在测试条件中完成了，不需要在循环体中做什么。\n\nC99 提供了 stdbool.h，该头文件让 bool 成为 _Bool 的别名，并把 true 和 false 分别定义为 1 和 0 的符号常量。包含该头文件后，可以与 C++ 兼容，因为 C++ 把 bool、true、false 定义为关键字。\n\nreturn 语句只能把被调函数中的一个值传回主调函数，传回两个值以上则需要指针。普通变量把值作为基本量，把地址作为通过 &amp; 运算符获得的派生量，而指针变量把地址作为基本量，把值作为通过 * 运算符获得的派生量。\n\n当初始化列表中的值少于数组元素个数时，编译器会把剩余的元素都初始化为 0；通过 sizeof 自动计数的弊端：无法察觉初始化列表中的项数有误。\n\n\n\n指定初始化器（C99）如：int arr[8] =&#123; 31, 28, [4] = 31, 30, 31, [1] = 29 &#125;; 最好在声明数组时使用符号常量来表示数组大小。\n\nflizny == &amp;flizny[0]; // 数组名是数组首元素的地址dates + 2 == &amp;date[2] // 相同的地址*(dates + 2) == dates[2] // 相同的值\n\n只有在函数原型或函数定义头中， 才可以用 int ar[] 代替 int* ar 它们都表示 ar 是一个指向 int 的指针。int* ar 只能用于声明形参。int ar[] 表示指针 ar 指向的不仅是一个 int 类型值，还是一个 int 类型数组的元素。\n\n函数原型可以省略参数名（四种等价）int sum(int* ar, int n); int sum(int*, int); int sum(int ar[], int n); int sum(int [], int); \n\n\n\n使用这种 “越界” 指针的函数调用更为简洁：a = s(m, m + SIZE);ar[i] 和 *(ar+i) 是等价的。ar 可以是数组名，或是指针变量。\n\n\nwhile (start &lt; end) &#123;total += *start; // 把数组元素值加起来start++;&#125; // 让指针指向下一个元素total += *start++; // 循环体压缩成一行代码\n\n\nC 保证在给数组分配空间时，指向数组后面第一个位置的指针仍是有效指针，这使得  while 循环的测试条件有效。虽然 *start++ 写法常用，但 *(start++) 写法更清楚。(*start)++ 先使用 start 指向的值，再递增该值，而不是递增指针。这样指针将一直指向同一个位置，但是该位置上的值发生了变化。\n\n指针的用法：\n指针与整数相加（减去）（整数会和指针所指向类型的大小（以字节为单位） 相乘，结果与初始地址相加，该指针指向首地址，ptr1 + 4 与 &amp;urn[4] 等价）\n递增（递减）指针（递增指向数组元素的指针让该指针移动至数组的下一个元素）\n指针求差（求差的两个指针分别指向同一个数组的不同元素，计算求出两元素之间的距离）\n比较（关系运算符可以比较两个指针的值，前提是都指向相同类型的对象）\n\n\n指针减去一个指针得到一个整数，指针减去一个整数得到一个指针。使用指针前，必须先用已分配的地址初始化。\n\n\nconst double* pd = rates; double const* pd = rates; pd 指向的 double 类型值声明为 const，这表明不能使用 pd 来更改它所指向的值\n\nconst 放在 * 左侧，限定了指针指向的数据不能改变；const 放在 * 右侧，限定了指针本身不能改变。\n\n\ndouble* const pc = rates; pc 指向数组来声明并初始化一个不能指向别处的指针\n\nconst double* const pc = rates; 该指针既不能更改它所指向的地址，也不能修改指向地址上的值\n\n把 const 指针赋给非 const 指针不安全，因为这样可以使用新的指针改变 const 指针指向的数据。把非 const 指针赋给 const 指针没问题，前提是只进行一级解引用。C++ 允许在声明数组大小时使用 const 整数，C 不允许；C++ 指针赋值检查更严格，不允许把 const 指针赋给非 const 指针，C 允许。\n\n\n\n指向多维数组的指针\n*zippo 是该数组首元素 zippo[0] 的值，zippo[0] 是该数组首元素 zippo[0][0] 的地址，即 *zippo、zippo[0] 与 &amp;zippo[0][0]等价。**zippo 与 *&amp;zippo[0][0] 等价。zippo 是地址的地址，必须解引用两次才能获得原始值。\n\nint(*pz)[2]; pz 声明为指向一个数组的指针，该数组内含两个 int 类型值。int* pax[2]; pax 是一个内含两个指针元素的数组，每个元素为指向 int 的指针。pz[m][n] == *(*(pz + m) + n)\n\n一般而言，声明一个指向 N 维数组的指针时，只能省略最左边方括号中的值：int sum(int ar[][12], int row); 第一对方括号只用于表明这是一个指针，其他方括号用于描述指针所指向数据对象的类型。\n\n\n\n\n二维数组计算元素地址公式：double ary[5][8]; 求 ary[2][3] 的地址(int)ary + sizeof(double[8])*2 + sizeof(double)*3\n三维数组计算元素地址公式：type ary[N][M][L]ary[i][j][k] address is：(int)ary + sizeof(type[M][L])*i + sizeof(type[L])*j + sizeof(type)*k\n\n\n\n变长数组（variable-length array, VLA, C99）\nfloat a[n]; 声明 VLA 时不能初始化，其必须是自动存储类别，不能使用 static 或 extern，VLA 创建后不能改变大小。\n\nint sum(int rows, int cols, int ar[rows][cols]); 前两个形参用作第三个形参二维数组 ar 的两个维度，必须在声明 ar 之前先声明这两个形参。C99/C11 规定，可以省略原型中的形参名，但在这种情况下，必须用星号来代替省略的维度：int sum(int, int, int ar[*][*]);\n\n变长数组名实际上是一个指针。这说明带变长数组形参的函数实际上是在原始数组中处理数组，因此可以修改传入的数组。\n\n变长数组允许动态内存分配，这说明可以在程序运行时指定数组大小。普通数组都是静态内存分配，即在编译时确定数组大小。\n\n\n\n复合字面量\n字面量是除符号常量外的常量。(int ar[2]) &#123;10, 20&#125; 去掉数组名，留下的 int [2] 即复合字面量的类型名。\n\n复合字面量是匿名的，不能先创建再使用它，必须在创建的同时使用它。使用指针记录地址就是一种用法：\nint* pt;pt = (int [2]) &#123;10, 20&#125;;\n把复合字面量作为实参传递给带有匹配形式参数的函数：\nint sum(const int ar[], int n);int total;total = sum((int []) &#123;4,4,4,5,5,5&#125;, 6);\n\n第 1 个实参是内含 6 个 int 类型值的数组，和数组名类似，这同时也是该数组首元素的地址。这种用法的好处是，把信息传入函数前不必先创建数组，这是复合字面量的典型用法。\n\n\n复合字面量是提供只临时需要的值的一种手段。复合字面量具有块作用域。\n\n\n\n字符串和字符串函数\n用双引号括起来的内容是字符串常量，被视为指向该字符串储存位置的指针，类似于把数组名作为指向该数组位置的指针，均视为地址。\n\n在数组形式中，ar 是地址常量，不能更改，如果改变了 ar，则改变了数组的存储位置。\n\n初始化数组把静态存储区的字符串拷贝到数组中，初始化指针只把字符串的地址拷贝给指针。声明数组将分配储存数据的空间，而声明指针只分配储存一个地址的空间。\n\n把指针初始化为字符串字面量时使用 const 限定符： const char* p = &quot;Ke&quot;; 否则可能导致内存访问错误。编译器可以使用内存中的一个副本来表示所有完全相同的字符串字面量。数组的指针元素所指向的字符串不必储存在连续的内存中，如果要改变字符串或为字符串输入预留空间，不要使用指向字符串字面量的指针。\n\n空字符是整数类型，一个字符，占 1 字节；空指针是指针类型，一个地址，通常占 4 字节。容易混淆是它们都可以用数值 0 来表示。\n\n使用 strchr() 查找换行符，find = strchr(line, &#39;\\n&#39;); *find = &#39;\\0&#39;;\n\nstrcat() 两个参数strncat() 第 3 个参数指定最大添加字符数strcmp() 只会比较第 1 个空字符前面的部分。如果第 1 个字符串在第 2 个前面，返回负数；相同返回 0；后面返回正数。strncmp() 可以比较到字符不同的地方，第 3 个参数指定的字符数。strcpy() 把指向源字符串的第 2 个指针声明为指针、数组名或字符串常量；指向源字符串副本的第 1 个指针指向一个数据对象（如数组）strncpy() 第 3 个参数指明可拷贝的最大字符sprintf() 把数据写入字符串。可以把多个元素组合成一个字符串。第 1 个参数是目标字符串的地址，其余参数和 printf() 相同。\n\nmemcpy() 用于 copy 整型数组、浮点型，比较方便，strcpy() 遇到内存中的 0 会直接结束。\n\n\n存储类别、链接和内存管理\n作用域描述程序中可访问标识符的区域\n\n块作用域，它把形参的作用域设置为整个函数体。\n\n函数作用域仅用于 goto 语句的标签。这意味着即使一个标签首次出现在函数的内层块中，它的作用域也延伸至整个函数。\n\n函数原型作用域用于函数原型中的形参名，范围从形参定义处到原型声明结束，变量的定义在函数的外面，具有文件作用域。\n\n文件作用域变量也称为全局变量。源代码文件和所有的头文件都看成是一个包含信息的单独文件。这个文件被称为翻译单元，范围是整个翻译单元。\n\n\n\n链接\n\n具有块作用域、函数作用域或函数原型作用域的变量都是无链接变量。这意味着这些变量属于定义它们的块、函数或原型私有。\n\n具有文件作用域的变量可以是外部链接或内部链接。外部链接变量可以在多文件程序中使用，内部链接变量只能在一个翻译单元中使用。\n\n有时把“内部链接的文件作用域”简称为“文件作用域”，如static int dodgers = 3;,“外部链接的文件作用域”简称为“全局作用域”或“程序作用域”，如int giants = 5;\n\n\n\n存储期\n\n存储期描述通过这些标识符访问的对象的生存期：静态存储期、线程存储期、自动存储期、动态分配存储期。\n\n静态存储期，该对象在程序的执行期间一直存在。文件作用域变量具有静态存储期，static 表明了链接属性。\n\n线程存储期用于并发程序设计。该对象从被声明时到线程结束一直存在。以关键字 _Thread_local 声明一个对象时，每个线程都获得该变量的私有备份。\n\n块作用域变量通常都具有自动存储期。当程序进入定义这些变量的块时，为这些变量分配内存；当退出这个块时，释放内存。这种做法相当于把自动变量占用的内存视为一个可重复使用的工作区或暂存区。块作用域变量也能具有静态存储期。创建这样的变量要把变量声明在块中，且在声明前加上 static，变长数组稍有不同，它们的存储期从声明处到块的末尾，而不是从块的开始处到块的末尾。\n\n\n\n默认声明在块或函数头中的任何变量都属于自动存储类别，可以显式使用关键字 auto\n\nauto 在 C++ 中用法完全不同，如果编写 C/C++ 兼容的程序，最好不要使用 auto 作为存储类别说明符。\n\n\n变量具有自动存储期：程序在进入该变量的声明所在块时才为其分配内存，在退出该块时释放内存，变量消失。内层块中声明的变量会隐藏外层块同名变量的定义。但是离开内层块后，外层块变量的作用域又回到了原来的作用域，可以用 auto 强调。\n\n寄存器变量储存在寄存器而非内存中，所以无法获取寄存器变量的地址。\n\n可以创建具有静态存储期、无链接、块作用域的局部变量。这些变量和自动变量一样，具有相同的作用域，但是程序离开它们所在的函数后，这些变量不会消失。\n\n不能在函数形参中使用 static\n\n外部链接的静态变量称为外部存储类别，即外部变量。把变量的声明放在所有函数外创建。如果一个源代码文件使用的外部变量定义在另一个源代码文件中，则必须用 extern 在该文件中声明该变量。\n\n未初始化外部变量会被自动初始化为 0。这一原则也适用于外部定义的数组元素。与自动变量的情况不同，只能使用常量表达式初始化文件作用域变量（只要不是变长数组，sizeof 表达式可被视为常量表达式。）\n\n\n\nC99 C11 标准要求编译器识别局部标识符的前 63 个字符和外部标识符的前 31 个字符。旧标准编译器识别局部标识符前 31 个字符和外部标识符前 6 个字符。外部变量名比局部变量名的规则严格，因为外部变量名还要遵循局部环境规则，限制更多。外部变量只能初始化一次，且必须在定义该变量时进行。\n\nint tern = 1; /* tern被定义 */main() &#123;extern int tern; /* 使用在别处定义的tern */\n\n第 1 次声明为变量预留了存储空间，该声明构成了变量的定义。第 2 次声明只告诉编译器使用之前已创建的 tern 变量，所以这不是定义。第 1 次声明被称为定义式声明（defining declaration），第 2 次声明被称为引用式声明（referencing declaration）。关键字 extern 表明该声明不是定义，它指示编译器去别处查询其定义。\n\n\n普通外部变量可用于同一程序中任意文件中的函数，但是内部链接的静态变量只能用于同一个文件中的函数。\n\nC 语言有 6 个关键字作为存储类别说明符：auto、register、static、extern、_Thread_local 和 typedef。typedef 与任何内存存储无关。在绝大多数情况下，不能在声明中使用多个存储类别说明符，即不能使用多个存储类别说明符作为 typedef 的一部分。唯一例外的是 _Thread_local，它可以和 static 或 extern 一起使用。\n\nauto 说明符表明变量是自动存储期，只能用于块作用域的变量声明中。 由于在块中声明的变量本身就具有自动存储期，所以使用 auto 主要是为了明确表达要使用与外部变量同名的局部变量的意图。\n\nregister 说明符只用于块作用域的变量，它把变量归为寄存器存储类别，请求最快速度访问该变量。同时保护了该变量的地址不被获取。\n\nextern 说明符表明声明的变量定义在别处。如果包含 extern 的声明具有文件作用域，则引用的变量必须具有外部链接。如果包含 extern 的声明具有块作用域，则引用的变量可能具有外部链接或内部链接，这接取决于该变量的定义式声明。\n\n在同一个文件所有函数的外部声明的变量是外部变量，具有文件作用域、外部链接和静态存储期。如果在这种声明前面加上 static，那么其声明的变量具有文件作用域、内部链接和静态存储期。如果在函数中用 static 声明一个变量，则该变量具有块作用域、无链接、静态存储期。\n\n具有自动存储期的变量，如果未初始化，自动变量中是垃圾值，会被设置为 0。程序在编译时为具有静态存储期的变量分配内存，并在程序的运行过程中一直保留这块内存。\n\n具有块作用域的变量是局部的，属于包含该声明的块私有。具有文件作用域的变量对文件（或翻译单元）中位于其声明后面的所有函数可见。具有外部链接的文件作用域变量，可用于该程序的其他翻译单元。具有内部链接的文件作用域变量，只能用于其声明所在的文件内。\n\n\n\n保护性程序设计的黄金法则：“按需知道”原则。尽量在函数内部解决该函数的任务，只共享那些需要共享的变量。\n\n\n把文件名放在双引号中，指示编译器在本地查找文件，而不是到编译器存放标准头文件的位置去查找文件。“本地查找”的含义取决于具体的实现。一些常见的实现把头文件与源代码文件或工程文件放在相同的目录或文件夹中。\n\n\n\nmalloc() 函数接受一个参数：所需的内存字节数。会找到合适的空闲内存块，这样的内存是匿名的，但它会返回动态分配内存块的首字节地址。因此可以把该地址赋给一个指针变量，并使用指针访问这块内存。因为 char 表示 1 字节，其返回类型通常被定义为指向 char 的指针。\ndouble* ptd;ptd = (double*) malloc(n * sizeof(double));\n\n指针 ptd 被声明为指向一个 double 类型，而不是指向内含 n 个 double 类型值的块。使用强制类型转换更容易把 C 程序转换为 C++ 程序。\n\n\n通常，malloc() 要与 free() 配套使用。free() 的参数是之前 malloc() 返回的地址。动态分配内存的存储期从调用 malloc() 分配内存到 free() 释放内存为止。\n\n实际上也许在循环结束之前就已耗尽所有的内存。这类问题被称为内存泄漏（memory leak）。在函数末尾处调用 free() 可避免这类问题发生。\n\n分配内存还可以使用 calloc()：接受两个无符号整数作为参数。第 1 个参数是所需的存储单元数量，第 2 个参数是存储单元的大小（以字节为单位）\nlong* newmem;newmem = (long*) calloc(100, sizeof(long));\ncalloc() 还有一个特性：它把块中的所有位都设置为 0（在某些硬件系统中不是把所有位都设置为 0 来表示浮点值 0）可搭配 free()。\n\n使用动态内存通常比使用栈内存慢。\n\n静态数据（包括字符串字面量）占用一个区域，自动数据占用另一个区域，动态分配的数据占用第 3 个区域（通常被称为内存堆或自由内存）。\n\n\n\n\nvolatile 限定符告知计算机，代理（而不是变量所在的程序）可以改变该变量的值。通常，它被用于硬件地址以及在其他程序或同时运行的线程中共享数据。\n\nvolatile int loc1; loc1 是一个易变的位置volatile int* ploc; ploc 是一个指向易变的位置的指针以上代码把 loc1 声明为 volatile 变量，把 ploc 声明为指向 volatile 变量的指针。原因是它涉及编译器的优化。\n\n可以同时用 const 和 volatile 限定一个值。例如，通常用 const 把硬件时钟设置为程序不能更改的变量，但是可以通过代理改变，这时用 volatile。只能在声明中同时使用这两个限定符，它们的顺序不重要： volatile const int loc; const volatile int* ploc;\n\n\n\nrestrict 允许编译器优化某部分代码以更好地支持计算。它只能用于指针，表明该指针是访问数据对象的唯一且初始的方式。int* restrict restar = (int *) malloc(10 * sizeof(int));\n\nrestrict 限定符可用于函数形参中的指针。这意味着编译器可以假定在函数体内其他标识符不会修改该指针指向的数据，编译器可以尝试对其优化，使其不做别的用途。例如，C 库有两个函数用于把一个位置上的字节拷贝到另一个位置。在 C99 中这两个函数的原型是：void* memcpy (void * restrict s1, const void * restrict s2, size_t n);memcpy() 要求两个位置不重叠\n\n\n\n\n文件输入/输出\n\nch = getc(fp); 从 fp 指定的文件中获取一个字符putc(ch, fpout); 把字符 ch 放入 FILE 指针 fpout 指定的文件\nint ch;FILE * fp;fp = fopen(&quot;wacky.txt&quot;, &quot;r&quot;);while (( ch = getc(fp)) != EOF) &#123;putchar(ch); //处理输入&#125;\nfclose() 关闭指定的文件，必要时刷新缓冲区。对于较正式的程序，应该检查是否成功关闭文件。成功关闭返回 0，否则返回 EOF。if (fclose(fp) != 0) printf(&quot;Error in closing file %s\\n&quot;, argv[1]); 如果磁盘已满、移动硬盘被移除或出现 I/O 错误，都会导致调用 fclose() 函数失败。\n\nfgets() 它的第 1 个参数和 gets() 函数一样，表示储存输入位置的地址（char* 类型）；第 2 个参数是一个整数，表示待输入字符串的大小；最后一个参数是文件指针，指定待读取的文件。fgets(buf, STLEN, fp);buf 是 char 类型数组的名称，STLEN 是字符串大小，fp 是指向 FILE 的指针。\n\nfputs() 第 1 个参数是字符串的地址；第 2 个是文件指针。该函数根据传入地址找到的字符串写入指定的文件中。\n\nfgets() 读到一个换行符，会把它储存在字符串中gets() 会丢弃换行符fputs() 不会在输出的末尾添加换行符puts() 会自动在末尾添加一个换行符\n\nfseek() 返回 int 类型值，第 1 个参数是 FILE 指针，指向待查找的文件，fopen() 应该已打开该文件；第 2 个参数是偏移量（offset），该参数表示从起始点开始要移动的距离，必须是一个 long 类型值，可以为正（前移）、负（后移）或 0（保持不动）；第 3 个是模式，该参数确定起始点。根据 ANSI 标准，在 stdio.h 中规定了几个表示模式的明示常量。\n\n\nfseek(fp, 0L, SEEK_SET); // 定位至文件开始处fseek(fp, 2L, SEEK_CUR); // 从文件当前位置前移 2 个字节fseek(fp, -10L, SEEK_END); // 从文件结尾处回退 10 个字节\n\nftell() 返回类型是 long，它返回的是文件中的当前位置。\n\n\n必须掌握的 3 个技巧：\n为结构建立一个格式或样式；\n声明一个适合该样式的变量； \n访问结构变量的各个部分。\n\n\n在结构声明中，用一对花括号括起来的是结构成员列表。每个成员都用自己的声明来描述。右花括号后面的分号是声明所必需的，表示结构布局定义结束。struct book &#123; char title[MAXTITL]; char author[AXAUTL]; float value; &#125; library;\n\n组合后的结构声明和结构变量定义不需要使用结构标记：struct book library = &#123; &quot;The Pious Pirate and the Devious Damsel&quot;, &quot;Renee Vivotte&quot;, 1.95 &#125;;\n\nstruct book surprise = &#123; .value = 10.99&#125;; C99 和 C11 为结构提供了指定初始化器。\n\n和数组不同的是，结构名并不是结构的地址，因此要在结构名前面加上 &amp; 运算符。\n\n-&gt; 运算符后面的结构指针和 . 运算符后面的结构名 工作方式相同如果 him 是指向 guy 类型结构 barney 的指针，下面的关系恒成立：barney.income == (*him).income == him-&gt;income 假设 him == &amp;barney注意，通过指针访问结构成员时必须使用 -&gt; 运算符。\n\n允许把一个结构赋值给另一个结构，但是数组不能。还可以把一个结构初始化为相同类型的另一个结构。\n\n把结构作为函数参数可以把结构的信息传送给函数；把结构作为返回值的函数能把结构的信息从被调函数传回主调函数。结构指针也允许这种双向通信。\n\n指针作为参数有两个优点：执行快，只需传递一个地址。缺点是无法保护数据。\n\n结构作为参数传递的优点：函数处理的是原始数据的副本，保护了原始数据。\n\n传递结构的两个缺点是：较老版本的实现可能无法处理这样的代码，而且传递结构浪费时间和空间。尤其是把大型结构传递给函数，这种情况下传递指针或只传递函数所需的成员更合理。\n\n\n\n通常为了追求效率会使用结构指针作为函数参数，如需防止原始数据被意外修改，使用 const 限定符。按值传递结构是处理小型结构最常用的方法。\n\n\n复合字面量特性（C99）可用于结构和数组。如果只需要一个临时结构值，复合字面量很好用。例如，使用复合字面量创建一个数组作为函数的参数或赋给另一个结构。语法是把类型名放在圆括号中，后面紧跟一个用花括号括起来的初始化列表。(struct book) {“Idiot”, “Fyodor”, 6.99}\n\n伸缩型数组成员（C99），其声明的结构，最后一个数组成员具有一些特性。第 1 个特性是该数组不会立即存在。第2个特性是使用这个伸缩型数组成员可以编写合适的代码，就好像它确实存在并具有所需数目的元素一样。\n\n声明一个伸缩型数组成员有如下规则： 伸缩型数组成员必须是结构的最后一个成员； 结构中必须至少有一个成员； 伸缩数组的声明类似于普通数组，只是它的方括号是空的。\n\n带伸缩型数组成员的结构确实有一些特殊的处理要求：第一，不能用结构进行赋值或拷贝，这样做只能拷贝除伸缩型数组成员以外的其他成员。确实要进行拷贝， 应使用 memcpy() 函数。第二，不要以按值方式把这种结构传递给结构，要把结构的地址传递给函数。第三，不要使用带伸缩型数组成员的结构作为数组成员或另一个结构的成员。\n\n这种类似于在结构中最后一个成员是伸缩型数组的情况，称为 struct hack。除了伸缩型数组成员在声明时用空的方括号外，struct hack 特指大小为 0 的数组。然而，struct hack 是针对特殊编译器（GCC）的，不属于 C 标准。 这种伸缩型数组成员方法是标准认可的编程技巧。\n\n\n\n匿名结构（C11）是一个没有名称的结构成员。\n\n由于结构可以储存不同类型的信息，所以它是构建数据库的重要工具。储存在一个结构中的整套信息被称为记录（record），单独的项被称为字段（field）\n\n\n\n\n联合 是一种数据类型，它能在同一个内存空间中储存不同的数据类型（不是同时储存）。其典型的用法是，设计一种表以储存既无规律、事先也不知道顺序的混合类型。使用联合类型的数组，其中的联合都大小相等，每个联合可以储存各种数据类型；另一种用法是，在结构中储存与其成员有从属关系的信息。\n\n联合只能储存一个值，这与结构不同。有 3 种初始化的方法：把一个联合初始化为另一个同类型的联合；初始化联合的第 1 个元素；使用指定初始化器（C99）。\n\n匿名联合是一个结构或联合的无名联合成员。\n\n\n\n\n枚举类型 声明符号名称来表示整型常量。使用 enum 关键字可以创建一个新“类型”并指定它可具有的值（实际上，enum 常量是 int 类型，因此只要能使用 int 类型的地方就可以使用枚举类型）。枚举类型的目的是提高程序的可读性，它的语法与结构相同。\n\nenum spectrum &#123;red, orange, yellow, green, blue, violet&#125;; enum spectrum color;类似地，其他标识符都是有名称的常量，这些符号常量被称为枚举符（enumerator）例如，在声明数组时，可以用枚举常量表示数组的大小；在 switch 语句中，可以把枚举常量作为标签。\n\n\n\nC 枚举的一些特性并不适用于 C++。例如，C 允许枚举变量使用 ++ 运算符，C++ 不允许。所以如果编写的代码将来会并入 C++ 程序，那必须把上面例子的 color 声明为 int 类型才能兼容。\n\n\n默认情况下，枚举列表中的常量都被赋予 0、1、2 等，在枚举声明中，可以为枚举常量指定整数值。\n\nC 使用名称空间标识程序中的各部分，即通过名称来识别。作用域是名称空间概念的一部分：两个不同作用域的同名变量不冲突。名称空间是分类别的。在特定作用域中的结构标记、联合标记和枚举标记都共享相同的名称空间，该名称空间与普通变量使用的空间不同。这意味着在相同作用域中变量和标记的名称可以相同，不会引起冲突，但是不能在相同作用域中声明两个同名标签或同名变量。C++ 不允许这样做，因为它把标记名和变量名放在相同的名称空间中。\n\n\n\n\ntypedef 工具是一个高级数据特性，利用 typedef 可以为某一类型自定义名称。这方面与 #define 类似，但是两者有三处不同：typedef 创建的符号名只受限于类型，不能用于值；typedef 由编译器解释，不是预处理器；在其受限范围内，typedef 比 #define 更灵活。\n\n用 typedef 来命名一个结构类型时，可以省略该结构的标签。\n\n数组名后面的 [] 和函数名后面的 () 具有相同的优先级。它们比 * 的优先级高。下面声明的 risk 是一个指针数组，不是指向数组的指针：int* risks[10];\n\n[] 和 () 的优先级相同，都是从左往右结合，所以下面声明中，rusks 是一个指向数组的指针:int (* rusks)[10];\n\n\n\n\n\n\n为了指明函数类型，要指明函数签名，即函数的返回类型和形参类型。void ToUpper(char *); void (*pf)(char *); // pf 是一个指向函数的指针\n\n把函数名 ToUpper 替换为表达式 (*pf) 是创建指向函数指针最简单的方式。\n\n声明了函数指针后，可以把类型匹配的函数地址赋给它。这种情况，函数名可以用于表示函数的地址：pf = ToUpper;pf = ToUpper; (*pf)(mis);pf = ToUpper; pf(mis);\n\n\n\n\n\n由于 pf 指向 ToUpper 函数，*pf 等价于 ToUpper 函数，所以 (*pf)(mis) 和 ToUpper(mis) 相同；由于函数名是指针，那么指针和函数名可以互换使用，所以 pf(mis) 和 ToUpper(mis) 相同。从 pf 的赋值表达式语句就能看出 ToUpper 和 pf 是等价的。\n\n\n位操作\n按位与 常用于掩码（mask）。掩码指的是一些设置为开（1）或关（0）的位组合，0 看作不透明，1 看作透明。\n\n打开位（设置位）使用 按位或 需要打开一个值中特定位，同时保持其他位不变。\n\n关闭位（清空位）假设要关闭变量 flags 中的 1 号位。同样，MASK 只有 1 号位为1。可以这样做： flags &amp;= ～MASK;\n\n切换位，使用 ^ 组合一个值和一个掩码。要切换 flags 中的 1 号位，flags ^= MASK;\n\n检查位的值，必须覆盖 flags 中的其他位，只用 1 号位和 MASK 比较：if ((flags &amp; MASK) == MASK) puts(&quot;Wow!&quot;);为了避免信息漏过边界，掩码至少要与其覆盖的值宽度相同。\n\n移位运算符，针对 2 的幂提供快速有效的乘法和除法：number &lt;&lt; n number 乘以 2 的 n 次幂 number &gt;&gt; n 如果 number 为非负，除以 2 的 n 次幂\n\n移位运算符还可用于从较大单元中提取一些位。例如，假设用一个 unsigned long 类型的值表示颜色值，低阶位字节储存红色的强度，下一个字节储存绿色的强度，第 3 个字节储存蓝色的强度。随后你希望把每种颜色的强度分别储存在 3 个不同的 unsigned char 类型的变量中。那可以使用：#define BYTE_MASK 0xff unsigned long color = 0x002a162f;unsigned char blue, green, red;red = color &amp; BYTE_MASK;green = (color &gt;&gt; 8) &amp; BYTE_MASK;blue = (color &gt;&gt; 16) &amp; BYTE_MASK;\n\n使用右移运算符将 8 位颜色值移动至低阶字节，然后使用掩码技术把低阶字节赋给指定的变量。\n\n\n\n\n\n\n操控位的第 2 种方法是位字段（bit field）。位字段是一个 signed int 或 unsigned int 类型变量中的一组相邻的位（C99 和 C11新增了 _Bool 类型的位字段）。位字段通过一个结构声明来建立，该结构声明为每个字段提供标签， 并确定该字段的宽度。\nstruct &#123; unsigned int code1 : 2;unsigned int code2 : 2;unsigned int code3 : 8;&#125; prcode;\n一个字段不允许跨越两个 unsigned int 之间的边界。编译器会自动移动跨界的字段，保持 unsigned int 的边界对齐。一旦发生这种情况，第1个 unsigned int 中会留下一个未命名的“洞”。可以用未命名的字段宽度“填充”未命名的“洞”。使用一个宽度为 0 的未命名字段迫使下一个字段与下一个整数对齐。\n\n\nC 预处理器和 C 库\n#define 指令来定义明示常量（manifest constant）（也叫符号常量）预处理器指令从 # 开始运行，到后面的第 1 个换行符为止。指令的长度仅限于一行。在预处理开始前，编译器会把多行物理行处理为一行逻辑行。\n\n每行 #define 都由 3 部分组成：第 1 部分是 #define 指令本身。第 2 部分是选定的缩写，也称为宏。有些宏代表值，这些宏被称为类对象宏（object-like macro）。宏的名称中不允许有空格，而且必须遵循 C 变量的命名规则。第 3 部分（指令行的其余部分）称为替换列表或替换体。 一旦预处理器在程序中找到宏的实例后，就会用替换体代替该宏（有例外）。从宏变成最终替换文本的过程称为宏展开（macro expansion）。注意，可以在 #define 行使用标准 C 注释，每条注释都会被一个空格代替。\n\n预处理器不做计算，不对表达式求值，它只进行替换。双引号使替换的字符串成为字符串常量。\n\nconst int LIM = 50;static int data2[LIM]; // 无效非自动数组的大小应该是整型常量表达式，这意味着表示数组大小的必须是整型常量的组合、枚举常量和 sizeof 表达式，不包括 const 声明的值（在 C++ 中可以把 const 值作为常量表达式的一部分）\n\n可以把宏的替换体看作是记号（token）型字符串， 而不是字符型字符串。C 预处理器记号是宏定义的替换体中单独的“词”。用空白把这些词分开。替换体中有多个空格时，字符型字符串和记号型字符串的处理方式不同。解释为字符型字符串，把空格视为替换体的一部分；解释为记号型字符串，把空格视为替换体中各记号的分隔符。\n\nC 允许在字符串中包含宏参数。在类函数宏的替换体中，# 号作为一个预处理运算符，可以把记号转换成字符串。例如，如果 x 是一个宏形参，那么 #x 就是转换为字符串 “x” 的形参名。这个过程称为字符串化 （stringizing）#define PSQR(x) printf(&quot;The square of &quot; #x &quot; is %d.\\n&quot;,((x)*(x)))\n\n预处理器黏合剂：## 运算符用于类函数宏的替换部分，把记号组合为一个新的标识符 #define XNAME(n) x ## n\n\n变参宏：...和_ _VA_ARGS_ _通过把宏参数列表中最后的参数写成省略号来实现。预定义宏 _ _VA_ARGS_ _ 可用在替换部分中，表明省略号代表什么。#define PR(...) printf(_ _VA_ARGS_ _)\n\n宏和函数的选择实际上是时间和空间的权衡。宏生成内联代码，即在程序中生成语句。如果调用 20 次宏，即在程序中插入 20 行代码。如果调用函数 20 次，程序中只有一份函数语句的副本，所以节省了空间。然而另一方面， 程序的控制必须跳转至函数内，随后再返回主调程序，这显然比内联代码花费更多的时间。\n\n宏的一个优点是，不用担心变量类型（宏处理的是字符串，不是实际的值）。只要能用 int 或 float 类型都可以使用 SQUARE(x) 宏。 C99 提供了第 3 种可替换的方法内联函数。\n\n在嵌套循环中使用宏更有助于提高效率。\n\n#include &lt;stdio.h&gt; ←查找系统目录#include &quot;hot.h&quot; ←查找当前工作目录#include &quot;/usr/biff/p.h&quot; ←查找/usr/biff目录\n\n\n头文件中最常用的形式：\n明示常量—— stdio.h 中定义的 EOF、NULL 和 BUFSIZE（标准 I/O 缓冲区大小）。\n\n宏函数—— getc(stdin) 通常用 getchar() 定义，而 getc() 经常用于定义较复杂的宏，ctype.h 通常包含 ctype 系列函数的宏定义。 \n\n函数声明—— string.h 包含字符串函数系列的函数声明。在 ANSI C 和后面的标准中，函数声明都是函数原型形式。 \n\n结构模版定义—— 标准 I/O 函数使用 FILE 结构，该结构中包含了文件、与文件缓冲区相关的信息。FILE 结构在 stdio.h 中。 \n\n类型定义—— 标准 I/O 函数使用指向 FILE 的指针作为参数。通常 stdio.h 用 #define 或 typedef 把 FILE 定义为指向结构的指针。\n\n#undef 用于“取消”已定义的 #define 指令。#define LIMIT 400#undef LIMIT\n\n使用其他指令创建条件编译#ifdef #else #endif\n\n#ifdef 如果预处理器已定义了后面的标识符，则执行 #else 或 #endif 指令之前的所有指令并编译所有 C 代码（先出现哪个指令就执行到哪里）。如果预处理器未定义，且有 #else 指令，则执行 #else（如果需要） 和 #endif （必须存在）指令之间的所有代码。可以用这种方法调试程序：#ifdef JUST_CHECKING printf(&quot;i=%d, running total = %d\\n&quot;, i, total); #endif\n\n\n#define SIZE 10 #include &quot;arrays.h&quot; 当执行到 #include “arrays.h” 这行，处理 array.h 中的代码时，由于 SIZE 是已定义的，所以跳过了 #define SIZE 100 这行代码。可以利用这种方法，用一个较小的数组测试程序。测试完毕后，移除 #define SIZE 10 并重新编译。这样就不用修改头文件数组本身了。\n\n#ifndef 指令判断后面的标识符是否是未定义的。\n\n在首次定义一个宏的头文件中用 #ifndef 指令激活定义，随后在其他头文件中的定义都被忽略。\n\n#if 指令后面跟整型常量表达式\n#if SYS == 1#elif SYS == 2#else#endif\n较新的编译器提供另一种方法测试名称是否已定义，即用 #if defined (VAX) 代替 #ifdef VAX。优点是它可以和 #elif 一起使用\n\nC标准规定了一些预定义宏\n\nC99 标准提供一个名为 _ _func_ _ 的预定义标识符，它展开为一个代表函数名的字符串（该函数包含该标识符）。_ _func_ _ 必须具有函数作用域，而从本质上看宏具有文件作用域。因此 _ _func_ _ 是 C 语言的预定义标识符，而不是预定义宏。\n\n#line 指令重置 _ _LINE_ _ 和 _ _FILE_ _ 宏报告的行号和文件名。#line 10 “cool.c” // 把行号重置为 10，把文件名重置为 cool.c\n\n#error 指令让预处理器发出一条错误消息，该消息包含指令中的文本。 如果可能的话，编译过程应该中断。\n#if _ _STDC_VERSION_ _ != 201112#error Not C11#endif\n\n\n\n\n在程序设计中，泛型编程（generic programming）指那些没有特定类型，但是一旦指定一种类型，就可以转换成指定类型的代码。例如，C++ 在模板中可以创建泛型算法，然后编译器根据指定的类型自动使用实例化代码。C 没有这种功能，C11 新增了一种表达式，叫作泛型选择表达式，可根据表达式的类型选择一个值。泛型选择表达式不是预处理器指令，但是在一些泛型编程中它常用作 #define 宏定义的一部分。\n\n函数调用都有一定的开销，因为函数的调用过程包括建立调用、传递参数、跳转到函数代码并返回。使用宏使代码内联，可以避免这样的开销。C99 提供另一种方法：内联函数。\n\nANSI C 把指向 void 的指针作为一种通用指针，用于指针指向不同类型的情况。\n\n涉及的角度都以弧度为单位（1 弧度=180/π=57.296 度）pi 的值通过计算表达式4*atan(1)得到。\n\n\n\n类型变体\nC 专门为 float 和 long double 类型提供了标准函数。sqrtf() 是 sqrt() 的 float 版本，sqrtl() 是 sqrt() 的 long double 版本。利用 C11 新增的泛型选择表达式定义一个泛型宏，根据参数类型选择最合适的数学函数版本。C99 提供的 tgmath.h 定义了泛型类型宏。\n\n如果编译器支持复数运算，就会支持 complex.h 头文件。如 csqrtf()、csqrt() 和 csqrtl()，这些函数分别返回 float complex、double complex 和 long double complex 类型的复数平方根。\n\n通用工具库包含各种函数，包括随机数生成器、查找和排序函数、转换函数和内存管理函数。\n\natexit() 函数的用法：使用函数指针。需把退出时要调用的函数地址传递给 atexit()。函数名作为函数参数时相当于该函数的地址，所以该程序中把 sign_off 或 too_bad 作为参数。然后，atexit() 注册函数列表中的函数，当调用 exit() 时就会执行这些函数。ANSI 保证，在这个列表中至少可以放 32 个函数。最后调用 exit() 函数时，exit() 会执行这些函数（执行顺序与列表中的函数顺序相反，即最后添加的函数最先执行）\n\nexit() 执行完 atexit() 指定的函数后，会完成一些清理工作：刷新所有输出流、关闭所有打开的流和关闭由标准 I/O 函数 tmpfile() 创建的临时文件。然后 exit() 把控制权返回主机环境，如果可能的话，向主机环境报告终止状态。 通常，UNIX 程序使用 0 表示成功终止，用非零值表示终止失败。\n\n快速排序算法在 C 实现中的名称是 qsort()。qsort() 函数排序数组的数据对象，其原型如下：void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));\n\n第 1 个参数是指针，指向待排序数组的首元素。ANSI C 允许把指向任何数据类型的指针强制转换成指向 void 的指针，因此，qsort() 的第 1 个实际参数可以引用任何类型的数组。第 2 个参数是待排序项的数量。函数原型把该值转换为 size_t 类型。\n\n由于 qsort() 把第 1 个参数转换为 void 指针，所以 qsort() 不知道数组中每个元素的大小。为此，函数原型用第 3 个参数补偿这一信息，显式指明待排序数组中每个元素的大小。例如，如果排序 double 类型的数组，那么第 3个参数应该是 sizeof(double)。\n\n最后，qsort() 还需要一个指向函数的指针，这个被指针指向的比较函数用于确定排序的顺序。该函数应接受两个参数：分别指向待比较两项的指针。如果第 1 项的值大于第 2 项，比较函数则返回正数；如果相同，则返回 0；如果小于，则返回负数。qsort() 根据给定的其他信息计算出两个指针的值，然后把它们传递给比较函数。\n\nqsort() 原型中的第 4 个函数确定了比较函数的形式： int (*compar)(const void *, const void *) 这表明 qsort() 最后一个参数是一个指向函数的指针，该函数返回 int 类型的值且接受两个指向const void的指针作为参数，这两个指针指向待比较项。\n\n\n\n\n\n\n\n注意 C 和 C++ 中的 void*\nC 和 C++ 对待指向 void 的指针有所不同。都可以把任何类型的指针赋给 void 类型的指针。qsort() 的函数调用中把 double* 指针赋给 void* 指针，但 C++ 要求在把 void* 指针赋给任何类型的指针时必须进行强制类型转换。而 C 没有这样的要求。\n\n强制类型转换，在 C 中是可选的，但在 C++ 中是必须的。\n\n\n\n\nassert.h 头文件支持的断言库是一个用于辅助调试程序的小型库。它由 assert() 宏组成，接受一个整型表达式作为参数。assert() 宏是为了标识出程序中某些条件为真的关键位置，如果表达式求值为假，assert() 宏就在标准错误流（stderr）中写入一条错误信息，并调用 abort() 终止程序，abort() 函数原型在 stdlib.h 中。\n\nassert() 好处：它不仅能自动标识文件和出问题的行号，还有一种无需更改代码就能开启或关闭 assert() 的机制。如果认为已经排除了程序的 bug，就可以把下面的宏定义写在包含 assert.h 的位置前面： #define NDEBUG 并重新编译程序，这样编译器就会禁用文件中的所有 assert() 语句。如果程序又出现问题，可以移除这条 #define 指令（或者把它注释掉），然后重新编译程序，这样就重新启用了assert() 语句。\n\n\n\n\nstring.h 库中的 memcpy() 和 memmove()不能把一个数组赋给另一个数组，所以要通过循环把数组中的每个元素赋给另一个数组相应的元素。有一个例外的情况是：使用 strcpy() 和 strncpy() 函数来处理字符数组。memcpy() 和 memmove() 提供类似的方法处理任意类型的数组。下面是这两个函数的原型：void *memcpy(void * restrict s1, const void * restrict s2, size_t n);void *memmove(void *s1, const void *s2, size_t n);\n\n可变参数：stdarg.h前面提到过变参宏，即该宏可以接受可变数量的参数。stdarg.h 为函数提供了一个类似的功能，但是用法比较复杂。必须按如下步骤进行：\n\n\n\n提供一个使用省略号的函数原型；\n在函数定义中创建一个va_list类型的变量；\n用宏把该变量初始化为一个参数列表；\n用宏访问参数列表；\n用宏完成清理工作。\n\n0x02 References\n《C Primer Plus》\n\n0x03 写在最后学 C 到现在已经几个月了，不得不感慨道：C Primer Plus 这本书真的很经典，很多细节性的知识点都涉及到了，仅仅只是粗略地看了一遍，却让我对都涉及到了，仅仅只是粗略地看了一遍，却让我对 C 的一些程序设计原理和语法运用上有了更深层次的理解，收获颇深，这篇文章是我个人觉得后期可能需要查阅复习的知识点，故作此提炼精简，不定时更新精简吧。\n计划中的高级篇应该是不会有了，C 的灵魂是指针，所以后期的目标就是能熟练运用指针和了解内存管理的知识，再总结一些专题文章，最后送读者一句话：基础不牢，地动山摇，望务必重视基础，往后方能更好更快地学习入门其他语言。\n","categories":["Programming"]},{"title":"C++ 学习笔记之项目篇","url":"/2022/01/28/code_cpp_program/","content":"0x00 Preface根据引用的教程，整理了一些实战项目以供加深学习。\n0x01 通讯录管理系统1.系统需求\n添加联系人：向通讯录中添加新人，信息包括（姓名、性别、年龄、联系电话、家庭住址）最多记录 1000 人\n显示联系人：显示通讯录中所有联系人信息\n删除联系人：按照姓名进行删除指定联系人\n查找联系人：按照姓名查看指定联系人信息\n修改联系人：按照姓名重新修改指定联系人\n清空联系人：清空通讯录中所有信息\n退出通讯录：退出当前使用的通讯录\n\n2.菜单功能功能描述：用户选择功能的界面，效果图：\n\n实现步骤：\n\n封装函数显示该界面，如 void showMenu()\n在 main 函数中调用封装好的函数\n\n#include &lt;iostream&gt;using namespace std;//菜单界面void showMenu() &#123;\tcout &lt;&lt; &quot;***************************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  1、添加联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  2、显示联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  3、删除联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  4、查找联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  5、修改联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  6、清空联系人  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;**&gt;&gt;&gt;  0、退出通讯录  &lt;&lt;&lt;**&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;***************************&quot; &lt;&lt; endl;&#125;int main() &#123;\tshowMenu();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n3.退出功能功能描述：退出通讯录系统\n思路：根据用户不同的选择，进入不同的功能，可以选择 switch 分支结构，将整个架构进行搭建当用户选择 0 时候，执行退出；选择其他提示非法输入\nint main() &#123;\tint select = 0;\twhile (true) &#123;\t\tshowMenu();\t\tcin &gt;&gt; select;\t\t\t\tswitch (select) &#123;\t\tcase 1:  //添加联系人\t\t\tbreak;\t\tcase 2:  //显示联系人\t\t\tbreak;\t\tcase 3:  //删除联系人\t\t\tbreak;\t\tcase 4:  //查找联系人\t\t\tbreak;\t\tcase 5:  //修改联系人\t\t\tbreak;\t\tcase 6:  //清空联系人\t\t\tbreak;\t\tcase 0:  //退出通讯录\t\t\tcout &lt;&lt; &quot;欢迎下次使用&quot; &lt;&lt; endl;\t\t\tsystem(&quot;pause&quot;);\t\t\treturn 0;\t\t\tbreak;\t\tdefault:\t\t\tcout &lt;&lt; &quot;非法输入&quot; &lt;&lt; endl;\t\t\tbreak;\t\t&#125;\t&#125;&#125;\n4.添加联系人功能描述：实现添加联系人功能，联系人上限为 1000 人，联系人信息包括（姓名、性别、年龄、联系电话、家庭住址）\n实现步骤：\n\n设计联系人结构体\n设计通讯录结构体\nmain 函数中创建通讯录\n封装添加联系人函数\n测试添加联系人功能\n\n1.设计联系人结构体联系人信息包括：姓名、性别、年龄、联系电话、家庭住址\n#include &lt;string&gt;//联系人结构体struct Person &#123;\tstring m_Name; //姓名\tint m_Sex; //性别：1男 2女\tint m_Age; //年龄\tstring m_Phone; //电话\tstring m_Addr; //住址&#125;;\n2.设计通讯录结构体设计时候可以在通讯录结构体中，维护一个容量为 1000 的存放联系人的数组，并记录当前通讯录中联系人数量\n#define MAX 1000 //最大人数//通讯录结构体struct Addressbooks &#123;\tstruct Person personArray[MAX]; //通讯录中保存的联系人数组\tint m_Size; //通讯录中人员个数&#125;;\n3.main 函数中创建通讯录添加联系人函数封装好后，在 main 函数中创建一个通讯录变量，这个就是我们需要一直维护的通讯录main 函数起始位置添加：\n//创建通讯录Addressbooks abs;//初始化通讯录中人数abs.m_Size = 0;\n4.封装添加联系人函数思路：添加联系人前先判断通讯录是否已满，如果满了就不再添加，未满情况将新联系人信息逐个加入到通讯录\n//1、添加联系人信息void addPerson(Addressbooks *abs) &#123;\t//判断电话本是否满了\tif (abs-&gt;m_Size == MAX) &#123;\t\tcout &lt;&lt; &quot;通讯录已满，无法添加&quot; &lt;&lt; endl;\t\treturn;\t&#125;\telse &#123;\t\t//姓名\t\tstring name;\t\tcout &lt;&lt; &quot;请输入姓名：&quot; &lt;&lt; endl;\t\tcin &gt;&gt; name;\t\tabs-&gt;personArray[abs-&gt;m_Size].m_Name = name;\t\tcout &lt;&lt; &quot;请输入性别：&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;1 -- 男&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;2 -- 女&quot; &lt;&lt; endl;\t\t//性别\t\tint sex = 0;\t\twhile (true) &#123;\t\t\tcin &gt;&gt; sex;\t\t\tif (sex == 1 || sex == 2) &#123;\t\t\t\tabs-&gt;personArray[abs-&gt;m_Size].m_Sex = sex;\t\t\t\tbreak;\t\t\t&#125;\t\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t\t&#125;\t\t//年龄\t\tcout &lt;&lt; &quot;请输入年龄：&quot; &lt;&lt; endl;\t\tint age = 0;\t\tcin &gt;&gt; age;\t\tabs-&gt;personArray[abs-&gt;m_Size].m_Age = age;\t\t//联系电话\t\tcout &lt;&lt; &quot;请输入联系电话：&quot; &lt;&lt; endl;\t\tstring phone = &quot;&quot;;\t\tcin &gt;&gt; phone;\t\tabs-&gt;personArray[abs-&gt;m_Size].m_Phone = phone;\t\t//家庭住址\t\tcout &lt;&lt; &quot;请输入家庭住址：&quot; &lt;&lt; endl;\t\tstring address;\t\tcin &gt;&gt; address;\t\tabs-&gt;personArray[abs-&gt;m_Size].m_Addr = address;\t\t//更新通讯录人数\t\tabs-&gt;m_Size++;\t\tcout &lt;&lt; &quot;添加成功&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t&#125;&#125;\n5.测试添加联系人功能选择界面中，如果玩家选择了 1，代表添加联系人\ncase 1:  //添加联系人\taddPerson(&amp;abs);\tbreak;\n效果图：\n\n5.显示联系人功能描述：显示通讯录中已有的联系人信息\n步骤：\n\n封装显示联系人函数\n测试显示联系人功能\n\n1.封装显示联系人函数思路：判断如果当前通讯录中没有人员，就提示记录为空；人数大于 0，显示通讯录中信息\n//2、显示所有联系人信息void showPerson(Addressbooks * abs) &#123;\tif (abs-&gt;m_Size == 0) &#123;\t\tcout &lt;&lt; &quot;当前记录为空&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tfor (int i = 0; i &lt; abs-&gt;m_Size; i++) &#123;\t\t\tcout &lt;&lt; &quot;姓名：&quot; &lt;&lt; abs-&gt;personArray[i].m_Name &lt;&lt; &quot;\\t&quot;;\t\t\tcout &lt;&lt; &quot;性别：&quot; &lt;&lt; (abs-&gt;personArray[i].m_Sex == 1 ? &quot;男&quot; : &quot;女&quot;) &lt;&lt; &quot;\\t&quot;;\t\t\tcout &lt;&lt; &quot;年龄：&quot; &lt;&lt; abs-&gt;personArray[i].m_Age &lt;&lt; &quot;\\t&quot;;\t\t\tcout &lt;&lt; &quot;电话：&quot; &lt;&lt; abs-&gt;personArray[i].m_Phone &lt;&lt; &quot;\\t&quot;;\t\t\tcout &lt;&lt; &quot;住址：&quot; &lt;&lt; abs-&gt;personArray[i].m_Addr &lt;&lt; endl;\t\t&#125;\t&#125;&#125;\n2.测试显示联系人功能case 2:  //显示联系人\tshowPerson(&amp;abs);\tbreak;\n效果图：\n\n6.删除联系人功能描述：按照姓名进行删除指定联系人\n实现步骤：\n\n封装检测联系人是否存在\n封装删除联系人函数\n测试删除联系人功能\n\n1.封装检测联系人是否存在设计思路：\n删除联系人前，我们需要先判断用户输入的联系人是否存在，如果存在删除，不存在提示用户没有要删除的联系人\n因此我们可以把检测联系人是否存在封装成一个函数中，如果存在，返回联系人在通讯录中的位置，不存在返回 -1\n//判断是否存在查询的人员，存在返回在数组中索引位置，不存在返回-1int isExist(Addressbooks * abs, string name) &#123;\tfor (int i = 0; i &lt; abs-&gt;m_Size; i++) &#123;\t\tif (abs-&gt;personArray[i].m_Name == name) &#123;\t\t\treturn i;\t\t&#125;\t&#125;\treturn -1;&#125;\n2.封装删除联系人函数根据用户输入的联系人判断该通讯录中是否有此人\n查找到进行删除，并提示删除成功\n查不到提示查无此人。\n//3、删除指定联系人信息void deletePerson(Addressbooks * abs) &#123;\tcout &lt;&lt; &quot;请输入您要删除的联系人&quot; &lt;&lt; endl;\tstring name;\tcin &gt;&gt; name;\tint ret = isExist(abs, name);\tif (ret != -1) &#123;\t\tfor (int i = ret; i &lt; abs-&gt;m_Size; i++) &#123;\t\t\tabs-&gt;personArray[i] = abs-&gt;personArray[i + 1];\t\t&#125;         abs-&gt;m_Size--;\t\tcout &lt;&lt; &quot;删除成功&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;查无此人&quot; &lt;&lt; endl;\t&#125;&#125;\n3.测试删除联系人功能case 3:  //删除联系人\tdeletePerson(&amp;abs);\tbreak;\n效果图：\n\n7.查找联系人功能描述：按照姓名查看指定联系人信息\n实现步骤：\n\n封装查找联系人函数\n测试查找指定联系人\n\n1.封装查找联系人函数实现思路：判断用户指定的联系人是否存在，如果存在显示信息，不存在则提示查无此人。\n//4、查找指定联系人信息void findPerson(Addressbooks * abs) &#123;\tcout &lt;&lt; &quot;请输入您要查找的联系人&quot; &lt;&lt; endl;\tstring name;\tcin &gt;&gt; name;\tint ret = isExist(abs, name);\tif (ret != -1) &#123;\t\tcout &lt;&lt; &quot;姓名：&quot; &lt;&lt; abs-&gt;personArray[ret].m_Name &lt;&lt; &quot;\\t&quot;;\t\tcout &lt;&lt; &quot;性别：&quot; &lt;&lt; abs-&gt;personArray[ret].m_Sex &lt;&lt; &quot;\\t&quot;;\t\tcout &lt;&lt; &quot;年龄：&quot; &lt;&lt; abs-&gt;personArray[ret].m_Age &lt;&lt; &quot;\\t&quot;;\t\tcout &lt;&lt; &quot;电话：&quot; &lt;&lt; abs-&gt;personArray[ret].m_Phone &lt;&lt; &quot;\\t&quot;;\t\tcout &lt;&lt; &quot;住址：&quot; &lt;&lt; abs-&gt;personArray[ret].m_Addr &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;查无此人&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n2.测试查找指定联系人case 4:  //查找联系人\tfindPerson(&amp;abs);\tbreak;\n8.修改联系人功能描述：按照姓名重新修改指定联系人\n实现步骤：\n\n封装修改联系人函数\n测试修改联系人功能\n\n1.封装修改联系人函数实现思路：查找用户输入的联系人，如果查找成功进行修改操作，查找失败提示查无此人\n//5、修改指定联系人信息void modifyPerson(Addressbooks * abs) &#123;\tcout &lt;&lt; &quot;请输入您要修改的联系人&quot; &lt;&lt; endl;\tstring name;\tcin &gt;&gt; name;\tint ret = isExist(abs, name);\tif (ret != -1) &#123;\t\t//姓名\t\tstring name;\t\tcout &lt;&lt; &quot;请输入姓名：&quot; &lt;&lt; endl;\t\tcin &gt;&gt; name;\t\tabs-&gt;personArray[ret].m_Name = name;\t\tcout &lt;&lt; &quot;请输入性别：&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;1 -- 男&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;2 -- 女&quot; &lt;&lt; endl;\t\t//性别\t\tint sex = 0;\t\twhile (true) &#123;\t\t\tcin &gt;&gt; sex;\t\t\tif (sex == 1 || sex == 2) &#123;\t\t\t\tabs-&gt;personArray[ret].m_Sex = sex;\t\t\t\tbreak;\t\t\t&#125;\t\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot;;\t\t&#125;\t\t//年龄\t\tcout &lt;&lt; &quot;请输入年龄：&quot; &lt;&lt; endl;\t\tint age = 0;\t\tcin &gt;&gt; age;\t\tabs-&gt;personArray[ret].m_Age = age;\t\t//联系电话\t\tcout &lt;&lt; &quot;请输入联系电话：&quot; &lt;&lt; endl;\t\tstring phone = &quot;&quot;;\t\tcin &gt;&gt; phone;\t\tabs-&gt;personArray[ret].m_Phone = phone;\t\t//家庭住址\t\tcout &lt;&lt; &quot;请输入家庭住址：&quot; &lt;&lt; endl;\t\tstring address;\t\tcin &gt;&gt; address;\t\tabs-&gt;personArray[ret].m_Addr = address;\t\tcout &lt;&lt; &quot;修改成功&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;查无此人&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n2.测试修改联系人功能case 5:  //修改联系人\tmodifyPerson(&amp;abs);\tbreak;\n9.清空联系人功能描述：清空通讯录中所有信息\n实现步骤：\n\n封装清空联系人函数\n测试清空联系人\n\n1.封装清空联系人函数实现思路： 将通讯录所有联系人信息清除掉，只要将通讯录记录的联系人数量置为0，做逻辑清空即可。\n//6、清空所有联系人void cleanPerson(Addressbooks * abs) &#123;\tabs-&gt;m_Size = 0;\tcout &lt;&lt; &quot;通讯录已清空&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n2.测试清空联系人case 6:  //清空联系人\tcleanPerson(&amp;abs);\tbreak;\n\nDemo Source\n\n0x02 职工管理系统本案例设计到的知识点：面向对象中的封装、继承、多态以及文件IO流，在设计中有Worker职工的基类，以及分别派生类为普通员工、经理、以及总裁，基类中有纯虚函数子类分别作了实现。然后有个文件管理类，对用户做出不同的选择分别做不同的处理。可以对系统进行基本的增删改查功能。\n1.系统需求实现一个基于多态的职工管理系统\n公司中职工分为三类：普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、职工岗位、以及职责\n普通员工职责：完成经理交给的任务经理职责：完成老板交给的任务，并下发任务给员工老板职责：管理公司所有事务\n需求功能：\n\n退出管理程序：退出当前管理系统\n增加职工信息：实现批量添加职工功能，将信息录入到文件中，职工信息为：职工编号、姓名、部门编号\n显示职工信息：显示公司内部所有职工的信息\n删除离职职工：按照编号删除指定的职工\n修改职工信息：按照编号修改职工个人信息\n查找职工信息：按照职工的编号或者职工的姓名进行查找相关的人员信息\n按照编号排序：按照职工编号，进行排序，排序规则由用户指定\n清空所有文档：清空文件中记录的所有职工信息（清空前需要再次确认，防止误删）\n\n2.创建管理类管理类负责内容如下：\n\n与用户的沟通菜单界面\n对职工增删改查的操作\n与文件的读写交互\n\n头文件中创建 workerManager.h，源文件中创建 workerManager.cpp\n头文件实现在 workerManager.h 中设计管理类\n#pragma once#include &lt;iostream&gt;#include &quot;worker.h&quot;#include &quot;employee.h&quot;#include &quot;manager.h&quot;#include &quot;boss.h&quot;using namespace std;class WorkerManager &#123;public:\t//构造函数\tWorkerManager();\t//析构函数\t~WorkerManager();&#125;;\n源文件实现在 workerManager.cpp 中将构造和析构函数空实现补全\n#include &quot;workerManager.h&quot;WorkerManager::WorkerManager() &#123;&#125;WorkerManager::~WorkerManager() &#123;&#125;\n3.菜单功能功能描述：与用户的沟通界面，效果图：\n\n在管理类 workerManager.h 中添加成员函数 void Show_Menu();\n\n在管理类 workerManager.cpp 中实现 Show_Menu() 函数\nvoid WorkerManager::Show_Menu() &#123;\tcout &lt;&lt; &quot;********************************************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*********  欢迎使用职工管理系统！ **********&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  0.退出管理程序  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  1.增加职工信息  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  2.显示职工信息  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  3.删除离职职工  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  4.修改职工信息  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  5.查找职工信息  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  6.按照编号排序  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  7.清空所有文档  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;********************************************&quot; &lt;&lt; endl;&#125;\n在 职工管理系统.cpp 中测试菜单功能\n#include &lt;iostream&gt;#include &quot;workerManager.h&quot;using namespace std;int main() &#123;\tWorkerManager wm;\twm.Show_Menu();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n4.退出功能提供功能接口在 main函数中提供分支选择，提供每个功能接口\nint main() &#123;\tWorkerManager wm;\tint choice = 0;\twhile (1) &#123;\t\t//展示菜单\t\twm.Show_Menu();\t\tcout &lt;&lt; &quot;请输入您的选择：&quot;;\t\tcin &gt;&gt; choice;\t\tswitch (choice) &#123;\t\t\tcase 0: //退出系统\t\t\t\tbreak;\t\t\tcase 1: //添加职工\t\t\t\tbreak;\t\t\tcase 2: //显示职工\t\t\t\tbreak;\t\t\tcase 3: //删除职工\t\t\t\tbreak;\t\t\tcase 4: //修改职工\t\t\t\tbreak;\t\t\tcase 5: //查找职工\t\t\t\tbreak;\t\t\tcase 6: //排序职工\t\t\t\tbreak;\t\t\tcase 7: //清空文件\t\t\t\tbreak;\t\t\tdefault:\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\tbreak;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n实现退出功能在 workerManager.h 中提供退出系统的成员函数 void ExitSystem();\n在 workerManager.cpp 中提供具体的功能实现\nvoid WorkerManager::ExitSystem() &#123;\tcout &lt;&lt; &quot;欢迎下次使用&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\texit(0);&#125;\n在 main 函数中调用退出程序的接口\n\n5.创建职工类创建职工抽象类职工分类：普通员工、经理、老板\n将三种职工抽象到一个类（worker）中，利用多态管理不同职工种类\n职工属性：职工编号、职工姓名、职工所在部门编号\n职工行为：岗位职责信息描述，获取岗位名称\n头文件文件夹下创建文件 worker.h，添加代码：\n#pragma once#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;//职工抽象基类class Worker &#123;public:\t//显示个人信息\tvirtual void showInfo() = 0;\t//获取岗位名称\tvirtual string getDeptName() = 0;\tint m_Id; //职工编号\tstring m_Name; //职工姓名\tint m_DeptId; //职工所在部门名称编号&#125;;\n创建普通员工类普通员工类继承职工抽象类，并重写父类中纯虚函数\n头文件和源文件文件夹下分别创建 employee.h 和 employee.cpp\nemployee.h 代码：\n#pragma once#include &lt;iostream&gt;#include &quot;worker.h&quot;using namespace std;//员工类class Employee :public Worker &#123;public:\t//构造函数\tEmployee(int id, string name, int dId);\t//显示个人信息\tvirtual void showInfo();\t//获取职工岗位名称\tvirtual string getDeptName();&#125;;\nemployee.cpp 代码：\n#include &quot;employee.h&quot;Employee::Employee(int id, string name, int dId) &#123;\tthis-&gt;m_Id = id;\tthis-&gt;m_Name = name;\tthis-&gt;m_DeptId = dId;&#125;void Employee::showInfo() &#123;\tcout &lt;&lt; &quot;职工编号： &quot; &lt;&lt; this-&gt;m_Id\t\t&lt;&lt; &quot; \\t职工姓名： &quot; &lt;&lt; this-&gt;m_Name\t\t&lt;&lt; &quot; \\t岗位：&quot; &lt;&lt; this-&gt;getDeptName()\t\t&lt;&lt; &quot; \\t岗位职责：完成经理交给的任务&quot; &lt;&lt; endl;&#125;string Employee::getDeptName() &#123;\treturn string(&quot;员工&quot;);&#125;\n创建经理类经理类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似\n在头文件和源文件文件夹下分别创建 manager.h 和 manager.cpp\nmanager.h 代码：\n#pragma once#include &lt;iostream&gt;#include &quot;worker.h&quot;using namespace std;//经理类class Manager :public Worker &#123;public:\tManager(int id, string name, int dId);\t//显示个人信息\tvirtual void showInfo();\t//获取职工岗位名称\tvirtual string getDeptName();&#125;;\nmanager.cpp代码：\n#include &quot;manager.h&quot;Manager::Manager(int id, string name, int dId) &#123;\tthis-&gt;m_Id = id;\tthis-&gt;m_Name = name;\tthis-&gt;m_DeptId = dId;&#125;void Manager::showInfo() &#123;\tcout &lt;&lt; &quot;职工编号： &quot; &lt;&lt; this-&gt;m_Id\t\t&lt;&lt; &quot; \\t职工姓名： &quot; &lt;&lt; this-&gt;m_Name\t\t&lt;&lt; &quot; \\t岗位：&quot; &lt;&lt; this-&gt;getDeptName()\t\t&lt;&lt; &quot; \\t岗位职责：完成老板交给的任务,并下发任务给员工&quot; &lt;&lt; endl;&#125;string Manager::getDeptName() &#123;\treturn string(&quot;经理&quot;);&#125;\n创建老板类老板类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似\n在头文件和源文件文件夹下分别创建 boss.h 和 boss.cpp\nboss.h 代码：\n#pragma once#include &lt;iostream&gt;#include &quot;worker.h&quot;using namespace std;//老板类class Boss :public Worker &#123;public:\tBoss(int id, string name, int dId);\t//显示个人信息\tvirtual void showInfo();\t//获取职工岗位名称\tvirtual string getDeptName();&#125;;\nboss.cpp 代码：\n#include &quot;boss.h&quot;Boss::Boss(int id, string name, int dId) &#123;\tthis-&gt;m_Id = id;\tthis-&gt;m_Name = name;\tthis-&gt;m_DeptId = dId;&#125;void Boss::showInfo() &#123;\tcout &lt;&lt; &quot;职工编号： &quot; &lt;&lt; this-&gt;m_Id\t\t&lt;&lt; &quot; \\t职工姓名： &quot; &lt;&lt; this-&gt;m_Name\t\t&lt;&lt; &quot; \\t岗位：&quot; &lt;&lt; this-&gt;getDeptName()\t\t&lt;&lt; &quot; \\t岗位职责：管理公司所有事务&quot; &lt;&lt; endl;&#125;string Boss::getDeptName() &#123;\treturn string(&quot;总裁&quot;);&#125;\n在 职工管理系统.cpp 中添加测试函数，并且运行能够产生多态\n#include &quot;worker.h&quot;#include &quot;employee.h&quot;#include &quot;manager.h&quot;#include &quot;boss.h&quot;void test() &#123;\tWorker * worker = NULL;\tworker = new Employee(1, &quot;张三&quot;, 1);\tworker-&gt;showInfo();\tdelete worker;\t\tworker = new Manager(2, &quot;李四&quot;, 2);\tworker-&gt;showInfo();\tdelete worker;\tworker = new Boss(3, &quot;王五&quot;, 3);\tworker-&gt;showInfo();\tdelete worker;&#125;\n效果图：\n\n6.添加职工功能描述：批量添加职工，并且保存到文件中\n分析：\n用户在批量创建时，可能会创建不同种类的职工\n如果想将所有不同种类的员工都放入到一个数组中，可以将所有员工的指针维护到一个数组里\n如果想在程序中维护这个不定长度的数组，可以将数组创建到堆区，并利用 Worker ** 的指针维护\n\n功能实现：\n在 wokerManager.h 中添加成员属性代码：\n//记录文件中的人数个数int m_EmpNum;//员工数组的指针Worker ** m_EmpArray;\n在 wokerManager.h 中添加成员函数\n//增加职工void Add_Emp();\nworkerManager.cpp 中实现该函数\n//增加职工void WorkerManager::Add_Emp() &#123;\tcout &lt;&lt; &quot;请输入增加职工数量： &quot; &lt;&lt; endl;\tint addNum = 0;\tcin &gt;&gt; addNum;\tif (addNum &gt; 0) &#123;\t\t//计算添加新空间大小\t\tint newSize = this-&gt;m_EmpNum + addNum; // 新空间人数 = 原来记录人数 + 新增人数\t\t//开辟新空间\t\tWorker** newSpace = new Worker * [newSize];\t\t//将原来空间下数据，拷贝到新空间\t\tif (this-&gt;m_EmpArray != NULL) &#123;\t\t\tfor (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;\t\t\t\tnewSpace[i] = this-&gt;m_EmpArray[i];\t\t\t&#125;\t\t&#125;\t\t//批量添加新数据\t\tfor (int i = 0; i &lt; addNum; i++) &#123;\t\t\tint id; //职工编号\t\t\tstring name; //职工姓名\t\t\tint dSelect; // 部门选择\t\t\tcout &lt;&lt; &quot;请输入第 &quot; &lt;&lt; i + 1 &lt;&lt; &quot; 个新职工编号：&quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; id;\t\t\tcout &lt;&lt; &quot;请输入第 &quot; &lt;&lt; i + 1 &lt;&lt; &quot; 个新职工姓名：&quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; name;\t\t\tcout &lt;&lt; &quot;请选择该职工的岗位：&quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;1、普通职工&quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;2、经理&quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;3、老板&quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; dSelect;\t\t\tWorker* worker = NULL;\t\t\tswitch (dSelect) &#123;\t\t\t\tcase 1: //普通员工\t\t\t\t\tworker = new Employee(id, name, 1);\t\t\t\t\tbreak;\t\t\t\tcase 2: //经理\t\t\t\t\tworker = new Manager(id, name, 2);\t\t\t\t\tbreak;\t\t\t\tcase 3: //老板\t\t\t\t\tworker = new Boss(id, name, 3);\t\t\t\t\tbreak;\t\t\t\tdefault:\t\t\t\t\tbreak;\t\t\t&#125;\t\t\t//将创建职工职责，保存到数组中\t\t\tnewSpace[this-&gt;m_EmpNum + i] = worker;\t\t&#125;\t\t//释放原有空间\t\tdelete[] this-&gt;m_EmpArray;\t\t//更改新空间的指向\t\tthis-&gt;m_EmpArray = newSpace;\t\t//更新新的职工人数\t\tthis-&gt;m_EmpNum = newSize;\t\t//提示添加成功\t\tcout &lt;&lt; &quot;成功添加&quot; &lt;&lt; addNum &lt;&lt; &quot;名新职工！&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;输入有误&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n在 workerManager.cpp 的析构函数中，释放堆区数据\nWorkerManager::~WorkerManager() &#123;\tif (this-&gt;m_EmpArray != NULL) &#123;\t\tfor (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;\t\t\tif (this-&gt;m_EmpArray[i] != NULL) &#123;\t\t\t\tdelete this-&gt;m_EmpArray[i];\t\t\t&#125;\t\t&#125;\t\tdelete[] this-&gt;m_EmpArray;\t\tthis-&gt;m_EmpArray = NULL;\t&#125;&#125;\n在 main 函数分支 1 选项中，调用添加职工接口\n\n效果图：\n\n7.文件交互 - 写文件功能描述：对文件进行读写\n​在上一个添加功能中，我们只是将所有的数据添加到了内存中，一旦程序结束就无法保存了\n​因此文件管理类中需要一个与文件进行交互的功能，对于文件进行读写操作\n设定文件路径在 workerManager.h 中添加宏常量，并包含头文件 fstream\n#include &lt;fstream&gt;#define FILENAME &quot;empFile.txt&quot;\n成员函数声明在 workerManager.h 中类里添加成员函数\n//保存文件void save();\n保存文件功能实现void WorkerManager::save() &#123;\tofstream ofs;\tofs.open(FILENAME, ios::out);\tfor (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;\t\tofs &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Id &lt;&lt; &quot; &quot;\t\t\t&lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Name &lt;&lt; &quot; &quot;\t\t\t&lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_DeptId &lt;&lt; endl;\t&#125;\tofs.close();&#125;\n在添加职工功能中添加成功后添加保存文件函数\n\n再次添加职工，同级目录下多出文件，并且保存了添加的信息\n\n8.文件交互 - 读文件功能描述：将文件中的内容读取到程序中\n虽然我们实现了添加职工后保存到文件的操作，但是每次开始运行程序，并没有将文件中数据读取到程序中\n而我们的程序功能中还有清空文件的需求\n因此构造函数初始化数据的情况分为三种\n第一次使用，文件未创建文件存在，但是数据被用户清空文件存在，并且保存职工的所有数据\n文件未创建在workerManager.h中添加新的成员属性 m_FileIsEmpty标志文件是否为空\n//标志文件是否为空bool m_FileIsEmpty;\n修改WorkerManager.cpp中构造函数代码\nifstream ifs;ifs.open(FILENAME, ios::in);//1.文件不存在情况if (!ifs.is_open()) &#123;\tcout &lt;&lt; &quot;文件不存在&quot; &lt;&lt; endl; //测试输出\tthis-&gt;m_EmpNum = 0;  //初始化人数\tthis-&gt;m_EmpArray = NULL; //初始化数组指针\tthis-&gt;m_FileIsEmpty = true; //初始化文件为空标志\tifs.close();\treturn;&#125;\n删除文件后，测试文件不存在时初始化数据功能\n文件存在且数据为空在workerManager.cpp中的构造函数追加代码：\n//2.文件存在，数据为空char ch;ifs &gt;&gt; ch;if (ifs.eof()) &#123;\tcout &lt;&lt; &quot;文件为空!&quot; &lt;&lt; endl;\tthis-&gt;m_EmpNum = 0;\tthis-&gt;m_EmpArray = NULL;\tthis-&gt;m_FileIsEmpty = true;\tifs.close();\treturn;&#125;\n将文件创建后清空文件内容，并测试该情况下初始化功能\n我们发现文件不存在或者为空清空 m_FileIsEmpty 判断文件是否为空的标志都为真，那何时为假？\n成功添加职工后，应该更改文件不为空的标志\n在void WorkerManager::Add_Emp() 成员函数中添加：\n//更新职工不为空标志this-&gt;m_FileIsEmpty = false;\n\n文件存在且保存职工数据获取记录的职工人数在workerManager.h中添加成员函数 int get_EmpNum();\n//统计人数int get_EmpNum();\nworkerManager.cpp中实现\nint WorkerManager::get_EmpNum() &#123;\tifstream ifs;\tifs.open(FILENAME, ios::in);\tint id;\tstring name;\tint dId;\tint num = 0;\twhile (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;\t\t//记录人数\t\tnum++;\t&#125;\tifs.close();\treturn num;&#125;\n在workerManager.cpp构造函数中继续追加代码：\nint num =  this-&gt;get_EmpNum();cout &lt;&lt; &quot;职工个数为：&quot; &lt;&lt; num &lt;&lt; endl;  //测试代码this-&gt;m_EmpNum = num;  //更新成员属性 \n\n初始化数组根据职工的数据以及职工数据，初始化 workerManager 中的Worker ** m_EmpArray 指针\n在 WorkerManager.h 中添加成员函数 void init_Emp();\n//初始化员工void init_Emp();\n在WorkerManager.cpp中实现\nvoid WorkerManager::init_Emp() &#123;\tifstream ifs;\tifs.open(FILENAME, ios::in);\tint id;\tstring name;\tint dId;\tint index = 0;\twhile (ifs &gt;&gt; id &amp;&amp; ifs &gt;&gt; name &amp;&amp; ifs &gt;&gt; dId) &#123;\t\tWorker* worker = NULL;\t\t//根据不同的部门Id创建不同对象\t\tif (dId == 1)  // 1普通员工 &#123;\t\t\tworker = new Employee(id, name, dId);\t\t&#125;\t\telse if (dId == 2) //2经理 &#123;\t\t\tworker = new Manager(id, name, dId);\t\t&#125;\t\telse //总裁 &#123;\t\t\tworker = new Boss(id, name, dId);\t\t&#125;\t\t//存放在数组中\t\tthis-&gt;m_EmpArray[index] = worker;\t\tindex++;\t&#125;&#125;\n在workerManager.cpp构造函数中追加代码\n//根据职工数创建数组this-&gt;m_EmpArray = new Worker * [this-&gt;m_EmpNum];//将文件中的数据 ，存到数组中this-&gt;init_Emp();//测试代码for (int i = 0; i &lt; m_EmpNum; i++) &#123;\tcout &lt;&lt; &quot;职工号： &quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Id\t\t&lt;&lt; &quot; 职工姓名： &quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Name\t\t&lt;&lt; &quot; 部门编号： &quot; &lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_DeptId &lt;&lt; endl;&#125;\n手动添加一些职工数据，测试获取职工数量函数\n\n\n至此初始化数据功能完毕，测试代码可以注释或删除掉！\n9.显示职工功能描述：显示当前所有职工信息\n显示职工函数声明在workerManager.h中添加成员函数 void Show_Emp();\n//显示职工void Show_Emp();\n显示职工函数实现在workerManager.cpp中实现成员函数 void Show_Emp();\n//显示职工void WorkerManager::Show_Emp() &#123;\tif (this-&gt;m_FileIsEmpty) &#123;\t\tcout &lt;&lt; &quot;文件不存在或记录为空！&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tfor (int i = 0; i &lt; m_EmpNum; i++) &#123;\t\t\t//利用多态调用接口\t\t\tthis-&gt;m_EmpArray[i]-&gt;showInfo();\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试显示职工在main函数分支 2 选项中，调用显示职工接口\n\n测试时分别测试 文件为空和文件不为空两种情况\n测试效果：\n测试1-文件不存在或者为空情况\n\n测试2 - 文件存在且有记录情况\n\n测试完毕，至此，显示所有职工信息功能实现\n10.删除职工功能描述：按照职工的编号进行删除职工操作\n删除职工函数声明在workerManager.h中添加成员函数 void Del_Emp();\n//删除职工void Del_Emp();\n职工是否存在函数声明很多功能都需要用到根据职工是否存在来进行操作如：删除职工、修改职工、查找职工\n因此添加该公告函数，以便后续调用\n在workerManager.h中添加成员函数：\n//按照职工编号判断职工是否存在，若存在返回职工在数组中位置，不存在返回 -1int IsExist(int id);\n职工是否存在函数实现在workerManager.cpp中实现成员函数：\nint WorkerManager::IsExist(int id) &#123;\tint index = -1;\tfor (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;\t\tif (this-&gt;m_EmpArray[i]-&gt;m_Id == id) &#123;\t\t\tindex = i;\t\t\tbreak;\t\t&#125;\t&#125;\treturn index;&#125;\n删除职工函数实现在workerManager.cpp中实现成员函数：\n//删除职工void WorkerManager::Del_Emp() &#123;\tif (this-&gt;m_FileIsEmpty) &#123;\t\tcout &lt;&lt; &quot;文件不存在或记录为空！&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\t//按职工编号删除\t\tcout &lt;&lt; &quot;请输入想要删除的职工号：&quot; &lt;&lt; endl;\t\tint id = 0;\t\tcin &gt;&gt; id;\t\tint index = this-&gt;IsExist(id);\t\tif (index != -1)  //说明index上位置数据需要删除 &#123;\t\t\tfor (int i = index; i &lt; this-&gt;m_EmpNum - 1; i++) &#123;\t\t\t\tthis-&gt;m_EmpArray[i] = this-&gt;m_EmpArray[i + 1];\t\t\t&#125;\t\t\tthis-&gt;m_EmpNum--;\t\t\tthis-&gt;save(); //删除后数据同步到文件中\t\t\tcout &lt;&lt; &quot;删除成功！&quot; &lt;&lt; endl;\t\t&#125;\t\telse &#123;\t\t\tcout &lt;&lt; &quot;删除失败，未找到该职工&quot; &lt;&lt; endl;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试删除职工在main函数分支 3 选项中，调用删除职工接口\n\n测试1 - 删除不存在职工情况\n\n测试2 - 删除存在的职工情况\n再次显示所有职工信息，确保已经删除;\n查看文件中信息，再次核实员工已被完全删除\n11.修改职工功能描述：能够按照职工的编号对职工信息进行修改并保存\n修改职工函数声明在workerManager.h中添加成员函数 void Mod_Emp();\n//修改职工void Mod_Emp();\n修改职工函数实现在workerManager.cpp中实现成员函数 void Mod_Emp();\n//修改职工void WorkerManager::Mod_Emp() &#123;\tif (this-&gt;m_FileIsEmpty) &#123;\t\tcout &lt;&lt; &quot;文件不存在或记录为空！&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;请输入修改职工的编号：&quot; &lt;&lt; endl;\t\tint id;\t\tcin &gt;&gt; id;\t\tint ret = this-&gt;IsExist(id);\t\tif (ret != -1) &#123;\t\t\t//查找到编号的职工\t\t\tdelete this-&gt;m_EmpArray[ret];\t\t\tint newId = 0;\t\t\tstring newName = &quot;&quot;;\t\t\tint dSelect = 0;\t\t\tcout &lt;&lt; &quot;查到： &quot; &lt;&lt; id &lt;&lt; &quot;号职工，请输入新职工号： &quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; newId;\t\t\tcout &lt;&lt; &quot;请输入新姓名： &quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; newName;\t\t\tcout &lt;&lt; &quot;请输入岗位： &quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;1、普通职工&quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;2、经理&quot; &lt;&lt; endl;\t\t\tcout &lt;&lt; &quot;3、老板&quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; dSelect;\t\t\tWorker* worker = NULL;\t\t\tswitch (dSelect) &#123;\t\t\t\tcase 1:\t\t\t\t\tworker = new Employee(newId, newName, dSelect);\t\t\t\t\tbreak;\t\t\t\tcase 2:\t\t\t\t\tworker = new Manager(newId, newName, dSelect);\t\t\t\t\tbreak;\t\t\t\tcase 3:\t\t\t\t\tworker = new Boss(newId, newName, dSelect);\t\t\t\t\tbreak;\t\t\t\tdefault:\t\t\t\t\tbreak;\t\t\t&#125;\t\t\t//更改数据 到数组中\t\t\tthis-&gt;m_EmpArray[ret] = worker;\t\t\tcout &lt;&lt; &quot;修改成功！&quot; &lt;&lt; this-&gt;m_EmpArray[ret]-&gt;m_DeptId &lt;&lt; endl;\t\t\t//保存到文件中\t\t\tthis-&gt;save();\t\t&#125;\t\telse &#123;\t\t\tcout &lt;&lt; &quot;修改失败，查无此人&quot; &lt;&lt; endl;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试修改职工在main函数分支 4 选项中，调用修改职工接口\n\n测试1 - 修改不存在职工情况\n\n测试2 - 修改存在职工情况，例如将职工 “李四” 改为 “赵四”\n\n修改后再次查看所有职工信息，并确认修改成功\n再次确认文件中信息也同步更新\n12.查找职工功能描述：提供两种查找职工方式，一种按照职工编号，一种按照职工姓名\n查找职工函数声明在workerManager.h中添加成员函数 void Find_Emp();\n//查找职工void Find_Emp();\n查找职工函数实现在workerManager.cpp中实现成员函数 void Find_Emp();\n//查找职工void WorkerManager::Find_Emp() &#123;\tif (this-&gt;m_FileIsEmpty) &#123;\t\tcout &lt;&lt; &quot;文件不存在或记录为空！&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;请输入查找的方式：&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;1、按职工编号查找 &quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;2、按职工姓名查找 &quot; &lt;&lt; endl;\t\tint select = 0;\t\tcin &gt;&gt; select;\t\tif (select == 1) &#123;\t\t\tint id;\t\t\tcout &lt;&lt; &quot;请输入查找的职工编号： &quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; id;\t\t\tint ret = IsExist(id);\t\t\tif (ret != -1) &#123;\t\t\t\tcout &lt;&lt; &quot;查找成功！该职工信息如下：&quot; &lt;&lt; endl;\t\t\t\tthis-&gt;m_EmpArray[ret]-&gt;showInfo();\t\t\t&#125;\t\t\telse &#123;\t\t\t\tcout &lt;&lt; &quot;查找失败，查无此人&quot; &lt;&lt; endl;\t\t\t&#125;\t\t&#125;\t\telse if (select == 2) &#123;\t\t\tstring name;\t\t\tcout &lt;&lt; &quot;请输入查找的姓名：&quot; &lt;&lt; endl;\t\t\tcin &gt;&gt; name;\t\t\t//加入判断是否查到的标志\t\t\tbool flag = false; //默认未找到职工\t\t\tfor (int i = 0; i &lt; m_EmpNum; i++) &#123;\t\t\t\tif (this-&gt;m_EmpArray[i]-&gt;m_Name == name) &#123;\t\t\t\t\tcout &lt;&lt; &quot;查找成功，职工编号为： &quot;\t\t\t\t\t\t&lt;&lt; this-&gt;m_EmpArray[i]-&gt;m_Id\t\t\t\t\t\t&lt;&lt; &quot; 号职工信息如下：&quot; &lt;&lt; endl;\t\t\t\t\tflag = true;\t\t\t\t\t//调用显示信息接口\t\t\t\t\tthis-&gt;m_EmpArray[i]-&gt;showInfo();\t\t\t\t&#125;\t\t\t&#125;\t\t\tif (flag == false) &#123;\t\t\t\tcout &lt;&lt; &quot;查找失败，查无此人！&quot; &lt;&lt; endl;\t\t\t&#125;\t\t&#125;\t\telse &#123;\t\t\tcout &lt;&lt; &quot;输入选项有误！&quot; &lt;&lt; endl;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试查找职工在main函数分支 5 选项中，调用查找职工接口\n\n测试1 - 按照职工编号查找 - 查找不存在职工\n测试2 - 按照职工编号查找 - 查找存在职工\n\n测试3 - 按照职工姓名查找 - 查找不存在职工\n测试4 - 按照职工姓名查找 - 查找存在职工（如果出现重名，也一并显示，在文件中可以添加重名职工）\n13.排序功能描述：按照职工编号进行排序，排序的顺序由用户指定\n排序函数声明在workerManager.h中添加成员函数 void Sort_Emp();\n//排序职工void Sort_Emp();\n排序函数实现在workerManager.cpp中实现成员函数 void Sort_Emp();\n//排序职工void WorkerManager::Sort_Emp() &#123;\tif (this-&gt;m_FileIsEmpty) &#123;\t\tcout &lt;&lt; &quot;文件不存在或记录为空！&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;请选择排序方式：&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;1、按职工号进行升序&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;2、按职工号进行降序&quot; &lt;&lt; endl;\t\tint select = 0;\t\tcin &gt;&gt; select;\t\tfor (int i = 0; i &lt; m_EmpNum; i++) &#123;\t\t\tint minOrMax = i; //声明最小值 或 最大值下标\t\t\tfor (int j = i + 1; j &lt; this-&gt;m_EmpNum; j++) &#123;\t\t\t\tif (select == 1) &#123; //升序\t\t\t\t\tif (this-&gt;m_EmpArray[minOrMax]-&gt;m_Id &gt; this-&gt;m_EmpArray[j]-&gt;m_Id) &#123;\t\t\t\t\t\tminOrMax = j;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\telse &#123; //降序\t\t\t\t\tif (this-&gt;m_EmpArray[minOrMax]-&gt;m_Id &lt; this-&gt;m_EmpArray[j]-&gt;m_Id) &#123;\t\t\t\t\t\tminOrMax = j;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t&#125;\t\t\t//判断一开始认定 最小值或最大值 是不是 计算的最小值或最大值，如果不是 交换数据\t\t\tif (i != minOrMax) &#123;\t\t\t\tWorker* temp = this-&gt;m_EmpArray[i];\t\t\t\tthis-&gt;m_EmpArray[i] = this-&gt;m_EmpArray[minOrMax];\t\t\t\tthis-&gt;m_EmpArray[minOrMax] = temp;\t\t\t&#125;\t\t&#125;\t\tcout &lt;&lt; &quot;排序成功！排序后的结果为： &quot; &lt;&lt; endl;\t\tthis-&gt;save(); //排序后结果保存到文件中\t\tthis-&gt;Show_Emp(); //展示所有职工\t&#125;&#125;\n测试排序功能在main函数分支 6 选项中，调用排序职工接口\n\n测试：\n首先我们添加一些职工，序号是无序的\n测试 - 升序排序\n\n文件同步更新\n测试 - 降序排序，文件同步更新\n14.清空文件功能描述：将文件中记录数据清空\n清空函数声明在workerManager.h中添加成员函数 void Clean_File();\n//清空文件void Clean_File();\n清空函数实现在workerManager.cpp中实现员函数 void Clean_File();\n//清空文件void WorkerManager::Clean_File() &#123;\tcout &lt;&lt; &quot;确定清空？&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、确定&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、返回&quot; &lt;&lt; endl;\tint select = 0;\tcin &gt;&gt; select;\tif (select == 1) &#123;\t\tofstream ofs(FILENAME, ios::trunc); // 删除文件后重新创建\t\tofs.close();\t\tif (this-&gt;m_EmpArray != NULL) &#123;\t\t\t//删除堆区的每个职工对象\t\t\tfor (int i = 0; i &lt; this-&gt;m_EmpNum; i++) &#123;\t\t\t\tdelete this-&gt;m_EmpArray[i];\t\t\t\tthis-&gt;m_EmpArray[i] = NULL;\t\t\t&#125;\t\t\t//删除堆区数组指针\t\t\tdelete[] this-&gt;m_EmpArray;\t\t\tthis-&gt;m_EmpArray = NULL;\t\t\tthis-&gt;m_EmpNum = 0;\t\t\tthis-&gt;m_FileIsEmpty = true;\t\t&#125;\t\tcout &lt;&lt; &quot;清空成功！&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试清空文件在 main 函数分支 7 选项中，调用清空文件接口\n\n测试：确认清空文件\n再次查看文件中数据，记录已为空\n打开文件，里面数据已确保清空，该功能需要慎用！\n在头文件和源文件之间兜兜转转中，本案例终制作完毕。\n\nDemo Source\n\n0x03 演讲比赛流程管理系统1 比赛规则学校举行一场演讲比赛，共有12个人参加。比赛共两轮，第一轮为淘汰赛，第二轮为决赛。比赛方式：分组比赛，每组6个人；选手每次要随机分组，进行比赛每名选手都有对应的编号，如 10001 ~ 10012第一轮分为两个小组，每组6个人。 整体按照选手编号进行抽签后顺序演讲。当小组演讲完后，淘汰组内排名最后的三个选手，前三名晋级，进入下一轮的比赛。第二轮为决赛，前三名胜出每轮比赛过后需要显示晋级选手的信息1.2 程序功能开始演讲比赛：完成整届比赛的流程，每个比赛阶段需要给用户一个提示，用户按任意键后继续下一个阶段查看往届记录：查看之前比赛前三名结果，每次比赛都会记录到文件中，文件用.csv后缀名保存清空比赛记录：将文件中数据清空退出比赛程序：可以退出当前程序\n、 创建管理类功能描述：\n提供菜单界面与用户交互对演讲比赛流程进行控制与文件的读写交互3.1创建文件在头文件和源文件的文件夹下分别创建speechManager.h 和 speechManager.cpp文件\n.2 头文件实现在speechManager.h中设计管理类\n#pragma once#include&lt;iostream&gt;using namespace std;//演讲管理类class SpeechManager&#123;public:\t//构造函数\tSpeechManager();\t//析构函数\t~SpeechManager();&#125;;\n至此演讲管理类以创建完毕\n4、 菜单功能功能描述：与用户的沟通界面\n4.1 添加成员函数在管理类speechManager.h中添加成员函数 void show_Menu();//展示菜单\n4.2 菜单功能实现在管理类speechManager.cpp中实现 show_Menu()函数\nvoid SpeechManager::show_Menu()&#123;\tcout &lt;&lt; &quot;********************************************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  欢迎参加演讲比赛 ************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  1.开始演讲比赛  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  2.查看往届记录  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  3.清空比赛记录  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;*************  0.退出比赛程序  *************&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;********************************************&quot; &lt;&lt; endl;\tcout &lt;&lt; endl;&#125;\n4.3 测试菜单功能在演讲比赛流程管理系统.cpp中测试菜单功能\n#include&lt;iostream&gt;using namespace std;#include &quot;speechManager.h&quot;int main() &#123;\tSpeechManager sm;\tsm.show_Menu();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n5、 退出功能5.1 提供功能接口在main函数中提供分支选择，提供每个功能接口\nint main() &#123;\tSpeechManager sm;\tint choice = 0; //用来存储用户的选项\twhile (true)\t&#123;\t\tsm.show_Menu();\t\tcout &lt;&lt; &quot;请输入您的选择： &quot; &lt;&lt; endl;\t\tcin &gt;&gt; choice; // 接受用户的选项\t\tswitch (choice)\t\t&#123;\t\tcase 1:  //开始比赛\t\t\tbreak;\t\tcase 2:  //查看记录\t\t\tbreak;\t\tcase 3:  //清空记录\t\t\tbreak;\t\tcase 0:  //退出系统\t\t\tbreak;\t\tdefault:\t\t\tsystem(&quot;cls&quot;); //清屏\t\t\tbreak;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n5.2 实现退出功能在speechManager.h中提供退出系统的成员函数 void exitSystem();\n在speechManager.cpp中提供具体的功能实现\nvoid SpeechManager::exitSystem()&#123;\tcout &lt;&lt; &quot;欢迎下次使用&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\texit(0);&#125;\n5.3测试功能在main函数分支 0 选项中，调用退出程序的接口#include \n\n6、演讲比赛功能6.1 功能分析比赛流程分析：\n抽签 → 开始演讲比赛 → 显示第一轮比赛结果 →\n抽签 → 开始演讲比赛 → 显示前三名结果 → 保存分数\n6.2 创建选手类选手类中的属性包含：选手姓名、分数头文件中创建 speaker.h文件，并添加代码：\n#pragma once#include&lt;iostream&gt;using namespace std;class Speaker&#123;public:\tstring m_Name;  //姓名\tdouble m_Score[2]; //分数  最多有两轮得分&#125;;\n6.3 比赛6.3.1 成员属性添加在speechManager.h中添加属性\n//比赛选手 容器  12人vector&lt;int&gt;v1;//第一轮晋级容器  6人vector&lt;int&gt;v2;//胜利前三名容器  3人vector&lt;int&gt;vVictory;//存放编号 以及对应的 具体选手 容器map&lt;int, Speaker&gt; m_Speaker;\n6.3.2 初始化属性在speechManager.h中提供开始比赛的的成员函数 void initSpeech();\n//初始化属性void initSpeech();\n在speechManager.cpp中实现void initSpeech();\nvoid SpeechManager::initSpeech()&#123;\t//容器保证为空\tthis-&gt;v1.clear();  \tthis-&gt;v2.clear();\tthis-&gt;vVictory.clear();\tthis-&gt;m_Speaker.clear();\t//初始化比赛轮数\tthis-&gt;m_Index = 1;&#125;\nSpeechManager构造函数中调用void initSpeech();\nSpeechManager::SpeechManager()&#123;\t//初始化属性\tthis-&gt;initSpeech();&#125;\n6.3.3 创建选手在speechManager.h中提供开始比赛的的成员函数 void createSpeaker();\n//初始化创建12名选手void createSpeaker();\n在speechManager.cpp中实现void createSpeaker();\nvoid SpeechManager::createSpeaker()&#123;\tstring nameSeed = &quot;ABCDEFGHIJKL&quot;;\tfor (int i = 0; i &lt; nameSeed.size(); i++)\t&#123;\t\tstring name = &quot;选手&quot;;\t\tname += nameSeed[i];\t\tSpeaker sp;\t\tsp.m_Name = name;\t\tfor (int i = 0; i &lt; 2; i++)\t\t&#123;\t\t\tsp.m_Score[i] = 0;\t\t&#125;\t\t//12名选手编号\t\tthis-&gt;v1.push_back(i + 10001);\t\t//选手编号 以及对应的选手 存放到map容器中\t\tthis-&gt;m_Speaker.insert(make_pair(i + 10001, sp));\t&#125;&#125;\nSpeechManager类的 构造函数中调用void createSpeaker();\nSpeechManager::SpeechManager()&#123;    //初始化属性\tthis-&gt;initSpeech();    \t//创建选手\tthis-&gt;createSpeaker();&#125;\n测试 在main函数中，可以在创建完管理对象后，使用下列代码测试12名选手初始状态\nfor (map&lt;int, Speaker&gt;::iterator it = sm.m_Speaker.begin(); it != sm.m_Speaker.end(); it++)&#123;\tcout  &lt;&lt; &quot;选手编号：&quot; &lt;&lt; it-&gt;first           &lt;&lt; &quot; 姓名： &quot; &lt;&lt; it-&gt;second.m_Name           &lt;&lt; &quot; 成绩： &quot; &lt;&lt; it-&gt;second.m_Score[0] &lt;&lt; endl;&#125;\n\n\n6.3.4 开始比赛成员函数添加在speechManager.h中提供开始比赛的的成员函数 void startSpeech();该函数功能是主要控制比赛的流程\n//开始比赛 - 比赛流程控制void startSpeech();\n在speechManager.cpp中将startSpeech的空实现先写入我们可以先将整个比赛的流程 写到函数中\n//开始比赛void SpeechManager::startSpeech()&#123;\t//第一轮比赛\t//1、抽签\t\t//2、比赛\t//3、显示晋级结果\t//第二轮比赛\t//1、抽签\t//2、比赛\t//3、显示最终结果\t//4、保存分数&#125;\n6.3.5 抽签功能描述：\n正式比赛前，所有选手的比赛顺序需要打乱，我们只需要将存放选手编号的容器 打乱次序即可\n在speechManager.h中提供抽签的的成员函数 void speechDraw();\n//抽签void speechDraw();\n在speechManager.cpp中实现成员函数 void speechDraw();\nvoid SpeechManager::speechDraw()&#123;\tcout &lt;&lt; &quot;第 &lt;&lt; &quot; &lt;&lt; this-&gt;m_Index &lt;&lt; &quot; &gt;&gt; 轮比赛选手正在抽签&quot;&lt;&lt;endl;\tcout &lt;&lt; &quot;---------------------&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;抽签后演讲顺序如下：&quot; &lt;&lt; endl;\tif (this-&gt;m_Index == 1)\t&#123;\t\trandom_shuffle(v1.begin(), v1.end());\t\tfor (vector&lt;int&gt;::iterator it = v1.begin(); it != v1.end(); it++)\t\t&#123;\t\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t\t&#125;\t\tcout &lt;&lt; endl;\t&#125;\telse\t&#123;\t\trandom_shuffle(v2.begin(), v2.end());\t\tfor (vector&lt;int&gt;::iterator it = v2.begin(); it != v2.end(); it++)\t\t&#123;\t\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t\t&#125;\t\tcout &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;---------------------&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tcout &lt;&lt; endl;&#125;\n在startSpeech比赛流程控制的函数中，调用抽签函数\n\n在main函数中，分支1选项中，调用开始比赛的接口\n\n6.3.6 开始比赛在speechManager.h中提供比赛的的成员函数 void speechContest();\n//比赛void speechContest();\n在speechManager.cpp中实现成员函数 void speechContest();\nvoid SpeechManager::speechContest()&#123;\tcout &lt;&lt; &quot;------------- 第&quot;&lt;&lt; this-&gt;m_Index &lt;&lt; &quot;轮正式比赛开始：------------- &quot; &lt;&lt; endl;\tmultimap&lt;double, int, greater&lt;int&gt;&gt; groupScore; //临时容器，保存key分数 value 选手编号\tint num = 0; //记录人员数，6个为1组\tvector &lt;int&gt;v_Src;   //比赛的人员容器\tif (this-&gt;m_Index == 1)\t&#123;\t\tv_Src = v1;\t&#125;\telse\t&#123;\t\tv_Src = v2;\t&#125;\t//遍历所有参赛选手\tfor (vector&lt;int&gt;::iterator it = v_Src.begin(); it != v_Src.end(); it++)\t&#123;\t\tnum++;\t\t//评委打分\t\tdeque&lt;double&gt;d;\t\tfor (int i = 0; i &lt; 10; i++)\t\t&#123;\t\t\tdouble score = (rand() % 401 + 600) / 10.f;  // 600 ~ 1000\t\t\t//cout &lt;&lt; score &lt;&lt; &quot; &quot;;\t\t\td.push_back(score);\t\t&#125;\t\tsort(d.begin(), d.end(), greater&lt;double&gt;());\t\t\t\t//排序\t\td.pop_front();\t\t\t\t\t\t\t\t\t\t\t\t//去掉最高分\t\td.pop_back();\t\t\t\t\t\t\t\t\t\t\t\t//去掉最低分\t\tdouble sum = accumulate(d.begin(), d.end(), 0.0f);\t\t\t\t//获取总分\t\tdouble avg = sum / (double)d.size();\t\t\t\t\t\t\t\t\t//获取平均分\t\t//每个人平均分\t\t//cout &lt;&lt; &quot;编号： &quot; &lt;&lt; *it  &lt;&lt; &quot; 选手： &quot; &lt;&lt; this-&gt;m_Speaker[*it].m_Name &lt;&lt; &quot; 获取平均分为： &quot; &lt;&lt; avg &lt;&lt; endl;  //打印分数\t\tthis-&gt;m_Speaker[*it].m_Score[this-&gt;m_Index - 1] = avg;\t\t//6个人一组，用临时容器保存\t\tgroupScore.insert(make_pair(avg, *it));\t\tif (num % 6 == 0)\t\t&#123;\t\t\tcout &lt;&lt; &quot;第&quot; &lt;&lt; num / 6 &lt;&lt; &quot;小组比赛名次：&quot; &lt;&lt; endl;\t\t\tfor (multimap&lt;double, int, greater&lt;int&gt;&gt;::iterator it = groupScore.begin(); it != groupScore.end(); it++)\t\t\t&#123;\t\t\t\tcout &lt;&lt; &quot;编号: &quot; &lt;&lt; it-&gt;second &lt;&lt; &quot; 姓名： &quot; &lt;&lt; this-&gt;m_Speaker[it-&gt;second].m_Name &lt;&lt; &quot; 成绩： &quot; &lt;&lt; this-&gt;m_Speaker[it-&gt;second].m_Score[this-&gt;m_Index - 1] &lt;&lt; endl;\t\t\t&#125;\t\t\tint count = 0;\t\t\t//取前三名\t\t\tfor (multimap&lt;double, int, greater&lt;int&gt;&gt;::iterator it = groupScore.begin(); it != groupScore.end() &amp;&amp; count &lt; 3; it++, count++)\t\t\t&#123;\t\t\t\tif (this-&gt;m_Index == 1)\t\t\t\t&#123;\t\t\t\t\tv2.push_back((*it).second);\t\t\t\t&#125;\t\t\t\telse\t\t\t\t&#123;\t\t\t\t\tvVictory.push_back((*it).second);\t\t\t\t&#125;\t\t\t&#125;\t\t\tgroupScore.clear();\t\t\tcout &lt;&lt; endl;\t\t&#125;\t&#125;\tcout &lt;&lt; &quot;------------- 第&quot; &lt;&lt; this-&gt;m_Index &lt;&lt; &quot;轮比赛完毕  ------------- &quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);&#125;\n在startSpeech比赛流程控制的函数中，调用比赛函数 speechContest();\n6.3.7 显示比赛分数在speechManager.h中提供比赛的的成员函数 void showScore();\n//显示比赛结果void showScore();\n在speechManager.cpp中实现成员函数 void showScore();\nvoid SpeechManager::showScore()&#123;\tcout &lt;&lt; &quot;---------第&quot; &lt;&lt; this-&gt;m_Index &lt;&lt; &quot;轮晋级选手信息如下：-----------&quot; &lt;&lt; endl;\tvector&lt;int&gt;v;\tif (this-&gt;m_Index == 1)\t&#123;\t\tv = v2;\t&#125;\telse\t&#123;\t\tv = vVictory;\t&#125;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;选手编号：&quot; &lt;&lt; *it &lt;&lt; &quot; 姓名： &quot; &lt;&lt; m_Speaker[*it].m_Name &lt;&lt; &quot; 得分： &quot; &lt;&lt; m_Speaker[*it].m_Score[this-&gt;m_Index - 1] &lt;&lt; endl;\t&#125;\tcout &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);\tthis-&gt;show_Menu(); &#125;\n在startSpeech比赛流程控制的函数中，调用显示比赛分数函数 speechScore();\n6.3.8 第二轮比赛第二轮比赛流程同第一轮，只是比赛的轮是+1，其余流程不变\n在startSpeech比赛流程控制的函数中，加入第二轮的流程\n\n6.4 保存分数功能描述：\n将每次演讲比赛的得分记录到文件中功能实现：\n在speechManager.h中添加保存记录的成员函数 void saveRecord();\n//保存记录void saveRecord();\n在speechManager.cpp中实现成员函数 void saveRecord();\nvoid SpeechManager::saveRecord()&#123;\tofstream ofs;\tofs.open(&quot;speech.csv&quot;, ios::out | ios::app); // 用输出的方式打开文件  -- 写文件\t//将每个人数据写入到文件中\tfor (vector&lt;int&gt;::iterator it = vVictory.begin(); it != vVictory.end(); it++)\t&#123;\t\tofs &lt;&lt; *it &lt;&lt; &quot;,&quot;\t\t\t&lt;&lt; m_Speaker[*it].m_Score[1] &lt;&lt; &quot;,&quot;;\t&#125;\tofs &lt;&lt; endl;    \t//关闭文件\tofs.close();    \tcout &lt;&lt; &quot;记录已经保存&quot; &lt;&lt; endl;&#125;\n在startSpeech比赛流程控制的函数中，最后调用保存记录分数函数\n\n利用记事本打开文件 speech.csv，里面保存了前三名选手的编号以及得分\n\n7、 查看记录7.1 读取记录分数在speechManager.h中添加保存记录的成员函数 void loadRecord();添加判断文件是否为空的标志 bool fileIsEmpty;添加往届记录的容器map&lt;int, vector&gt; m_Record;其中m_Record 中的key代表第几届，value记录具体的信息\n//读取记录void loadRecord();//文件为空的标志bool fileIsEmpty;//往届记录map&lt;int, vector&lt;string&gt;&gt; m_Record;\n在speechManager.cpp中实现成员函数 void loadRecord();\nvoid SpeechManager::loadRecord()&#123;\tifstream ifs(&quot;speech.csv&quot;, ios::in); //输入流对象 读取文件\tif (!ifs.is_open())\t&#123;\t\tthis-&gt;fileIsEmpty = true;\t\tcout &lt;&lt; &quot;文件不存在！&quot; &lt;&lt; endl;\t\tifs.close();\t\treturn;\t&#125;\tchar ch;\tifs &gt;&gt; ch;\tif (ifs.eof())\t&#123;\t\tcout &lt;&lt; &quot;文件为空!&quot; &lt;&lt; endl;\t\tthis-&gt;fileIsEmpty = true;\t\tifs.close();\t\treturn;\t&#125;\t//文件不为空\tthis-&gt;fileIsEmpty = false;\tifs.putback(ch); //读取的单个字符放回去\tstring data;\tint index = 0;\twhile (ifs &gt;&gt; data)\t&#123;\t\t//cout &lt;&lt; data &lt;&lt; endl;\t\tvector&lt;string&gt;v;\t\tint pos = -1;\t\tint start = 0;\t\twhile (true)\t\t&#123;\t\t\tpos = data.find(&quot;,&quot;, start); //从0开始查找 &#x27;,&#x27;\t\t\tif (pos == -1)\t\t\t&#123;\t\t\t\tbreak; //找不到break返回\t\t\t&#125;\t\t\tstring tmp = data.substr(start, pos - start); //找到了,进行分割 参数1 起始位置，参数2 截取长度\t\t\tv.push_back(tmp);\t\t\tstart = pos + 1;\t\t&#125;\t\tthis-&gt;m_Record.insert(make_pair(index, v));\t\tindex++;\t&#125;\tifs.close();&#125;\n在SpeechManager构造函数中调用获取往届记录函数 this-&gt;loadRecord();\n7.2 查看记录功能在speechManager.h中添加保存记录的成员函数 void showRecord();\n//显示往届得分void showRecord();\n在speechManager.cpp中实现成员函数 void showRecord();\nvoid SpeechManager::showRecord()&#123;\tfor (int i = 0; i &lt; this-&gt;m_Record.size(); i++)\t&#123;\t\tcout &lt;&lt; &quot;第&quot; &lt;&lt; i + 1 &lt;&lt; &quot;届 &quot; &lt;&lt;\t\t\t&quot;冠军编号：&quot; &lt;&lt; this-&gt;m_Record[i][0] &lt;&lt; &quot; 得分：&quot; &lt;&lt; this-&gt;m_Record[i][1] &lt;&lt; &quot; &quot;\t\t\t&quot;亚军编号：&quot; &lt;&lt; this-&gt;m_Record[i][2] &lt;&lt; &quot; 得分：&quot; &lt;&lt; this-&gt;m_Record[i][3] &lt;&lt; &quot; &quot;\t\t\t&quot;季军编号：&quot; &lt;&lt; this-&gt;m_Record[i][4] &lt;&lt; &quot; 得分：&quot; &lt;&lt; this-&gt;m_Record[i][5] &lt;&lt; endl;\t&#125;    system(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n7.3 测试功能在main函数分支 2 选项中，调用查看记录的接口 sm.showRecord();\n7.4 bug解决目前程序中有几处bug未解决：\n查看往届记录，若文件不存在或为空，并未提示解决方式：在showRecord函数中，开始判断文件状态并加以判断\n\n若记录为空或不存在，比完赛后依然提示记录为空解决方式：saveRecord中更新文件为空的标志\n//更改文件不为空状态this-&gt;fileIsEmpty = false;\n比完赛后查不到本届比赛的记录，没有实时更新解决方式：比赛完毕后，所有数据重置\n//重置比赛 ，获取记录//初始化容器和属性this-&gt;initSpeech();//创建12名选手this-&gt;createSpeaker();//加载往届记录this-&gt;loadRecord();\n在初始化时，没有初始化记录容器解决方式：initSpeech中添加 初始化记录容器\n\n每次记录都是一样的解决方式：在main函数一开始 添加随机数种子\nsrand((unsigned int)time(NULL));\n8、 清空记录8.1 清空记录功能实现在speechManager.h中添加保存记录的成员函数 void clearRecord();\n//清空记录void clearRecord();\n在speechManager.cpp中实现成员函数 void clearRecord();\nvoid SpeechManager::clearRecord()&#123;\tcout &lt;&lt; &quot;确认清空？&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、确认&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、返回&quot; &lt;&lt; endl;\tint select = 0;\tcin &gt;&gt; select;\tif (select == 1)\t&#123;\t\t//打开模式 ios::trunc 如果存在删除文件并重新创建\t\tofstream ofs(&quot;speech.csv&quot;, ios::trunc);\t\tofs.close();\t\t//初始化属性\t\tthis-&gt;initSpeech();\t\t//创建选手\t\tthis-&gt;createSpeaker();\t\t//获取往届记录\t\tthis-&gt;loadRecord();\t\t\t\tcout &lt;&lt; &quot;清空成功！&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n8.2 测试清空在main函数分支 3 选项中，调用清空比赛记录的接口 sm.clearRecord();\n测试后，speech.csv中记录也为空\n至此本案例结束！\n\nDemo Source\n\n0x04 机房预约系统1、机房预约系统需求1.1 系统简介学校现有几个规格不同的机房，由于使用时经常出现”撞车”现象,现开发一套机房预约系统，解决这一问题。\n1.2 身份简介分别有三种身份使用该程序\n学生代表：申请使用机房教师：审核学生的预约申请管理员：给学生、教师创建账号1.3 机房简介机房总共有3间\n1号机房 — 最大容量20人2号机房 — 最多容量50人3号机房 — 最多容量100人1.4 申请简介申请的订单每周由管理员负责清空。学生可以预约未来一周内的机房使用，预约的日期为周一至周五，预约时需要选择预约时段（上午、下午）教师来审核预约，依据实际情况审核预约通过或者不通过1.5 系统具体需求首先进入登录界面，可选登录身份有：学生代表老师管理员退出每个身份都需要进行验证后，进入子菜单学生需要输入 ：学号、姓名、登录密码老师需要输入：职工号、姓名、登录密码管理员需要输入：管理员姓名、登录密码学生具体功能申请预约 — 预约机房查看自身的预约 — 查看自己的预约状态查看所有预约 — 查看全部预约信息以及预约状态取消预约 — 取消自身的预约，预约成功或审核中的预约均可取消注销登录 — 退出登录教师具体功能查看所有预约 — 查看全部预约信息以及预约状态审核预约 — 对学生的预约进行审核注销登录 — 退出登录管理员具体功能添加账号 — 添加学生或教师的账号，需要检测学生编号或教师职工号是否重复查看账号 — 可以选择查看学生或教师的全部信息查看机房 — 查看所有机房的信息清空预约 — 清空所有预约记录注销登录 — 退出登录\n\n3、创建主菜单功能描述：\n设计主菜单，与用户进行交互3.1 菜单实现在主函数main中添加菜单提示，代码如下：\nint main() &#123;\tcout &lt;&lt; &quot;======================  欢迎来到传智播客机房预约系统  =====================&quot;          &lt;&lt; endl;\tcout &lt;&lt; endl &lt;&lt; &quot;请输入您的身份&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;\\t\\t -------------------------------\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          1.学生代表           |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          2.老    师           |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          3.管 理 员           |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          0.退    出           |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t -------------------------------\\n&quot;;\tcout &lt;&lt; &quot;输入您的选择: &quot;;\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n3.2 搭建接口接受用户的选择，搭建接口在main中添加代码\nint main() &#123;\tint select = 0;\twhile (true)\t&#123;\t\tcout &lt;&lt; &quot;======================  欢迎来到传智播客机房预约系统  =====================&quot; &lt;&lt; endl;\t\tcout &lt;&lt; endl &lt;&lt; &quot;请输入您的身份&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;\\t\\t -------------------------------\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|          1.学生代表           |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|          2.老    师           |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|          3.管 理 员           |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|          0.退    出           |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t|                               |\\n&quot;;\t\tcout &lt;&lt; &quot;\\t\\t -------------------------------\\n&quot;;\t\tcout &lt;&lt; &quot;输入您的选择: &quot;;\t\tcin &gt;&gt; select; //接受用户选择\t\tswitch (select)\t\t&#123;\t\tcase 1:  //学生身份\t\t\tbreak;\t\tcase 2:  //老师身份\t\t\tbreak;\t\tcase 3:  //管理员身份\t\t\tbreak;\t\tcase 0:  //退出系统\t\t\tbreak;\t\tdefault:             cout &lt;&lt; &quot;输入有误，请重新选择！&quot; &lt;&lt; endl;\t\t    system(&quot;pause&quot;);\t\t\tsystem(&quot;cls&quot;);\t\t\tbreak;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n测试，输入0、1、2、3会重新回到界面，输入其他提示输入有误，清屏后重新选择\n4、 退出功能实现4.1 退出功能实现在main函数分支 0 选项中，添加退出程序的代码：\ncout &lt;&lt; &quot;欢迎下一次使用&quot;&lt;&lt;endl;system(&quot;pause&quot;);return 0;\n5、 创建身份类5.1 身份的基类在整个系统中，有三种身份，分别为：学生代表、老师以及管理员三种身份有其共性也有其特性，因此我们可以将三种身份抽象出一个身份基类identity在头文件下创建Identity.h文件Identity.h中添加如下代码：\n#pragma once#include&lt;iostream&gt;using namespace std;//身份抽象类class Identity&#123;public:\t//操作菜单\tvirtual void operMenu() = 0;\tstring m_Name; //用户名\tstring m_Pwd;  //密码&#125;;\n5.2 学生类5.2.1 功能分析学生类主要功能是可以通过类中成员函数，实现预约实验室操作\n学生类中主要功能有：\n显示学生操作的菜单界面申请预约查看自身预约查看所有预约取消预约​\n5.2.2 类的创建在头文件以及源文件下创建 student.h 和 student.cpp文件student.h中添加如下代码：\n#pragma once#include&lt;iostream&gt;using namespace std;#include &quot;identity.h&quot;//学生类class Student :public Identity&#123;public:\t//默认构造\tStudent();\t//有参构造(学号、姓名、密码)\tStudent(int id, string name, string pwd);\t//菜单界面\tvirtual void operMenu(); \t//申请预约\tvoid applyOrder(); \t//查看我的预约\tvoid showMyOrder(); \t//查看所有预约\tvoid showAllOrder(); \t//取消预约\tvoid cancelOrder();\t\t//学生学号\tint m_Id;&#125;;\nstudent.cpp中添加如下代码：\n#include &quot;student.h&quot;//默认构造Student::Student()&#123;&#125;//有参构造(学号、姓名、密码)Student::Student(int id, string name, string pwd)&#123;&#125;//菜单界面void Student::operMenu()&#123;&#125;//申请预约void Student::applyOrder()&#123;&#125;//查看我的预约void Student::showMyOrder()&#123;&#125;//查看所有预约void Student::showAllOrder()&#123;&#125;//取消预约void Student::cancelOrder()&#123;&#125;\n5.3 老师类5.3.1 功能分析教师类主要功能是查看学生的预约，并进行审核\n教师类中主要功能有：\n显示教师操作的菜单界面\n查看所有预约\n审核预约\n​\n5.3.2 类的创建在头文件以及源文件下创建 teacher.h 和 teacher.cpp文件teacher.h中添加如下代码：\n#pragma once#define _CRT_SECURE_NO_WARNINGS#include&lt;iostream&gt;using namespace std;#include &quot;identity.h&quot;class Teacher :public Identity&#123;public:\t//默认构造\tTeacher();\t//有参构造 (职工编号，姓名，密码)\tTeacher(int empId, string name, string pwd);\t//菜单界面\tvirtual void operMenu();\t//查看所有预约\tvoid showAllOrder(); \t//审核预约\tvoid validOrder(); \tint m_EmpId; //教师编号&#125;;\nteacher.cpp中添加如下代码:\n#include&quot;teacher.h&quot;//默认构造Teacher::Teacher()&#123;&#125;//有参构造 (职工编号，姓名，密码)Teacher::Teacher(int empId, string name, string pwd)&#123;&#125;//菜单界面void Teacher::operMenu()&#123;&#125;//查看所有预约void Teacher::showAllOrder()&#123;&#125;//审核预约void Teacher::validOrder()&#123;&#125;\n5.4 管理员类5.4.1 功能分析管理员类主要功能是对学生和老师账户进行管理，查看机房信息以及清空预约记录\n管理员类中主要功能有：\n显示管理员操作的菜单界面\n添加账号\n查看账号\n查看机房信息\n清空预约记录\n​\n5.4.2 类的创建在头文件以及源文件下创建 manager.h 和 manager.cpp文件manager.h中添加如下代码：\n#pragma once#include&lt;iostream&gt;using namespace std;#include &quot;identity.h&quot;class Manager :public Identity&#123;public:\t//默认构造\tManager();\t//有参构造  管理员姓名，密码\tManager(string name, string pwd);\t//选择菜单\tvirtual void operMenu();\t//添加账号  \tvoid addPerson();\t//查看账号\tvoid showPerson();\t//查看机房信息\tvoid showComputer();\t//清空预约记录\tvoid cleanFile();&#125;;\nmanager.cpp中添加如下代码:\n#include &quot;manager.h&quot;//默认构造Manager::Manager()&#123;&#125;//有参构造Manager::Manager(string name, string pwd)&#123;&#125;//选择菜单void Manager::operMenu()&#123;&#125;//添加账号  void Manager::addPerson()&#123;&#125;//查看账号void Manager::showPerson()&#123;&#125;//查看机房信息void Manager::showComputer()&#123;&#125;//清空预约记录void Manager::cleanFile()&#123;&#125;\n6、 登录模块6.1 全局文件添加功能描述：\n不同的身份可能会用到不同的文件操作，我们可以将所有的文件名定义到一个全局的文件中在头文件中添加 globalFile.h 文件并添加如下代码：\n#pragma once//管理员文件#define ADMIN_FILE     &quot;admin.txt&quot;//学生文件#define STUDENT_FILE   &quot;student.txt&quot;//教师文件#define TEACHER_FILE   &quot;teacher.txt&quot;//机房信息文件#define COMPUTER_FILE  &quot;computerRoom.txt&quot;//订单文件#define ORDER_FILE     &quot;order.txt&quot;\n并且在同级目录下，创建这几个文件\n\n6.2 登录函数封装功能描述：\n根据用户的选择，进入不同的身份登录在预约系统的.cpp文件中添加全局函数 void LoginIn(string fileName, int type)\n参数：\nfileName — 操作的文件名type — 登录的身份 （1代表学生、2代表老师、3代表管理员）LoginIn中添加如下代码：\n#include &quot;globalFile.h&quot;#include &quot;identity.h&quot;#include &lt;fstream&gt;#include &lt;string&gt;//登录功能void LoginIn(string fileName, int type)&#123;\tIdentity * person = NULL;\tifstream ifs;\tifs.open(fileName, ios::in);\t//文件不存在情况\tif (!ifs.is_open())\t&#123;\t\tcout &lt;&lt; &quot;文件不存在&quot; &lt;&lt; endl;\t\tifs.close();\t\treturn;\t&#125;\tint id = 0;\tstring name;\tstring pwd;\tif (type == 1)\t//学生登录\t&#123;\t\tcout &lt;&lt; &quot;请输入你的学号&quot; &lt;&lt; endl;\t\tcin &gt;&gt; id;\t&#125;\telse if (type == 2) //教师登录\t&#123;\t\tcout &lt;&lt; &quot;请输入你的职工号&quot; &lt;&lt; endl;\t\tcin &gt;&gt; id;\t&#125;\tcout &lt;&lt; &quot;请输入用户名：&quot; &lt;&lt; endl;\tcin &gt;&gt; name;\tcout &lt;&lt; &quot;请输入密码： &quot; &lt;&lt; endl;\tcin &gt;&gt; pwd;\tif (type == 1)\t&#123;\t\t//学生登录验证\t&#125;\telse if (type == 2)\t&#123;\t\t//教师登录验证\t&#125;\telse if(type == 3)\t&#123;\t\t//管理员登录验证\t&#125;\t\tcout &lt;&lt; &quot;验证登录失败!&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);\treturn;&#125;\n在main函数的不同分支中，填入不同的登录接口\n\n6.3 学生登录实现在student.txt文件中添加两条学生信息，用于测试\n添加信息:\n1 张三 1232 李四 123456\n其中：\n第一列 代表 学号第二列 代表 学生姓名第三列 代表 密码\n在Login函数的学生分支中加入如下代码，验证学生身份\n//学生登录验证int fId;string fName;string fPwd;while (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)&#123;\tif (id == fId &amp;&amp; name == fName &amp;&amp; pwd == fPwd)\t&#123;\t\tcout &lt;&lt; &quot;学生验证登录成功!&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\tperson = new Student(id, name, pwd);\t\t\t\treturn;\t&#125;&#125;\n6.4 教师登录实现在teacher.txt文件中添加一条老师信息，用于测试\n添加信息:\n1 老王 123\n其中：\n第一列 代表 教师职工编号第二列 代表 教师姓名第三列 代表 密码\n在Login函数的教师分支中加入如下代码，验证教师身份\n//教师登录验证int fId;string fName;string fPwd;while (ifs &gt;&gt; fId &amp;&amp; ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)&#123;\tif (id == fId &amp;&amp; name == fName &amp;&amp; pwd == fPwd)\t&#123;\t\tcout &lt;&lt; &quot;教师验证登录成功!&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\tperson = new Teacher(id, name, pwd);\t\treturn;\t&#125;&#125;\n6.5 管理员登录实现在admin.txt文件中添加一条管理员信息，由于我们只有一条管理员，因此本案例中没有添加管理员的功能\n添加信息:\nadmin 123\n其中：admin代表管理员用户名，123代表管理员密码\n在Login函数的管理员分支中加入如下代码，验证管理员身份\n//管理员登录验证\t\tstring fName;\t\tstring fPwd;\t\twhile (ifs &gt;&gt; fName &amp;&amp; ifs &gt;&gt; fPwd)\t\t&#123;\t\t\tif (name == fName &amp;&amp; pwd == fPwd)\t\t\t&#123;\t\t\t\tcout &lt;&lt; &quot;验证登录成功!&quot; &lt;&lt; endl;\t\t\t\t//登录成功后，按任意键进入管理员界面\t\t\t\tsystem(&quot;pause&quot;);\t\t\t\tsystem(&quot;cls&quot;);\t\t\t\t//创建管理员对象\t\t\t\tperson = new Manager(name,pwd);\t\t\t\treturn;\t\t\t&#125;\t\t&#125;\n7、 管理员模块7.1 管理员登录和注销7.1.1 构造函数在Manager类的构造函数中，初始化管理员信息，代码如下：\n//有参构造Manager::Manager(string name, string pwd)&#123;\tthis-&gt;m_Name = name;\tthis-&gt;m_Pwd = pwd;&#125;\n7.1.2 管理员子菜单在机房预约系统.cpp中，当用户登录的是管理员，添加管理员菜单接口将不同的分支提供出来添加账号查看账号查看机房清空预约注销登录实现注销功能添加全局函数 void managerMenu(Identity * &amp;manager)，代码如下：\n//管理员菜单void managerMenu(Identity * &amp;manager)&#123;\twhile (true)\t&#123;\t\t//管理员菜单\t\tmanager-&gt;operMenu();\t\tManager* man = (Manager*)manager;\t\tint select = 0;\t\tcin &gt;&gt; select;        \t\tif (select == 1)  //添加账号\t\t&#123;\t\t\tcout &lt;&lt; &quot;添加账号&quot; &lt;&lt; endl;\t\t\tman-&gt;addPerson();\t\t&#125;\t\telse if (select == 2) //查看账号\t\t&#123;\t\t\tcout &lt;&lt; &quot;查看账号&quot; &lt;&lt; endl;\t\t\tman-&gt;showPerson(); \t\t&#125;\t\telse if (select == 3) //查看机房\t\t&#123;\t\t\tcout &lt;&lt; &quot;查看机房&quot; &lt;&lt; endl;\t\t\tman-&gt;showComputer();\t\t&#125;\t\telse if (select == 4) //清空预约\t\t&#123;\t\t\tcout &lt;&lt; &quot;清空预约&quot; &lt;&lt; endl;\t\t\tman-&gt;cleanFile();\t\t&#125;\t\telse\t\t&#123;\t\t\tdelete manager;\t\t\tcout &lt;&lt; &quot;注销成功&quot; &lt;&lt; endl;\t\t\tsystem(&quot;pause&quot;);\t\t\tsystem(&quot;cls&quot;);\t\t\treturn;\t\t&#125;\t&#125;&#125;\n7.1.3 菜单功能实现在实现成员函数void Manager::operMenu() 代码如下：\n//选择菜单void Manager::operMenu()&#123;\tcout &lt;&lt; &quot;欢迎管理员：&quot;&lt;&lt;this-&gt;m_Name &lt;&lt; &quot;登录！&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;\\t\\t ---------------------------------\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          1.添加账号            |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          2.查看账号            |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          3.查看机房            |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          4.清空预约            |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          0.注销登录            |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t ---------------------------------\\n&quot;;\tcout &lt;&lt; &quot;请选择您的操作： &quot; &lt;&lt; endl;&#125;\n7.1.4 接口对接管理员成功登录后，调用管理员子菜单界面在管理员登录验证分支中，添加代码：\n//进入管理员子菜单managerMenu(person);\n7.2 添加账号功能描述：\n给学生或教师添加新的账号功能要求：\n添加时学生学号不能重复、教师职工号不能重复7.2.1 添加功能实现在Manager的addPerson成员函数中，实现添加新账号功能，代码如下：\n//添加账号  void Manager::addPerson()&#123;\tcout &lt;&lt; &quot;请输入添加账号的类型&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、添加学生&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、添加老师&quot; &lt;&lt; endl;\tstring fileName;\tstring tip;\tofstream ofs;\tint select = 0;\tcin &gt;&gt; select;\tif (select == 1)\t&#123;\t\tfileName = STUDENT_FILE;\t\ttip = &quot;请输入学号： &quot;;\t&#125;\telse\t&#123;\t\tfileName = TEACHER_FILE;\t\ttip = &quot;请输入职工编号：&quot;;\t&#125;\tofs.open(fileName, ios::out | ios::app);\tint id;\tstring name;\tstring pwd;\tcout &lt;&lt;tip &lt;&lt; endl;\tcin &gt;&gt; id;\tcout &lt;&lt; &quot;请输入姓名： &quot; &lt;&lt; endl;\tcin &gt;&gt; name;\tcout &lt;&lt; &quot;请输入密码： &quot; &lt;&lt; endl;\tcin &gt;&gt; pwd;\tofs &lt;&lt; id &lt;&lt; &quot; &quot; &lt;&lt; name &lt;&lt; &quot; &quot; &lt;&lt; pwd &lt;&lt; &quot; &quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;添加成功&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);\tofs.close();&#125;\n7.2.2 去重操作功能描述：添加新账号时，如果是重复的学生编号，或是重复的教师职工编号，提示有误\n7.2.2.1 读取信息要去除重复的账号，首先要先将学生和教师的账号信息获取到程序中，方可检测在manager.h中，添加两个容器，用于存放学生和教师的信息添加一个新的成员函数 void initVector() 初始化容器\n//初始化容器void initVector();//学生容器vector&lt;Student&gt; vStu;//教师容器vector&lt;Teacher&gt; vTea;\n添加位置如图：class Manager :public Identity\n在Manager的有参构造函数中，获取目前的学生和教师信息\n代码如下：\nvoid Manager::initVector()&#123;\t//读取学生文件中信息\tifstream ifs;\tifs.open(STUDENT_FILE, ios::in);\tif (!ifs.is_open())\t&#123;\t\tcout &lt;&lt; &quot;文件读取失败&quot; &lt;&lt; endl;\t\treturn;\t&#125;    \tvStu.clear();     vTea.clear();    \tStudent s;\twhile (ifs &gt;&gt; s.m_Id &amp;&amp; ifs &gt;&gt; s.m_Name &amp;&amp;  ifs &gt;&gt; s.m_Pwd)\t&#123;\t\tvStu.push_back(s);\t&#125;\tcout &lt;&lt; &quot;当前学生数量为： &quot; &lt;&lt; vStu.size() &lt;&lt; endl;\tifs.close(); //学生初始化\t//读取老师文件信息\tifs.open(TEACHER_FILE, ios::in);\tTeacher t;\twhile (ifs &gt;&gt; t.m_EmpId &amp;&amp; ifs &gt;&gt; t.m_Name &amp;&amp;  ifs &gt;&gt; t.m_Pwd)\t&#123;\t\tvTea.push_back(t);\t&#125;\tcout &lt;&lt; &quot;当前教师数量为： &quot; &lt;&lt; vTea.size() &lt;&lt; endl;\tifs.close();&#125;\n在有参构造函数中，调用初始化容器函数\n//有参构造Manager::Manager(string name, string pwd)&#123;\tthis-&gt;m_Name = name;\tthis-&gt;m_Pwd = pwd;    \t//初始化容器\tthis-&gt;initVector();&#125;\n7.2.2.2 去重函数封装在manager.h文件中添加成员函数 bool checkRepeat(int id, int type);\n//检测重复 参数:(传入id，传入类型) 返回值：(true 代表有重复，false代表没有重复)bool checkRepeat(int id, int type);\n在manager.cpp文件中实现成员函数 bool checkRepeat(int id, int type);\nbool Manager::checkRepeat(int id, int type)&#123;\tif (type == 1)\t&#123;\t\tfor (vector&lt;Student&gt;::iterator it = vStu.begin(); it != vStu.end(); it++)\t\t&#123;\t\t\tif (id == it-&gt;m_Id)\t\t\t&#123;\t\t\t\treturn true;\t\t\t&#125;\t\t&#125;\t&#125;\telse\t&#123;\t\tfor (vector&lt;Teacher&gt;::iterator it = vTea.begin(); it != vTea.end(); it++)\t\t&#123;\t\t\tif (id == it-&gt;m_EmpId)\t\t\t&#123;\t\t\t\treturn true;\t\t\t&#125;\t\t&#125;\t&#125;\treturn false;&#125;\n7.2.2.3 添加去重操作在添加学生编号或者教师职工号时，检测是否有重复，代码如下：\nstring errorTip; //重复错误提示if (select == 1)&#123;\tfileName = STUDENT_FILE;\ttip = &quot;请输入学号： &quot;;\terrorTip = &quot;学号重复，请重新输入&quot;;&#125;else&#123;\tfileName = TEACHER_FILE;\ttip = &quot;请输入职工编号：&quot;;\terrorTip = &quot;职工号重复，请重新输入&quot;;&#125;ofs.open(fileName, ios::out | ios::app);int id;string name;string pwd;cout &lt;&lt;tip &lt;&lt; endl;while (true)&#123;\tcin &gt;&gt; id;\tbool ret = this-&gt;checkRepeat(id, 1);\tif (ret) //有重复\t&#123;\t\tcout &lt;&lt; errorTip &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tbreak;\t&#125;&#125;\n7.2.2.4 bug解决bug描述：\n虽然可以检测重复的账号，但是刚添加的账号由于没有更新到容器中，因此不会做检测导致刚加入的账号的学生号或者职工编号，再次添加时依然可以重复解决方案：\n在每次添加新账号时，重新初始化容器在添加完毕后，加入代码：manager.cpp中\n//初始化容器this-&gt;initVector();\n再次测试，刚加入的账号不会重复添加了！\n7.3 显示账号功能描述：显示学生信息或教师信息\n7.3.1 显示功能实现在Manager的showPerson成员函数中，实现显示账号功能，代码如下：\nvoid printStudent(Student &amp; s)&#123;\tcout &lt;&lt; &quot;学号： &quot; &lt;&lt; s.m_Id &lt;&lt; &quot; 姓名： &quot; &lt;&lt; s.m_Name &lt;&lt; &quot; 密码：&quot; &lt;&lt; s.m_Pwd &lt;&lt; endl;&#125;void printTeacher(Teacher &amp; t)&#123;\tcout &lt;&lt; &quot;职工号： &quot; &lt;&lt; t.m_EmpId &lt;&lt; &quot; 姓名： &quot; &lt;&lt; t.m_Name &lt;&lt; &quot; 密码：&quot; &lt;&lt; t.m_Pwd &lt;&lt; endl;&#125;void Manager::showPerson()&#123;\tcout &lt;&lt; &quot;请选择查看内容：&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、查看所有学生&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、查看所有老师&quot; &lt;&lt; endl;\tint select = 0;\tcin &gt;&gt; select;    \tif (select == 1)\t&#123;\t\tcout &lt;&lt; &quot;所有学生信息如下： &quot; &lt;&lt; endl;\t\tfor_each(vStu.begin(), vStu.end(), printStudent);\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;所有老师信息如下： &quot; &lt;&lt; endl;\t\tfor_each(vTea.begin(), vTea.end(), printTeacher);\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n7.4 查看机房7.4.1 添加机房信息案例需求中，机房一共有三个，其中1号机房容量20台机器，2号50台，3号100台\n我们可以将信息录入到computerRoom.txt中\n1 202 503 100\n7.4.2 机房类创建在头文件下，创建新的文件 computerRoom.h\n并添加如下代码：\n#pragma once#include&lt;iostream&gt;using namespace std;//机房类class ComputerRoom&#123;public:\tint m_ComId; //机房id号\tint m_MaxNum; //机房最大容量&#125;;\n7.4.3 初始化机房信息在Manager管理员类下，添加机房的容器,用于保存机房信息\n//机房容器vector&lt;ComputerRoom&gt; vCom;\n在Manager有参构造函数中，追加如下代码，初始化机房信息\n//获取机房信息ifstream ifs;ifs.open(COMPUTER_FILE, ios::in);ComputerRoom c;while (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum)&#123;\tvCom.push_back(c);&#125;cout &lt;&lt; &quot;当前机房数量为： &quot; &lt;&lt; vCom.size() &lt;&lt; endl;ifs.close();\n因为机房信息目前版本不会有所改动，如果后期有修改功能，最好封装到一个函数中，方便维护\n7.4.4 显示机房信息在Manager类的showComputer成员函数中添加如下代码：\n//查看机房信息void Manager::showComputer()&#123;\tcout &lt;&lt; &quot;机房信息如下： &quot; &lt;&lt; endl;\tfor (vector&lt;ComputerRoom&gt;::iterator it = vCom.begin(); it != vCom.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;机房编号： &quot; &lt;&lt; it-&gt;m_ComId &lt;&lt; &quot; 机房最大容量： &quot; &lt;&lt; it-&gt;m_MaxNum &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n7.5 清空预约功能描述：\n清空生成的order.txt预约文件\n7.5.1 清空功能实现在Manager的cleanFile成员函数中添加如下代码：\n//清空预约记录void Manager::cleanFile()&#123;\tofstream ofs(ORDER_FILE, ios::trunc);\tofs.close();\tcout &lt;&lt; &quot;清空成功！&quot; &lt;&lt; endl;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n测试清空，可以随意写入一些信息在order.txt中，然后调用cleanFile清空文件接口，查看是否清空干净\n8、 学生模块8.1 学生登录和注销8.1.1 构造函数在Student类的构造函数中，初始化学生信息，代码如下：\n//有参构造(学号、姓名、密码)Student::Student(int id, string name, string pwd)&#123;\t//初始化属性\tthis-&gt;m_Id = id;\tthis-&gt;m_Name = name;\tthis-&gt;m_Pwd = pwd;&#125;\n8.1.2 管理员子菜单在机房预约系统.cpp中，当用户登录的是学生，添加学生菜单接口将不同的分支提供出来\n\n申请预约\n查看我的预约\n查看所有预约\n取消预约\n注销登录实现注销功能添加全局函数 void studentMenu(Identity * &amp;manager) 代码如下：\n\n//学生菜单void studentMenu(Identity * &amp;student)&#123;\twhile (true)\t&#123;\t\t//学生菜单\t\tstudent-&gt;operMenu();\t\tStudent* stu = (Student*)student;\t\tint select = 0;\t\tcin &gt;&gt; select;\t\tif (select == 1) //申请预约\t\t&#123;\t\t\tstu-&gt;applyOrder();\t\t&#125;\t\telse if (select == 2) //查看自身预约\t\t&#123;\t\t\tstu-&gt;showMyOrder();\t\t&#125;\t\telse if (select == 3) //查看所有预约\t\t&#123;\t\t\tstu-&gt;showAllOrder();\t\t&#125;\t\telse if (select == 4) //取消预约\t\t&#123;\t\t\tstu-&gt;cancelOrder();\t\t&#125;\t\telse\t\t&#123;\t\t\tdelete student;\t\t\tcout &lt;&lt; &quot;注销成功&quot; &lt;&lt; endl;\t\t\tsystem(&quot;pause&quot;);\t\t\tsystem(&quot;cls&quot;);\t\t\treturn;\t\t&#125;\t&#125;&#125;\n8.1.3 菜单功能实现在实现成员函数void Student::operMenu() 代码如下：\n//菜单界面void Student::operMenu()&#123;\tcout &lt;&lt; &quot;欢迎学生代表：&quot; &lt;&lt; this-&gt;m_Name &lt;&lt; &quot;登录！&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;\\t\\t ----------------------------------\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          1.申请预约              |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          2.查看我的预约          |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          3.查看所有预约          |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          4.取消预约              |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          0.注销登录              |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                 |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t ----------------------------------\\n&quot;;\tcout &lt;&lt; &quot;请选择您的操作： &quot; &lt;&lt; endl;&#125;\n8.1.4 接口对接学生成功登录后，调用学生的子菜单界面在学生登录分支中，添加代码：\n//进入学生子菜单studentMenu(person);\n8.2 申请预约8.2.1 获取机房信息在申请预约时，学生可以看到机房的信息，因此我们需要让学生获取到机房的信息在student.h中添加新的成员函数如下：\n//机房容器vector&lt;ComputerRoom&gt; vCom;\n在学生的有参构造函数中追加如下代码：\n//获取机房信息ifstream ifs;ifs.open(COMPUTER_FILE, ios::in);ComputerRoom c;while (ifs &gt;&gt; c.m_ComId &amp;&amp; ifs &gt;&gt; c.m_MaxNum)&#123;\tvCom.push_back(c);&#125;ifs.close();\n追加位置如图：\n至此，vCom容器中保存了所有机房的信息\n8.2.2 预约功能实现在student.cpp中实现成员函数 void Student::applyOrder()\n//申请预约void Student::applyOrder()&#123;\tcout &lt;&lt; &quot;机房开放时间为周一至周五！&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;请输入申请预约的时间：&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、周一&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、周二&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;3、周三&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;4、周四&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;5、周五&quot; &lt;&lt; endl;\tint date = 0;\tint interval = 0;\tint room = 0;\twhile (true)\t&#123;\t\tcin &gt;&gt; date;\t\tif (date &gt;= 1 &amp;&amp; date &lt;= 5)\t\t&#123;\t\t\tbreak;\t\t&#125;\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;请输入申请预约的时间段：&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1、上午&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;2、下午&quot; &lt;&lt; endl;\twhile (true)\t&#123;\t\tcin &gt;&gt; interval;\t\tif (interval &gt;= 1 &amp;&amp; interval &lt;= 2)\t\t&#123;\t\t\tbreak;\t\t&#125;\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;请选择机房：&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;1号机房容量：&quot; &lt;&lt; vCom[0].m_MaxNum &lt;&lt; endl;\tcout &lt;&lt; &quot;2号机房容量：&quot; &lt;&lt; vCom[1].m_MaxNum &lt;&lt; endl;\tcout &lt;&lt; &quot;3号机房容量：&quot; &lt;&lt; vCom[2].m_MaxNum &lt;&lt; endl;\twhile (true)\t&#123;\t\tcin &gt;&gt; room;\t\tif (room &gt;= 1 &amp;&amp; room &lt;= 3)\t\t&#123;\t\t\tbreak;\t\t&#125;\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;预约成功！审核中&quot; &lt;&lt; endl;\tofstream ofs(ORDER_FILE, ios::app);\tofs &lt;&lt; &quot;date:&quot; &lt;&lt; date &lt;&lt; &quot; &quot;;\tofs &lt;&lt; &quot;interval:&quot; &lt;&lt; interval &lt;&lt; &quot; &quot;;\tofs &lt;&lt; &quot;stuId:&quot; &lt;&lt; this-&gt;m_Id &lt;&lt; &quot; &quot;;\tofs &lt;&lt; &quot;stuName:&quot; &lt;&lt; this-&gt;m_Name &lt;&lt; &quot; &quot;;\tofs &lt;&lt; &quot;roomId:&quot; &lt;&lt; room &lt;&lt; &quot; &quot;;\tofs &lt;&lt; &quot;status:&quot; &lt;&lt; 1 &lt;&lt; endl;\tofs.close();\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n运行程序，测试代码:\n测试代码.png\n在order.txt文件中生成如下内容：生成.png\n8.3 显示预约8.3.1 创建预约类功能描述：显示预约记录时，需要从文件中获取到所有记录，用来显示，创建预约的类来管理记录以及更新\n在头文件以及源文件下分别创建orderFile.h 和 orderFile.cpp文件\norderFile.h中添加如下代码：\n#pragma once#include&lt;iostream&gt;using namespace std;#include &lt;map&gt;#include &quot;globalFile.h&quot;class OrderFile&#123;public:\t//构造函数\tOrderFile();\t//更新预约记录\tvoid updateOrder();\t//记录的容器  key --- 记录的条数  value --- 具体记录的键值对信息\tmap&lt;int, map&lt;string, string&gt;&gt; m_orderData;\t//预约记录条数\tint m_Size;&#125;;\n构造函数中获取所有信息，并存放在容器中，添加如下代码：\nOrderFile::OrderFile()&#123;\tifstream ifs;\tifs.open(ORDER_FILE, ios::in);\tstring date;      //日期\tstring interval;  //时间段\tstring stuId;     //学生编号\tstring stuName;   //学生姓名\tstring roomId;    //机房编号\tstring status;    //预约状态\tthis-&gt;m_Size = 0; //预约记录个数\twhile (ifs &gt;&gt; date &amp;&amp; ifs &gt;&gt; interval &amp;&amp; ifs &gt;&gt; stuId &amp;&amp; ifs &gt;&gt; stuName &amp;&amp; ifs &gt;&gt; roomId &amp;&amp;  ifs &gt;&gt; status)\t&#123;\t\t//测试代码\t\t/*\t\tcout &lt;&lt; date &lt;&lt; endl;\t\tcout &lt;&lt; interval &lt;&lt; endl;\t\tcout &lt;&lt; stuId &lt;&lt; endl;\t\tcout &lt;&lt; stuName &lt;&lt; endl;\t\tcout &lt;&lt; roomId &lt;&lt; endl;\t\tcout &lt;&lt; status &lt;&lt; endl;\t\t*/\t\tstring key;\t\tstring value;\t\tmap&lt;string, string&gt; m;\t\tint pos = date.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = date.substr(0, pos);\t\t\tvalue = date.substr(pos + 1, date.size() - pos -1);\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tpos = interval.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = interval.substr(0, pos);\t\t\tvalue = interval.substr(pos + 1, interval.size() - pos -1 );\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tpos = stuId.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = stuId.substr(0, pos);\t\t\tvalue = stuId.substr(pos + 1, stuId.size() - pos -1 );\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tpos = stuName.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = stuName.substr(0, pos);\t\t\tvalue = stuName.substr(pos + 1, stuName.size() - pos -1);\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tpos = roomId.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = roomId.substr(0, pos);\t\t\tvalue = roomId.substr(pos + 1, roomId.size() - pos -1 );\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tpos = status.find(&quot;:&quot;);\t\tif (pos != -1)\t\t&#123;\t\t\tkey = status.substr(0, pos);\t\t\tvalue = status.substr(pos + 1, status.size() - pos -1);\t\t\tm.insert(make_pair(key, value));\t\t&#125;\t\tthis-&gt;m_orderData.insert(make_pair(this-&gt;m_Size, m));\t\tthis-&gt;m_Size++;\t&#125;\t//测试代码\t//for (map&lt;int, map&lt;string, string&gt;&gt;::iterator it = m_orderData.begin(); it != m_orderData.end();it++)\t//&#123;\t//\tcout &lt;&lt; &quot;key = &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; endl;\t//\tfor (map&lt;string, string&gt;::iterator mit = it-&gt;second.begin(); mit != it-&gt;second.end(); mit++)\t//\t&#123;\t//\t\tcout &lt;&lt; mit-&gt;first &lt;&lt; &quot; &quot; &lt;&lt; mit-&gt;second &lt;&lt; &quot; &quot;;\t//\t&#125;\t//\tcout &lt;&lt; endl;\t//&#125;        ifs.close();&#125;\n更新预约记录的成员函数updateOrder代码如下：\nvoid OrderFile::updateOrder()&#123;\tif (this-&gt;m_Size == 0)\t&#123;\t\treturn;\t&#125;\tofstream ofs(ORDER_FILE, ios::out | ios::trunc);\tfor (int i = 0; i &lt; m_Size;i++)\t&#123;\t\tofs &lt;&lt; &quot;date:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;date&quot;] &lt;&lt; &quot; &quot;;\t\tofs &lt;&lt; &quot;interval:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;interval&quot;] &lt;&lt; &quot; &quot;;\t\tofs &lt;&lt; &quot;stuId:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;stuId&quot;] &lt;&lt; &quot; &quot;;\t\tofs &lt;&lt; &quot;stuName:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;stuName&quot;] &lt;&lt; &quot; &quot;;\t\tofs &lt;&lt; &quot;roomId:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;roomId&quot;] &lt;&lt; &quot; &quot;;\t\tofs &lt;&lt; &quot;status:&quot; &lt;&lt; this-&gt;m_orderData[i][&quot;status&quot;] &lt;&lt; endl;\t&#125;    ofs.close();&#125;\n8.3.2 显示自身预约首先我们先添加几条预约记录，可以用程序添加或者直接修改order.txt文件\norder.txt文件内容如下： 比如我们有三名同学分别产生了3条预约记录\n记录.png\n在Student类的void Student::showMyOrder()成员函数中，添加如下代码\n//查看我的预约void Student::showMyOrder()&#123;\tOrderFile of;\tif (of.m_Size == 0)\t&#123;\t\tcout &lt;&lt; &quot;无预约记录&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\treturn;\t&#125;\tfor (int i = 0; i &lt; of.m_Size; i++)\t&#123;\t\tif (atoi(of.m_orderData[i][&quot;stuId&quot;].c_str()) == this-&gt;m_Id)\t\t&#123;\t\t\tcout &lt;&lt; &quot;预约日期： 周&quot; &lt;&lt; of.m_orderData[i][&quot;date&quot;];\t\t\tcout &lt;&lt; &quot; 时段：&quot; &lt;&lt; (of.m_orderData[i][&quot;interval&quot;] == &quot;1&quot; ? &quot;上午&quot; : &quot;下午&quot;);\t\t\tcout &lt;&lt; &quot; 机房：&quot; &lt;&lt; of.m_orderData[i][&quot;roomId&quot;];\t\t\tstring status = &quot; 状态： &quot;;  // 0 取消的预约   1 审核中   2 已预约 -1 预约失败\t\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t\t&#123;\t\t\t\tstatus += &quot;审核中&quot;;\t\t\t&#125;\t\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;2&quot;)\t\t\t&#123;\t\t\t\tstatus += &quot;预约成功&quot;;\t\t\t&#125;\t\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;-1&quot;)\t\t\t&#123;\t\t\t\tstatus += &quot;审核未通过，预约失败&quot;;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tstatus += &quot;预约已取消&quot;;\t\t\t&#125;\t\t\tcout &lt;&lt; status &lt;&lt; endl;\t\t&#125;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n8.3.3 显示所有预约在Student类的void Student::showAllOrder()成员函数中，添加如下代码\n//查看所有预约void Student::showAllOrder()&#123;\tOrderFile of;\tif (of.m_Size == 0)\t&#123;\t\tcout &lt;&lt; &quot;无预约记录&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\treturn;\t&#125;\tfor (int i = 0; i &lt; of.m_Size; i++)\t&#123;\t\tcout &lt;&lt; i + 1 &lt;&lt; &quot;、 &quot;;\t\tcout &lt;&lt; &quot;预约日期： 周&quot; &lt;&lt; of.m_orderData[i][&quot;date&quot;];\t\tcout &lt;&lt; &quot; 时段：&quot; &lt;&lt; (of.m_orderData[i][&quot;interval&quot;] == &quot;1&quot; ? &quot;上午&quot; : &quot;下午&quot;);\t\tcout &lt;&lt; &quot; 学号：&quot; &lt;&lt; of.m_orderData[i][&quot;stuId&quot;];\t\tcout &lt;&lt; &quot; 姓名：&quot; &lt;&lt; of.m_orderData[i][&quot;stuName&quot;];\t\tcout &lt;&lt; &quot; 机房：&quot; &lt;&lt; of.m_orderData[i][&quot;roomId&quot;];\t\tstring status = &quot; 状态： &quot;;  // 0 取消的预约   1 审核中   2 已预约 -1 预约失败\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t&#123;\t\t\tstatus += &quot;审核中&quot;;\t\t&#125;\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;2&quot;)\t\t&#123;\t\t\tstatus += &quot;预约成功&quot;;\t\t&#125;\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;-1&quot;)\t\t&#123;\t\t\tstatus += &quot;审核未通过，预约失败&quot;;\t\t&#125;\t\telse\t\t&#123;\t\t\tstatus += &quot;预约已取消&quot;;\t\t&#125;\t\tcout &lt;&lt; status &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n8.4 取消预约在Student类的void Student::cancelOrder()成员函数中，添加如下代码\n//取消预约void Student::cancelOrder()&#123;\tOrderFile of;\tif (of.m_Size == 0)\t&#123;\t\tcout &lt;&lt; &quot;无预约记录&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\treturn;\t&#125;\tcout &lt;&lt; &quot;审核中或预约成功的记录可以取消，请输入取消的记录&quot; &lt;&lt; endl;\tvector&lt;int&gt;v;\tint index = 1;\tfor (int i = 0; i &lt; of.m_Size; i++)\t&#123;\t\tif (atoi(of.m_orderData[i][&quot;stuId&quot;].c_str()) == this-&gt;m_Id)\t\t&#123;\t\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot; || of.m_orderData[i][&quot;status&quot;] == &quot;2&quot;)\t\t\t&#123;\t\t\t\tv.push_back(i);\t\t\t\tcout &lt;&lt;  index ++  &lt;&lt; &quot;、 &quot;;\t\t\t\tcout &lt;&lt; &quot;预约日期： 周&quot; &lt;&lt; of.m_orderData[i][&quot;date&quot;];\t\t\t\tcout &lt;&lt; &quot; 时段：&quot; &lt;&lt; (of.m_orderData[i][&quot;interval&quot;] == &quot;1&quot; ? &quot;上午&quot; : &quot;下午&quot;);\t\t\t\tcout &lt;&lt; &quot; 机房：&quot; &lt;&lt; of.m_orderData[i][&quot;roomId&quot;];\t\t\t\tstring status = &quot; 状态： &quot;;  // 0 取消的预约   1 审核中   2 已预约  -1 预约失败\t\t\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t\t\t&#123;\t\t\t\t\tstatus += &quot;审核中&quot;;\t\t\t\t&#125;\t\t\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;2&quot;)\t\t\t\t&#123;\t\t\t\t\tstatus += &quot;预约成功&quot;;\t\t\t\t&#125;\t\t\t\tcout &lt;&lt; status &lt;&lt; endl;\t\t\t&#125;\t\t&#125;\t&#125;\tcout &lt;&lt; &quot;请输入取消的记录,0代表返回&quot; &lt;&lt; endl;\tint select = 0;\twhile (true)\t&#123;\t\tcin &gt;&gt; select;\t\tif (select &gt;= 0 &amp;&amp; select &lt;= v.size())\t\t&#123;\t\t\tif (select == 0)\t\t\t&#123;\t\t\t\tbreak;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\t//\tcout &lt;&lt; &quot;记录所在位置： &quot; &lt;&lt; v[select - 1] &lt;&lt; endl;\t\t\t\tof.m_orderData[v[select - 1]][&quot;status&quot;] = &quot;0&quot;;\t\t\t\tof.updateOrder();\t\t\t\tcout &lt;&lt; &quot;已取消预约&quot; &lt;&lt; endl;\t\t\t\tbreak;\t\t\t&#125;\t\t&#125;\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n至此，学生模块功能全部实现\n9、 教师模块9.1 教师登录和注销9.1.1 构造函数在Teacher类的构造函数中，初始化教师信息，代码如下：\n//有参构造 (职工编号，姓名，密码)Teacher::Teacher(int empId, string name, string pwd)&#123;\t//初始化属性\tthis-&gt;m_EmpId = empId;\tthis-&gt;m_Name = name;\tthis-&gt;m_Pwd = pwd;&#125;\n9.1.2 教师子菜单在机房预约系统.cpp中，当用户登录的是教师，添加教师菜单接口将不同的分支提供出来\n\n查看所有预约\n审核预约\n注销登录实现注销功能添加全局函数 void TeacherMenu(Person * &amp;manager) 代码如下：\n\n//教师菜单void TeacherMenu(Identity * &amp;teacher)&#123;\twhile (true)\t&#123;\t\t//教师菜单\t\tteacher-&gt;operMenu();\t\tTeacher* tea = (Teacher*)teacher;\t\tint select = 0;\t\tcin &gt;&gt; select;\t\tif (select == 1)\t\t&#123;\t\t\t//查看所有预约\t\t\ttea-&gt;showAllOrder();\t\t&#125;\t\telse if (select == 2)\t\t&#123;\t\t\t//审核预约\t\t\ttea-&gt;validOrder();\t\t&#125;\t\telse\t\t&#123;\t\t\tdelete teacher;\t\t\tcout &lt;&lt; &quot;注销成功&quot; &lt;&lt; endl;\t\t\tsystem(&quot;pause&quot;);\t\t\tsystem(&quot;cls&quot;);\t\t\treturn;\t\t&#125;\t&#125;&#125;\n9.1.3 菜单功能实现在实现成员函数void Teacher::operMenu() 代码如下：\n//教师菜单界面void Teacher::operMenu()&#123;\tcout &lt;&lt; &quot;欢迎教师：&quot; &lt;&lt; this-&gt;m_Name &lt;&lt; &quot;登录！&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;\\t\\t ----------------------------------\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                  |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          1.查看所有预约          |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                  |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          2.审核预约              |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                  |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|          0.注销登录              |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t|                                  |\\n&quot;;\tcout &lt;&lt; &quot;\\t\\t ----------------------------------\\n&quot;;\tcout &lt;&lt; &quot;请选择您的操作： &quot; &lt;&lt; endl;&#125;\n9.1.4 接口对接教师成功登录后，调用教师的子菜单界面在教师登录分支中，添加代码：\n//进入教师子菜单TeacherMenu(person);\n9.2 查看所有预约9.2.1 所有预约功能实现该功能与学生身份的查看所有预约功能相似，用于显示所有预约记录\n在Teacher.cpp中实现成员函数 void Teacher::showAllOrder()\nvoid Teacher::showAllOrder()&#123;\tOrderFile of;\tif (of.m_Size == 0)\t&#123;\t\tcout &lt;&lt; &quot;无预约记录&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\treturn;\t&#125;\tfor (int i = 0; i &lt; of.m_Size; i++)\t&#123;\t\tcout &lt;&lt; i + 1 &lt;&lt; &quot;、 &quot;;\t\tcout &lt;&lt; &quot;预约日期： 周&quot; &lt;&lt; of.m_orderData[i][&quot;date&quot;];\t\tcout &lt;&lt; &quot; 时段：&quot; &lt;&lt; (of.m_orderData[i][&quot;interval&quot;] == &quot;1&quot; ? &quot;上午&quot; : &quot;下午&quot;);\t\tcout &lt;&lt; &quot; 学号：&quot; &lt;&lt; of.m_orderData[i][&quot;stuId&quot;];\t\tcout &lt;&lt; &quot; 姓名：&quot; &lt;&lt; of.m_orderData[i][&quot;stuName&quot;];\t\tcout &lt;&lt; &quot; 机房：&quot; &lt;&lt; of.m_orderData[i][&quot;roomId&quot;];\t\tstring status = &quot; 状态： &quot;;  // 0 取消的预约   1 审核中   2 已预约 -1 预约失败\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t&#123;\t\t\tstatus += &quot;审核中&quot;;\t\t&#125;\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;2&quot;)\t\t&#123;\t\t\tstatus += &quot;预约成功&quot;;\t\t&#125;\t\telse if (of.m_orderData[i][&quot;status&quot;] == &quot;-1&quot;)\t\t&#123;\t\t\tstatus += &quot;审核未通过，预约失败&quot;;\t\t&#125;\t\telse\t\t&#123;\t\t\tstatus += &quot;预约已取消&quot;;\t\t&#125;\t\tcout &lt;&lt; status &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n9.3 审核预约9.3.1 审核功能实现功能描述：教师审核学生的预约，依据实际情况审核预约\n在Teacher.cpp中实现成员函数 void Teacher::validOrder()\n代码如下：\n//审核预约void Teacher::validOrder()&#123;\tOrderFile of;\tif (of.m_Size == 0)\t&#123;\t\tcout &lt;&lt; &quot;无预约记录&quot; &lt;&lt; endl;\t\tsystem(&quot;pause&quot;);\t\tsystem(&quot;cls&quot;);\t\treturn;\t&#125;\tcout &lt;&lt; &quot;待审核的预约记录如下：&quot; &lt;&lt; endl;\tvector&lt;int&gt;v;\tint index = 0;\tfor (int i = 0; i &lt; of.m_Size; i++)\t&#123;\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t&#123;\t\t\tv.push_back(i);\t\t\tcout &lt;&lt; ++index &lt;&lt; &quot;、 &quot;;\t\t\tcout &lt;&lt; &quot;预约日期： 周&quot; &lt;&lt; of.m_orderData[i][&quot;date&quot;];\t\t\tcout &lt;&lt; &quot; 时段：&quot; &lt;&lt; (of.m_orderData[i][&quot;interval&quot;] == &quot;1&quot; ? &quot;上午&quot; : &quot;下午&quot;);\t\t\tcout &lt;&lt; &quot; 机房：&quot; &lt;&lt; of.m_orderData[i][&quot;roomId&quot;];\t\t\tstring status = &quot; 状态： &quot;;  // 0取消的预约   1 审核中   2 已预约  -1 预约失败\t\t\tif (of.m_orderData[i][&quot;status&quot;] == &quot;1&quot;)\t\t\t&#123;\t\t\t\tstatus += &quot;审核中&quot;;\t\t\t&#125;\t\t\tcout &lt;&lt; status &lt;&lt; endl;\t\t&#125;\t&#125;\tcout &lt;&lt; &quot;请输入审核的预约记录,0代表返回&quot; &lt;&lt; endl;\tint select = 0;\tint ret = 0;\twhile (true)\t&#123;\t\tcin &gt;&gt; select;\t\tif (select &gt;= 0 &amp;&amp; select &lt;= v.size())\t\t&#123;\t\t\tif (select == 0)\t\t\t&#123;\t\t\t\tbreak;\t\t\t&#125;\t\t\telse\t\t\t&#123;\t\t\t\tcout &lt;&lt; &quot;请输入审核结果&quot; &lt;&lt; endl;\t\t\t\tcout &lt;&lt; &quot;1、通过&quot; &lt;&lt; endl;\t\t\t\tcout &lt;&lt; &quot;2、不通过&quot; &lt;&lt; endl;\t\t\t\tcin &gt;&gt; ret;\t\t\t\tif (ret == 1)\t\t\t\t&#123;\t\t\t\t\tof.m_orderData[v[select - 1]][&quot;status&quot;] = &quot;2&quot;;\t\t\t\t&#125;\t\t\t\telse\t\t\t\t&#123;\t\t\t\t\tof.m_orderData[v[select - 1]][&quot;status&quot;] = &quot;-1&quot;;\t\t\t\t&#125;\t\t\t\tof.updateOrder();\t\t\t\tcout &lt;&lt; &quot;审核完毕！&quot; &lt;&lt; endl;\t\t\t\tbreak;\t\t\t&#125;\t\t&#125;\t\tcout &lt;&lt; &quot;输入有误，请重新输入&quot; &lt;&lt; endl;\t&#125;\tsystem(&quot;pause&quot;);\tsystem(&quot;cls&quot;);&#125;\n至此本案例制作完毕！\n\nDemo Source\n\n0x05 References\nC++ 匠心之作\n\n0x06 Postscript","categories":["Programming"]},{"title":"C++ 学习笔记之基础篇","url":"/2022/01/04/code_cpp_basis/","content":"0x00 Preface这个假期打算入门 C++，为后期刷 leetcode 做准备，此笔记主要整理不同于 C 的地方，补充之前没写到的细节，尤其是面向对象部分，面向有 C 基础人群~\n0x01 Main\n注：C++ 在创建变量时，必须给变量一个初始值，否则会报错\n\n关键字\n\n\nasm\ndo\nif\nreturn\ntypedef\n\n\n\nauto\ndouble\ninline\nshort\ntypeid\n\n\nbool\ndynamic_cast\nint\nsigned\ntypename\n\n\nbreak\nelse\nlong\nsizeof\nunion\n\n\ncase\nenum\nmutable\nstatic\nunsigned\n\n\ncatch\nexplicit\nnamespace\nstatic_cast\nusing\n\n\nchar\nexport\nnew\nstruct\nvirtual\n\n\nclass\nextern\noperator\nswitch\nvoid\n\n\nconst\nfalse\nprivate\ntemplate\nvolatile\n\n\nconst_cast\nfloat\nprotected\nthis\nwchar_t\n\n\ncontinue\nfor\npublic\nthrow\nwhile\n\n\ndefault\nfriend\nregister\ntrue\n\n\n\ndelete\ngoto\nreinterpret_cast\ntry\n\n\n\n\n字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元。\n\n转义字符\n\n\n转义字符\n含义\nASCII 码值（十进制）\n\n\n\n\\a\n警报\n007\n\n\n\\b\n退格(BS) ，将当前位置移到前一列\n008\n\n\n\\f\n换页(FF)，将当前位置移到下页开头\n012\n\n\n\\n\n换行(LF) ，将当前位置移到下一行开头\n010\n\n\n\\r\n回车(CR) ，将当前位置移到本行开头\n013\n\n\n\\t\n水平制表(HT)  （跳到下一个TAB位置）\n009\n\n\n\\v\n垂直制表(VT)\n011\n\n\n*\\\\*\n代表一个反斜线字符\n092\n\n\n&#39;\n代表一个单引号字符\n039\n\n\n&quot;\n代表一个双引号字符\n034\n\n\n?\n代表一个问号\n063\n\n\n\\0\n数字 0\n000\n\n\n\\ddd\n8进制转义字符，d 范围 0~7\n3位8进制\n\n\n\\xhh\n16进制转义字符，h 范围 09，af，A~F\n3位16进制\n\n\n\n字符串型 string 变量名 = &quot;字符串值&quot;\n\n\n注：需加入 #include &lt;string&gt;\n\n输入：cin &gt;&gt; 变量名输出：cout &lt;&lt; 变量名\n\n只有整型变量可以进行取模运算\n\nswitch 语句中表达式类型只能是整型或者字符型\n\n\n\n\n值传递时，形参是修饰不了实参的；地址/指针传递可改变\n\n在头文件中写函数声明，在源文件中写函数定义\n\n\n指针\n空指针：指针变量指向内存中编号为 0 的空间（内存编号 0 ~255 为系统占用内存，不允许用户访问）\n\n野指针：指针变量指向非法的内存空间\n\nconst 修饰指针 — 常量指针 //指针指向可以改，指针指向的值不可以更改const 修饰常量 — 指针常量 //指针指向不可以改，指针指向的值可以更改\n\n\n\n看 const 右侧紧跟着的是指针还是常量, 是指针就是常量指针，是常量就是指针常量\n\n内存分区模型C++ 程序在执行时，内存分为：\n\n程序运行前：\n代码区：存放函数体的二进制代码，由操作系统进行管理的，特点是共享和只读\n全局区：存放全局变量、静态变量、常量\n常量区：存放全局常量、字符串常量\n\n\n\n\n程序运行后：\n栈区：由编译器自动分配释放，存放函数的参数值、局部变量、局部常量\n注：不要返回局部变量的地址\n\n\n堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收\n\n\n\n利用 new 在堆区开辟内存，new 创建的数据，会返回该数据类型的指针；利用 delete 释放\nint* a = new int(10);delete a;int* arr = new int[10];delete[] arr;\n引用数据类型 &amp;别名 = 原名\n\n引用必须初始化，且初始化后，不可以改变\n\n函数传参时，可以利用引用让形参修饰实参，简化指针修改实参\n\n\n//1. 值传递void mySwap01(int a, int b) &#123;\tint temp = a;\ta = b;\tb = temp;&#125;//2. 地址传递void mySwap02(int* a, int* b) &#123;\tint temp = *a;\t*a = *b;\t*b = temp;&#125;//3. 引用传递void mySwap03(int&amp; a, int&amp; b) &#123;\tint temp = a;\ta = b;\tb = temp;&#125;\n\n如果函数做左值，那么必须返回引用\n\n//返回静态变量引用int&amp; test() &#123;\tstatic int a = 20;\treturn a;&#125;test() = 1000;\n\n引用的本质在 C++ 内部实现是一个指针常量int&amp; ref = a; = int* const ref = &amp;a\n\n常量引用用来修饰形参，防止形参改变实参void showValue(const int&amp; v)\n\n\n//int&amp; ref = 10;  引用本身需要一个合法的内存空间，因此这行错误//加入const就可以了，编译器优化代码，int temp = 10; const int&amp; ref = temp;const int&amp; ref = 10;\n函数提高//如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值int func(int a, int b = 10, int c = 10) &#123;\treturn a + b + c;&#125;//如果函数声明有默认值，函数实现的时候就不能有默认参数int func2(int a = 10, int b = 10);int func2(int a, int b) &#123;\treturn a + b;&#125;\n//函数占位参数，调用函数时必须填补void func(int a, int) &#123;&#125;\n函数重载满足条件：\n\n同一个作用域下\n函数名称相同\n函数参数类型不同 或 个数不同 或 顺序不同\n\n\n函数的返回值不可以作为函数重载的条件引用可以作为重载条件函数重载碰到函数默认参数，产生歧义，需要避免\n\n类和对象C++ 面向对象的三大特性：封装、继承、多态\n对象上有其属性和行为，具有相同性质的对象，可以抽象称为类\n封装\n类在设计时，属性和行为写在一起，表现事物class 类名&#123; 访问权限： 属性 / 行为 &#125;;\n\n类在设计时，可以把属性和行为放在不同权限下加以控制\n\n\n访问权限：\n\npublic 公共权限\n\nprotected 保护权限\n\nprivate 私有权限\n\nstruct 默认权限为公共\n\nclass 默认权限为私有\n\n\n对象的初始化和清理编译器提供的构造函数和析构函数是空实现。\n\n构造函数：创建对象时为对象的成员属性赋值，构造函数由编译器自动调用\n析构函数：对象销毁前系统自动调用，执行一些清理工作\n\n构造函数语法：类名()&#123;&#125;\n析构函数语法：~类名()&#123;&#125;\n\n构造 / 析构函数，没有返回值也不写 void\n函数名称与类名相同\n构造 / 析构函数可以 / 不可以有参数，因此可以 / 不可以发生重载\n程序在 调用对象时 / 对象销毁前 会自动调用构造 / 析构，无须手动调用，而且只会调用一次\n\n​按参数分为：有参 / 无参构造（默认构造函数）​按类型分为：普通 / 拷贝构造\n调用方式：括号法 Person p1(10);、​显示法 Person p2 = Person(10); 、​隐式转换法 Person p3 = 10;\n\n注：调用无参构造函数不能加括号，如果加了编译器认为这是一个函数声明Person(10) 单独写就是匿名对象，当前行结束之后，马上析构Person p4(p3); 不能利用 拷贝构造函数 初始化匿名对象，编译器认为是对象声明\n\n//拷贝构造函数Person(const Person&amp; p) &#123;\tage = p.age;&#125;\n拷贝构造函数调用时机通常有三种情况：\n\n使用一个已经创建完毕的对象来初始化一个新对象\nvoid test01() &#123;\tPerson man(100); //p对象已经创建完毕\tPerson newman(man); //调用拷贝构造函数\tPerson newman2 = man; //拷贝构造&#125;\n值传递的方式给函数参数传值\n//相当于 Person p1 = p;void doWork(Person p1) &#123;&#125;void test02() &#123;\tPerson p; //无参构造函数\tdoWork(p);&#125;\n以值方式返回局部对象\nPerson doWork2() &#123;\tPerson p1;\tcout &lt;&lt; (int *)&amp;p1 &lt;&lt; endl;\treturn p1;&#125;void test03() &#123;\tPerson p = doWork2();\tcout &lt;&lt; (int *)&amp;p &lt;&lt; endl;&#125;\n默认情况下，C++ 编译器至少给一个类添加 3 个函数\n\n默认构造函数(无参，函数体为空)\n\n默认析构函数(无参，函数体为空)\n\n默认拷贝构造函数，对属性进行值拷贝\n\n\n构造函数调用规则如下：\n\n如果用户定义有参构造函数，C++ 不再提供默认无参构造，但是会提供默认拷贝构造\n如果用户定义拷贝构造函数，C++ 不再提供其他构造函数\n\n深浅拷贝是面试经典问题，也是常见的一个坑\n\n浅拷贝：简单的赋值拷贝操作\n深拷贝：在堆区重新申请空间，进行拷贝操作\n\nPerson(const Person&amp; p) &#123;\tm_height = new int(*p.m_height);&#125;\n\n如果不利用深拷贝在堆区创建新内存，会导致浅拷贝带来的重复释放堆区问题如果属性有在堆区开辟的，一定要自己提供拷贝构造函数，防止浅拷贝带来的问题\n\nC++ 提供了初始化列表语法，用来初始化属性\n构造函数()：属性1(值1),属性2（值2）... &#123;&#125;\n//传统方式初始化Person(int a, int b, int c) &#123;\tm_A = a;\tm_B = b;\tm_C = c;&#125;//初始化列表方式初始化Person(int a, int b, int c) :m_A(a), m_B(b), m_C(c) &#123;&#125;\n\n类对象作为类成员类中的成员可以是另一个类的对象，我们称该成员为 对象成员先调用对象成员的构造，再调用本类构造，析构顺序与构造相反\n\n静态成员变量所有对象共享同一份数据在编译阶段分配内存类内声明，类外初始化\n\n静态成员变量两种访问方式//1、通过对象Person p1;p1.m_A = 100;cout &lt;&lt; &quot;p1.m_A = &quot; &lt;&lt; p1.m_A &lt;&lt; endl; //链式编程//2、通过类名cout &lt;&lt; &quot;m_A = &quot; &lt;&lt; Person::m_A &lt;&lt; endl;\n\n\n静态成员函数所有对象共享同一个函数静态成员函数只能访问静态成员变量\n\n静态成员变量两种访问方式//1、通过对象Person p1;p1.func();//2、通过类名Person::func();\n\n\n类内的成员变量和成员函数分开存储，只有非静态成员变量才属于类的对象上，静态成员变量/函数不占对象空间，函数也不占对象空间，所有函数共享一个函数实例\n\n\nthis 指针指向被调用的成员函数所属的对象，是隐含每一个非静态成员函数内的一种指针，不需要定义，直接使用即可\n用途：\n\n当形参和成员变量同名时，可用 this 指针来区分\nPerson(int age) &#123;\tthis-&gt;age = age;&#125;\n在类的非静态成员函数中返回对象本身，可使用 return *this\n\n空指针，可以调用成员函数，但如果成员函数中用到了 this 指针，就不可以了\nvoid test() &#123;\tPerson * p = NULL;\tp-&gt;ShowClassName();&#125;\nconst 修饰成员函数常函数：\n\n成员函数后加 const 后我们称为这个函数为常函数\n\n常函数内不可以修改成员属性\n\n成员属性声明时加关键字 mutable 后，在常函数中依然可以修改\n//this 指针的本质是一个指针常量，指针的指向不可修改//如果想让指针指向的值也不可以修改，需要声明常函数void ShowPerson() const &#123;\t//const Type* const pointer;\t//this = NULL; //不能修改指针的指向 Person* const this;\t//const 修饰成员函数，表示指针指向的内存空间的数据不能修改，除了 mutable 修饰的变量\tthis-&gt;m_B = 100;&#125;mutable int m_B;\n常对象：\n\n声明对象前加 const 称该对象为常对象\n\n常对象只能调用常函数\nconst Person person;cout &lt;&lt; person.m_A &lt;&lt; endl;//person.mA = 100; //常对象不能修改成员变量的值，但是可以访问person.m_B = 100; //但是常对象可以修改 mutable 修饰成员变量\n友元让一个函数或类访问另一个类中私有成员，关键字 friend\n\n\n友元的三种实现：\n\n全局函数做友元\nclass Building &#123;\t//告诉编译器 goodGay 全局函数 是 Building 类的好朋友，可以访问类中的私有内容\tfriend void goodGay(Building * building);&#125;\n类做友元\nclass Building &#123;\t//告诉编译器 goodGay 类是 Building 类的好朋友，可以访问到 Building 类中私有内容\tfriend class goodGay;&#125;\n成员函数做友元\nclass Building &#123;\t//告诉编译器 goodGay 类中的 visit 成员函数是 Building 好朋友，可以访问私有内容\tfriend void goodGay::visit();&#125;\n运算符重载对已有的运算符重新进行定义，赋予其另一种功能，以适应不同的数据类型\n\n加号运算符重载作用：实现两个自定义数据类型相加的运算\n\n\n//全局函数实现 + 号运算符重载Person operator+(const Person&amp; p1, const Person&amp; p2) &#123;\tPerson temp(0, 0);\ttemp.m_A = p1.m_A + p2.m_A;\ttemp.m_B = p1.m_B + p2.m_B;\treturn temp;&#125;//运算符重载 可以发生函数重载Person operator+(const Person&amp; p2, int val) &#123;\tPerson temp;\ttemp.m_A = p2.m_A + val;\ttemp.m_B = p2.m_B + val;\treturn temp;&#125;Person p3 = p2 + 10; //相当于 operator+(p2,10)\n\n总结：对于内置的数据类型的表达式的的运算符是不可能改变的，不要滥用运算符重载\n\n\n左移运算符重载作用：重载左移运算符配合友元可以输出自定义数据类型\n\n//全局函数实现左移重载//ostream对象只能有一个ostream&amp; operator&lt;&lt;(ostream&amp; out, Person&amp; p) &#123;\tout &lt;&lt; &quot;a:&quot; &lt;&lt; p.m_A &lt;&lt; &quot; b:&quot; &lt;&lt; p.m_B;\treturn out;&#125;\n\n递增运算符重载作用：通过重载递增运算符，实现自己的整型数据\n\nMyInteger() &#123;\tm_Num = 0;&#125;//前置++MyInteger&amp; operator++() &#123;\t//先++\tm_Num++;\t//再返回\treturn *this; //前置递增返回引用&#125;//后置++MyInteger operator++(int) &#123;\t//先返回\tMyInteger temp = *this; //记录当前本身的值，然后让本身的值加 1，但是返回的是以前的值，达到先返回后 ++\tm_Num++;\treturn temp; //后置递增返回值&#125;\n\n赋值运算符重载C++ 编译器至少给一个类添加 4 个函数\n\n\n默认构造函数(无参，函数体为空)\n默认析构函数(无参，函数体为空)\n默认拷贝构造函数，对属性进行值拷贝\n赋值运算符 operator=，对属性进行值拷贝\n\n如果类中有属性指向堆区，做赋值操作时也会出现深浅拷贝问题\n//重载赋值运算符Person&amp; operator=(Person &amp;p) &#123;\tif (m_Age != NULL) &#123;\t\tdelete m_Age;\t\tm_Age = NULL;\t&#125;\t//编译器提供的代码是浅拷贝\t//m_Age = p.m_Age;\t//提供深拷贝 解决浅拷贝的问题\tm_Age = new int(*p.m_Age);\t//返回自身\treturn *this;&#125;\n\n关系运算符重载作用：可以让两个自定义类型对象进行对比操作\n\nbool operator==(Person &amp; p) &#123;\tif (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age) &#123;\t\treturn true;\t&#125;\telse &#123;\t\treturn false;\t&#125;&#125;bool operator!=(Person &amp; p) &#123;\tif (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age) &#123;\t\treturn false;\t&#125;\telse &#123;\t\treturn true;\t&#125;&#125;\n\n函数调用 () 运算符重载\n由于重载后使用的方式非常像函数的调用，因此称为仿函数\n仿函数没有固定写法，非常灵活\n\n\n\nclass MyAdd &#123;public:\tint operator()(int v1, int v2) &#123;\t\treturn v1 + v2;\t&#125;&#125;;void test02() &#123;\tMyAdd add;\tint ret = add(10, 10);\tcout &lt;&lt; &quot;ret = &quot; &lt;&lt; ret &lt;&lt; endl;\t//匿名对象调用\tcout &lt;&lt; &quot;MyAdd()(100,100) = &quot; &lt;&lt; MyAdd()(100, 100) &lt;&lt; endl;&#125;\n继承class 子类 : 继承方式 父类 可以减少重复的代码\nclass A : public B;\nA 类称为子类 / 派生类\nB 类称为父类 / 基类\n\n从父类继承过来的成员，哪些属于子类对象中？\n\nclass Base &#123;public:\tint m_A;protected:\tint m_B;private:\tint m_C; //私有成员只是被隐藏了，但是还是会继承下去，只是由编译器给隐藏后访问不到&#125;;//公共继承class Son :public Base &#123;public:\tint m_D;&#125;;void test01() &#123;\tcout &lt;&lt; &quot;sizeof Son = &quot; &lt;&lt; sizeof(Son) &lt;&lt; endl;&#125;int main() &#123;\ttest01();\treturn 0;&#125;\n\n继承中构造和析构顺序继承中先调用父类构造函数，再调用子类构造函数，析构顺序与构造相反\n\n继承同名成员处理方式访问子类同名成员 直接访问即可访问父类同名成员 需要加作用域\n\n\n\n同名静态成员处理方式和非静态处理方式一样，只不过有两种访问的方式（通过对象 和 通过类名）\n\n\n多继承语法C++ 允许一个类继承多个类，但实际开发中不建议用多继承\n\n语法：class 子类：继承方式 父类1 ，继承方式 父类2...\n多继承可能会引发父类中有同名成员出现，需要加作用域区分\n菱形 (钻石) 继承​两个派生类继承同一个基类，又有某个类同时继承者两个派生类\n\n菱形继承问题：\n\n羊继承了动物的数据，驼同样继承了动物的数据，当草泥马使用数据时，就会产生二义性。\n草泥马继承自动物的数据继承了两份，而这份数据我们只需要一份。\n\nclass Animal &#123;public:\tint m_Age;&#125;;//继承前加 virtual 关键字后，变为虚继承//此时公共的父类 Animal 称为虚基类class Sheep : virtual public Animal &#123;&#125;;class Tuo   : virtual public Animal &#123;&#125;;class SheepTuo : public Sheep, public Tuo &#123;&#125;;\n\n多态\n静态多态：函数重载、运算符重载，复用函数名\n动态多态：派生类和虚函数实现运行时多态\n\n区别：\n\n静态多态的函数地址早绑定 - 编译阶段确定函数地址\n动态多态的函数地址晚绑定 - 运行阶段确定函数地址\n\nclass Animal &#123;public:\t//函数前加上 virtual 关键字，变成虚函数，那么编译器在编译的时候就不能确定函数调用了\tvirtual void speak() &#123;&#125;&#125;;//我们希望传入什么对象，那么就调用什么对象的函数//如果函数地址在编译阶段就能确定，那么静态联编//如果函数地址在运行阶段才能确定，就是动态联编\n多态满足条件：\n\n有继承关系\n子类重写父类中的虚函数重写：函数返回值类型 函数名 参数列表 完全一致称为重写\n\n多态使用：父类指针或引用指向子类对象\n多态的优点：代码组织结构清晰，可读性强，利于前期和后期的扩展以及维护\n纯虚函数和抽象类在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容，因此将虚函数改为纯虚函数\n纯虚函数语法：virtual 返回值类型 函数名 (参数列表) = 0;\n当类中有了纯虚函数，这个类也称为抽象类\n抽象类特点：\n\n无法实例化对象\n子类必须重写抽象类中的纯虚函数，否则也属于抽象类\n\nclass Base &#123;public:\tvirtual void func() = 0;&#125;;class Son :public Base &#123;public:\tvirtual void func()  &#123;\t\tcout &lt;&lt; &quot;func调用&quot; &lt;&lt; endl;\t&#125;;&#125;;void test01() &#123;\tBase * base = NULL;\t//base = new Base; // 错误，抽象类无法实例化对象\tbase = new Son;\tbase-&gt;func();\tdelete base;&#125;\n\n虚析构和纯虚析构多态使用时，如果子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码，会导致子类对象可能清理不干净，造成内存泄漏\n解决方式：将父类中的析构函数改为虚析构或者纯虚析构\n共性：\n\n可以解决父类指针释放子类对象\n都需要有具体的函数实现\n\n区别：\n\n如果是纯虚析构，该类属于抽象类，无法实例化对象\n\n虚析构语法：\nvirtual ~类名()&#123;&#125;\n纯虚析构语法：\nvirtual ~类名() = 0;类名::~类名()&#123;&#125;\n总结：\n​1. 虚析构或纯虚析构就是用来解决通过父类指针释放子类对象\n​2. 如果子类中没有堆区数据，可以不写为虚析构或纯虚析构\n​3. 拥有纯虚析构函数的类也属于抽象类\n文件操作头文件 &lt;fstream&gt;\n操作文件的三大类：\n\nofstream：写操作\nifstream：读操作\nfstream ：读写操作\n\n文件类型分为：文本文件（ASCII码）、二进制文件\n\n\n\n打开方式\n解释\n\n\n\nios::in\n为读文件而打开文件\n\n\nios::out\n为写文件而打开文件\n\n\nios::ate\n初始位置：文件尾\n\n\nios::app\n追加方式写文件\n\n\nios::trunc\n如果文件存在先删除，再创建\n\n\nios::binary\n二进制方式\n\n\n\n注：文件打开方式可以配合使用，利用 | 操作符\n\n写文件\n创建流对象ofstream ofs;\n\n打开文件ofs.open(&quot;文件路径&quot;,打开方式);\n\n写数据ofs &lt;&lt; &quot;写入的数据&quot;;\n\n关闭文件ofs.close();\n\n\n读文件读文件与写文件步骤相似，但读取方式比较多\n\n创建流对象ifstream ifs;\n\n打开文件并判断文件是否打开成功ifs.open(&quot;文件路径&quot;,打开方式);\n\n读数据（四种方式）\n\n关闭文件ifs.close();\n\n\n//利用 is_open 函数可以判断文件是否打开成功if (!ifs.is_open()) &#123;\tcout &lt;&lt; &quot;文件打开失败&quot; &lt;&lt; endl;\treturn;&#125;//第一种方式char buf[1024] = &#123; 0 &#125;;while (ifs &gt;&gt; buf) &#123;\tcout &lt;&lt; buf &lt;&lt; endl;&#125;//第二种char buf[1024] = &#123; 0 &#125;;while (ifs.getline(buf, sizeof(buf))) &#123;\tcout &lt;&lt; buf &lt;&lt; endl;&#125;//第三种string buf;while (getline(ifs, buf)) &#123;\tcout &lt;&lt; buf &lt;&lt; endl;&#125;char c;\twhile ((c = ifs.get()) != EOF) &#123;\t\tcout &lt;&lt; c;\t&#125;\tifs.close();\n\n二进制文件打开方式要指定为 ios::binary\n写文件主要利用流对象调用成员函数 write\n函数原型：ostream&amp; write(const char * buffer, int len);\n参数解释：字符指针 buffer 指向内存中一段存储空间，len 是读写的字节数\n读文件主要利用流对象调用成员函数 read\n函数原型：istream&amp; read(char *buffer, int len);\nC++ advanced模板模板不可以直接使用，它只是一个框架；编程思想：泛型编程；提供两种机制：函数模板和类模板\n作用：建立一个通用函数（类），函数返回值类型和形参类型（类中的成员数据类型）可以不具体制定，用一个虚拟的类型来代表，将类型参数化\n语法：\ntemplate&lt;typename T&gt; t //关键字 template 声明创建模板；typename 可用 class 代替；T 通用的数据类型，通常为大写字母函数声明/定义（类）\n函数模板示例：\n//交换整型函数void swapInt(int&amp; a, int&amp; b) &#123;\tint temp = a;\ta = b;\tb = temp;&#125;//利用模板提供通用的交换函数template&lt;typename T&gt;void mySwap(T&amp; a, T&amp; b) &#123;\tT temp = a;\ta = b;\tb = temp;&#125;void test01()&#123;\tint a = 10;\tint b = 20;\t//swapInt(a, b);\t//利用模板实现交换\t//1、自动类型推导\tmySwap(a, b);\t//2、显示指定类型\tmySwap&lt;int&gt;(a, b);\tcout &lt;&lt; &quot;a = &quot; &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; &quot;b = &quot; &lt;&lt; b &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n使用函数模板有两种方式：自动类型推导、显示指定类型\n注意事项：\n自动类型推导，必须推导出一致的数据类型 T,才可以使用\n模板必须要确定出 T 的数据类型，才可以使用\n示例：\n//利用模板提供通用的交换函数template&lt;class T&gt;void mySwap(T&amp; a, T&amp; b)&#123;\tT temp = a;\ta = b;\tb = temp;&#125;// 1、自动类型推导，必须推导出一致的数据类型T,才可以使用void test01()&#123;\tint a = 10;\tint b = 20;\tchar c = &#x27;c&#x27;;\tmySwap(a, b); // 正确，可以推导出一致的T\t//mySwap(a, c); // 错误，推导不出一致的T类型&#125;// 2、模板必须要确定出T的数据类型，才可以使用template&lt;class T&gt;void func()&#123;\tcout &lt;&lt; &quot;func 调用&quot; &lt;&lt; endl;&#125;void test02()&#123;\t//func(); //错误，模板不能独立使用，必须确定出T的类型\tfunc&lt;int&gt;(); //利用显示指定类型的方式，给T一个类型，才可以使用该模板&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n普通函数与函数模板区别：\n普通函数调用时可以发生自动类型转换（隐式类型转换）函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换如果利用显示指定类型的方式，可以发生隐式类型转换\n//普通函数int myAdd01(int a, int b)&#123;\treturn a + b;&#125;//函数模板template&lt;class T&gt;T myAdd02(T a, T b)&#123;\treturn a + b;&#125;//使用函数模板时，如果用自动类型推导，不会发生自动类型转换,即隐式类型转换void test01()&#123;\tint a = 10;\tint b = 20;\tchar c = &#x27;c&#x27;;\tcout &lt;&lt; myAdd01(a, c) &lt;&lt; endl; //正确，将char类型的&#x27;c&#x27;隐式转换为int类型  &#x27;c&#x27; 对应 ASCII码 99\t//myAdd02(a, c); // 报错，使用自动类型推导时，不会发生隐式类型转换\tmyAdd02&lt;int&gt;(a, c); //正确，如果用显示指定类型，可以发生隐式类型转换&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：建议使用显示指定类型的方式，调用函数模板，因为可以自己确定通用类型T\n普通函数与函数模板的调用规则调用规则如下：\n如果函数模板和普通函数都可以实现，优先调用普通函数可以通过空模板参数列表来强制调用函数模板函数模板也可以发生重载如果函数模板可以产生更好的匹配,优先调用函数模板\n//普通函数与函数模板调用规则void myPrint(int a, int b)&#123;\tcout &lt;&lt; &quot;调用的普通函数&quot; &lt;&lt; endl;&#125;template&lt;typename T&gt;void myPrint(T a, T b)&#123;\tcout &lt;&lt; &quot;调用的模板&quot; &lt;&lt; endl;&#125;template&lt;typename T&gt;void myPrint(T a, T b, T c)&#123;\tcout &lt;&lt; &quot;调用重载的模板&quot; &lt;&lt; endl;&#125;void test01()&#123;\t//1、如果函数模板和普通函数都可以实现，优先调用普通函数\t// 注意 如果告诉编译器  普通函数是有的，但只是声明没有实现，或者不在当前文件内实现，就会报错找不到\tint a = 10;\tint b = 20;\tmyPrint(a, b); //调用普通函数\t//2、可以通过空模板参数列表来强制调用函数模板\tmyPrint&lt;&gt;(a, b); //调用函数模板\t//3、函数模板也可以发生重载\tint c = 30;\tmyPrint(a, b, c); //调用重载的函数模板\t//4、 如果函数模板可以产生更好的匹配,优先调用函数模板\tchar c1 = &#x27;a&#x27;;\tchar c2 = &#x27;b&#x27;;\tmyPrint(c1, c2); //调用函数模板&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：既然提供了函数模板，最好就不要提供普通函数，否则容易出现二义性\n模板的局限性\ntemplate&lt;class T&gt;void f(T a, T b)&#123;   \ta = b;   &#125;\n在上述代码中提供的赋值操作，如果传入的a和b是一个数组，就无法实现了\ntemplate&lt;class T&gt;void f(T a, T b)&#123;   \tif(a &gt; b) &#123; ... &#125;   &#125;\n在上述代码中，如果T的数据类型传入的是像Person这样的自定义数据类型，也无法正常运行\n因此C++为了解决这种问题，提供模板的重载，可以为这些特定的类型提供具体化的模板\n#include&lt;iostream&gt;using namespace std;#include &lt;string&gt;class Person&#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\tstring m_Name;\tint m_Age;&#125;;//普通函数模板template&lt;class T&gt;bool myCompare(T&amp; a, T&amp; b)&#123;\tif (a == b)\t&#123;\t\treturn true;\t&#125;\telse\t&#123;\t\treturn false;\t&#125;&#125;//具体化，显示具体化的原型和定意思以template&lt;&gt;开头，并通过名称来指出类型//具体化优先于常规模板template&lt;&gt; bool myCompare(Person &amp;p1, Person &amp;p2)&#123;\tif ( p1.m_Name  == p2.m_Name &amp;&amp; p1.m_Age == p2.m_Age)\t&#123;\t\treturn true;\t&#125;\telse\t&#123;\t\treturn false;\t&#125;&#125;void test01()&#123;\tint a = 10;\tint b = 20;\t//内置数据类型可以直接使用通用的函数模板\tbool ret = myCompare(a, b);\tif (ret)\t&#123;\t\tcout &lt;&lt; &quot;a == b &quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;a != b &quot; &lt;&lt; endl;\t&#125;&#125;void test02()&#123;\tPerson p1(&quot;Tom&quot;, 10);\tPerson p2(&quot;Tom&quot;, 10);\t//自定义数据类型，不会调用普通的函数模板\t//可以创建具体化的Person数据类型的模板，用于特殊处理这个类型\tbool ret = myCompare(p1, p2);\tif (ret)\t&#123;\t\tcout &lt;&lt; &quot;p1 == p2 &quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;p1 != p2 &quot; &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n利用具体化的模板，可以解决自定义类型的通用化学习模板并不是为了写模板，而是在STL能够运用系统提供的模板\n函数模板案例案例描述：\n利用函数模板封装一个排序的函数，可以对不同数据类型数组进行排序排序规则从大到小，排序算法为选择排序分别利用char数组和int数组进行测试\n//交换的函数模板template&lt;typename T&gt;void mySwap(T &amp;a, T&amp;b)&#123;\tT temp = a;\ta = b;\tb = temp;&#125;template&lt;class T&gt; // 也可以替换成typename//利用选择排序，进行对数组从大到小的排序void mySort(T arr[], int len)&#123;\tfor (int i = 0; i &lt; len; i++)\t&#123;\t\tint max = i; //最大数的下标\t\tfor (int j = i + 1; j &lt; len; j++)\t\t&#123;\t\t\tif (arr[max] &lt; arr[j])\t\t\t&#123;\t\t\t\tmax = j;\t\t\t&#125;\t\t&#125;\t\tif (max != i) //如果最大数的下标不是i，交换两者\t\t&#123;\t\t\tmySwap(arr[max], arr[i]);\t\t&#125;\t&#125;&#125;template&lt;typename T&gt;void printArray(T arr[], int len) &#123;\tfor (int i = 0; i &lt; len; i++) &#123;\t\tcout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\t//测试char数组\tchar charArr[] = &quot;bdcfeagh&quot;;\tint num = sizeof(charArr) / sizeof(char);\tmySort(charArr, num);\tprintArray(charArr, num);&#125;void test02()&#123;\t//测试int数组\tint intArr[] = &#123; 7, 5, 8, 1, 3, 9, 2, 4, 6 &#125;;\tint num = sizeof(intArr) / sizeof(int);\tmySort(intArr, num);\tprintArray(intArr, num);&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n\n类模板#include &lt;string&gt;//类模板template&lt;class NameType, class AgeType&gt;class Person&#123;public:\tPerson(NameType name, AgeType age)\t&#123;\t\tthis-&gt;mName = name;\t\tthis-&gt;mAge = age;\t&#125;\tvoid showPerson()\t&#123;\t\tcout &lt;&lt; &quot;name: &quot; &lt;&lt; this-&gt;mName &lt;&lt; &quot; age: &quot; &lt;&lt; this-&gt;mAge &lt;&lt; endl;\t&#125;public:\tNameType mName;\tAgeType mAge;&#125;;void test01()&#123;\t// 指定NameType 为string类型，AgeType 为 int类型\tPerson&lt;string, int&gt;P1(&quot;孙悟空&quot;, 999);\tP1.showPerson();&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n类模板与函数模板区别主要有两点：\n类模板没有自动类型推导的使用方式类模板在模板参数列表中可以有默认参数\n#include &lt;string&gt;//类模板template&lt;class NameType, class AgeType = int&gt;class Person&#123;public:\tPerson(NameType name, AgeType age)\t&#123;\t\tthis-&gt;mName = name;\t\tthis-&gt;mAge = age;\t&#125;\tvoid showPerson()\t&#123;\t\tcout &lt;&lt; &quot;name: &quot; &lt;&lt; this-&gt;mName &lt;&lt; &quot; age: &quot; &lt;&lt; this-&gt;mAge &lt;&lt; endl;\t&#125;public:\tNameType mName;\tAgeType mAge;&#125;;//1、类模板没有自动类型推导的使用方式void test01()&#123;\t// Person p(&quot;孙悟空&quot;, 1000); // 错误 类模板使用时候，不可以用自动类型推导\tPerson &lt;string ,int&gt;p(&quot;孙悟空&quot;, 1000); //必须使用显示指定类型的方式，使用类模板\tp.showPerson();&#125;//2、类模板在模板参数列表中可以有默认参数void test02()&#123;\tPerson &lt;string&gt; p(&quot;猪八戒&quot;, 999); //类模板中的模板参数列表 可以指定默认参数\tp.showPerson();&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n类模板中成员函数和普通类中成员函数创建时机是有区别的：\n普通类中的成员函数一开始就可以创建类模板中的成员函数在调用时才创建\nclass Person1&#123;public:\tvoid showPerson1()\t&#123;\t\tcout &lt;&lt; &quot;Person1 show&quot; &lt;&lt; endl;\t&#125;&#125;;class Person2&#123;public:\tvoid showPerson2()\t&#123;\t\tcout &lt;&lt; &quot;Person2 show&quot; &lt;&lt; endl;\t&#125;&#125;;template&lt;class T&gt;class MyClass&#123;public:\tT obj;\t//类模板中的成员函数，并不是一开始就创建的，而是在模板调用时再生成\tvoid fun1() &#123; obj.showPerson1(); &#125;\tvoid fun2() &#123; obj.showPerson2(); &#125;&#125;;void test01()&#123;\tMyClass&lt;Person1&gt; m;\tm.fun1();\t//m.fun2();//编译会出错，说明函数调用才会去创建成员函数&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n类模板对象做函数参数学习目标：\n类模板实例化出的对象，向函数传参的方式一共有三种传入方式：\n指定传入的类型 — 直接显示对象的数据类型参数模板化 — 将对象中的参数变为模板进行传递整个类模板化 — 将这个对象类型 模板化进行传递\n#include &lt;string&gt;//类模板template&lt;class NameType, class AgeType = int&gt;class Person&#123;public:\tPerson(NameType name, AgeType age)\t&#123;\t\tthis-&gt;mName = name;\t\tthis-&gt;mAge = age;\t&#125;\tvoid showPerson()\t&#123;\t\tcout &lt;&lt; &quot;name: &quot; &lt;&lt; this-&gt;mName &lt;&lt; &quot; age: &quot; &lt;&lt; this-&gt;mAge &lt;&lt; endl;\t&#125;public:\tNameType mName;\tAgeType mAge;&#125;;//1、指定传入的类型void printPerson1(Person&lt;string, int&gt; &amp;p)&#123;\tp.showPerson();&#125;void test01()&#123;\tPerson &lt;string, int &gt;p(&quot;孙悟空&quot;, 100);\tprintPerson1(p);&#125;//2、参数模板化template &lt;class T1, class T2&gt;void printPerson2(Person&lt;T1, T2&gt;&amp;p)&#123;\tp.showPerson();\tcout &lt;&lt; &quot;T1的类型为： &quot; &lt;&lt; typeid(T1).name() &lt;&lt; endl;\tcout &lt;&lt; &quot;T2的类型为： &quot; &lt;&lt; typeid(T2).name() &lt;&lt; endl;&#125;void test02()&#123;\tPerson &lt;string, int &gt;p(&quot;猪八戒&quot;, 90);\tprintPerson2(p);&#125;//3、整个类模板化template&lt;class T&gt;void printPerson3(T &amp; p)&#123;\tcout &lt;&lt; &quot;T的类型为： &quot; &lt;&lt; typeid(T).name() &lt;&lt; endl;\tp.showPerson();&#125;void test03()&#123;\tPerson &lt;string, int &gt;p(&quot;唐僧&quot;, 30);\tprintPerson3(p);&#125;int main() &#123;\ttest01();\ttest02();\ttest03();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n通过类模板创建的对象，可以有三种方式向函数中进行传参使用比较广泛是第一种：指定传入的类型\n当类模板碰到继承时，需要注意一下几点：\n当子类继承的父类是一个类模板时，子类在声明的时候，要指定出父类中T的类型如果不指定，编译器无法给子类分配内存如果想灵活指定出父类中T的类型，子类也需变为类模板\ntemplate&lt;class T&gt;class Base&#123;\tT m;&#125;;//class Son:public Base  //错误，c++编译需要给子类分配内存，必须知道父类中T的类型才可以向下继承class Son :public Base&lt;int&gt; //必须指定一个类型&#123;&#125;;void test01()&#123;\tSon c;&#125;//类模板继承类模板 ,可以用T2指定父类中的T类型template&lt;class T1, class T2&gt;class Son2 :public Base&lt;T2&gt;&#123;public:\tSon2()\t&#123;\t\tcout &lt;&lt; typeid(T1).name() &lt;&lt; endl;\t\tcout &lt;&lt; typeid(T2).name() &lt;&lt; endl;\t&#125;&#125;;void test02()&#123;\tSon2&lt;int, char&gt; child1;&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n类模板成员函数类外实现学习目标：能够掌握类模板中的成员函数类外实现\n#include &lt;string&gt;//类模板中成员函数类外实现template&lt;class T1, class T2&gt;class Person &#123;public:\t//成员函数类内声明\tPerson(T1 name, T2 age);\tvoid showPerson();public:\tT1 m_Name;\tT2 m_Age;&#125;;//构造函数 类外实现template&lt;class T1, class T2&gt;Person&lt;T1, T2&gt;::Person(T1 name, T2 age) &#123;\tthis-&gt;m_Name = name;\tthis-&gt;m_Age = age;&#125;//成员函数 类外实现template&lt;class T1, class T2&gt;void Person&lt;T1, T2&gt;::showPerson() &#123;\tcout &lt;&lt; &quot;姓名: &quot; &lt;&lt; this-&gt;m_Name &lt;&lt; &quot; 年龄:&quot; &lt;&lt; this-&gt;m_Age &lt;&lt; endl;&#125;void test01()&#123;\tPerson&lt;string, int&gt; p(&quot;Tom&quot;, 20);\tp.showPerson();&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：类模板中成员函数类外实现时，需要加上模板参数列表\n类模板分文件编写学习目标：\n掌握类模板成员函数分文件编写产生的问题以及解决方式问题：\n类模板中成员函数创建时机是在调用阶段，导致分文件编写时链接不到解决：\n解决方式1：直接包含.cpp源文件解决方式2：将声明和实现写到同一个文件中，并更改后缀名为.hpp，hpp是约定的名称，并不是强制\nperson.hpp中代码：\n#pragma once#include &lt;iostream&gt;using namespace std;#include &lt;string&gt;template&lt;class T1, class T2&gt;class Person &#123;public:\tPerson(T1 name, T2 age);\tvoid showPerson();public:\tT1 m_Name;\tT2 m_Age;&#125;;//构造函数 类外实现template&lt;class T1, class T2&gt;Person&lt;T1, T2&gt;::Person(T1 name, T2 age) &#123;\tthis-&gt;m_Name = name;\tthis-&gt;m_Age = age;&#125;//成员函数 类外实现template&lt;class T1, class T2&gt;void Person&lt;T1, T2&gt;::showPerson() &#123;\tcout &lt;&lt; &quot;姓名: &quot; &lt;&lt; this-&gt;m_Name &lt;&lt; &quot; 年龄:&quot; &lt;&lt; this-&gt;m_Age &lt;&lt; endl;&#125;\n类模板分文件编写.cpp中代码\n#include&lt;iostream&gt;using namespace std;//#include &quot;person.h&quot;#include &quot;person.cpp&quot; //解决方式1，包含cpp源文件//解决方式2，将声明和实现写到一起，文件后缀名改为.hpp#include &quot;person.hpp&quot;void test01()&#123;\tPerson&lt;string, int&gt; p(&quot;Tom&quot;, 10);\tp.showPerson();&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：主流的解决方式是第二种，将类模板成员函数写到一起，并将后缀名改为.hpp\n类模板与友元学习目标：\n掌握类模板配合友元函数的类内和类外实现全局函数类内实现 - 直接在类内声明友元即可\n全局函数类外实现 - 需要提前让编译器知道全局函数的存在\n#include &lt;string&gt;//2、全局函数配合友元  类外实现 - 先做函数模板声明，下方在做函数模板定义，在做友元template&lt;class T1, class T2&gt; class Person;//如果声明了函数模板，可以将实现写到后面，否则需要将实现体写到类的前面让编译器提前看到//template&lt;class T1, class T2&gt; void printPerson2(Person&lt;T1, T2&gt; &amp; p);template&lt;class T1, class T2&gt;void printPerson2(Person&lt;T1, T2&gt; &amp; p)&#123;\tcout &lt;&lt; &quot;类外实现 ---- 姓名： &quot; &lt;&lt; p.m_Name &lt;&lt; &quot; 年龄：&quot; &lt;&lt; p.m_Age &lt;&lt; endl;&#125;template&lt;class T1, class T2&gt;class Person&#123;\t//1、全局函数配合友元   类内实现\tfriend void printPerson(Person&lt;T1, T2&gt; &amp; p)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; p.m_Name &lt;&lt; &quot; 年龄：&quot; &lt;&lt; p.m_Age &lt;&lt; endl;\t&#125;\t//全局函数配合友元  类外实现\tfriend void printPerson2&lt;&gt;(Person&lt;T1, T2&gt; &amp; p);public:\tPerson(T1 name, T2 age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;private:\tT1 m_Name;\tT2 m_Age;&#125;;//1、全局函数在类内实现void test01()&#123;\tPerson &lt;string, int &gt;p(&quot;Tom&quot;, 20);\tprintPerson(p);&#125;//2、全局函数在类外实现void test02()&#123;\tPerson &lt;string, int &gt;p(&quot;Jerry&quot;, 30);\tprintPerson2(p);&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：建议全局函数做类内实现，用法简单，而且编译器可以直接识别\n类模板案例案例描述: 实现一个通用的数组类，要求如下：\n可以对内置数据类型以及自定义数据类型的数据进行存储将数组中的数据存储到堆区构造函数中可以传入数组的容量提供对应的拷贝构造函数以及operator=防止浅拷贝问题提供尾插法和尾删法对数组中的数据进行增加和删除可以通过下标的方式访问数组中的元素可以获取数组中当前元素个数和数组的容量\nmyArray.hpp中代码\n#pragma once#include &lt;iostream&gt;using namespace std;template&lt;class T&gt;class MyArray&#123;public:\t//构造函数\tMyArray(int capacity)\t&#123;\t\tthis-&gt;m_Capacity = capacity;\t\tthis-&gt;m_Size = 0;\t\tpAddress = new T[this-&gt;m_Capacity];\t&#125;\t//拷贝构造\tMyArray(const MyArray &amp; arr)\t&#123;\t\tthis-&gt;m_Capacity = arr.m_Capacity;\t\tthis-&gt;m_Size = arr.m_Size;\t\tthis-&gt;pAddress = new T[this-&gt;m_Capacity];\t\tfor (int i = 0; i &lt; this-&gt;m_Size; i++)\t\t&#123;\t\t\t//如果T为对象，而且还包含指针，必须需要重载 = 操作符，因为这个等号不是 构造 而是赋值，\t\t\t// 普通类型可以直接= 但是指针类型需要深拷贝\t\t\tthis-&gt;pAddress[i] = arr.pAddress[i];\t\t&#125;\t&#125;\t//重载= 操作符  防止浅拷贝问题\tMyArray&amp; operator=(const MyArray&amp; myarray) &#123;\t\tif (this-&gt;pAddress != NULL) &#123;\t\t\tdelete[] this-&gt;pAddress;\t\t\tthis-&gt;m_Capacity = 0;\t\t\tthis-&gt;m_Size = 0;\t\t&#125;\t\tthis-&gt;m_Capacity = myarray.m_Capacity;\t\tthis-&gt;m_Size = myarray.m_Size;\t\tthis-&gt;pAddress = new T[this-&gt;m_Capacity];\t\tfor (int i = 0; i &lt; this-&gt;m_Size; i++) &#123;\t\t\tthis-&gt;pAddress[i] = myarray[i];\t\t&#125;\t\treturn *this;\t&#125;\t//重载[] 操作符  arr[0]\tT&amp; operator [](int index)\t&#123;\t\treturn this-&gt;pAddress[index]; //不考虑越界，用户自己去处理\t&#125;\t//尾插法\tvoid Push_back(const T &amp; val)\t&#123;\t\tif (this-&gt;m_Capacity == this-&gt;m_Size)\t\t&#123;\t\t\treturn;\t\t&#125;\t\tthis-&gt;pAddress[this-&gt;m_Size] = val;\t\tthis-&gt;m_Size++;\t&#125;\t//尾删法\tvoid Pop_back()\t&#123;\t\tif (this-&gt;m_Size == 0)\t\t&#123;\t\t\treturn;\t\t&#125;\t\tthis-&gt;m_Size--;\t&#125;\t//获取数组容量\tint getCapacity()\t&#123;\t\treturn this-&gt;m_Capacity;\t&#125;\t//获取数组大小\tint\tgetSize()\t&#123;\t\treturn this-&gt;m_Size;\t&#125;\t//析构\t~MyArray()\t&#123;\t\tif (this-&gt;pAddress != NULL)\t\t&#123;\t\t\tdelete[] this-&gt;pAddress;\t\t\tthis-&gt;pAddress = NULL;\t\t\tthis-&gt;m_Capacity = 0;\t\t\tthis-&gt;m_Size = 0;\t\t&#125;\t&#125;private:\tT * pAddress;  //指向一个堆空间，这个空间存储真正的数据\tint m_Capacity; //容量\tint m_Size;   // 大小&#125;;\n类模板案例—数组类封装.cpp中\n#include &quot;myArray.hpp&quot;#include &lt;string&gt;void printIntArray(MyArray&lt;int&gt;&amp; arr) &#123;\tfor (int i = 0; i &lt; arr.getSize(); i++) &#123;\t\tcout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//测试内置数据类型void test01()&#123;\tMyArray&lt;int&gt; array1(10);\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tarray1.Push_back(i);\t&#125;\tcout &lt;&lt; &quot;array1打印输出：&quot; &lt;&lt; endl;\tprintIntArray(array1);\tcout &lt;&lt; &quot;array1的大小：&quot; &lt;&lt; array1.getSize() &lt;&lt; endl;\tcout &lt;&lt; &quot;array1的容量：&quot; &lt;&lt; array1.getCapacity() &lt;&lt; endl;\tcout &lt;&lt; &quot;--------------------------&quot; &lt;&lt; endl;\tMyArray&lt;int&gt; array2(array1);\tarray2.Pop_back();\tcout &lt;&lt; &quot;array2打印输出：&quot; &lt;&lt; endl;\tprintIntArray(array2);\tcout &lt;&lt; &quot;array2的大小：&quot; &lt;&lt; array2.getSize() &lt;&lt; endl;\tcout &lt;&lt; &quot;array2的容量：&quot; &lt;&lt; array2.getCapacity() &lt;&lt; endl;&#125;//测试自定义数据类型class Person &#123;public:\tPerson() &#123;&#125;\t\tPerson(string name, int age) &#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;public:\tstring m_Name;\tint m_Age;&#125;;void printPersonArray(MyArray&lt;Person&gt;&amp; personArr)&#123;\tfor (int i = 0; i &lt; personArr.getSize(); i++) &#123;\t\tcout &lt;&lt; &quot;姓名：&quot; &lt;&lt; personArr[i].m_Name &lt;&lt; &quot; 年龄： &quot; &lt;&lt; personArr[i].m_Age &lt;&lt; endl;\t&#125;&#125;void test02()&#123;\t//创建数组\tMyArray&lt;Person&gt; pArray(10);\tPerson p1(&quot;孙悟空&quot;, 30);\tPerson p2(&quot;韩信&quot;, 20);\tPerson p3(&quot;妲己&quot;, 18);\tPerson p4(&quot;王昭君&quot;, 15);\tPerson p5(&quot;赵云&quot;, 24);\t//插入数据\tpArray.Push_back(p1);\tpArray.Push_back(p2);\tpArray.Push_back(p3);\tpArray.Push_back(p4);\tpArray.Push_back(p5);\tprintPersonArray(pArray);\tcout &lt;&lt; &quot;pArray的大小：&quot; &lt;&lt; pArray.getSize() &lt;&lt; endl;\tcout &lt;&lt; &quot;pArray的容量：&quot; &lt;&lt; pArray.getCapacity() &lt;&lt; endl;&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：能够利用所学知识点实现通用的数组\nSTL(Standard Template Library, 标准模板库)C++的面向对象和泛型编程思想，目的就是复用性的提升为了建立数据结构和算法的一套标准,诞生了STL\nSTL基本概念STL 从广义上分为: 容器(container) 算法(algorithm) 迭代器(iterator)容器和算法之间通过迭代器进行无缝连接。STL 几乎所有的代码都采用了模板类或者模板函数\nSTL六大组件STL大体分为六大组件，分别是:容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器\n容器：各种数据结构，如vector、list、deque、set、map等,用来存放数据。算法：各种常用的算法，如sort、find、copy、for_each等迭代器：扮演了容器与算法之间的胶合剂。仿函数：行为类似函数，可作为算法的某种策略。适配器：一种用来修饰容器或者仿函数或迭代器接口的东西。空间配置器：负责空间的配置与管理。\nSTL中容器、算法、迭代器容器：\nSTL容器就是将运用最广泛的一些数据结构实现出来\n常用的数据结构：数组, 链表,树, 栈, 队列, 集合, 映射表等\n这些容器分为序列式容器和关联式容器两种:\n​序列式容器：强调值的排序，序列式容器中的每个元素均有固定的位置。关联式容器：二叉树结构，各元素之间没有严格的物理上的顺序关系\n算法：\n有限的步骤，解决逻辑或数学上的问题，这一门学科我们叫做算法\n算法分为:质变算法和非质变算法\n质变算法：是指运算过程中会更改区间内的元素的内容。例如拷贝，替换，删除等\n非质变算法：是指运算过程中不会更改区间内的元素内容，例如查找、计数、遍历、寻找极值等\n迭代器：容器和算法之间粘合剂\n提供一种方法，使之能够依序寻访某个容器所含的各个元素，而又无需暴露该容器的内部表示方式。\n每个容器都有自己专属的迭代器\n迭代器使用非常类似于指针，初学阶段我们可以先理解迭代器为指针\n迭代器种类：|种类          |功能                                                    |支持运算                               ||————–|——————————————————–|—————————————||输入迭代器    |对数据的只读访问                                        |只读，支持++、==、！=                  ||输出迭代器    |对数据的只写访问                                        |只写，支持++                           ||前向迭代器    |读写操作，并能向前推进迭代器                            |读写，支持++、==、！=                  ||双向迭代器    |读写操作，并能向前和向后操作                            |读写，支持++、–，                     ||随机访问迭代器|读写操作，可以以跳跃的方式访问任意数据，功能最强的迭代器|读写，支持++、–、[n]、-n、&lt;、&lt;=、&gt;、&gt;=|\n常用的容器中迭代器种类为双向迭代器，和随机访问迭代器\n容器算法迭代器初识了解STL中容器、算法、迭代器概念之后，我们利用代码感受STL的魅力\nSTL中最常用的容器为Vector，可以理解为数组，下面我们将学习如何向这个容器中插入数据、并遍历这个容器\nvector存放内置数据类型容器：vector\n算法：for_each\n迭代器：vector&lt;int&gt;::iterator\n#include &lt;vector&gt;#include &lt;algorithm&gt;void MyPrint(int val)&#123;\tcout &lt;&lt; val &lt;&lt; endl;&#125;void test01() &#123;\t//创建vector容器对象，并且通过模板参数指定容器中存放的数据的类型\tvector&lt;int&gt; v;\t//向容器中放数据\tv.push_back(10);\tv.push_back(20);\tv.push_back(30);\tv.push_back(40);\t//每一个容器都有自己的迭代器，迭代器是用来遍历容器中的元素\t//v.begin()返回迭代器，这个迭代器指向容器中第一个数据\t//v.end()返回迭代器，这个迭代器指向容器元素的最后一个元素的下一个位置\t//vector&lt;int&gt;::iterator 拿到vector&lt;int&gt;这种容器的迭代器类型\tvector&lt;int&gt;::iterator pBegin = v.begin();\tvector&lt;int&gt;::iterator pEnd = v.end();\t//第一种遍历方式：\twhile (pBegin != pEnd) &#123;\t\tcout &lt;&lt; *pBegin &lt;&lt; endl;\t\tpBegin++;\t&#125;\t//第二种遍历方式：\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; endl;\t&#125;\tcout &lt;&lt; endl;\t//第三种遍历方式：\t//使用STL提供标准遍历算法  头文件 algorithm\tfor_each(v.begin(), v.end(), MyPrint);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\nVector存放自定义数据类型学习目标：vector中存放自定义数据类型，并打印输出\n#include &lt;vector&gt;#include &lt;string&gt;//自定义数据类型class Person &#123;public:\tPerson(string name, int age) &#123;\t\tmName = name;\t\tmAge = age;\t&#125;public:\tstring mName;\tint mAge;&#125;;//存放对象void test01() &#123;\tvector&lt;Person&gt; v;\t//创建数据\tPerson p1(&quot;aaa&quot;, 10);\tPerson p2(&quot;bbb&quot;, 20);\tPerson p3(&quot;ccc&quot;, 30);\tPerson p4(&quot;ddd&quot;, 40);\tPerson p5(&quot;eee&quot;, 50);\tv.push_back(p1);\tv.push_back(p2);\tv.push_back(p3);\tv.push_back(p4);\tv.push_back(p5);\tfor (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; &quot;Name:&quot; &lt;&lt; (*it).mName &lt;&lt; &quot; Age:&quot; &lt;&lt; (*it).mAge &lt;&lt; endl;\t&#125;&#125;//放对象指针void test02() &#123;\tvector&lt;Person*&gt; v;\t//创建数据\tPerson p1(&quot;aaa&quot;, 10);\tPerson p2(&quot;bbb&quot;, 20);\tPerson p3(&quot;ccc&quot;, 30);\tPerson p4(&quot;ddd&quot;, 40);\tPerson p5(&quot;eee&quot;, 50);\tv.push_back(&amp;p1);\tv.push_back(&amp;p2);\tv.push_back(&amp;p3);\tv.push_back(&amp;p4);\tv.push_back(&amp;p5);\tfor (vector&lt;Person*&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tPerson * p = (*it);\t\tcout &lt;&lt; &quot;Name:&quot; &lt;&lt; p-&gt;mName &lt;&lt; &quot; Age:&quot; &lt;&lt; (*it)-&gt;mAge &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\nVector容器嵌套容器学习目标：容器中嵌套容器，我们将所有数据进行遍历输出\n#include &lt;vector&gt;//容器嵌套容器void test01() &#123;\tvector&lt; vector&lt;int&gt; &gt;  v;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tvector&lt;int&gt; v3;\tvector&lt;int&gt; v4;\tfor (int i = 0; i &lt; 4; i++) &#123;\t\tv1.push_back(i + 1);\t\tv2.push_back(i + 2);\t\tv3.push_back(i + 3);\t\tv4.push_back(i + 4);\t&#125;\t//将容器元素插入到vector v中\tv.push_back(v1);\tv.push_back(v2);\tv.push_back(v3);\tv.push_back(v4);\tfor (vector&lt;vector&lt;int&gt;&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tfor (vector&lt;int&gt;::iterator vit = (*it).begin(); vit != (*it).end(); vit++) &#123;\t\t\tcout &lt;&lt; *vit &lt;&lt; &quot; &quot;;\t\t&#125;\t\tcout &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\nSTL- 常用容器string容器string基本概念本质：string是C++风格的字符串，而string本质上是一个类\nstring 和 char * 区别：char * 是一个指针string 是一个类，类内部封装了 char*，管理这个字符串，是一个 char* 型的容器。\n特点：\nstring 类内部封装了很多成员方法\n例如：查找find，拷贝copy，删除delete 替换replace，插入insert\nstring 管理 char* 所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责\nstring构造函数构造函数原型：\nstring(); //创建一个空的字符串 例如: string str; string(const char* s); //使用字符串s初始化string(const string&amp; str); //使用一个 string 对象初始化另一个 string 对象string(int n, char c); //使用 n 个字符 c 初始化\n示例：\n#include &lt;string&gt;//string构造void test01()&#123;\tstring s1; //创建空字符串，调用无参构造函数\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; s1 &lt;&lt; endl;\tconst char* str = &quot;hello world&quot;;\tstring s2(str); //把c_string转换成了string\tcout &lt;&lt; &quot;str2 = &quot; &lt;&lt; s2 &lt;&lt; endl;\tstring s3(s2); //调用拷贝构造函数\tcout &lt;&lt; &quot;str3 = &quot; &lt;&lt; s3 &lt;&lt; endl;\tstring s4(10, &#x27;a&#x27;);\tcout &lt;&lt; &quot;str3 = &quot; &lt;&lt; s3 &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：string的多种构造方式没有可比性，灵活使用即可\nstring赋值操作功能描述：\n给string字符串进行赋值赋值的函数原型：\nstring&amp; operator=(const char* s); //char*类型字符串 赋值给当前的字符串string&amp; operator=(const string &amp;s); //把字符串s赋给当前的字符串string&amp; operator=(char c); //字符赋值给当前的字符串string&amp; assign(const char *s); //把字符串s赋给当前的字符串string&amp; assign(const char *s, int n); //把字符串s的前n个字符赋给当前的字符串string&amp; assign(const string &amp;s); //把字符串s赋给当前字符串string&amp; assign(int n, char c); //用n个字符c赋给当前字符串\n//赋值void test01()&#123;\tstring str1;\tstr1 = &quot;hello world&quot;;\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; str1 &lt;&lt; endl;\tstring str2;\tstr2 = str1;\tcout &lt;&lt; &quot;str2 = &quot; &lt;&lt; str2 &lt;&lt; endl;\tstring str3;\tstr3 = &#x27;a&#x27;;\tcout &lt;&lt; &quot;str3 = &quot; &lt;&lt; str3 &lt;&lt; endl;\tstring str4;\tstr4.assign(&quot;hello c++&quot;);\tcout &lt;&lt; &quot;str4 = &quot; &lt;&lt; str4 &lt;&lt; endl;\tstring str5;\tstr5.assign(&quot;hello c++&quot;,5);\tcout &lt;&lt; &quot;str5 = &quot; &lt;&lt; str5 &lt;&lt; endl;\tstring str6;\tstr6.assign(str5);\tcout &lt;&lt; &quot;str6 = &quot; &lt;&lt; str6 &lt;&lt; endl;\tstring str7;\tstr7.assign(5, &#x27;x&#x27;);\tcout &lt;&lt; &quot;str7 = &quot; &lt;&lt; str7 &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：string的赋值方式很多，operator= 这种方式是比较实用的\nstring字符串拼接功能描述：\n实现在字符串末尾拼接字符串函数原型：\nstring&amp; operator+=(const char* str); //重载+=操作符string&amp; operator+=(const char c); //重载+=操作符string&amp; operator+=(const string&amp; str); //重载+=操作符string&amp; append(const char *s); //把字符串s连接到当前字符串结尾string&amp; append(const char *s, int n); //把字符串s的前n个字符连接到当前字符串结尾string&amp; append(const string &amp;s); //同operator+=(const string&amp; str)string&amp; append(const string &amp;s, int pos, int n);//字符串s中从pos开始的n个字符连接到字符串结尾\n//字符串拼接void test01()&#123;\tstring str1 = &quot;我&quot;;\tstr1 += &quot;爱玩游戏&quot;;\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; str1 &lt;&lt; endl;\tstr1 += &#x27;:&#x27;;\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; str1 &lt;&lt; endl;\tstring str2 = &quot;LOL DNF&quot;;\tstr1 += str2;\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; str1 &lt;&lt; endl;\tstring str3 = &quot;I&quot;;\tstr3.append(&quot; love &quot;);\tstr3.append(&quot;game abcde&quot;, 4);\t//str3.append(str2);\tstr3.append(str2, 4, 3); // 从下标4位置开始 ，截取3个字符，拼接到字符串末尾\tcout &lt;&lt; &quot;str3 = &quot; &lt;&lt; str3 &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：字符串拼接的重载版本很多，初学阶段记住几种即可\nstring查找和替换功能描述：\n查找：查找指定字符串是否存在替换：在指定的位置替换字符串函数原型：\nint find(const string&amp; str, int pos = 0) const; //查找str第一次出现位置,从pos开始查找int find(const char* s, int pos = 0) const; //查找s第一次出现位置,从pos开始查找int find(const char* s, int pos, int n) const; //从pos位置查找s的前n个字符第一次位置int find(const char c, int pos = 0) const; //查找字符c第一次出现位置int rfind(const string&amp; str, int pos = npos) const; //查找str最后一次位置,从pos开始查找int rfind(const char* s, int pos = npos) const; //查找s最后一次出现位置,从pos开始查找int rfind(const char* s, int pos, int n) const; //从pos查找s的前n个字符最后一次位置int rfind(const char c, int pos = 0) const; //查找字符c最后一次出现位置string&amp; replace(int pos, int n, const string&amp; str); //替换从pos开始n个字符为字符串strstring&amp; replace(int pos, int n,const char* s); //替换从pos开始的n个字符为字符串s\n//查找和替换void test01()&#123;\t//查找\tstring str1 = &quot;abcdefgde&quot;;\tint pos = str1.find(&quot;de&quot;);\tif (pos == -1)\t&#123;\t\tcout &lt;&lt; &quot;未找到&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;pos = &quot; &lt;&lt; pos &lt;&lt; endl;\t&#125;\tpos = str1.rfind(&quot;de&quot;);\tcout &lt;&lt; &quot;pos = &quot; &lt;&lt; pos &lt;&lt; endl;&#125;void test02()&#123;\t//替换\tstring str1 = &quot;abcdefgde&quot;;\tstr1.replace(1, 3, &quot;1111&quot;);\tcout &lt;&lt; &quot;str1 = &quot; &lt;&lt; str1 &lt;&lt; endl;&#125;int main() &#123;\t//test01();\t//test02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：find查找是从左往后，rfind从右往左find找到字符串后返回查找的第一个字符位置，找不到返回-1replace在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串\nstring字符串比较功能描述：\n字符串之间的比较比较方式：\n字符串比较是按字符的ASCII码进行对比= 返回 0\n\n返回 1\n\n&lt; 返回 -1\n函数原型：\nint compare(const string &amp;s) const; //与字符串s比较int compare(const char *s) const; //与字符串s比较\n//字符串比较void test01()&#123;\tstring s1 = &quot;hello&quot;;\tstring s2 = &quot;aello&quot;;\tint ret = s1.compare(s2);\tif (ret == 0) &#123;\t\tcout &lt;&lt; &quot;s1 等于 s2&quot; &lt;&lt; endl;\t&#125;\telse if (ret &gt; 0)\t&#123;\t\tcout &lt;&lt; &quot;s1 大于 s2&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;s1 小于 s2&quot; &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大\nstring字符存取string中单个字符存取方式有两种\nchar&amp; operator[](int n); //通过[]方式取字符char&amp; at(int n); //通过at方法获取字符\nvoid test01()&#123;\tstring str = &quot;hello world&quot;;\tfor (int i = 0; i &lt; str.size(); i++)\t&#123;\t\tcout &lt;&lt; str[i] &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tfor (int i = 0; i &lt; str.size(); i++)\t&#123;\t\tcout &lt;&lt; str.at(i) &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\t//字符修改\tstr[0] = &#x27;x&#x27;;\tstr.at(1) = &#x27;x&#x27;;\tcout &lt;&lt; str &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：string字符串中单个字符存取有两种方式，利用 [ ] 或 at\nstring插入和删除功能描述：\n对string字符串进行插入和删除字符操作函数原型：\nstring&amp; insert(int pos, const char* s); //插入字符串string&amp; insert(int pos, const string&amp; str); //插入字符串string&amp; insert(int pos, int n, char c); //在指定位置插入n个字符cstring&amp; erase(int pos, int n = npos); //删除从Pos开始的n个字符\n//字符串插入和删除void test01()&#123;\tstring str = &quot;hello&quot;;\tstr.insert(1, &quot;111&quot;);\tcout &lt;&lt; str &lt;&lt; endl;\tstr.erase(1, 3);  //从1号位置开始3个字符\tcout &lt;&lt; str &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：插入和删除的起始下标都是从0开始\nstring子串功能描述：\n从字符串中获取想要的子串函数原型：\nstring substr(int pos = 0, int n = npos) const; //返回由pos开始的n个字符组成的字符串\n//子串void test01()&#123;\tstring str = &quot;abcdefg&quot;;\tstring subStr = str.substr(1, 3);\tcout &lt;&lt; &quot;subStr = &quot; &lt;&lt; subStr &lt;&lt; endl;\tstring email = &quot;hello@sina.com&quot;;\tint pos = email.find(&quot;@&quot;);\tstring username = email.substr(0, pos);\tcout &lt;&lt; &quot;username: &quot; &lt;&lt; username &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：灵活的运用求子串功能，可以在实际开发中获取有效的信息\nvector容器vector基本概念功能：\nvector数据结构和数组非常相似，也称为单端数组vector与普通数组区别：\n不同之处在于数组是静态空间，而vector可以动态扩展动态扩展：\n并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间\n\nvector容器的迭代器是支持随机访问的迭代器\nvector构造函数功能描述：\n创建vector容器函数原型：\nvector&lt;T&gt; v; //采用模板实现类实现，默认构造函数vector(v.begin(), v.end()); //将v[begin(), end())区间中的元素拷贝给本身。vector(n, elem); //构造函数将n个elem拷贝给本身。vector(const vector &amp;vec); //拷贝构造函数。\n#include &lt;vector&gt;void printVector(vector&lt;int&gt;&amp; v) &#123;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tvector&lt;int&gt; v1; //无参构造\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv1.push_back(i);\t&#125;\tprintVector(v1);\tvector&lt;int&gt; v2(v1.begin(), v1.end());\tprintVector(v2);\tvector&lt;int&gt; v3(10, 100);\tprintVector(v3);\tvector&lt;int&gt; v4(v3);\tprintVector(v4);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：vector的多种构造方式没有可比性，灵活使用即可\nvector赋值操作功能描述：\n给vector容器进行赋值函数原型：\nvector&amp; operator=(const vector &amp;vec);//重载等号操作符assign(beg, end); //将[beg, end)区间中的数据拷贝赋值给本身。assign(n, elem); //将n个elem拷贝赋值给本身。\n#include &lt;vector&gt;void printVector(vector&lt;int&gt;&amp; v) &#123;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//赋值操作void test01()&#123;\tvector&lt;int&gt; v1; //无参构造\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv1.push_back(i);\t&#125;\tprintVector(v1);\tvector&lt;int&gt;v2;\tv2 = v1;\tprintVector(v2);\tvector&lt;int&gt;v3;\tv3.assign(v1.begin(), v1.end());\tprintVector(v3);\tvector&lt;int&gt;v4;\tv4.assign(10, 100);\tprintVector(v4);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结： vector赋值方式比较简单，使用operator=，或者assign都可以\nvector容量和大小功能描述：\n对vector容器的容量和大小操作函数原型：\nempty(); //判断容器是否为空capacity(); //容器的容量size(); //返回容器中元素的个数resize(int num); //重新指定容器的长度为num，若容器变长，则以默认值填充新位置。​ //如果容器变短，则末尾超出容器长度的元素被删除。resize(int num, elem); //重新指定容器的长度为num，若容器变长，则以elem值填充新位置。​ //如果容器变短，则末尾超出容器长度的元素被删除\n#include &lt;vector&gt;void printVector(vector&lt;int&gt;&amp; v) &#123;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tvector&lt;int&gt; v1;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv1.push_back(i);\t&#125;\tprintVector(v1);\tif (v1.empty())\t&#123;\t\tcout &lt;&lt; &quot;v1为空&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;v1不为空&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;v1的容量 = &quot; &lt;&lt; v1.capacity() &lt;&lt; endl;\t\tcout &lt;&lt; &quot;v1的大小 = &quot; &lt;&lt; v1.size() &lt;&lt; endl;\t&#125;\t//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充\tv1.resize(15,10);\tprintVector(v1);\t//resize 重新指定大小 ，若指定的更小，超出部分元素被删除\tv1.resize(5);\tprintVector(v1);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：判断是否为空 — empty返回元素个数 — size返回容器容量 — capacity重新指定大小 — resize\nvector插入和删除功能描述：\n对vector容器进行插入、删除操作函数原型：\npush_back(ele); //尾部插入元素elepop_back(); //删除最后一个元素insert(const_iterator pos, ele); //迭代器指向位置pos插入元素eleinsert(const_iterator pos, int count,ele);//迭代器指向位置pos插入count个元素eleerase(const_iterator pos); //删除迭代器指向的元素erase(const_iterator start, const_iterator end);//删除迭代器从start到end之间的元素clear(); //删除容器中所有元素\n#include &lt;vector&gt;void printVector(vector&lt;int&gt;&amp; v) &#123;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//插入和删除void test01()&#123;\tvector&lt;int&gt; v1;\t//尾插\tv1.push_back(10);\tv1.push_back(20);\tv1.push_back(30);\tv1.push_back(40);\tv1.push_back(50);\tprintVector(v1);\t//尾删\tv1.pop_back();\tprintVector(v1);\t//插入\tv1.insert(v1.begin(), 100);\tprintVector(v1);\tv1.insert(v1.begin(), 2, 1000);\tprintVector(v1);\t//删除\tv1.erase(v1.begin());\tprintVector(v1);\t//清空\tv1.erase(v1.begin(), v1.end());\tv1.clear();\tprintVector(v1);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：尾插 — push_back尾删 — pop_back插入 — insert (位置迭代器)删除 — erase （位置迭代器）清空 — clear\nvector数据存取功能描述：\n对vector中的数据的存取操作函数原型：\nat(int idx); //返回索引idx所指的数据operator[]; //返回索引idx所指的数据front(); //返回容器中第一个数据元素back(); //返回容器中最后一个数据元素\n#include &lt;vector&gt;void test01()&#123;\tvector&lt;int&gt;v1;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv1.push_back(i);\t&#125;\tfor (int i = 0; i &lt; v1.size(); i++)\t&#123;\t\tcout &lt;&lt; v1[i] &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tfor (int i = 0; i &lt; v1.size(); i++)\t&#123;\t\tcout &lt;&lt; v1.at(i) &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;v1的第一个元素为： &quot; &lt;&lt; v1.front() &lt;&lt; endl;\tcout &lt;&lt; &quot;v1的最后一个元素为： &quot; &lt;&lt; v1.back() &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：除了用迭代器获取vector容器中元素，[ ]和at也可以front返回容器第一个元素back返回容器最后一个元素\nvector互换容器功能描述：\n实现两个容器内元素进行互换函数原型：\nswap(vec); // 将vec与本身的元素互换\n#include &lt;vector&gt;void printVector(vector&lt;int&gt;&amp; v) &#123;\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tvector&lt;int&gt;v1;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv1.push_back(i);\t&#125;\tprintVector(v1);\tvector&lt;int&gt;v2;\tfor (int i = 10; i &gt; 0; i--)\t&#123;\t\tv2.push_back(i);\t&#125;\tprintVector(v2);\t//互换容器\tcout &lt;&lt; &quot;互换后&quot; &lt;&lt; endl;\tv1.swap(v2);\tprintVector(v1);\tprintVector(v2);&#125;void test02()&#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt; 100000; i++) &#123;\t\tv.push_back(i);\t&#125;\tcout &lt;&lt; &quot;v的容量为：&quot; &lt;&lt; v.capacity() &lt;&lt; endl;\tcout &lt;&lt; &quot;v的大小为：&quot; &lt;&lt; v.size() &lt;&lt; endl;\tv.resize(3);\tcout &lt;&lt; &quot;v的容量为：&quot; &lt;&lt; v.capacity() &lt;&lt; endl;\tcout &lt;&lt; &quot;v的大小为：&quot; &lt;&lt; v.size() &lt;&lt; endl;\t//收缩内存\tvector&lt;int&gt;(v).swap(v); //匿名对象\tcout &lt;&lt; &quot;v的容量为：&quot; &lt;&lt; v.capacity() &lt;&lt; endl;\tcout &lt;&lt; &quot;v的大小为：&quot; &lt;&lt; v.size() &lt;&lt; endl;&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：swap可以使两个容器互换，可以达到实用的收缩内存效果\nvector 预留空间功能描述：\n减少vector在动态扩展容量时的扩展次数函数原型：\nreserve(int len);//容器预留len个元素长度，预留位置不初始化，元素不可访问。\n#include &lt;vector&gt;void test01()&#123;\tvector&lt;int&gt; v;\t//预留空间\tv.reserve(100000);\tint num = 0;\tint* p = NULL;\tfor (int i = 0; i &lt; 100000; i++) &#123;\t\tv.push_back(i);\t\tif (p != &amp;v[0]) &#123;\t\t\tp = &amp;v[0];\t\t\tnum++;\t\t&#125;\t&#125;\tcout &lt;&lt; &quot;num:&quot; &lt;&lt; num &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：如果数据量较大，可以一开始利用reserve预留空间\ndeque容器deque容器基本概念功能：\n双端数组，可以对头端进行插入删除操作deque与vector区别：\nvector对于头部的插入删除效率低，数据量越大，效率越低deque相对而言，对头部的插入删除速度回比vector快vector访问元素时的速度会比deque快,这和两者内部实现有关\nclip_2.jpg\ndeque内部工作原理:\ndeque内部有个中控器，维护每段缓冲区中的内容，缓冲区中存放真实数据\n中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间\nclip_3.jpg\ndeque容器的迭代器也是支持随机访问的deque构造函数功能描述：\ndeque容器构造函数原型：\ndeque&lt;T&gt; deqT; //默认构造形式deque(beg, end); //构造函数将 [beg, end) 区间中的元素拷贝给本身。deque(n, elem); //构造函数将n个elem拷贝给本身。deque(const deque &amp;deq); //拷贝构造函数\n#include &lt;deque&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//deque构造void test01() &#123;\tdeque&lt;int&gt; d1; //无参构造函数\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\td1.push_back(i);\t&#125;\tprintDeque(d1);\tdeque&lt;int&gt; d2(d1.begin(),d1.end());\tprintDeque(d2);\tdeque&lt;int&gt;d3(10,100);\tprintDeque(d3);\tdeque&lt;int&gt;d4 = d3;\tprintDeque(d4);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：deque容器和vector容器的构造方式几乎一致，灵活使用即可\ndeque赋值操作功能描述：\n给deque容器进行赋值函数原型：\ndeque&amp; operator=(const deque &amp;deq); //重载等号操作符assign(beg, end); //将[beg, end)区间中的数据拷贝赋值给本身。assign(n, elem); //将n个elem拷贝赋值给本身。\n#include &lt;deque&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//赋值操作void test01()&#123;\tdeque&lt;int&gt; d1;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\td1.push_back(i);\t&#125;\tprintDeque(d1);\tdeque&lt;int&gt;d2;\td2 = d1;\tprintDeque(d2);\tdeque&lt;int&gt;d3;\td3.assign(d1.begin(), d1.end());\tprintDeque(d3);\tdeque&lt;int&gt;d4;\td4.assign(10, 100);\tprintDeque(d4);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：deque赋值操作也与vector相同，需熟练掌握\ndeque大小操作功能描述：\n对deque容器的大小进行操作函数原型：\ndeque.empty(); //判断容器是否为空deque.size(); //返回容器中元素的个数deque.resize(num); //重新指定容器的长度为num,若容器变长，则以默认值填充新位置。​ //如果容器变短，则末尾超出容器长度的元素被删除。deque.resize(num, elem); //重新指定容器的长度为num,若容器变长，则以elem值填充新位置。​ //如果容器变短，则末尾超出容器长度的元素被删除\n#include &lt;deque&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//大小操作void test01()&#123;\tdeque&lt;int&gt; d1;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\td1.push_back(i);\t&#125;\tprintDeque(d1);\t//判断容器是否为空\tif (d1.empty()) &#123;\t\tcout &lt;&lt; &quot;d1为空!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;d1不为空!&quot; &lt;&lt; endl;\t\t//统计大小\t\tcout &lt;&lt; &quot;d1的大小为：&quot; &lt;&lt; d1.size() &lt;&lt; endl;\t&#125;\t//重新指定大小\td1.resize(15, 1);\tprintDeque(d1);\td1.resize(5);\tprintDeque(d1);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：deque没有容量的概念判断是否为空 — empty返回元素个数 — size重新指定个数 — resize\ndeque 插入和删除功能描述：\n向deque容器中插入和删除数据函数原型：\n两端插入操作：push_back(elem); //在容器尾部添加一个数据push_front(elem); //在容器头部插入一个数据pop_back(); //删除容器最后一个数据pop_front(); //删除容器第一个数据指定位置操作：insert(pos,elem); //在pos位置插入一个elem元素的拷贝，返回新数据的位置。insert(pos,n,elem); //在pos位置插入n个elem数据，无返回值。insert(pos,beg,end); //在pos位置插入[beg,end)区间的数据，无返回值。clear(); //清空容器的所有数据erase(beg,end); //删除[beg,end)区间的数据，返回下一个数据的位置。erase(pos); //删除pos位置的数据，返回下一个数据的位置。\n#include &lt;deque&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//两端操作void test01()&#123;\tdeque&lt;int&gt; d;\t//尾插\td.push_back(10);\td.push_back(20);\t//头插\td.push_front(100);\td.push_front(200);\tprintDeque(d);\t//尾删\td.pop_back();\t//头删\td.pop_front();\tprintDeque(d);&#125;//插入void test02()&#123;\tdeque&lt;int&gt; d;\td.push_back(10);\td.push_back(20);\td.push_front(100);\td.push_front(200);\tprintDeque(d);\td.insert(d.begin(), 1000);\tprintDeque(d);\td.insert(d.begin(), 2,10000);\tprintDeque(d);\tdeque&lt;int&gt;d2;\td2.push_back(1);\td2.push_back(2);\td2.push_back(3);\td.insert(d.begin(), d2.begin(), d2.end());\tprintDeque(d);&#125;//删除void test03()&#123;\tdeque&lt;int&gt; d;\td.push_back(10);\td.push_back(20);\td.push_front(100);\td.push_front(200);\tprintDeque(d);\td.erase(d.begin());\tprintDeque(d);\td.erase(d.begin(), d.end());\td.clear();\tprintDeque(d);&#125;int main() &#123;\t//test01();\t//test02();    test03();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：插入和删除提供的位置是迭代器！尾插 — push_back尾删 — pop_back头插 — push_front头删 — pop_front\ndeque 数据存取功能描述：\n对deque 中的数据的存取操作函数原型：\nat(int idx); //返回索引idx所指的数据operator[]; //返回索引idx所指的数据front(); //返回容器中第一个数据元素back(); //返回容器中最后一个数据元素\n#include &lt;deque&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//数据存取void test01()&#123;\tdeque&lt;int&gt; d;\td.push_back(10);\td.push_back(20);\td.push_front(100);\td.push_front(200);\tfor (int i = 0; i &lt; d.size(); i++) &#123;\t\tcout &lt;&lt; d[i] &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tfor (int i = 0; i &lt; d.size(); i++) &#123;\t\tcout &lt;&lt; d.at(i) &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;front:&quot; &lt;&lt; d.front() &lt;&lt; endl;\tcout &lt;&lt; &quot;back:&quot; &lt;&lt; d.back() &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：除了用迭代器获取deque容器中元素，[ ]和at也可以front返回容器第一个元素back返回容器最后一个元素\ndeque 排序功能描述：\n利用算法实现对deque容器进行排序算法：\nsort(iterator beg, iterator end) //对beg和end区间内元素进行排序\n#include &lt;deque&gt;#include &lt;algorithm&gt;void printDeque(const deque&lt;int&gt;&amp; d)&#123;\tfor (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tdeque&lt;int&gt; d;\td.push_back(10);\td.push_back(20);\td.push_front(100);\td.push_front(200);\tprintDeque(d);\tsort(d.begin(), d.end());\tprintDeque(d);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：sort算法非常实用，使用时包含头文件 algorithm 即可\n案例-评委打分案例描述有5名选手：选手ABCDE，10个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。\n实现步骤创建五名选手，放到vector中遍历vector容器，取出来每一个选手，执行for循环，可以把10个评分打分存到deque容器中sort算法对deque容器中分数排序，去除最高和最低分deque容器遍历一遍，累加总分获取平均分\n//选手类class Person&#123;public:\tPerson(string name, int score)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Score = score;\t&#125;\tstring m_Name; //姓名\tint m_Score;  //平均分&#125;;void createPerson(vector&lt;Person&gt;&amp;v)&#123;\tstring nameSeed = &quot;ABCDE&quot;;\tfor (int i = 0; i &lt; 5; i++)\t&#123;\t\tstring name = &quot;选手&quot;;\t\tname += nameSeed[i];\t\tint score = 0;\t\tPerson p(name, score);\t\t//将创建的person对象 放入到容器中\t\tv.push_back(p);\t&#125;&#125;//打分void setScore(vector&lt;Person&gt;&amp;v)&#123;\tfor (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\t//将评委的分数 放入到deque容器中\t\tdeque&lt;int&gt;d;\t\tfor (int i = 0; i &lt; 10; i++)\t\t&#123;\t\t\tint score = rand() % 41 + 60;  // 60 ~ 100\t\t\td.push_back(score);\t\t&#125;\t\t//cout &lt;&lt; &quot;选手： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 打分： &quot; &lt;&lt; endl;\t\t//for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)\t\t//&#123;\t\t//\tcout &lt;&lt; *dit &lt;&lt; &quot; &quot;;\t\t//&#125;\t\t//cout &lt;&lt; endl;\t\t//排序\t\tsort(d.begin(), d.end());\t\t//去除最高和最低分\t\td.pop_back();\t\td.pop_front();\t\t//取平均分\t\tint sum = 0;\t\tfor (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)\t\t&#123;\t\t\tsum += *dit; //累加每个评委的分数\t\t&#125;\t\tint avg = sum / d.size();\t\t//将平均分 赋值给选手身上\t\tit-&gt;m_Score = avg;\t&#125;&#125;void showScore(vector&lt;Person&gt;&amp;v)&#123;\tfor (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 平均分： &quot; &lt;&lt; it-&gt;m_Score &lt;&lt; endl;\t&#125;&#125;int main() &#123;\t//随机数种子\tsrand((unsigned int)time(NULL));\t//1、创建5名选手\tvector&lt;Person&gt;v;  //存放选手容器\tcreatePerson(v);\t//测试\t//for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)\t//&#123;\t//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; (*it).m_Name &lt;&lt; &quot; 分数： &quot; &lt;&lt; (*it).m_Score &lt;&lt; endl;\t//&#125;\t//2、给5名选手打分\tsetScore(v);\t//3、显示最后得分\tshowScore(v);\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：选取不同的容器操作数据，可以提升代码的效率\nstack容器stack 基本概念概念：stack是一种先进后出(First In Last Out,FILO)的数据结构，它只有一个出口\nclip_4.jpg\n栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为\nstack 常用接口功能描述：栈容器常用的对外接口\n构造函数：\nstack stk; //stack采用模板类实现， stack对象的默认构造形式stack(const stack &amp;stk); //拷贝构造函数赋值操作：\nstack&amp; operator=(const stack &amp;stk); //重载等号操作符数据存取：\npush(elem); //向栈顶添加元素pop(); //从栈顶移除第一个元素top(); //返回栈顶元素大小操作：\nempty(); //判断堆栈是否为空size(); //返回栈的大小\n#include &lt;stack&gt;//栈容器常用接口void test01()&#123;\t//创建栈容器 栈容器必须符合先进后出\tstack&lt;int&gt; s;\t//向栈中添加元素，叫做 压栈 入栈\ts.push(10);\ts.push(20);\ts.push(30);\twhile (!s.empty()) &#123;\t\t//输出栈顶元素\t\tcout &lt;&lt; &quot;栈顶元素为： &quot; &lt;&lt; s.top() &lt;&lt; endl;\t\t//弹出栈顶元素\t\ts.pop();\t&#125;\tcout &lt;&lt; &quot;栈的大小为：&quot; &lt;&lt; s.size() &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：返回栈顶 — top判断栈是否为空 — empty返回栈大小 — size\nqueue 容器queue 基本概念概念：Queue是一种先进先出(First In First Out,FIFO)的数据结构，它有两个出口\nclip_5.jpg\n队列容器允许从一端新增元素，从另一端移除元素\n队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为\n队列中进数据称为 — 入队 push\n队列中出数据称为 — 出队 pop\nqueue 常用接口功能描述：栈容器常用的对外接口\n构造函数：\nqueue que; //queue采用模板类实现，queue对象的默认构造形式queue(const queue &amp;que); //拷贝构造函数赋值操作：\nqueue&amp; operator=(const queue &amp;que); //重载等号操作符数据存取：\npush(elem); //往队尾添加元素pop(); //从队头移除第一个元素back(); //返回最后一个元素front(); //返回第一个元素大小操作：\nempty(); //判断堆栈是否为空size(); //返回栈的大小\n#include &lt;queue&gt;#include &lt;string&gt;class Person&#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\tstring m_Name;\tint m_Age;&#125;;void test01() &#123;\t//创建队列\tqueue&lt;Person&gt; q;\t//准备数据\tPerson p1(&quot;唐僧&quot;, 30);\tPerson p2(&quot;孙悟空&quot;, 1000);\tPerson p3(&quot;猪八戒&quot;, 900);\tPerson p4(&quot;沙僧&quot;, 800);\t//向队列中添加元素  入队操作\tq.push(p1);\tq.push(p2);\tq.push(p3);\tq.push(p4);\t//队列不提供迭代器，更不支持随机访问\twhile (!q.empty()) &#123;\t\t//输出队头元素\t\tcout &lt;&lt; &quot;队头元素-- 姓名： &quot; &lt;&lt; q.front().m_Name              &lt;&lt; &quot; 年龄： &quot;&lt;&lt; q.front().m_Age &lt;&lt; endl;\t\tcout &lt;&lt; &quot;队尾元素-- 姓名： &quot; &lt;&lt; q.back().m_Name              &lt;&lt; &quot; 年龄： &quot; &lt;&lt; q.back().m_Age &lt;&lt; endl;\t\tcout &lt;&lt; endl;\t\t//弹出队头元素\t\tq.pop();\t&#125;\tcout &lt;&lt; &quot;队列大小为：&quot; &lt;&lt; q.size() &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：入队 — push出队 — pop返回队头元素 — front返回队尾元素 — back判断队是否为空 — empty返回队列大小 — size\nlist容器list基本概念功能：将数据进行链式存储\n链表（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的\n链表的组成：链表由一系列结点组成\n结点的组成：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域\nSTL中的链表是一个双向循环链表\nclip_6.jpg\n由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于双向迭代器\nlist的优点：\n采用动态存储分配，不会造成内存浪费和溢出链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素list的缺点：\n链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。\n总结：STL中List和vector是两个最常被使用的容器，各有优缺点\nlist构造函数功能描述：\n创建list容器函数原型：\nlist&lt;T&gt; lst; //list采用采用模板类实现,对象的默认构造形式：list(beg,end); //构造函数将[beg, end)区间中的元素拷贝给本身。list(n,elem); //构造函数将n个elem拷贝给本身。list(const list &amp;lst); //拷贝构造函数。\n#include &lt;list&gt;void printList(const list&lt;int&gt;&amp; L) &#123;\tfor (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tlist&lt;int&gt;L1;\tL1.push_back(10);\tL1.push_back(20);\tL1.push_back(30);\tL1.push_back(40);\tprintList(L1);\tlist&lt;int&gt;L2(L1.begin(),L1.end());\tprintList(L2);\tlist&lt;int&gt;L3(L2);\tprintList(L3);\tlist&lt;int&gt;L4(10, 1000);\tprintList(L4);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：list 构造方式同其他几个STL常用容器，熟练掌握即可\nlist 赋值和交换功能描述：\n给list容器进行赋值，以及交换list容器函数原型：\nassign(beg, end); //将[beg, end)区间中的数据拷贝赋值给本身。assign(n, elem); //将n个elem拷贝赋值给本身。list&amp; operator=(const list &amp;lst); //重载等号操作符swap(lst); //将lst与本身的元素互换。\n#include &lt;list&gt;void printList(const list&lt;int&gt;&amp; L) &#123;\tfor (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//赋值和交换void test01()&#123;\tlist&lt;int&gt;L1;\tL1.push_back(10);\tL1.push_back(20);\tL1.push_back(30);\tL1.push_back(40);\tprintList(L1);\t//赋值\tlist&lt;int&gt;L2;\tL2 = L1;\tprintList(L2);\tlist&lt;int&gt;L3;\tL3.assign(L2.begin(), L2.end());\tprintList(L3);\tlist&lt;int&gt;L4;\tL4.assign(10, 100);\tprintList(L4);&#125;//交换void test02()&#123;\tlist&lt;int&gt;L1;\tL1.push_back(10);\tL1.push_back(20);\tL1.push_back(30);\tL1.push_back(40);\tlist&lt;int&gt;L2;\tL2.assign(10, 100);\tcout &lt;&lt; &quot;交换前： &quot; &lt;&lt; endl;\tprintList(L1);\tprintList(L2);\tcout &lt;&lt; endl;\tL1.swap(L2);\tcout &lt;&lt; &quot;交换后： &quot; &lt;&lt; endl;\tprintList(L1);\tprintList(L2);&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：list赋值和交换操作能够灵活运用即可\n3.7.4 list 大小操作功能描述：\n对list容器的大小进行操作函数原型：\nsize(); //返回容器中元素的个数\nempty(); //判断容器是否为空\nresize(num); //重新指定容器的长度为num，若容器变长，则以默认值填充新位置。\n​ //如果容器变短，则末尾超出容器长度的元素被删除。\nresize(num, elem); //重新指定容器的长度为num，若容器变长，则以elem值填充新位置。\n            ​                        //如果容器变短，则末尾超出容器长度的元素被删除。\n\n#include &lt;list&gt;void printList(const list&lt;int&gt;&amp; L) &#123;\tfor (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//大小操作void test01()&#123;\tlist&lt;int&gt;L1;\tL1.push_back(10);\tL1.push_back(20);\tL1.push_back(30);\tL1.push_back(40);\tif (L1.empty())\t&#123;\t\tcout &lt;&lt; &quot;L1为空&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;L1不为空&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;L1的大小为： &quot; &lt;&lt; L1.size() &lt;&lt; endl;\t&#125;\t//重新指定大小\tL1.resize(10);\tprintList(L1);\tL1.resize(2);\tprintList(L1);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n判断是否为空 — empty返回元素个数 — size重新指定个数 — resize3.7.5 list 插入和删除功能描述：\n对list容器进行数据的插入和删除函数原型：\npush_back(elem);//在容器尾部加入一个元素pop_back();//删除容器中最后一个元素push_front(elem);//在容器开头插入一个元素pop_front();//从容器开头移除第一个元素insert(pos,elem);//在pos位置插elem元素的拷贝，返回新数据的位置。insert(pos,n,elem);//在pos位置插入n个elem数据，无返回值。insert(pos,beg,end);//在pos位置插入[beg,end)区间的数据，无返回值。clear();//移除容器的所有数据erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。erase(pos);//删除pos位置的数据，返回下一个数据的位置。remove(elem);//删除容器中所有与elem值匹配的元素。\n#include &lt;list&gt;void printList(const list&lt;int&gt;&amp; L) &#123;\tfor (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//插入和删除void test01()&#123;\tlist&lt;int&gt; L;\t//尾插\tL.push_back(10);\tL.push_back(20);\tL.push_back(30);\t//头插\tL.push_front(100);\tL.push_front(200);\tL.push_front(300);\tprintList(L);\t//尾删\tL.pop_back();\tprintList(L);\t//头删\tL.pop_front();\tprintList(L);\t//插入\tlist&lt;int&gt;::iterator it = L.begin();\tL.insert(++it, 1000);\tprintList(L);\t//删除\tit = L.begin();\tL.erase(++it);\tprintList(L);\t//移除\tL.push_back(10000);\tL.push_back(10000);\tL.push_back(10000);\tprintList(L);\tL.remove(10000);\tprintList(L);    //清空\tL.clear();\tprintList(L);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n尾插 — push_back尾删 — pop_back头插 — push_front头删 — pop_front插入 — insert删除 — erase移除 — remove清空 — clear3.7.6 list 数据存取功能描述：\n对list容器中数据进行存取函数原型：\nfront(); //返回第一个元素。back(); //返回最后一个元素。\n#include &lt;list&gt;//数据存取void test01()&#123;\tlist&lt;int&gt;L1;\tL1.push_back(10);\tL1.push_back(20);\tL1.push_back(30);\tL1.push_back(40);\t//cout &lt;&lt; L1.at(0) &lt;&lt; endl;//错误 不支持at访问数据\t//cout &lt;&lt; L1[0] &lt;&lt; endl; //错误  不支持[]方式访问数据\tcout &lt;&lt; &quot;第一个元素为： &quot; &lt;&lt; L1.front() &lt;&lt; endl;\tcout &lt;&lt; &quot;最后一个元素为： &quot; &lt;&lt; L1.back() &lt;&lt; endl;\t//list容器的迭代器是双向迭代器，不支持随机访问\tlist&lt;int&gt;::iterator it = L1.begin();\t//it = it + 1;//错误，不可以跳跃访问，即使是+1&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\nlist容器中不可以通过[]或者at方式访问数据返回第一个元素 — front返回最后一个元素 — back3.7.7 list 反转和排序功能描述：\n将容器中的元素反转，以及将容器中的数据进行排序函数原型：\nreverse(); //反转链表sort(); //链表排序\nvoid printList(const list&lt;int&gt;&amp; L) &#123;\tfor (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;bool myCompare(int val1 , int val2)&#123;\treturn val1 &gt; val2;&#125;//反转和排序void test01()&#123;\tlist&lt;int&gt; L;\tL.push_back(90);\tL.push_back(30);\tL.push_back(20);\tL.push_back(70);\tprintList(L);\t//反转容器的元素\tL.reverse();\tprintList(L);\t//排序\tL.sort(); //默认的排序规则 从小到大\tprintList(L);\tL.sort(myCompare); //指定规则，从大到小\tprintList(L);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n反转 — reverse排序 — sort （成员函数）3.7.8 排序案例案例描述：将Person自定义数据类型进行排序，Person中属性有姓名、年龄、身高\n排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序\n#include &lt;list&gt;#include &lt;string&gt;class Person &#123;public:\tPerson(string name, int age , int height) &#123;\t\tm_Name = name;\t\tm_Age = age;\t\tm_Height = height;\t&#125;public:\tstring m_Name;  //姓名\tint m_Age;      //年龄\tint m_Height;   //身高&#125;;bool ComparePerson(Person&amp; p1, Person&amp; p2) &#123;\tif (p1.m_Age == p2.m_Age) &#123;\t\treturn p1.m_Height  &gt; p2.m_Height;\t&#125;\telse\t&#123;\t\treturn  p1.m_Age &lt; p2.m_Age;\t&#125;&#125;void test01() &#123;\tlist&lt;Person&gt; L;\tPerson p1(&quot;刘备&quot;, 35 , 175);\tPerson p2(&quot;曹操&quot;, 45 , 180);\tPerson p3(&quot;孙权&quot;, 40 , 170);\tPerson p4(&quot;赵云&quot;, 25 , 190);\tPerson p5(&quot;张飞&quot;, 35 , 160);\tPerson p6(&quot;关羽&quot;, 35 , 200);\tL.push_back(p1);\tL.push_back(p2);\tL.push_back(p3);\tL.push_back(p4);\tL.push_back(p5);\tL.push_back(p6);\tfor (list&lt;Person&gt;::iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 年龄： &quot; &lt;&lt; it-&gt;m_Age              &lt;&lt; &quot; 身高： &quot; &lt;&lt; it-&gt;m_Height &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;---------------------------------&quot; &lt;&lt; endl;\tL.sort(ComparePerson); //排序\tfor (list&lt;Person&gt;::iterator it = L.begin(); it != L.end(); it++) &#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 年龄： &quot; &lt;&lt; it-&gt;m_Age              &lt;&lt; &quot; 身高： &quot; &lt;&lt; it-&gt;m_Height &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序\n高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂\n3.8 set/ multiset 容器3.8.1 set基本概念简介：\n所有元素都会在插入时自动被排序本质：\nset/multiset属于关联式容器，底层结构是用二叉树实现。set和multiset区别：\nset不允许容器中有重复的元素multiset允许容器中有重复的元素3.8.2 set构造和赋值功能描述：创建set容器以及赋值\n构造：\nset st; //默认构造函数：set(const set &amp;st); //拷贝构造函数赋值：\nset&amp; operator=(const set &amp;st); //重载等号操作符\n#include &lt;set&gt;void printSet(set&lt;int&gt; &amp; s)&#123;\tfor (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//构造和赋值void test01()&#123;\tset&lt;int&gt; s1;\ts1.insert(10);\ts1.insert(30);\ts1.insert(20);\ts1.insert(40);\tprintSet(s1);\t//拷贝构造\tset&lt;int&gt;s2(s1);\tprintSet(s2);\t//赋值\tset&lt;int&gt;s3;\ts3 = s2;\tprintSet(s3);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\nset容器插入数据时用insertset容器插入数据的数据会自动排序3.8.3 set大小和交换功能描述：\n统计set容器大小以及交换set容器函数原型：\nsize(); //返回容器中元素的数目empty(); //判断容器是否为空swap(st); //交换两个集合容器\n#include &lt;set&gt;void printSet(set&lt;int&gt; &amp; s)&#123;\tfor (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//大小void test01()&#123;\tset&lt;int&gt; s1;\ts1.insert(10);\ts1.insert(30);\ts1.insert(20);\ts1.insert(40);\tif (s1.empty())\t&#123;\t\tcout &lt;&lt; &quot;s1为空&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;s1不为空&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;s1的大小为： &quot; &lt;&lt; s1.size() &lt;&lt; endl;\t&#125;&#125;//交换void test02()&#123;\tset&lt;int&gt; s1;\ts1.insert(10);\ts1.insert(30);\ts1.insert(20);\ts1.insert(40);\tset&lt;int&gt; s2;\ts2.insert(100);\ts2.insert(300);\ts2.insert(200);\ts2.insert(400);\tcout &lt;&lt; &quot;交换前&quot; &lt;&lt; endl;\tprintSet(s1);\tprintSet(s2);\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;交换后&quot; &lt;&lt; endl;\ts1.swap(s2);\tprintSet(s1);\tprintSet(s2);&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n统计大小 — size判断是否为空 — empty交换容器 — swap3.8.4 set插入和删除功能描述：\nset容器进行插入数据和删除数据函数原型：\ninsert(elem); //在容器中插入元素。clear(); //清除所有元素erase(pos); //删除pos迭代器所指的元素，返回下一个元素的迭代器。erase(beg, end); //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。erase(elem); //删除容器中值为elem的元素。\n#include &lt;set&gt;void printSet(set&lt;int&gt; &amp; s)&#123;\tfor (set&lt;int&gt;::iterator it = s.begin(); it != s.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;//插入和删除void test01()&#123;\tset&lt;int&gt; s1;\t//插入\ts1.insert(10);\ts1.insert(30);\ts1.insert(20);\ts1.insert(40);\tprintSet(s1);\t//删除\ts1.erase(s1.begin());\tprintSet(s1);\ts1.erase(30);\tprintSet(s1);\t//清空\t//s1.erase(s1.begin(), s1.end());\ts1.clear();\tprintSet(s1);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n插入 — insert删除 — erase清空 — clear3.8.5 set查找和统计功能描述：\n对set容器进行查找数据以及统计数据函数原型：\nfind(key); //查找key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();count(key); //统计key的元素个数\n#include &lt;set&gt;//查找和统计void test01()&#123;\tset&lt;int&gt; s1;\t//插入\ts1.insert(10);\ts1.insert(30);\ts1.insert(20);\ts1.insert(40);\t//查找\tset&lt;int&gt;::iterator pos = s1.find(30);\tif (pos != s1.end())\t&#123;\t\tcout &lt;&lt; &quot;找到了元素 ： &quot; &lt;&lt; *pos &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;未找到元素&quot; &lt;&lt; endl;\t&#125;\t//统计\tint num = s1.count(30);\tcout &lt;&lt; &quot;num = &quot; &lt;&lt; num &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n查找 — find （返回的是迭代器）统计 — count （对于set，结果为0或者1）3.8.6 set和multiset区别学习目标：\n掌握set和multiset的区别区别：\nset不可以插入重复数据，而multiset可以set插入数据的同时会返回插入结果，表示插入是否成功multiset不会检测数据，因此可以插入重复数据\n#include &lt;set&gt;//set和multiset区别void test01()&#123;\tset&lt;int&gt; s;\tpair&lt;set&lt;int&gt;::iterator, bool&gt;  ret = s.insert(10);\tif (ret.second) &#123;\t\tcout &lt;&lt; &quot;第一次插入成功!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;第一次插入失败!&quot; &lt;&lt; endl;\t&#125;\tret = s.insert(10);\tif (ret.second) &#123;\t\tcout &lt;&lt; &quot;第二次插入成功!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;第二次插入失败!&quot; &lt;&lt; endl;\t&#125;\t//multiset\tmultiset&lt;int&gt; ms;\tms.insert(10);\tms.insert(10);\tfor (multiset&lt;int&gt;::iterator it = ms.begin(); it != ms.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n如果不允许插入重复数据可以利用set如果需要插入重复数据利用multiset3.8.7 pair对组创建功能描述：\n成对出现的数据，利用对组可以返回两个数据两种创建方式：\npair&lt;type, type&gt; p ( value1, value2 );pair&lt;type, type&gt; p = make_pair( value1, value2 );\n#include &lt;string&gt;//对组创建void test01()&#123;\tpair&lt;string, int&gt; p(string(&quot;Tom&quot;), 20);\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt;  p.first &lt;&lt; &quot; 年龄： &quot; &lt;&lt; p.second &lt;&lt; endl;\tpair&lt;string, int&gt; p2 = make_pair(&quot;Jerry&quot;, 10);\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; p2.first &lt;&lt; &quot; 年龄： &quot; &lt;&lt; p2.second &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n两种方式都可以创建对组，记住一种即可\n3.8.8 set容器排序学习目标：\nset容器默认排序规则为从小到大，掌握如何改变排序规则主要技术点：\n利用仿函数，可以改变排序规则示例一 set存放内置数据类型\n#include &lt;set&gt;class MyCompare&#123;public:\tbool operator()(int v1, int v2) &#123;\t\treturn v1 &gt; v2;\t&#125;&#125;;void test01()&#123;\tset&lt;int&gt; s1;\ts1.insert(10);\ts1.insert(40);\ts1.insert(20);\ts1.insert(30);\ts1.insert(50);\t//默认从小到大\tfor (set&lt;int&gt;::iterator it = s1.begin(); it != s1.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\t//指定排序规则\tset&lt;int,MyCompare&gt; s2;\ts2.insert(10);\ts2.insert(40);\ts2.insert(20);\ts2.insert(30);\ts2.insert(50);\tfor (set&lt;int, MyCompare&gt;::iterator it = s2.begin(); it != s2.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：利用仿函数可以指定set容器的排序规则\n示例二 set存放自定义数据类型\n#include &lt;set&gt;#include &lt;string&gt;class Person&#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\tstring m_Name;\tint m_Age;&#125;;class comparePerson&#123;public:\tbool operator()(const Person&amp; p1, const Person &amp;p2)\t&#123;\t\t//按照年龄进行排序  降序\t\treturn p1.m_Age &gt; p2.m_Age;\t&#125;&#125;;void test01()&#123;\tset&lt;Person, comparePerson&gt; s;\tPerson p1(&quot;刘备&quot;, 23);\tPerson p2(&quot;关羽&quot;, 27);\tPerson p3(&quot;张飞&quot;, 25);\tPerson p4(&quot;赵云&quot;, 21);\ts.insert(p1);\ts.insert(p2);\ts.insert(p3);\ts.insert(p4);\tfor (set&lt;Person, comparePerson&gt;::iterator it = s.begin(); it != s.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 年龄： &quot; &lt;&lt; it-&gt;m_Age &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n对于自定义数据类型，set必须指定排序规则才可以插入数据\n3.9 map/ multimap容器3.9.1 map基本概念简介：\nmap中所有元素都是pairpair中第一个元素为key（键值），起到索引作用，第二个元素为value（实值）所有元素都会根据元素的键值自动排序本质：\nmap/multimap属于关联式容器，底层结构是用二叉树实现。优点：\n可以根据key值快速找到value值map和multimap区别：\nmap不允许容器中有重复key值元素multimap允许容器中有重复key值元素3.9.2 map构造和赋值功能描述：\n对map容器进行构造和赋值操作函数原型：\n构造：\nmap&lt;T1, T2&gt; mp; //map默认构造函数:map(const map &amp;mp); //拷贝构造函数赋值：\nmap&amp; operator=(const map &amp;mp); //重载等号操作符\n#include &lt;map&gt;void printMap(map&lt;int,int&gt;&amp;m)&#123;\tfor (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;key = &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tmap&lt;int,int&gt;m; //默认构造\tm.insert(pair&lt;int, int&gt;(1, 10));\tm.insert(pair&lt;int, int&gt;(2, 20));\tm.insert(pair&lt;int, int&gt;(3, 30));\tprintMap(m);\tmap&lt;int, int&gt;m2(m); //拷贝构造\tprintMap(m2);\tmap&lt;int, int&gt;m3;\tm3 = m2; //赋值\tprintMap(m3);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：map中所有元素都是成对出现，插入数据时候要使用对组\n3.9.3 map大小和交换功能描述：\n统计map容器大小以及交换map容器函数原型：\nsize(); //返回容器中元素的数目empty(); //判断容器是否为空swap(st); //交换两个集合容器\n#include &lt;map&gt;void printMap(map&lt;int,int&gt;&amp;m)&#123;\tfor (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;key = &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\tmap&lt;int, int&gt;m;\tm.insert(pair&lt;int, int&gt;(1, 10));\tm.insert(pair&lt;int, int&gt;(2, 20));\tm.insert(pair&lt;int, int&gt;(3, 30));\tif (m.empty())\t&#123;\t\tcout &lt;&lt; &quot;m为空&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;m不为空&quot; &lt;&lt; endl;\t\tcout &lt;&lt; &quot;m的大小为： &quot; &lt;&lt; m.size() &lt;&lt; endl;\t&#125;&#125;//交换void test02()&#123;\tmap&lt;int, int&gt;m;\tm.insert(pair&lt;int, int&gt;(1, 10));\tm.insert(pair&lt;int, int&gt;(2, 20));\tm.insert(pair&lt;int, int&gt;(3, 30));\tmap&lt;int, int&gt;m2;\tm2.insert(pair&lt;int, int&gt;(4, 100));\tm2.insert(pair&lt;int, int&gt;(5, 200));\tm2.insert(pair&lt;int, int&gt;(6, 300));\tcout &lt;&lt; &quot;交换前&quot; &lt;&lt; endl;\tprintMap(m);\tprintMap(m2);\tcout &lt;&lt; &quot;交换后&quot; &lt;&lt; endl;\tm.swap(m2);\tprintMap(m);\tprintMap(m2);&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n统计大小 — size判断是否为空 — empty交换容器 — swap3.9.4 map插入和删除功能描述：\nmap容器进行插入数据和删除数据函数原型：\ninsert(elem); //在容器中插入元素。clear(); //清除所有元素erase(pos); //删除pos迭代器所指的元素，返回下一个元素的迭代器。erase(beg, end); //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。erase(key); //删除容器中值为key的元素。\n#include &lt;map&gt;void printMap(map&lt;int,int&gt;&amp;m)&#123;\tfor (map&lt;int, int&gt;::iterator it = m.begin(); it != m.end(); it++)\t&#123;\t\tcout &lt;&lt; &quot;key = &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value = &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;\t&#125;\tcout &lt;&lt; endl;&#125;void test01()&#123;\t//插入\tmap&lt;int, int&gt; m;\t//第一种插入方式\tm.insert(pair&lt;int, int&gt;(1, 10));\t//第二种插入方式\tm.insert(make_pair(2, 20));\t//第三种插入方式\tm.insert(map&lt;int, int&gt;::value_type(3, 30));\t//第四种插入方式\tm[4] = 40;\tprintMap(m);\t//删除\tm.erase(m.begin());\tprintMap(m);\tm.erase(3);\tprintMap(m);\t//清空\tm.erase(m.begin(),m.end());\tm.clear();\tprintMap(m);&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\nmap插入方式很多，记住其一即可插入 — insert删除 — erase清空 — clear3.9.5 map查找和统计功能描述：\n对map容器进行查找数据以及统计数据函数原型：\nfind(key); //查找key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();count(key); //统计key的元素个数\n#include &lt;map&gt;//查找和统计void test01()&#123;\tmap&lt;int, int&gt;m;\tm.insert(pair&lt;int, int&gt;(1, 10));\tm.insert(pair&lt;int, int&gt;(2, 20));\tm.insert(pair&lt;int, int&gt;(3, 30));\t//查找\tmap&lt;int, int&gt;::iterator pos = m.find(3);\tif (pos != m.end())\t&#123;\t\tcout &lt;&lt; &quot;找到了元素 key = &quot; &lt;&lt; (*pos).first &lt;&lt; &quot; value = &quot; &lt;&lt; (*pos).second &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;未找到元素&quot; &lt;&lt; endl;\t&#125;\t//统计\tint num = m.count(3);\tcout &lt;&lt; &quot;num = &quot; &lt;&lt; num &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n查找 — find （返回的是迭代器）统计 — count （对于map，结果为0或者1）3.9.6 map容器排序学习目标：\nmap容器默认排序规则为 按照key值进行 从小到大排序，掌握如何改变排序规则主要技术点:\n利用仿函数，可以改变排序规则\n#include &lt;map&gt;class MyCompare &#123;public:\tbool operator()(int v1, int v2) &#123;\t\treturn v1 &gt; v2;\t&#125;&#125;;void test01()&#123;\t//默认从小到大排序\t//利用仿函数实现从大到小排序\tmap&lt;int, int, MyCompare&gt; m;\tm.insert(make_pair(1, 10));\tm.insert(make_pair(2, 20));\tm.insert(make_pair(3, 30));\tm.insert(make_pair(4, 40));\tm.insert(make_pair(5, 50));\tfor (map&lt;int, int, MyCompare&gt;::iterator it = m.begin(); it != m.end(); it++) &#123;\t\tcout &lt;&lt; &quot;key:&quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; value:&quot; &lt;&lt; it-&gt;second &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n利用仿函数可以指定map容器的排序规则对于自定义数据类型，map必须要指定排序规则,同set容器3.10 案例-员工分组3.10.1 案例描述公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作员工信息有: 姓名 工资组成；部门分为：策划、美术、研发随机给10名员工分配部门和工资通过multimap进行信息的插入 key(部门编号) value(员工)分部门显示员工信息3.10.2 实现步骤创建10名员工，放到vector中遍历vector容器，取出每个员工，进行随机分组分组后，将员工部门编号作为key，具体员工作为value，放入到multimap容器中分部门显示员工信息\n#include&lt;iostream&gt;using namespace std;#include &lt;vector&gt;#include &lt;string&gt;#include &lt;map&gt;#include &lt;ctime&gt;/*- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发- 随机给10名员工分配部门和工资- 通过multimap进行信息的插入  key(部门编号) value(员工)- 分部门显示员工信息*/#define CEHUA  0#define MEISHU 1#define YANFA  2class Worker&#123;public:\tstring m_Name;\tint m_Salary;&#125;;void createWorker(vector&lt;Worker&gt;&amp;v)&#123;\tstring nameSeed = &quot;ABCDEFGHIJ&quot;;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tWorker worker;\t\tworker.m_Name = &quot;员工&quot;;\t\tworker.m_Name += nameSeed[i];\t\tworker.m_Salary = rand() % 10000 + 10000; // 10000 ~ 19999\t\t//将员工放入到容器中\t\tv.push_back(worker);\t&#125;&#125;//员工分组void setGroup(vector&lt;Worker&gt;&amp;v,multimap&lt;int,Worker&gt;&amp;m)&#123;\tfor (vector&lt;Worker&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\t//产生随机部门编号\t\tint deptId = rand() % 3; // 0 1 2\t\t//将员工插入到分组中\t\t//key部门编号，value具体员工\t\tm.insert(make_pair(deptId, *it));\t&#125;&#125;void showWorkerByGourp(multimap&lt;int,Worker&gt;&amp;m)&#123;\t// 0  A  B  C   1  D  E   2  F G ...\tcout &lt;&lt; &quot;策划部门：&quot; &lt;&lt; endl;\tmultimap&lt;int,Worker&gt;::iterator pos = m.find(CEHUA);\tint count = m.count(CEHUA); // 统计具体人数\tint index = 0;\tfor (; pos != m.end() &amp;&amp; index &lt; count; pos++ , index++)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; pos-&gt;second.m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;----------------------&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;美术部门： &quot; &lt;&lt; endl;\tpos = m.find(MEISHU);\tcount = m.count(MEISHU); // 统计具体人数\tindex = 0;\tfor (; pos != m.end() &amp;&amp; index &lt; count; pos++, index++)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; pos-&gt;second.m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;\t&#125;\tcout &lt;&lt; &quot;----------------------&quot; &lt;&lt; endl;\tcout &lt;&lt; &quot;研发部门： &quot; &lt;&lt; endl;\tpos = m.find(YANFA);\tcount = m.count(YANFA); // 统计具体人数\tindex = 0;\tfor (; pos != m.end() &amp;&amp; index &lt; count; pos++, index++)\t&#123;\t\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; pos-&gt;second.m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;\t&#125;&#125;int main() &#123;\tsrand((unsigned int)time(NULL));\t//1、创建员工\tvector&lt;Worker&gt;vWorker;\tcreateWorker(vWorker);\t//2、员工分组\tmultimap&lt;int, Worker&gt;mWorker;\tsetGroup(vWorker, mWorker);\t//3、分组显示员工\tshowWorkerByGourp(mWorker);\t////测试\t//for (vector&lt;Worker&gt;::iterator it = vWorker.begin(); it != vWorker.end(); it++)\t//&#123;\t//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; it-&gt;m_Salary &lt;&lt; endl;\t//&#125;\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n当数据以键值对形式存在，可以考虑用map 或 multimap4 STL- 函数对象4.1 函数对象4.1.1 函数对象概念概念：\n重载函数调用操作符的类，其对象常称为函数对象函数对象使用重载的()时，行为类似函数调用，也叫仿函数本质：\n函数对象(仿函数)是一个类，不是一个函数\n4.1.2 函数对象使用特点：\n函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值函数对象超出普通函数的概念，函数对象可以有自己的状态函数对象可以作为参数传递\n#include &lt;string&gt;//1、函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值class MyAdd&#123;public :\tint operator()(int v1,int v2)\t&#123;\t\treturn v1 + v2;\t&#125;&#125;;void test01()&#123;\tMyAdd myAdd;\tcout &lt;&lt; myAdd(10, 10) &lt;&lt; endl;&#125;//2、函数对象可以有自己的状态class MyPrint&#123;public:\tMyPrint()\t&#123;\t\tcount = 0;\t&#125;\tvoid operator()(string test)\t&#123;\t\tcout &lt;&lt; test &lt;&lt; endl;\t\tcount++; //统计使用次数\t&#125;\tint count; //内部自己的状态&#125;;void test02()&#123;\tMyPrint myPrint;\tmyPrint(&quot;hello world&quot;);\tmyPrint(&quot;hello world&quot;);\tmyPrint(&quot;hello world&quot;);\tcout &lt;&lt; &quot;myPrint调用次数为： &quot; &lt;&lt; myPrint.count &lt;&lt; endl;&#125;//3、函数对象可以作为参数传递void doPrint(MyPrint &amp;mp , string test)&#123;\tmp(test);&#125;void test03()&#123;\tMyPrint myPrint;\tdoPrint(myPrint, &quot;Hello C++&quot;);&#125;int main() &#123;\t//test01();\t//test02();\ttest03();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n仿函数写法非常灵活，可以作为参数进行传递。4.2 谓词4.2.1 谓词概念概念：\n返回bool类型的仿函数称为谓词如果operator()接受一个参数，那么叫做一元谓词如果operator()接受两个参数，那么叫做二元谓词4.2.2 一元谓词\n#include &lt;vector&gt;#include &lt;algorithm&gt;//1.一元谓词struct GreaterFive&#123;\tbool operator()(int val) &#123;\t\treturn val &gt; 5;\t&#125;&#125;;void test01() &#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv.push_back(i);\t&#125;\tvector&lt;int&gt;::iterator it = find_if(v.begin(), v.end(), GreaterFive());\tif (it == v.end()) &#123;\t\tcout &lt;&lt; &quot;没找到!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;找到:&quot; &lt;&lt; *it &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：参数只有一个的谓词，称为一元谓词\n4.2.3 二元谓词\n#include &lt;vector&gt;#include &lt;algorithm&gt;//二元谓词class MyCompare&#123;public:\tbool operator()(int num1, int num2)\t&#123;\t\treturn num1 &gt; num2;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(10);\tv.push_back(40);\tv.push_back(20);\tv.push_back(30);\tv.push_back(50);\t//默认从小到大\tsort(v.begin(), v.end());\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;----------------------------&quot; &lt;&lt; endl;\t//使用函数对象改变算法策略，排序从大到小\tsort(v.begin(), v.end(), MyCompare());\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：参数只有两个的谓词，称为二元谓词\n4.3 内建函数对象4.3.1 内建函数对象意义概念：\nSTL内建了一些函数对象分类:\n算术仿函数\n关系仿函数\n逻辑仿函数\n用法：\n这些仿函数所产生的对象，用法和一般函数完全相同使用内建函数对象，需要引入头文件 #include4.3.2 算术仿函数功能描述：\n实现四则运算其中negate是一元运算，其他都是二元运算仿函数原型：\ntemplate T plus //加法仿函数template T minus //减法仿函数template T multiplies //乘法仿函数template T divides //除法仿函数template T modulus //取模仿函数template T negate //取反仿函数\n#include &lt;functional&gt;//negatevoid test01()&#123;\tnegate&lt;int&gt; n;\tcout &lt;&lt; n(50) &lt;&lt; endl;&#125;//plusvoid test02()&#123;\tplus&lt;int&gt; p;\tcout &lt;&lt; p(10, 20) &lt;&lt; endl;&#125;int main() &#123;\ttest01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：使用内建函数对象时，需要引入头文件 #include \n4.3.3 关系仿函数功能描述：\n实现关系对比仿函数原型：\ntemplate bool equal_to //等于template bool not_equal_to //不等于template bool greater //大于template bool greater_equal //大于等于template bool less //小于template bool less_equal //小于等于\n#include &lt;functional&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;class MyCompare&#123;public:\tbool operator()(int v1,int v2)\t&#123;\t\treturn v1 &gt; v2;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(10);\tv.push_back(30);\tv.push_back(50);\tv.push_back(40);\tv.push_back(20);\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\t//自己实现仿函数\t//sort(v.begin(), v.end(), MyCompare());\t//STL内建仿函数  大于仿函数\tsort(v.begin(), v.end(), greater&lt;int&gt;());\tfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) &#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：关系仿函数中最常用的就是greater&lt;&gt;大于\n4.3.4 逻辑仿函数功能描述：\n实现逻辑运算函数原型：\ntemplate bool logical_and //逻辑与template bool logical_or //逻辑或template bool logical_not //逻辑非\n#include &lt;vector&gt;#include &lt;functional&gt;#include &lt;algorithm&gt;void test01()&#123;\tvector&lt;bool&gt; v;\tv.push_back(true);\tv.push_back(false);\tv.push_back(true);\tv.push_back(false);\tfor (vector&lt;bool&gt;::iterator it = v.begin();it!= v.end();it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;\t//逻辑非  将v容器搬运到v2中，并执行逻辑非运算\tvector&lt;bool&gt; v2;\tv2.resize(v.size());\ttransform(v.begin(), v.end(),  v2.begin(), logical_not&lt;bool&gt;());\tfor (vector&lt;bool&gt;::iterator it = v2.begin(); it != v2.end(); it++)\t&#123;\t\tcout &lt;&lt; *it &lt;&lt; &quot; &quot;;\t&#125;\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：逻辑仿函数实际应用较少，了解即可\n5 STL- 常用算法概述:\n算法主要是由头文件  组成。\n是所有STL头文件中最大的一个，范围涉及到比较、 交换、查找、遍历操作、复制、修改等等\n体积很小，只包括几个在序列上面进行简单数学运算的模板函数\n定义了一些模板类,用以声明函数对象。\n5.1 常用遍历算法学习目标：\n掌握常用的遍历算法算法简介：\nfor_each //遍历容器transform //搬运容器到另一个容器中5.1.1 for_each功能描述：\n实现遍历容器函数原型：\nfor_each(iterator beg, iterator end, _func);\n// 遍历算法 遍历容器元素\n// beg 开始迭代器\n// end 结束迭代器\n// _func 函数或者函数对象\n#include &lt;algorithm&gt;#include &lt;vector&gt;//普通函数void print01(int val)&#123;\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;&#125;//函数对象class print02&#123; public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;//for_each算法基本用法void test01() &#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv.push_back(i);\t&#125;\t//遍历算法\tfor_each(v.begin(), v.end(), print01);\tcout &lt;&lt; endl;\tfor_each(v.begin(), v.end(), print02());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**for_each在实际开发中是最常用遍历算法，需要熟练掌握\n5.1.2 transform功能描述：\n搬运容器到另一个容器中函数原型：\ntransform(iterator beg1, iterator end1, iterator beg2, _func);//beg1 源容器开始迭代器\n//end1 源容器结束迭代器\n//beg2 目标容器开始迭代器\n//_func 函数或者函数对象\n#include&lt;vector&gt;#include&lt;algorithm&gt;//常用遍历算法  搬运 transformclass TransForm&#123;public:\tint operator()(int val)\t&#123;\t\treturn val;\t&#125;&#125;;class MyPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt;v;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv.push_back(i);\t&#125;\tvector&lt;int&gt;vTarget; //目标容器\tvTarget.resize(v.size()); // 目标容器需要提前开辟空间\ttransform(v.begin(), v.end(), vTarget.begin(), TransForm());\tfor_each(vTarget.begin(), vTarget.end(), MyPrint());&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结： 搬运的目标容器必须要提前开辟空间，否则无法正常搬运\n5.2 常用查找算法学习目标：\n掌握常用的查找算法算法简介：\nfind //查找元素find_if //按条件查找元素adjacent_find //查找相邻重复元素binary_search //二分查找法count //统计元素个数count_if //按条件统计元素个数5.2.1 find功能描述：\n查找指定元素，找到返回指定元素的迭代器，找不到返回结束迭代器end()函数原型：\nfind(iterator beg, iterator end, value);\n// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置\n// beg 开始迭代器\n// end 结束迭代器\n// value 查找的元素\n#include &lt;algorithm&gt;#include &lt;vector&gt;#include &lt;string&gt;void test01() &#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv.push_back(i + 1);\t&#125;\t//查找容器中是否有 5 这个元素\tvector&lt;int&gt;::iterator it = find(v.begin(), v.end(), 5);\tif (it == v.end())\t&#123;\t\tcout &lt;&lt; &quot;没有找到!&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;找到:&quot; &lt;&lt; *it &lt;&lt; endl;\t&#125;&#125;class Person &#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\t//重载==\tbool operator==(const Person&amp; p)\t&#123;\t\tif (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age)\t\t&#123;\t\t\treturn true;\t\t&#125;\t\treturn false;\t&#125;public:\tstring m_Name;\tint m_Age;&#125;;void test02() &#123;\tvector&lt;Person&gt; v;\t//创建数据\tPerson p1(&quot;aaa&quot;, 10);\tPerson p2(&quot;bbb&quot;, 20);\tPerson p3(&quot;ccc&quot;, 30);\tPerson p4(&quot;ddd&quot;, 40);\tv.push_back(p1);\tv.push_back(p2);\tv.push_back(p3);\tv.push_back(p4);\tvector&lt;Person&gt;::iterator it = find(v.begin(), v.end(), p2);\tif (it == v.end())\t&#123;\t\tcout &lt;&lt; &quot;没有找到!&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;找到姓名:&quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 年龄: &quot; &lt;&lt; it-&gt;m_Age &lt;&lt; endl;\t&#125;&#125;\n总结： 利用find可以在容器中找指定的元素，返回值是迭代器\n5.2.2 find_if功能描述：\n按条件查找元素函数原型：\nfind_if(iterator beg, iterator end, _Pred);\n// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置\n// beg 开始迭代器\n// end 结束迭代器\n// _Pred 函数或者谓词（返回bool类型的仿函数）\n#include &lt;algorithm&gt;#include &lt;vector&gt;#include &lt;string&gt;//内置数据类型class GreaterFive&#123;public:\tbool operator()(int val)\t&#123;\t\treturn val &gt; 5;\t&#125;&#125;;void test01() &#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv.push_back(i + 1);\t&#125;\tvector&lt;int&gt;::iterator it = find_if(v.begin(), v.end(), GreaterFive());\tif (it == v.end()) &#123;\t\tcout &lt;&lt; &quot;没有找到!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;找到大于5的数字:&quot; &lt;&lt; *it &lt;&lt; endl;\t&#125;&#125;//自定义数据类型class Person &#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;public:\tstring m_Name;\tint m_Age;&#125;;class Greater20&#123;public:\tbool operator()(Person &amp;p)\t&#123;\t\treturn p.m_Age &gt; 20;\t&#125;&#125;;void test02() &#123;\tvector&lt;Person&gt; v;\t//创建数据\tPerson p1(&quot;aaa&quot;, 10);\tPerson p2(&quot;bbb&quot;, 20);\tPerson p3(&quot;ccc&quot;, 30);\tPerson p4(&quot;ddd&quot;, 40);\tv.push_back(p1);\tv.push_back(p2);\tv.push_back(p3);\tv.push_back(p4);\tvector&lt;Person&gt;::iterator it = find_if(v.begin(), v.end(), Greater20());\tif (it == v.end())\t&#123;\t\tcout &lt;&lt; &quot;没有找到!&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;找到姓名:&quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 年龄: &quot; &lt;&lt; it-&gt;m_Age &lt;&lt; endl;\t&#125;&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：find_if按条件查找使查找更加灵活，提供的仿函数可以改变不同的策略\n5.2.3 adjacent_find功能描述：\n查找相邻重复元素函数原型：\nadjacent_find(iterator beg, iterator end);\n// 查找相邻重复元素,返回相邻元素的第一个位置的迭代器\n// beg 开始迭代器\n// end 结束迭代器\n#include &lt;algorithm&gt;#include &lt;vector&gt;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(1);\tv.push_back(2);\tv.push_back(5);\tv.push_back(2);\tv.push_back(4);\tv.push_back(4);\tv.push_back(3);\t//查找相邻重复元素\tvector&lt;int&gt;::iterator it = adjacent_find(v.begin(), v.end());\tif (it == v.end()) &#123;\t\tcout &lt;&lt; &quot;找不到!&quot; &lt;&lt; endl;\t&#125;\telse &#123;\t\tcout &lt;&lt; &quot;找到相邻重复元素为:&quot; &lt;&lt; *it &lt;&lt; endl;\t&#125;&#125;\n总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent_find算法\n5.2.4 binary_search功能描述：\n查找指定元素是否存在函数原型：\nbool binary_search(iterator beg, iterator end, value);\n// 查找指定的元素，查到 返回true 否则false\n// 注意: 在无序序列中不可用\n// beg 开始迭代器\n// end 结束迭代器\n// value 查找的元素\n#include &lt;algorithm&gt;#include &lt;vector&gt;void test01()&#123;\tvector&lt;int&gt;v;\tfor (int i = 0; i &lt; 10; i++)\t&#123;\t\tv.push_back(i);\t&#125;\t//二分查找\tbool ret = binary_search(v.begin(), v.end(),2);\tif (ret)\t&#123;\t\tcout &lt;&lt; &quot;找到了&quot; &lt;&lt; endl;\t&#125;\telse\t&#123;\t\tcout &lt;&lt; &quot;未找到&quot; &lt;&lt; endl;\t&#125;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**二分查找法查找效率很高，值得注意的是查找的容器中元素必须的有序序列\n5.2.5 count功能描述：\n统计元素个数函数原型：\ncount(iterator beg, iterator end, value);\n// 统计元素出现次数\n// beg 开始迭代器\n// end 结束迭代器\n// value 统计的元素\n#include &lt;algorithm&gt;#include &lt;vector&gt;//内置数据类型void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(1);\tv.push_back(2);\tv.push_back(4);\tv.push_back(5);\tv.push_back(3);\tv.push_back(4);\tv.push_back(4);\tint num = count(v.begin(), v.end(), 4);\tcout &lt;&lt; &quot;4的个数为： &quot; &lt;&lt; num &lt;&lt; endl;&#125;//自定义数据类型class Person&#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\tbool operator==(const Person &amp; p)\t&#123;\t\tif (this-&gt;m_Age == p.m_Age)\t\t&#123;\t\t\treturn true;\t\t&#125;\t\telse\t\t&#123;\t\t\treturn false;\t\t&#125;\t&#125;\tstring m_Name;\tint m_Age;&#125;;void test02()&#123;\tvector&lt;Person&gt; v;\tPerson p1(&quot;刘备&quot;, 35);\tPerson p2(&quot;关羽&quot;, 35);\tPerson p3(&quot;张飞&quot;, 35);\tPerson p4(&quot;赵云&quot;, 30);\tPerson p5(&quot;曹操&quot;, 25);\tv.push_back(p1);\tv.push_back(p2);\tv.push_back(p3);\tv.push_back(p4);\tv.push_back(p5);    Person p(&quot;诸葛亮&quot;,35);\tint num = count(v.begin(), v.end(), p);\tcout &lt;&lt; &quot;num = &quot; &lt;&lt; num &lt;&lt; endl;&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结： 统计自定义数据类型时候，需要配合重载 operator==\n5.2.6 count_if功能描述：\n按条件统计元素个数函数原型：\ncount_if(iterator beg, iterator end, _Pred);\n// 按条件统计元素出现次数\n// beg 开始迭代器\n// end 结束迭代器\n// _Pred 谓词\n#include &lt;algorithm&gt;#include &lt;vector&gt;class Greater4&#123;public:\tbool operator()(int val)\t&#123;\t\treturn val &gt;= 4;\t&#125;&#125;;//内置数据类型void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(1);\tv.push_back(2);\tv.push_back(4);\tv.push_back(5);\tv.push_back(3);\tv.push_back(4);\tv.push_back(4);\tint num = count_if(v.begin(), v.end(), Greater4());\tcout &lt;&lt; &quot;大于4的个数为： &quot; &lt;&lt; num &lt;&lt; endl;&#125;//自定义数据类型class Person&#123;public:\tPerson(string name, int age)\t&#123;\t\tthis-&gt;m_Name = name;\t\tthis-&gt;m_Age = age;\t&#125;\tstring m_Name;\tint m_Age;&#125;;class AgeLess35&#123;public:\tbool operator()(const Person &amp;p)\t&#123;\t\treturn p.m_Age &lt; 35;\t&#125;&#125;;void test02()&#123;\tvector&lt;Person&gt; v;\tPerson p1(&quot;刘备&quot;, 35);\tPerson p2(&quot;关羽&quot;, 35);\tPerson p3(&quot;张飞&quot;, 35);\tPerson p4(&quot;赵云&quot;, 30);\tPerson p5(&quot;曹操&quot;, 25);\tv.push_back(p1);\tv.push_back(p2);\tv.push_back(p3);\tv.push_back(p4);\tv.push_back(p5);\tint num = count_if(v.begin(), v.end(), AgeLess35());\tcout &lt;&lt; &quot;小于35岁的个数：&quot; &lt;&lt; num &lt;&lt; endl;&#125;int main() &#123;\t//test01();\ttest02();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**按值统计用count，按条件统计用count_if\n5.3 常用排序算法学习目标：\n掌握常用的排序算法算法简介：\nsort //对容器内元素进行排序random_shuffle //洗牌 指定范围内的元素随机调整次序merge // 容器元素合并，并存储到另一容器中reverse // 反转指定范围的元素5.3.1 sort功能描述：\n对容器内元素进行排序函数原型：\nsort(iterator beg, iterator end, _Pred);\n// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置\n// beg 开始迭代器\n// end 结束迭代器\n// _Pred 谓词\n#include &lt;algorithm&gt;#include &lt;vector&gt;void myPrint(int val)&#123;\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;&#125;void test01() &#123;\tvector&lt;int&gt; v;\tv.push_back(10);\tv.push_back(30);\tv.push_back(50);\tv.push_back(20);\tv.push_back(40);\t//sort默认从小到大排序\tsort(v.begin(), v.end());\tfor_each(v.begin(), v.end(), myPrint);\tcout &lt;&lt; endl;\t//从大到小排序\tsort(v.begin(), v.end(), greater&lt;int&gt;());\tfor_each(v.begin(), v.end(), myPrint);\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：sort属于开发中最常用的算法之一，需熟练掌握\n5.3.2 random_shuffle功能描述：\n洗牌 指定范围内的元素随机调整次序函数原型：\nrandom_shuffle(iterator beg, iterator end);\n// 指定范围内的元素随机调整次序\n// beg 开始迭代器\n// end 结束迭代器\n#include &lt;algorithm&gt;#include &lt;vector&gt;#include &lt;ctime&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tsrand((unsigned int)time(NULL));\tvector&lt;int&gt; v;\tfor(int i = 0 ; i &lt; 10;i++)\t&#123;\t\tv.push_back(i);\t&#125;\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;\t//打乱顺序\trandom_shuffle(v.begin(), v.end());\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**random_shuffle洗牌算法比较实用，使用时记得加随机数种子\n5.3.3 merge功能描述：\n两个容器元素合并，并存储到另一容器中函数原型：\nmerge(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);\n// 容器元素合并，并存储到另一容器中\n// 注意: 两个容器必须是有序的\n// beg1 容器1开始迭代器 // end1 容器1结束迭代器 // beg2 容器2开始迭代器 // end2 容器2结束迭代器 // dest 目标容器开始迭代器\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tfor (int i = 0; i &lt; 10 ; i++)    &#123;\t\tv1.push_back(i);\t\tv2.push_back(i + 1);\t&#125;\tvector&lt;int&gt; vtarget;\t//目标容器需要提前开辟空间\tvtarget.resize(v1.size() + v2.size());\t//合并  需要两个有序序列\tmerge(v1.begin(), v1.end(), v2.begin(), v2.end(), vtarget.begin());\tfor_each(vtarget.begin(), vtarget.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**merge合并的两个容器必须的有序序列\n5.3.4 reverse功能描述：\n将容器内元素进行反转函数原型：\nreverse(iterator beg, iterator end);\n// 反转指定范围的元素\n// beg 开始迭代器\n// end 结束迭代器\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(10);\tv.push_back(30);\tv.push_back(50);\tv.push_back(20);\tv.push_back(40);\tcout &lt;&lt; &quot;反转前： &quot; &lt;&lt; endl;\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;反转后： &quot; &lt;&lt; endl;\treverse(v.begin(), v.end());\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**reverse反转区间内元素，面试题可能涉及到\n5.4 常用拷贝和替换算法学习目标：\n掌握常用的拷贝和替换算法算法简介：\ncopy // 容器内指定范围的元素拷贝到另一容器中replace // 将容器内指定范围的旧元素修改为新元素replace_if // 容器内指定范围满足条件的元素替换为新元素swap // 互换两个容器的元素5.4.1 copy功能描述：\n容器内指定范围的元素拷贝到另一容器中函数原型：\ncopy(iterator beg, iterator end, iterator dest);\n// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置\n// beg 开始迭代器\n// end 结束迭代器\n// dest 目标起始迭代器\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv1.push_back(i + 1);\t&#125;\tvector&lt;int&gt; v2;\tv2.resize(v1.size());\tcopy(v1.begin(), v1.end(), v2.begin());\tfor_each(v2.begin(), v2.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**利用copy算法在拷贝时，目标容器记得提前开辟空间\n5.4.2 replace功能描述：\n将容器内指定范围的旧元素修改为新元素函数原型：\nreplace(iterator beg, iterator end, oldvalue, newvalue);\n// 将区间内旧元素 替换成 新元素\n// beg 开始迭代器\n// end 结束迭代器\n// oldvalue 旧元素\n// newvalue 新元素\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(20);\tv.push_back(30);\tv.push_back(20);\tv.push_back(40);\tv.push_back(50);\tv.push_back(10);\tv.push_back(20);\tcout &lt;&lt; &quot;替换前：&quot; &lt;&lt; endl;\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;\t//将容器中的20 替换成 2000\tcout &lt;&lt; &quot;替换后：&quot; &lt;&lt; endl;\treplace(v.begin(), v.end(), 20,2000);\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**replace会替换区间内满足条件的元素\n5.4.3 replace_if功能描述:\n将区间内满足条件的元素，替换成指定元素函数原型：\nreplace_if(iterator beg, iterator end, _pred, newvalue);\n// 按条件替换元素，满足条件的替换成指定元素\n// beg 开始迭代器\n// end 结束迭代器\n// _pred 谓词\n// newvalue 替换的新元素\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;class ReplaceGreater30&#123;public:\tbool operator()(int val)\t&#123;\t\treturn val &gt;= 30;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.push_back(20);\tv.push_back(30);\tv.push_back(20);\tv.push_back(40);\tv.push_back(50);\tv.push_back(10);\tv.push_back(20);\tcout &lt;&lt; &quot;替换前：&quot; &lt;&lt; endl;\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;\t//将容器中大于等于的30 替换成 3000\tcout &lt;&lt; &quot;替换后：&quot; &lt;&lt; endl;\treplace_if(v.begin(), v.end(), ReplaceGreater30(), 3000);\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**replace_if按条件查找，可以利用仿函数灵活筛选满足的条件\n5.4.4 swap功能描述：\n互换两个容器的元素函数原型：\nswap(container c1, container c2);\n// 互换两个容器的元素\n// c1容器1\n// c2容器2\n#include &lt;algorithm&gt;#include &lt;vector&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv1.push_back(i);\t\tv2.push_back(i+100);\t&#125;\tcout &lt;&lt; &quot;交换前： &quot; &lt;&lt; endl;\tfor_each(v1.begin(), v1.end(), myPrint());\tcout &lt;&lt; endl;\tfor_each(v2.begin(), v2.end(), myPrint());\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;交换后： &quot; &lt;&lt; endl;\tswap(v1, v2);\tfor_each(v1.begin(), v1.end(), myPrint());\tcout &lt;&lt; endl;\tfor_each(v2.begin(), v2.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**swap交换容器时，注意交换的容器要同种类型\n5.5 常用算术生成算法学习目标：\n掌握常用的算术生成算法注意：\n算术生成算法属于小型算法，使用时包含的头文件为 #include 算法简介：\naccumulate // 计算容器元素累计总和\nfill // 向容器中添加元素\n​\n5.5.1 accumulate功能描述：\n计算区间内 容器元素累计总和函数原型：\naccumulate(iterator beg, iterator end, value);\n// 计算容器元素累计总和\n// beg 开始迭代器\n// end 结束迭代器\n// value 起始值\n#include &lt;numeric&gt;#include &lt;vector&gt;void test01()&#123;\tvector&lt;int&gt; v;\tfor (int i = 0; i &lt;= 100; i++) &#123;\t\tv.push_back(i);\t&#125;\tint total = accumulate(v.begin(), v.end(), 0);\tcout &lt;&lt; &quot;total = &quot; &lt;&lt; total &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**accumulate使用时头文件注意是 numeric，这个算法很实用\n5.5.2 fill功能描述：\n向容器中填充指定的元素函数原型：\nfill(iterator beg, iterator end, value);\n// 向容器中填充元素\n// beg 开始迭代器\n// end 结束迭代器\n// value 填充的值\n#include &lt;numeric&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v;\tv.resize(10);\t//填充\tfill(v.begin(), v.end(), 100);\tfor_each(v.begin(), v.end(), myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：**利用fill可以将容器区间内元素填充为 指定的值\n5.6 常用集合算法学习目标：\n掌握常用的集合算法算法简介：\nset_intersection // 求两个容器的交集\nset_union // 求两个容器的并集\nset_difference // 求两个容器的差集\n​\n5.6.1 set_intersection功能描述：\n求两个容器的交集函数原型：\nset_intersection(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);\n// 求两个集合的交集\n// 注意:两个集合必须是有序序列\n// beg1 容器1开始迭代器 // end1 容器1结束迭代器 // beg2 容器2开始迭代器 // end2 容器2结束迭代器 // dest 目标容器开始迭代器\n#include &lt;vector&gt;#include &lt;algorithm&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tfor (int i = 0; i &lt; 10; i++)    &#123;\t\tv1.push_back(i);\t\tv2.push_back(i+5);\t&#125;\tvector&lt;int&gt; vTarget;\t//取两个里面较小的值给目标容器开辟空间\tvTarget.resize(min(v1.size(), v2.size()));\t//返回目标容器的最后一个元素的迭代器地址\tvector&lt;int&gt;::iterator itEnd =        set_intersection(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\tfor_each(vTarget.begin(), itEnd, myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n求交集的两个集合必须的有序序列目标容器开辟空间需要从两个容器中取小值set_intersection返回值既是交集中最后一个元素的位置5.6.2 set_union功能描述：\n求两个集合的并集函数原型：\nset_union(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);\n// 求两个集合的并集\n// 注意:两个集合必须是有序序列\n// beg1 容器1开始迭代器 // end1 容器1结束迭代器 // beg2 容器2开始迭代器 // end2 容器2结束迭代器 // dest 目标容器开始迭代器\n#include &lt;vector&gt;#include &lt;algorithm&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv1.push_back(i);\t\tv2.push_back(i+5);\t&#125;\tvector&lt;int&gt; vTarget;\t//取两个容器的和给目标容器开辟空间\tvTarget.resize(v1.size() + v2.size());\t//返回目标容器的最后一个元素的迭代器地址\tvector&lt;int&gt;::iterator itEnd =        set_union(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\tfor_each(vTarget.begin(), itEnd, myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n求并集的两个集合必须的有序序列目标容器开辟空间需要两个容器相加set_union返回值既是并集中最后一个元素的位置5.6.3 set_difference功能描述：\n求两个集合的差集函数原型：\nset_difference(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);\n// 求两个集合的差集\n// 注意:两个集合必须是有序序列\n// beg1 容器1开始迭代器 // end1 容器1结束迭代器 // beg2 容器2开始迭代器 // end2 容器2结束迭代器 // dest 目标容器开始迭代器\n#include &lt;vector&gt;#include &lt;algorithm&gt;class myPrint&#123;public:\tvoid operator()(int val)\t&#123;\t\tcout &lt;&lt; val &lt;&lt; &quot; &quot;;\t&#125;&#125;;void test01()&#123;\tvector&lt;int&gt; v1;\tvector&lt;int&gt; v2;\tfor (int i = 0; i &lt; 10; i++) &#123;\t\tv1.push_back(i);\t\tv2.push_back(i+5);\t&#125;\tvector&lt;int&gt; vTarget;\t//取两个里面较大的值给目标容器开辟空间\tvTarget.resize( max(v1.size() , v2.size()));\t//返回目标容器的最后一个元素的迭代器地址\tcout &lt;&lt; &quot;v1与v2的差集为： &quot; &lt;&lt; endl;\tvector&lt;int&gt;::iterator itEnd =        set_difference(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\tfor_each(vTarget.begin(), itEnd, myPrint());\tcout &lt;&lt; endl;\tcout &lt;&lt; &quot;v2与v1的差集为： &quot; &lt;&lt; endl;\titEnd = set_difference(v2.begin(), v2.end(), v1.begin(), v1.end(), vTarget.begin());\tfor_each(vTarget.begin(), itEnd, myPrint());\tcout &lt;&lt; endl;&#125;int main() &#123;\ttest01();\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n总结：\n求差集的两个集合必须的有序序列目标容器开辟空间需要从两个容器取较大值set_difference返回值既是差集中最后一个元素的位置\n匈牙利命名法\n宏、枚举、常量，用大写字母命名，复合词用下划线隔开。\n类、类型定义和枚举型名的第一个字母大写。\n函数名是复合词的，第一个词采用全部小写，随后每个单词第一个字母大写。\n循环变量可采用 i, j, k 等。\n类的成员变量词头为 m_。\n全局变量词头为 g_ 。\n临时变量词头为 tmp_ 。\n对结构体内的变量命名，遵循变量的具体含义命名原则。\n用小写字母的前缀表示变量的类型，前缀的下一个字母用大写。 \n有些词头可以和其它词头组合。 \n\n#define ARRAY_SIZE 24int g_iFlag; classMyClass &#123;&#125;;void someFunc( ) &#123;int nArray[ARRAY_SIZE];unsigned char uchByte;char szName[ ];char *pszName = szName;&#125;\n\n词头类型\n\n\n\nch\nchar\nl\nlong\n\n\n\ni\ninteger\nu\nunsigned\n\n\nb\nboolean\np\npointer\n\n\nd\ndouble\ns\nstring\n\n\nst\nstructure\nsz\nASCII string\n\n\nby\nbyte\nn\nshort int\n\n\nH\nhandle\nx,y\n坐标\n\n\ndw\nDWORD\nfn\nfunction\n\n\n\n词头变量名\n\n\n\nsig\nsignal\nmsg\nmessage\n\n\n\nsb\nbinary semaphores\nwd\nwatchdog\n\n\nsm\nmutual exclusion semaphores\ntm\ntimer\n\n\nsc\ncounting semaphores\n\n\n\n\n\n\n程序注释分为文件、函数、功能注释。\n\n注释行的数量占到整个源程序的 1/3-1/2。\n\n文件注释位于整个源程序的最开始部分，注释后空两行开始程序正文。它包括：\n\n程序标题\n目的、功能说明\n文件作者、当前版本、修改信息（最后修改日期等说明）\neg: 修改信息： 2000.06.05 John, Initial Version 2000.07.05 Tom, Bug xxxx fixed\n\n\n\n\n函数注释通常置于每函数或过程的开头部分，它应当给出函数或过程的整体说明对于理解程序本身具有引导作用。\n\n模块标题\n目的、功能说明\n调用格式\n接口说明：包括输入、输出、返回值、异常\n算法。如果模块中采用了一些复杂的算法\n\n\n\n注释开头应和上一函数空两行格式：int assignmentComplete(int iCellId, char *pszMSGData) throw(exception1, exception2)输入：int iCellId: MS 所在的小区识别iCellId 取值：0x00-——0xff输出：char *pszMSGData：指配完成消息数据返回值: 0x00 正常异常：exception1 异常情况1, exception2 异常情况2注释后直接开始程序正文，不空行。\n其他建议不要使用 *=，^=, /= 等运算符。一个函数不要超过 200 行。一个文件应避免超过 2000 行。避免采用多赋值语句。不鼓励采用 ?: 操作符。\n简单变量引用简单变量引用可以为同一变量取不同的名字\nint Rat;int &amp; Mouse=Rat;这样定义之后，Rat 就是 Mouse，这两个名字指向同一内存单元，如:Mouse=Mickey; //Rat=Mickey一种更浅显的理解是把引用看成伪装的指针，如 Mouse 可能被编译器解释成 *(&amp; Rat)，这种理解可能是正确的。由于引用严格来说不是对象，在使用时应注意：① 引用在声明时必须进行初始化；② 不能声明引用的引用；③ 不能声明引用数组成指向引用的指针(但可以声明对指针的引用)；④ 为引用提供的初始值必须是一个变量。\nC专家编程\n访问控制public 在类的外部可见，一般原则是不要把类的数据做成 public，只有类本身才能改变自己的数据，外部函数只能调用类的成员函数，保证了类的数据只会以合乎规则的方式被更新protected 只能由该类本身的函数以及从该类所派生的类的函数使用private 只能被该类的成员函数使用，该声明在类外部是可见的（名字是已知的），但不能访问以下关键字每次只能用于一条声明，后面不跟冒号friend 可以是一个函数/类，属于它的函数不属于类的成员函数，但可以像成员函数一样访问类的 private 和 protected 成员virtual\n类中的每个函数声明都需要一个实现，通常在类外部实现，则前面必须附加前缀 ::（全局范围分解符），好处是可以通过使用头文件，使源代码的组织形式更为清晰。类内部实现会使编译后的代码变长，通常用于非常简短的函数，它的代码在编译时在声明处自动展开，在运行时就不必付出函数调用的代价。\n构造函数的名字总是和类的名字一样\n当类的一个对象被创建时，构造函数会被自动调用，不应该显式调用构造函数。至于全局和静态对象，它们的构造函数会在程序开始时被自动调用，而当程序终止时，它们的析构函数会被自动调用。\n继承继承在两个类之间（而不是两个函数之间）进行\n重载复用一个现存的（函数或操作符）名字，操作一个不同的类型。总是在编译时进行解析\n重载后的操作符的优先级和操作数（编译器行话中的”arity”）与原先操作符相同\n多态多态是指一个函数或操作符只有一个名字在（基类）成员函数前加上 virtual 即多态函数的原型必须相同，由运行时系统进行解析调用哪一个函数\nC 与 C++C++ 对 C 的改进\n像 char b[3]=“Bob&quot; 这样的表达式在 C 中合法，C++ 中被认为是一个错误。\n\n类型转换既可写成更顺眼的 float(i) 形式，也可写成 (float)i 这样的 C 风格\n\nC++ 允许一个常量整数来定义数组的大小，但在 C 中错误。const int size = 128;char a[size];\n\n声明可以穿插于语句之间。在 C 中，一个语句块中所有的声明都必须放在所有语句的前面。C++ 去掉了这个限制。\n\n\nC++ 中存在，但在 C 中却不存在的限制\nC++ 中，用户代码不能调用 main() 函数，但在 C 中却允许（这种情况极为罕见）\n\n完整的函数原型声明在 C++ 中是必须的，但在 C 中没这么严格\n\nC++ 中，由 typedef 定义的名字不能与已有的结构标签冲突，但在 C 中却允许（它们分属不同的名字空间）\n\n当 void* 指针赋值给另一个类型的指针时，C++ 规定必须进行强制类型转换，但在 C 中却无必要\n\n\n在 C++ 和 C 中含义不一样的特性\nC++ 至少增加了十几个关键字。这些关键字在 C 中可以作为标识符使用，但如果这样做了，用 C++ 编译器时会报错。\n\nC++ 中声明可以出现在语句可以出现的任何地方。在 C 的代码块中，所有的声明必须出现在所有语句的前面。\n\nC++ 中一个内层范围的结构名将会隐藏外层空间中相同的对象名。在 C 中则非如此。\n\nC++ 中字符常量的类型是 char，但在 C 中，它们的类型是 int。即在 C++ 中，sizeof(&#39;a&#39;) 的结果是 1，而在 C 中值要大一些。\n\nC++ 增加了 // 注释符，有时会在两种语言中产生微妙而怪异的差别\n\n\n\n尽量使用的C++特性：类构造函数和析构函数，但只限于函数体非常简单的例子重载，包括操作符重载和 I/O单重继承和多态\n避免使用的C++特性：模板异常虚基类多重继承\n0x0 References\nC++ 匠心之作《C专家编程》《C++ Primer》\n\n0x0 Postscript","categories":["Programming"]},{"title":"SQL 数据库系列笔记","url":"/2023/04/29/code_SQL/","content":"Pref主要整理 SQL 语言，其次是 DBMS 等数据库知识，求职必备啊，欠下的知识迟早要补上，往后定要化被动为主动，学得太赶了，头秃……\nBasis数据库（database）保存有组织的数据的容器（通常是一个或一组文件）\n表（table）某种特定类型数据的结构化清单。\n模式（schema）关于数据库和表的布局及特性的信息。\n列（column）表中的一个字段。表都是由一个或多个列组成的。\n数据类型（datatype）定义了列可以存储哪些数据种类。\n行（row）表中的一个记录。也称记录（record），行才是正确术语。\n主键（primary key）一列或几列，其值能够唯一标识表中每一行。\n\n注：应总是定义主键，可能不需要，但保证创建的每个表具有一个主键，便于以后的数据操作管理。\n\n满足条件：\n\n任意两行都不具有相同的主键值；\n每一行都必须具有一个主键值（主键列不允许空值 NULL）；\n主键列中的值不允许修改或更新；\n主键值不能重用（若某行从表中删除，其主键不能再赋给新行）\n\nSQL（发音 sequel）（Structured Query Language）结构化查询语言。\n多条 SQL 语句必须以分号（；）分隔，部分 DBMS 需要单条语句后都加。\nSQL 语句不区分大小写。\n处理 SQL 语句时，空格都被忽略。\nSQL 语句一般返回无格式的数据。\n子句（clause）SQL 语句由子句构成。一个子句通常由一个关键字加上所提供的数据组成。\n可移植（portable）可在多个系统上运行。\n查询（query）任何 SQL 语句都是查询。但一般指 SELECT 语句。\n子查询（subquery）即嵌套在其他查询中的查询。\n结果集（result set）SQL 查询所检索出的结果。\n检索数据检索单个列SELECT prod_nameFROM Products;\n从 Products 表中检索 prod_name 列。\n\n根据具体 DBMS 和客户端，会得出检索行数和时间。如 MySQL——9 rows in set (0.01 sec)\n检索多个列\n选择多列时，列名之间加逗号，最后一个不加，否则报错。\n\nSELECT prod_id, prod_name, prod_priceFROM Products;\n\n检索所有列SELECT *FROM Products;\n检索不同值SELECT vend_idFROM Products;\n\n返回 9 行（即使表中只有 3 个产品供应商），因为 Products 表中有 9 种产品。\nDISTINCT 关键字，指示数据库只返回不同的值。\nSELECT DISTINCT vend_idFROM Products;\n\n\n注：不能部分使用 DISTINCT。作用于所有列，不单是跟在其后的那一列。\n\n限制结果（DBMS 实现不同）-- SQL ServerSELECT TOP 5 prod_nameFROM Products;-- DB2SELECT prod_nameFROM ProductsFETCH FIRST 5 ROWS ONLY;-- OracleSELECT prod_nameFROM ProductsWHERE ROWNUM &lt;=5; -- ROWNUM（行计数器）;-- MySQL、MariaDB、PostgreSQL 或 SQLiteSELECT prod_nameFROM ProductsLIMIT 5;\n\n第一个数字是检索的行数，第二个数字是指从哪开始。如下：返回从第 5 行起的 5 行数据。只有 9 种产品，所以只返回了 4 行数据。\n\n注：第一个被检索的行是第 0 行。LIMIT 1 OFFSET 1 会检索第 2 行。\n\nSELECT prod_nameFROM ProductsLIMIT 5 OFFSET 5;-- MySQL、MariaDB 和 SQLite 捷径-- 把 `LIMIT 4 OFFSET 3` 简化为 `LIMIT 3,4`\n\n注释/* 多行注释 */-- 注释，都支持# 注释，有些不支持\n排序按单/多列排序该子句取一个或多个列名，以字母顺序排序数据。\nSELECT prod_nameFROM ProductsORDER BY prod_name -- 按单列排序;ORDER BY prod_price, prod_name -- 按多列排序;\n\n注： ORDER BY 子句的位置应该是 SELECT 语句中最后一条子句，否则会报错。\n\n\n\n仅在多个行具有相同的 prod_price 值时，才对产品按 prod_name 进行排序。如果 prod_price 列中所有的值都是唯一的，则不会按 prod_name 排序。\n按列位置排序SELECT prod_id, prod_price, prod_name -- 按列位置排序FROM ProductsORDER BY 2, 3 -- 表示先按 prod_price，再按 prod_name 排序。;\n\n指定排序方向SELECT prod_id, prod_price, prod_nameFROM ProductsORDER BY prod_price DESC -- 降序，默认是升序 A-Z;\n\n\n注：若想在多列上进行降序排序，必须对每一列指定 DESC。DESCENDING 是全写，亦可使用。ASCENDING「ASC」升序，默认无需指定。区分大小写和排序顺序：在字典（dictionary）排序顺序中，大小写相同，是多数 DBMS 默认做法，同时允许改变。\n\n过滤数据WHERE 子句搜索条件（search criteria）也称过滤条件（filter condition）\nSELECT prod_name, prod_priceFROM ProductsWHERE prod_price = 3.49;\n\nWHERE 操作符操作符（operator）用来联结或改变 WHERE 子句中的子句的关键字，也称为逻辑操作符（logical operator）。\n\n\n\n操 作 符\n说 明\n操 作 符\n说 明\n\n\n\n=\n等于\n&gt;\n大于\n\n\n&lt;&gt;\n不等于\n&gt;=\n大于等于\n\n\n!=\n不等于\n!&gt;\n不大于\n\n\n&lt;\n小于\nBETWEEN\n指定两个值之间（都包括）\n\n\n&lt;=\n小于等于\nIS NULL\n为 NULL 值\n\n\n!&lt;\n不小于\n\n\n\n\nSELECT prod_name, prod_priceFROM ProductsWHERE vend_id &lt;&gt; &#x27;DLL01&#x27; -- 不匹配检查;WHERE prod_price BETWEEN 5 AND 10 -- 范围值检查;WHERE prod_price IS NULL -- 空值检查;\nNULL 无值（no value），与字段包含 0、空字符串或仅空格不同。如上，返回空 prod_price 字段，不是价格为 0。\n高级数据过滤组合 WHERE 子句，AND OR IN NOT 操作符SELECT prod_id, prod_price, prod_nameFROM ProductsWHERE vend_id = &#x27;DLL01&#x27; OR vend_id = &#x27;BRS01&#x27;;\n许多 DBMS 在 OR WHERE 子句的第一个条件满足时，就不再计算第二个条件了。\n\n求值顺序，() 明确分组SELECT prod_name, prod_priceFROM ProductsWHERE vend_id IN (&#x27;DLL01&#x27;,&#x27;BRS01&#x27;) -- IN 与 OR 功能相当-- WHERE vend_id = &#x27;DLL01&#x27; OR vend_id = &#x27;BRS01&#x27;ORDER BY prod_name;\n检索由供应商 DLL01 和 BRS01 制造的所有产品，以上两种表达一样。\n\n\nIN 优点：IN 操作符的语法更直观；在与 AND 和 OR 组合使用 IN 时，求值顺序更容易管理；IN 一般比一组 OR 执行更快；IN 最大优点是可包含其他 SELECT 语句，能更动态地建立 WHERE 子句。\n\nNOT 从不单独使用（总是与其他操作符一起使用），所以它的语法与其他操作符不同。\nSELECT prod_nameFROM ProductsWHERE NOT vend_id = &#x27;DLL01&#x27; -- NOT 与 &lt;&gt; 功能相当-- WHERE vend_id &lt;&gt; &#x27;DLL01&#x27;ORDER BY prod_name;\n\n\nMariaDB 支持使用 NOT 否定 IN、BETWEEN 和 EXISTS 子句。大多数DBMS 允许使用 NOT 否定任何条件。\n\n通配符过滤通配符（wildcard）用来匹配值的一部分的特殊字符。\n搜索模式（search pattern）由字面值、通配符或两者组合构成的搜索条件。\n谓词（predicate）即操作符作为谓词时。从技术上说，LIKE 是谓词。虽然最终的结果是相同的。\n通配符搜索只能用于文本字段（字符串）。\n通配符 % _ []% 表示任何字符出现任意次数（包括 0）。子句 WHERE prod_name LIKE &#39;%&#39; 不会匹配产品名称为 NULL 的行。\n_ 只匹配单个字符。（DB2 不支持通配符 _）\n[] 用来指定一个字符集，必须匹配指定位置的一个字符。（SQL Server 支持集合，MySQL，Oracle，DB2，SQLite 都不支持。）此通配符可以用前缀字符 ^（脱字号）来否定。\nSELECT prod_id, prod_nameFROM ProductsWHERE prod_name LIKE &#x27;Fish%&#x27; -- 所有以 Fish 开头产品，大小写区分根据 DBMS 配置。;\n\n\n注：字符串后面可能用空格填充，故匹配以某字母结尾，需要后面加百分号 y%\n\nSELECT cust_contactFROM CustomersWHERE cust_contact LIKE &#x27;[^JM]%&#x27; -- 找出名字以非 J 或 M 起头的联系人-- WHERE NOT cust_contact LIKE &#x27;[JM]%&#x27; -- 与 ^ 结果相同ORDER BY cust_contact;\n通配符技巧不要过度使用通配符。耗时长，优先使用其他能达到相同目的的操作符。尽量不要把它们用在搜索模式的开始处，这样搜索起来是最慢的。\n创建计算字段计算字段计算字段是运行时在 SELECT 语句内创建的。\n字段（field）基本上与列的意思相同，经常互换使用，不过数据库列一般称为列，而字段这个术语通常在计算字段这种场合下使用。\n拼接字段拼接（concatenate）将值联结到一起（将一个值附加到另一个值）构成单个值。\nSQL Server 使用 + 号。DB2、Oracle、PostgreSQL 和 SQLite 使用 ||。MySQL 和 MariaDB 使用特殊函数 Concat。\nSELECT vend_name + &#x27; (&#x27; + vend_country + &#x27;)&#x27;-- SELECT Concat(vend_name, &#x27; (&#x27;, vend_country, &#x27;)&#x27;)FROM VendorsORDER BY vend_name;\n\n许多数据库保存填充为列宽的文本值，不需要这些空格时如下：\nSELECT RTRIM(vend_name) + &#x27; (&#x27; + RTRIM(vend_country) + &#x27;)&#x27;FROM VendorsORDER BY vend_name;\n\n别名 AS别名（alias）有时也称导出列（derived column）\n执行算术计算SELECT    prod_id,    quantity,    item_price,    quantity*item_price AS expanded_priceFROM OrderItemsWHERE order_num = 20008;\n\n操作符：+ 加 - 减 * 乘 / 除\n函数\n\n\n函 数\n语 法\n\n\n\n提取字符串的组成部分\nDB2、Oracle、PostgreSQL 和 SQLite 使用 SUBSTR()；MariaDB、MySQL 和 SQL Server 使用 SUBSTRING()\n\n\n数据类型转换\nOracle 每种类型的转换有一个函数；DB2 和 PostgreSQL 使用 CAST()；MariaDB、MySQL 和 SQL Server 使用 CONVERT()\n\n\n取当前日期\nDB2 和 PostgreSQL 使用 CURRENT_DATE；MariaDB 和 MySQL 使用 CURDATE()；Oracle 使用 SYSDATE；SQL Server 使用 GETDATE()；SQLite 使用 DATE()\n\n\n多数 SQL 支持以下类型函数：\n\n处理文本字符串的文本函数；\n数值数据上进行算术操作的数值函数；\n处理日期时间并提取特定成分的日期和时间函数；\n格式化函数，如货币符号和千分位表示金额；\n返回 DBMS 正使用的特殊信息的系统函数。\n\n文本处理函数SELECT vend_name, UPPER(vend_name) AS vend_name_upcaseFROM VendorsORDER BY vend_name;\n\n\n\n\n函 数\n说 明\n\n\n\nLEFT()（或使用子字符串函数）\n返回字符串左边的字符 DB2, PostgreSQL, MySQL, SQL Server\n\n\nRIGHT()（或使用子字符串函数）\n返回字符串右边的字符\n\n\nLENGTH() DATALENGTH() LEN()\n返回字符串的长度\n\n\nLOWER()\n将字符串转换为小写\n\n\nUPPER()\n将字符串转换为大写\n\n\nLTRIM()\n去掉字符串左边的空格\n\n\nRTRIM()\n去掉字符串右边的空格\n\n\nTRIM()\n去掉字符串两边的空格\n\n\nSUBSTR() SUBSTRING()\n提取字符串的组成部分\n\n\nSOUNDEX()\n返回字符串的 SOUNDEX值\n\n\nSOUNDEX 是一个将任何文本串转换为描述其语音表示的字母数字模式的算法。能对字符串进行发音比较而不是字母比较。虽然 SOUNDEX 不是 SQL 概念，但多数 DBMS 都提供支持。\n\nPostgreSQL 不支持 SOUNDEX()。如果在创建 SQLite 时使用了 SQLITE_SOUNDEX 编译时选项，那么 SOUNDEX() 才可用。因为 SQLITE_SOUNDEX 不是默认编译时选项，所以多数 SQLite 实现不支持 SOUNDEX()。\n\nSELECT cust_name, cust_contactFROM Customers-- WHERE cust_contact = &#x27;Michael Green&#x27; -- 用正确拼写无法检索WHERE SOUNDEX(cust_contact) = SOUNDEX(&#x27;Michael Green&#x27;);\n表中的联系名是 Michelle Green 有误，正确拼写是 Michael Green。\n日期和时间函数SELECT order_numFROM Orders-- SQL Server。参数：返回的成分和从中返回成分的日期。WHERE DATEPART(yy, order_date) = 2020-- PostgreSQLWHERE DATE_PART(&#x27;year&#x27;, order_date) = 2020-- Oracle, PostgreSQLWHERE EXTRACT(year FROM order_date) = 2020-- Oracle，将两个字符串转换为日期；SQL Server 不支持 to_date()，但这里换成 DATEPART() 支持WHERE order_date BETWEEN to_date(&#x27;2020-01-01&#x27;, &#x27;yyyy-mm-dd&#x27;) AND to_date(&#x27;2020-12-31&#x27;, &#x27;yyyy-mm-dd&#x27;)-- DB2，MySQL 和 MariaDB 具有各种日期处理函数，但没有 DATEPART()WHERE YEAR(order_date) = 2020-- SQLiteWHERE strftime(&#x27;%Y&#x27;, order_date) = &#x27;2020&#x27;;\n数值函数\n\n\n函 数\n说 明\n\n\n\nABS()\n返回一个数的绝对值\n\n\nSIN()\n返回一个角度的正弦\n\n\nCOS()\n返回一个角度的余弦\n\n\nTAN()\n返回一个角度的正切\n\n\nEXP()\n返回一个数的指数值\n\n\nSQRT()\n返回一个数的平方根\n\n\nPI()\n返回圆周率 π 的值\n\n\n汇总数据聚集函数聚集函数（aggregate function）对某些行运行的函数，计算并返回一个值。\n\n\n\n函 数\n说 明\n\n\n\nAVG()\n返回某列的平均值\n\n\nCOUNT()\n返回某列的行数\n\n\nMAX()\n返回某列的最大值\n\n\nMIN()\n返回某列的最小值\n\n\nSUM()\n返回某列值之和\n\n\nSELECT AVG(prod_price) AS avg_price -- AVG() 只用于单列，忽略列值为 NULL 的行。FROM Products;\n\n\n注：最好指定别名以包含某个聚集函数的结果。否则许多 SQL 可能会产生错误消息。\n\n使用 COUNT(*) 对表中行的数目进行计数，包括空值（NULL）。使用 COUNT(column) 对特定列中具有值的行进行计数，忽略 NULL 值。\nSELECT COUNT(cust_email) AS num_custFROM Customers;\nMAX() 一般用来找出最大的数值或日期值；用于文本数据时，返回按该列排序后的最后一行，忽略列值为 NULL 的行。MIN() 相反。\nSELECT SUM(item_price*quantity) AS total_price -- 计算总价钱FROM OrderItemsWHERE order_num = 20005;\n聚集不同值对所有行执行计算，指定 ALL 参数（默认）或不指定参数。只包含不同的值，指定 DISTINCT 参数。\nSELECT AVG(DISTINCT prod_price) AS avg_price -- 平均值只考虑各个不同的价格，相同价格会排除FROM ProductsWHERE vend_id = &#x27;DLL01&#x27;;\nDISTINCT 不能用于 COUNT(*)，只能用于 COUNT()。DISTINCT 必须使用列名，不能用于计算或表达式。\n分组创建分组 GROUP BYSELECT vend_id, COUNT(*) AS num_prodsFROM ProductsGROUP BY vend_id -- 按 vend_id 排序并分组数据;\n\nGROUP BY 子句可以包含任意数目的列，还可以嵌套，但不能是聚集函数。如果在 SELECT 中使用表达式，则必须在 GROUP BY 中指定相同的表达式，不能使用别名。多数 SQL 实现不允许 GROUP BY 列带有长度可变的数据类型（如文本或备注型字段）除聚集计算语句外，SELECT 语句中的每一列都必须在 GROUP BY 中给出。如果分组列中包含具有 NULL 值的行，则 NULL 将作为一个分组返回。列中多行 NULL 值，将分为一组。\n\nSQL Server 等有些 SQL 实现在 GROUP BY 中支持可选的 ALL 子句。用来返回所有分组，即使是没有匹配行的分组也返回（在此情况下，聚集将返回 NULL）。\n\n\n通过相对位置指定列：有些 SQL 实现允许根据 SELECT 列表中的位置指定 GROUP BY 的列。如 GROUP BY 2, 1 表示按选择的第二个列分组，再按第一个列分组。\n\n过滤分组WHERE 过滤行，HAVING 过滤分组。HAVING 支持所有 WHERE 操作符。WHERE 在数据分组前进行过滤，HAVING 在分组后过滤。WHERE 排除的行不包括在分组中，可能会改变计算值，从而影响 HAVING 中基于这些值过滤掉的分组。使用 HAVING 时应该结合 GROUP BY，而 WHERE 用于标准的行级过滤。\nSELECT cust_id, COUNT(*) AS ordersFROM OrdersGROUP BY cust_idHAVING COUNT(*) &gt;= 2;\n\n排序和分组\n\n\nORDER BY\nGROUP BY\n\n\n\n对产生的输出排序\n对行分组，输出可能不是分组的顺序\n\n\n任意列都可用（甚至非选择的列）\n只能使用选择列或表达式列，且必须使用其表达式\n\n\n不一定需要\n如果与聚集函数一起使用列（或表达式），则必须使用\n\n\n\n一般在使用 GROUP BY 时，也给出 ORDER BY。这是保证数据正确排序的唯一方法。\n\nSELECT order_num, COUNT(*) AS itemsFROM OrderItemsGROUP BY order_numHAVING COUNT(*) &gt;= 3ORDER BY items, order_num;\n\nSELECT 子句顺序\n\n\n子 句\n说 明\n是否必须使用\n\n\n\nSELECT\n要返回的列或表达式\n是\n\n\nFROM\n从中检索数据的表\n仅在从表选择数据时使用\n\n\nWHERE\n行级过滤\n否\n\n\nGROUP BY\n分组说明\n仅在按组计算聚集时使用\n\n\nHAVING\n组级过滤\n否\n\n\nORDER BY\n输出排序顺序\n否\n\n\n子查询子查询过滤SELECT cust_name, cust_contactFROM CustomersWHERE cust_id IN (SELECT cust_id                  FROM Orders                  WHERE order_num IN (SELECT order_num                                      FROM OrderItems                                      WHERE prod_id = &#x27;RGAN01&#x27;));\n\n子查询的 SELECT 语句只能查询单个列。\n作为计算字段使用SELECT    cust_name,    cust_state,    (SELECT COUNT(*)    FROM Orders    WHERE Orders.cust_id = Customers.cust_id) AS orders    -- 完全限定列名，指定表名和列名，比较 Orders 表中的 cust_id 和正从 Customers 表中检索的 cust_idFROM CustomersORDER BY cust_name;\n\n子查询对检索出的每个顾客执行一次。\n联结表联结（join）是一种机制，用来在一条 SELECT 语句中关联表。要保证所有联结都有 WHERE 子句。\n关系表的设计就是要把信息分解成多个表，一类数据一个表。各表通过某些共同的值互相关联（所以才叫关系数据库）。\n可伸缩（scale）能够适应不断增加的工作量而不失败。设计良好的数据库或应用程序称为可伸缩性好（scale well）。\n创建联结SELECT vend_name, prod_name, prod_priceFROM Vendors, Products-- 将 Vendors 表中的 vend_id 与 Products 表中的匹配起来。WHERE Vendors.vend_id = Products.vend_id;\n\n笛卡儿积（cartesian product）由没有联结条件的表关系返回的结果为笛卡儿积。检索出的行的数目将是第一个表中的行数乘以第二个表中的行数。返回笛卡儿积的联结，也称叉联结（cross join）\nSELECT vend_name, prod_name, prod_priceFROM Vendors, Products -- 返回笛卡尔积;\n内联结以上联结称为等值联结（equijoin），基于两个表之间的相等测试。也称为内联结（inner join）\nSELECT vend_name, prod_name, prod_priceFROM VendorsINNER JOIN ProductsON Vendors.vend_id = Products.vend_id;\n两个表之间的关系是以 INNER JOIN 指定的部分 FROM 子句。联结条件用特定的 ON 子句而不是 WHERE 子句给出。传递给 ON 的实际条件与传递给 WHERE 的相同。\n\nANSI SQL 规范首选 INNER JOIN 语法。\n\n联结多个表SELECT prod_name, vend_name, prod_price, quantityFROM OrderItems, Products, VendorsWHERE Products.vend_id = Vendors.vend_idAND OrderItems.prod_id = Products.prod_idAND order_num = 20007;\n\n这个例子显示订单 20007 中的物品。订单物品存储在 OrderItems 表中。每个产品按其产品 ID 存储，它引用 Products 表中的产品。这些产品通过供应商 ID 联结到 Vendors 表中相应的供应商，供应商 ID 存储在每个产品的记录中。\n\nDBMS 对联结中表的最大数目有限制。\n\nSELECT cust_name, cust_contactFROM CustomersWHERE cust_id IN (SELECT cust_id                  FROM Orders                  WHERE order_num IN (SELECT order_num                                      FROM OrderItems                                      WHERE prod_id = &#x27;RGAN01&#x27;));-- 联结更有效SELECT cust_name, cust_contactFROM Customers, Orders, OrderItemsWHERE Customers.cust_id = Orders.cust_idAND Orders.order_num = OrderItems.order_numAND prod_id = &#x27;RGAN01&#x27;;\n\n表别名表别名只在查询执行中使用。\nSELECT cust_name, cust_contactFROM Customers AS C, Orders AS O, OrderItems AS OIWHERE C.cust_id = O.cust_idAND O.order_num = OI.order_numAND prod_id = &#x27;RGAN01&#x27;;\n\nOracle 不支持 AS 关键字，直接指定即可 Customers C\n\n自联结self-join\nSELECT cust_id, cust_name, cust_contactFROM CustomersWHERE cust_name = (SELECT cust_name                   FROM Customers                   WHERE cust_contact = &#x27;Jim Jones&#x27;);-- 使用联结的相同查询SELECT c1.cust_id, c1.cust_name, c1.cust_contactFROM Customers AS c1, Customers AS c2WHERE c1.cust_name = c2.cust_nameAND c2.cust_contact = &#x27;Jim Jones&#x27;;\n\n\n用自联结而不用子查询自联结通常作为外部语句，用来替代从相同表中检索数据使用的子查询语句。许多 DBMS 处理联结远比子查询快。\n\n自然联结标准联结（内联结）返回所有数据，相同的列甚至多次出现。自然联结排除多次出现，使每一列只返回一次。\n自然联结（natural join）只能选择唯一的列，一般通过对一个表使用通配符（SELECT *），而对其他表的列使用明确的子集来完成。\nSELECT    C.*, O.order_num, O.order_date,    OI.prod_id, OI.quantity, OI.item_priceFROM Customers AS C, Orders AS O, OrderItems AS OIWHERE C.cust_id = O.cust_idAND OI.order_num = O.order_numAND prod_id = &#x27;RGAN01&#x27;;\n\n很可能永远都不会用到不是自然联结的内联结。\n\n外联结外联结（outer join）包含了那些在相关表中没有关联行的行。\nSELECT Customers.cust_id, Orders.order_numFROM CustomersLEFT OUTER JOIN OrdersON Customers.cust_id = Orders.cust_id;\n\n使用 OUTER JOIN 时，必须使用 RIGHT 或 LEFT 关键字指定包括其所有行的表。RIGHT 指出的是 OUTER JOIN 右边的表，LEFT 指左边。\n\nSQLite 支持 LEFT OUTER JOIN，但不支持 RIGHT OUTER JOIN。\n\n全外联结（full outer join）检索两个表中的所有行并关联那些可以关联的行。\nSELECT Customers.cust_id, Orders.order_numFROM CustomersFULL OUTER JOIN OrdersON Customers.cust_id = Orders.cust_id;\n\nMariaDB、MySQL 和 SQLite 不支持全外联结。\n\n带聚集函数的联结SELECT Customers.cust_id,       COUNT(Orders.order_num) AS num_ordFROM CustomersLEFT OUTER JOIN OrdersON Customers.cust_id = Orders.cust_idGROUP BY Customers.cust_id;\n\n\n一般使用内联结，但使用外联结也有效。总是提供联结条件，否则会得出笛卡儿积。\n\n组合查询组合查询通常称为并（union）或复合查询（compound query）\n使用情况：在一个查询中从不同的表返回结构数据；对一个表执行多个查询，按一个查询返回数据。\nSELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_state IN (&#x27;IL&#x27;,&#x27;IN&#x27;,&#x27;MI&#x27;)UNIONSELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_name = &#x27;Fun4All&#x27;;-- WHERE 相同结果SELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_state IN (&#x27;IL&#x27;,&#x27;IN&#x27;,&#x27;MI&#x27;)OR cust_name = &#x27;Fun4All&#x27;;\n\nUNION 规则UNION 必须由两条或以上的 SELECT 语句组成，语句之间用 UNION 分隔；UNION 中每个查询必须包含相同的列、表达式或聚集函数；列数据类型必须兼容：类型不必完全相同，但必须是 DBMS 可以隐含转换的类型（如，不同数值类型或不同日期类型）。\n\n注：结合 UNION 使用的 SELECT 语句遇到不同的列名，会返回第一个名字，其他语句使用时也必须以第一个为准，否则报错。\n\n包含或取消重复的行 UNION ALLSELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_state IN (&#x27;IL&#x27;,&#x27;IN&#x27;,&#x27;MI&#x27;)UNION ALL -- 返回所有匹配行，可能有重复SELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_name = &#x27;Fun4All&#x27;;\n\n对组合查询结果排序使用 UNION 时，只能使用一条 ORDER BY，必须位于最后一条 SELECT 语句之后。\nSELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_state IN (&#x27;IL&#x27;,&#x27;IN&#x27;,&#x27;MI&#x27;)UNIONSELECT cust_name, cust_contact, cust_emailFROM CustomersWHERE cust_name = &#x27;Fun4All&#x27;ORDER BY cust_name, cust_contact;\n\n某些 DBMS 还支持其他 UNION：EXCEPT（有时称为 MINUS）用来检索只在第一个表中存在而在第二个表中不存在的行；而 INTERSECT 用来检索两个表中都存在的行。实际上这两种很少使用，因为相同结果可用联结得到。\n\n插入数据 INSERT插入完整行必须给每一列提供一个值，没有值则指定 NULL。\n-- 不安全，避免使用，顺序要和表一致。INSERT INTO CustomersVALUES(1000000006,       &#x27;Toy Land&#x27;,       &#x27;123 Any Street&#x27;,       &#x27;New York&#x27;,       &#x27;NY&#x27;,       &#x27;11111&#x27;,       &#x27;USA&#x27;,       NULL,       NULL);\n-- 更安全，次序随意，以列名匹配。INSERT INTO Customers(cust_id,                      cust_name,                      cust_address,                      cust_city,                      cust_state,                      cust_zip,                      cust_country,                      cust_contact,                      cust_email)VALUES(1000000006,       &#x27;Toy Land&#x27;,       &#x27;123 Any Street&#x27;,       &#x27;New York&#x27;,       &#x27;NY&#x27;,       &#x27;11111&#x27;,       &#x27;USA&#x27;,       NULL,       NULL);\n\n不能插入同一条记录两次，主键（cust_id）的值必须有唯一性。\n\n插入部分行INSERT INTO Customers(cust_id,                      cust_name,                      cust_address,                      cust_city,                      cust_state,                      cust_zip,                      cust_country)VALUES(1000000006,       &#x27;Toy Land&#x27;,       &#x27;123 Any Street&#x27;,       &#x27;New York&#x27;,       &#x27;NY&#x27;,       &#x27;11111&#x27;,       &#x27;USA&#x27;);\n\n省略列该列定义为允许 NULL 值（无值或空值）；在表定义中给出默认值。\n\n插入检索出的数据从 CustNew 表中读出数据并插入到 Customers 表。\nINSERT INTO Customers(cust_id,                      cust_contact,                      cust_email,                      cust_name,                      cust_address,                      cust_city,                      cust_state,                      cust_zip,                      cust_country)SELECT cust_id,       cust_contact,       cust_email,       cust_name,       cust_address,       cust_city,       cust_state,       cust_zip,       cust_countryFROM CustNew;\n\n注：INSERT SELECT 中的列名，这里不一定要求列名匹配，以两个表对应的列位置匹配。\n\nINSERT 通常只插入一行。要插入多行，必须执行多个 INSERT 语句。INSERT SELECT 是例外。\n一个表复制到另一个表CREATE SELECT 语句（SQL Server 也可用 SELECT INTO）（DB2 不支持 CREATE SELECT）。\n-- MySQL, MariaDB, Oracle, PostgreSQL, SQLite, SQL ServerCREATE TABLE CustCopy AS SELECT *FROM Customers;-- SQL Server, DB2SELECT * INTO CustCopyFROM Customers;\n\nSELECT INTO 是试验新 SQL 语句前进行表复制的很好工具，不影响实际数据。\n\nSELECT INTO 注意事项任何 SELECT 选项和子句都可使用；可利用联结从多个表插入数据；不管从多少表中检索数据，数据只能插入到一个表中。\n更新数据不要省略 WHERE 子句。UPDATE 语句以 WHERE 结束，它告诉 DBMS 更新哪一行。\nUPDATE Customers -- 要更新的表SET cust_contact = &#x27;Sam Roberts&#x27;,    cust_email = &#x27;kim@thetoystore.com&#x27; -- 列名和新值    -- cust_email = NULL -- 删除值WHERE cust_id = 1000000005 -- 过滤条件;\n删除数据DELETE FROM CustomersWHERE cust_id = 1000000006;\n使用外键确保引用完整性的一个好处是 DBMS 通常可以防止删除某数据与其他表相关联的行。如，要从 Products 表中删除一个产品，而这个产品用在 OrderItems 的已有订单中，那么 DELETE 语句将抛出错误并中止。这是总要定义外键的另一个理由。\nDELETE 删除整行而不是列。删除指定列，用 UPDATE 语句。\n想从表中删除所有行，可使用 TRUNCATE TABLE 语句速度更快（因为不记录数据的变动）。\n更新和删除指导原则除非打算更新和删除每一行，否则绝对带着 WHERE 子句。\n在 UPDATE 或 DELETE 语句使用 WHERE 子句前，应先用 SELECT 进行测试，保证它过滤的是正确的记录，以防编写的 WHERE 子句不正确。\nSELECT * FROM CustomersWHERE cust_id = 1000000042;DELETE CustomersWHERE cust_id = 1000000042;\n表创建表 CREATE TABLECREATE TABLE Products( -- 新表名    -- 表列的名字和定义，逗号分隔    prod_id CHAR(10) NOT NULL,    vend_id CHAR(10) NOT NULL,    prod_name CHAR(254) NOT NULL,    prod_price DECIMAL(8,2) NOT NULL,    prod_desc VARCHAR(1000) NULL) -- DB2 必须从最后一列中去掉 NULL;\n允许 NULL 值的列也允许在插入行时不给出该列的值。不允许的列不接受没有列值的行，即插入或更新行时，该列必须有值。只有不允许 NULL 值的列可作为主键。\nNULL 值不是空字符串，如果指定 &#39;&#39;（其间无字符），这在 NOT NULL 列中是允许的。空字符串是一个有效的值，它不是无值。\n指定默认值 DEFAULTCREATE TABLE OrderItems(    order_num INTEGER NOT NULL,    order_item INTEGER NOT NULL,    prod_id CHAR(10) NOT NULL,    quantity INTEGER NOT NULL DEFAULT 1,    item_price DECIMAL(8,2) NOT NULL);\n\n获得系统日期\n\n\n\n\nDBMS\n函数/变量\n\n\n\nDB2\nCURRENT_DATE\n\n\nMySQL\nCURRENT_DATE()\n\n\nOracle\nSYSDATE\n\n\nPostgreSQL\nCURRENT_DATE\n\n\nSQL Server\nGETDATE()\n\n\nSQLite\ndate(‘now’)\n\n\n更新表 ALTER TABLE许多 DBMS 不允许删除或更改表中的列，允许重命名；限制对已经填有数据的列进行更改，对未填有数据的列几乎无限制。\nALTER TABLE VendorsADD vend_phone CHAR(20);DROP COLUMN vend_phone; -- 部分 DBMS 支持\n\nSQLite 不支持用 ALTER TABLE 定义主键和外键，必须在最初创建表时指定。\n\n复杂的表结构更改一般需要手动删除：\n\n创建一个新表；\n用 INSERT SELECT 语句从旧表复制数据到新表，按需要修改；\n检验包含所需数据的新表；\n重命名旧表（若确定，可删除它）；\n用旧表名字重命名新表；\n重新创建触发器、存储过程、索引和外键。\n\n删除表 DROP TABLE删除表没有确认步骤，不能撤销，将永久删除。\nDROP TABLE CustCopy;\n重命名表DB2、MariaDB、MySQL、Oracle、PostgreSQL 使用 RENAME 语句；SQL Server 使用 sp_rename 存储过程；SQLite 使用 ALTER TABLE 语句。\n视图视图是虚拟的表。表包含数据，视图只包含使用时动态检索数据的查询。\n\nSQLite 仅支持只读视图，所以视图可以创建、读，但内容不能更改。所有 DBMS 一致支持视图创建语法。\n\n删除视图，DROP VIEW viewname;覆盖或更新视图，必须先删除再重新创建。\nSELECT cust_name, cust_contactFROM Customers, Orders, OrderItemsWHERE Customers.cust_id = Orders.cust_idAND OrderItems.order_num = Orders.order_numAND prod_id = &#x27;RGAN01&#x27;;-- 把上面查询包装成虚拟表 ProductCustomersSELECT cust_name, cust_contactFROM ProductCustomersWHERE prod_id = &#x27;RGAN01&#x27;;\n视图应用重用 SQL 语句。简化复杂的 SQL 操作。使用表的一部分而不是整个表。保护数据。可以授予用户访问表的特定部分的权限，而不是整个表的访问权限。更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据。\n视图规则和限制视图必须唯一命名，不能和其他表名重复。创建的视图数目没有限制，必须具有足够的访问权限。视图可以嵌套，即可以利用从其他视图中检索数据的查询来构造视图。所允许的嵌套层数在不同的 DBMS 中有所不同（嵌套视图可能会严重降低查询性能，因此使用前应进行全面测试）。许多 DBMS 禁止在视图查询中使用 ORDER BY 子句。有些 DBMS 要求对返回的所有列进行命名，如果列是计算字段，则需要使用别名。视图不能索引，也不能有关联的触发器或默认值。有些 DBMS 把视图作为只读的查询，这表示可以从视图检索数据，但不能将数据写回底层表。有些 DBMS 允许创建这样的视图，它不能进行导致行不再属于视图的插入或更新。例如有一个视图，只检索带有邮件地址的顾客。如果更新某个顾客，删除他的电子邮件地址，将使该顾客不再属于视图。这是允许的默认行为，但有的 DBMS 可能会阻止。\n用视图简化复杂的联结CREATE VIEW ProductCustomers ASSELECT cust_name, cust_contact, prod_idFROM Customers, Orders, OrderItemsWHERE Customers.cust_id = Orders.cust_idAND OrderItems.order_num = Orders.order_num;\nSELECT cust_name, cust_contactFROM ProductCustomersWHERE prod_id = &#x27;RGAN01&#x27;;\n\n用视图重新格式化检索出的数据SELECT RTRIM(vend_name) + &#x27; (&#x27; + RTRIM(vend_country) + &#x27;)&#x27;AS vend_titleFROM VendorsORDER BY vend_name;\n\n-- 视图格式化CREATE VIEW VendorLocations ASSELECT RTRIM(vend_name) + &#x27; (&#x27; + RTRIM(vend_country) + &#x27;)&#x27;AS vend_titleFROM Vendors;-- 检索数据SELECT * FROM VendorLocations;\n用视图过滤不想要的数据CREATE VIEW CustomerEMailList ASSELECT cust_id, cust_name, cust_emailFROM CustomersWHERE cust_email IS NOT NULLSELECT * FROM CustomerEMailList;\n\n使用视图与计算字段CREATE VIEW OrderItemsExpanded ASSELECT order_num,       prod_id,       quantity,       item_price,       quantity*item_price AS expanded_priceFROM OrderItemsSELECT * FROM OrderItemsExpandedWHERE order_num = 20008;\n\n存储过程存储过程就是为以后使用而保存的一条或多条 SQL 语句。可将其视为批文件。通常以编译过的形式存储，所以 DBMS 处理命令所需的工作量少，提高了性能。\n\nSQLite 不支持存储过程。\n\n执行存储过程EXECUTE 接受存储过程名和需要传递给它的任何参数。\nEXECUTE AddNewProduct(&#x27;JTS01&#x27;, -- 供应商 ID（Vendors 表的主键）                      &#x27;Stuffed Eiffel Tower&#x27;, -- 产品名                      6.49, -- 价格                      &#x27;Description&#x27;) -- 描述;\n这 4 个参数匹配存储过程中 4 个预期变量（定义为存储过程自身的组成部分）。此存储过程将新行添加到 Products 表，并将传入的属性赋给相应的列。另一个需要值的 prod_id 列是这个表的主键，最好是使生成此 ID 的过程自动化（而不是依赖于最终用户的输入）。\n\n存储过程所完成的工作：验证传递的数据，保证所有参数都有值；生成用作主键的唯一 ID；将新产品插入表，在合适的列中存储生成的主键和传递的数据。\n\n具体可选项：参数可选，具有不提供参数时的默认值。不按次序给出参数，以「参数=值」方式给出参数值。输出参数，允许存储过程在正执行的应用程序中更新所用的参数。用 SELECT 语句检索数据。返回代码，允许存储过程返回一个值到正在执行的应用程序。\n\n\n创建存储过程-- Oracle 版本，对邮件发送清单中具有邮件地址的顾客进行计数。CREATE PROCEDURE MailingListCount (    ListCount OUT INTEGER)ISv_rows INTEGER;BEGIN    SELECT COUNT(*) INTO v_rows    FROM Customers    WHERE NOT cust_email IS NULL;    ListCount := v_rows;END;/*ListCount 参数从存储过程返回一个值。关键字 OUT 用来指示这种行为。Oracle 支持 IN（传递值给存储过程）、OUT（从存储过程返回值）、INOUT（既传递又返回值）类型的参数。存储过程的代码括在 BEGIN 和 END 语句中，用检索出的行数设置 ListCount（要传递的输出参数）*/-- SQL Server 版本CREATE PROCEDURE MailingListCountASDECLARE @cnt INTEGERSELECT @cnt = COUNT(*)FROM CustomersWHERE NOT cust_email IS NULL;RETURN @cnt;/*此存储过程没有参数。调用程序检索 SQL Server 返回代码提供的值。用 DECLARE 语句声明了一个局部变量（SQL Server 中所有局部变量名都以 @ 起头）；在 SELECT 语句中让它包含 COUNT() 函数返回的值；最后用 RETURN 语句将计数返回给调用程序。*/\n-- 调用 Oracle 版本var ReturnValue NUMBEREXEC MailingListCount(:ReturnValue);SELECT ReturnValue;-- 调用 SQL Server 版本DECLARE @ReturnValue INTEXECUTE @ReturnValue=MailingListCount;SELECT @ReturnValue;\n-- SQL ServerCREATE PROCEDURE NewOrder @cust_id CHAR(10)AS-- 插入新订单INSERT INTO Orders(cust_id)VALUES(@cust_id)-- 返回订单号SELECT order_num = @@IDENTITY;\nSQL Server 中称这些自动增量的列为标识字段（identity field）其他 DBMS 称之为自动编号（auto number）或序列（sequence）DBMS 对日期使用默认值（GETDATE() 函数），订单号自动生成。在 SQL Server 上可在全局变量 @@IDENTITY 中得到，它返回到调用程序（这里的 SELECT）。\n事务处理使用事务处理（transaction processing），通过确保成批的 SQL 操作完全执行或完全不执行，来维护数据库完整性。\n事务（transaction）一组 SQL 语句；回退（rollback）撤销指定 SQL 语句的过程；提交（commit）将未存储的 SQL 语句结果写入数据库表；保留点（savepoint）事务处理中设置的临时占位符（placeholder），可以对它发布回退（与回退整个事务处理不同）。\n事务处理用来管理 INSERT、UPDATE 和 DELETE 语句。不能回退 SELECT 语句，也没必要，也不能回退 CREATE 或 DROP 操作。进行回退时，这些操作也不撤销。\n控制事务处理-- SQL ServerBEGIN TRANSACTION -- 明确事务处理块的开始和结束... -- 实际代码COMMIT TRANSACTION-- MariaDB 和 MySQLSTART TRANSACTION...-- OracleSET TRANSACTION...-- PostgreSQL 使用 ANSI SQL 语法BEGIN...\nROLLBACKDELETE FROM Orders;ROLLBACK;\nCOMMIT一般 SQL 语句都是针对数据库表直接执行和编写的，即隐式提交（implicit commit），提交（写或保存）操作是自动进行的。在事务处理块中，提交不会隐式进行。有的 DBMS 按隐式提交处理事务端。\n-- SQL ServerBEGIN TRANSACTION -- 利用事务保证完全删除订单DELETE OrderItems WHERE order_num = 12345;DELETE Orders WHERE order_num = 12345;COMMIT TRANSACTION;-- OracleSET TRANSACTIONDELETE OrderItems WHERE order_num = 12345;DELETE Orders WHERE order_num = 12345;COMMIT;\n保留点每个保留点都要取能够标识它的唯一名字。保留点越多越好。\n-- MariaDB、MySQL 和 OracleSAVEPOINT delete1;ROLLBACK TO delete1; -- 回退-- SQL ServerSAVE TRANSACTION delete1;ROLLBACK TRANSACTION delete1; -- 回退\n游标游标（cursor）是一个存储在 DBMS 服务器上的数据库查询，它不是一条 SELECT 语句，而是被该语句检索出来的结果集。在存储了游标之后，应用程序可以根据需要滚动或浏览其中的数据。\n\nSQLite 支持的游标称为步骤（step）\n\n常见特性能标记游标为只读；能控制可以执行的定向操作（向前、向后、第一、最后、绝对位置和相对位置等）；能标记某些列为可编辑的，某些不可编辑；规定范围，使游标对创建它的特定请求（如存储过程）或对所有请求可访问；指示 DBMS 对检索出的数据进行复制，使数据在游标打开和访问期间不变化。\n使用游标使用游标前，必须声明。这个过程实际上没有检索数据，只是定义要使用的 SELECT 语句和游标选项；一旦声明，就必须打开游标以供使用。这个过程用前面定义的 SELECT 语句把数据实际检索出来；对于填有数据的游标，根据需要检索各行；结束游标使用时，必须关闭游标，可能的话，释放游标（有赖于具体 DBMS）。\n创建游标 DECLARE-- DB2、MariaDB、MySQL 和 SQL ServerDECLARE CustCursor CURSORFORSELECT * FROM CustomersWHERE cust_email IS NULL;-- Oracle 和 PostgreSQLDECLARE CURSOR CustCursorISSELECT * FROM CustomersWHERE cust_email IS NULL;\n使用游标 OPEN CURSOROPEN CURSOR CustCursor\nFETCH 指出要检索哪些行，从何处检索它们以及将它们放于何处（如变量名）。\n-- OracleDECLARE TYPE CustCursor IS REF CURSOR    RETURN Customers%ROWTYPE;DECLARE CustRecord Customers%ROWTYPEBEGIN    OPEN CustCursor;    LOOP    FETCH CustCursor INTO CustRecord; -- 自动从第一行开始检索    EXIT WHEN CustCursor%NOTFOUND; -- 取不出行时退出循环        ... -- 具体处理代码    END LOOP;    CLOSE CustCursor;END;\n关闭游标 CLOSE-- DB2、 Oracle 和 PostgreSQLCLOSE CustCursor-- SQL ServerCLOSE CustCursorDEALLOCATE CURSOR CustCursor\n高级 SQL 特性约束约束（constraint）管理如何插入或处理数据库数据的规则。大多数约束是在表定义中定义的。\n主键主键是一种特殊的约束，用来保证一列（或一组列）中的值是唯一的，而且永不改动。\n表中任意列只要满足以下条件，都可用于主键：任意两行的主键值都不相同；每行都具有一个主键值（即列中不允许 NULL 值）；包含主键值的列从不修改或更新（大多数 DBMS 不允许这么做）；主键值不能重用，如果从表中删除某一行，其主键值不分配给新行。\nCREATE TABLE Vendors(    vend_id CHAR(10) NOT NULL PRIMARY KEY, -- 通过创建定义主键    vend_name CHAR(50) NOT NULL,    vend_address CHAR(50) NULL,    vend_city CHAR(50) NULL,    vend_state CHAR(5) NULL,    vend_zip CHAR(10) NULL,    vend_country CHAR(50) NULL);-- 另一种定义主键ALTER TABLE VendorsADD CONSTRAINT PRIMARY KEY (vend_id);\n\nSQLite 不允许使用 ALTER TABLE 定义键，要求在初始的 CREATE TABLE 语句中定义它们。\n\n外键外键是表中的一列，其值必须列在另一表的主键中。\nREFERENCES 关键字，表示 cust_id 中的任何值都必须是 Customers 表的 cust_id 中的值。\nCREATE TABLE Orders(    order_num INTEGER NOT NULL PRIMARY KEY,    order_date DATETIME NOT NULL,    cust_id CHAR(10) NOT NULL REFERENCES Customers(cust_id));-- 相同工作ALTER TABLE OrdersADD CONSTRAINTFOREIGN KEY (cust_id) REFERENCES Customers(cust_id);\n\n有的 DBMS 支持级联删除（cascading delete）特性。如果启用，该特性在从一个表中删除行时删除所有相关的数据。如，从 Customers 表中删除某个顾客，则任何关联的订单行也会被自动删除。\n\n唯一约束唯一约束用来保证一列（或一组列）中的数据是唯一的。类似于主键，但存在以下重要区别：\n\n表可包含多个唯一约束，但每个表只允许一个主键。\n唯一约束列可包含 NULL 值。\n唯一约束列可修改或更新。\n唯一约束列的值可重复使用。\n与主键不一样，唯一约束不能用来定义外键。\n\n唯一约束既可以用 UNIQUE 关键字在表定义中定义，也可以用单独的 CONSTRAINT 定义。\n检查约束检查约束用来保证一列（或一组列）中的数据满足一组指定的条件。\n常见用途：\n\n检查最小或最大值。如，防止 0 个物品的订单。\n指定范围。\n只允许特定的值。\n\nCREATE TABLE OrderItems(    order_num INTEGER NOT NULL,    order_item INTEGER NOT NULL,    prod_id CHAR(10) NOT NULL,    quantity INTEGER NOT NULL CHECK (quantity &gt; 0),    item_price MONEY NOT NULL);-- 检查 gender 列只包含 M 或 FADD CONSTRAINT CHECK (gender LIKE &#x27;[MF]&#x27;);\n索引索引用来排序数据以加快搜索和排序操作的速度。\n开始创建索引前：\n\n索引改善检索操作的性能，但降低了数据插入、修改和删除的性能。在执行这些操作时，DBMS 必须动态地更新索引。\n索引数据可能要占用大量的存储空间。\n并非所有数据都适合做索引。\n索引用于数据过滤和排序。\n可在索引中定义多个列（如州加上城市）。这样的索引仅在以州加城市的顺序排序时有用。\n\n-- 不同 DBMS 创建索引的语句变化很大CREATE INDEX prod_name_ind -- 索引必须唯一命名ON Products(prod_name);\n触发器触发器是特殊的存储过程，它在特定的数据库活动发生时自动执行。触发器可与特定表上的 INSERT、UPDATE 和 DELETE 操作相关联。与存储过程不一样，触发器与单个的表相关联。与 Orders 表上的 INSERT 操作相关联的触发器只在 Orders 表中插入行时执行。\n触发器内的代码具有以下数据的访问权：\n\nINSERT 操作中的所有新数据；\nUPDATE 操作中的所有新旧数据；\nDELETE 操作中删除的数据。\n\n常见用途：\n\n保证数据一致。如，在 INSERT 操作中将所有州名转换为大写。\n基于某个表的变动在其他表上执行活动。如，每当更新或删除一行时将审计跟踪记录写入某个日志表。\n进行额外的验证并根据需要回退数据。如，保证某个顾客的可用资金不超限定，如果已经超出，则阻塞插入。\n计算计算列的值或更新时间戳。\n\n-- SQL ServerCREATE TRIGGER customer_stateON CustomersFOR INSERT, UPDATEASUPDATE CustomersSET cust_state = Upper(cust_state)WHERE Customers.cust_id = inserted.cust_id;-- Oracle 和 PostgreSQLCREATE TRIGGER customer_stateAFTER INSERT OR UPDATEFOR EACH ROWBEGINUPDATE CustomersSET cust_state = Upper(cust_state)WHERE Customers.cust_id = :OLD.cust_idEND;\n\n一般来说，约束处理比触发器快，因此应该尽量使用约束。\n\n数据库安全一般说来，需要保护的操作：\n\n对数据库管理功能（创建表、更改或删除已存在的表等）的访问；\n对特定数据库或表的访问；\n访问的类型（只读、对特定列的访问等）；\n仅通过视图或存储过程对表进行访问；\n创建多层次的安全措施，从而允许多种基于登录的访问和控制；\n限制管理用户账号的能力。\n\n安全性使用 SQL 的 GRANT 和 REVOKE 语句来管理，不过大多数 DBMS 提供了交互式的管理实用程序，在内部使用 GRANT 和 REVOKE。\n样例表脚本Vendors 表\n\n\n列\n说 明\n\n\n\nvend_id（主键）\n唯一的供应商 ID\n\n\nvend_name\n供应商名\n\n\nvend_address\n供应商的地址\n\n\nvend_city\n供应商所在城市\n\n\nvend_state\n供应商所在州\n\n\nvend_zip\n供应商地址邮政编码\n\n\nvend_country\n供应商所在国家\n\n\nProducts 表\n\n\n列\n说 明\n\n\n\nprod_id（主键）\n唯一的产品ID\n\n\nvend_id\n产品供应商ID（关联到Vendors表的vend_id）\n\n\nprod_name\n产品名\n\n\nprod_price\n产品价格\n\n\nprod_desc\n产品描述\n\n\n\n为实施引用完整性，在 vend_id 上定义一个外键，关联到 Vendors 的 vend_id 列。\n\nCustomers 表\n\n\n列\n说 明\n\n\n\ncust_id（主键）\n唯一的顾客ID\n\n\ncust_name\n顾客名\n\n\ncust_address\n顾客的地址\n\n\ncust_city\n顾客所在城市\n\n\ncust_state\n顾客所在州\n\n\ncust_zip\n顾客地址邮政编码\n\n\ncust_country\n顾客所在国家\n\n\ncust_contact\n顾客的联系名\n\n\ncust_email\n顾客的电子邮件地址\n\n\nOrders 表\n\n\n列\n说 明\n\n\n\norder_num\n唯一的订单号\n\n\norder_date\n订单日期\n\n\ncust_id\n订单顾客 ID（关联到 Customers 表的 cust_id）\n\n\nOrderItems 表\n\n\n列\n说 明\n\n\n\norder_num（主键）\n订单号（关联到 Orders 表的 order_num）\n\n\norder_item（主键）\n订单物品号（订单内的顺序）\n\n\nprod_id\n产品 ID（关联到 Products 表的prod_id）\n\n\nquantity\n物品数量\n\n\nitem_price\n物品价格\n\n\n\ncreate.txt 包含创建 5 个数据库表（包括定义所有主键和外键约束）的 SQL 语句。populate.txt 包含用来填充这些表的 SQL INSERT 语句。\n-- Example table creation scripts for MySQL &amp; MariaDB-- Create Customers tableCREATE TABLE Customers(  cust_id      char(10)  NOT NULL,  cust_name    char(50)  NOT NULL,  cust_address char(50)  NULL,  cust_city    char(50)  NULL,  cust_state   char(5)   NULL,  cust_zip     char(10)  NULL,  cust_country char(50)  NULL,  cust_contact char(50)  NULL,  cust_email   char(255) NULL);CREATE TABLE OrderItems(  order_num  int          NOT NULL,  order_item int          NOT NULL,  prod_id    char(10)     NOT NULL,  quantity   int          NOT NULL,  item_price decimal(8,2) NOT NULL);CREATE TABLE Orders(  order_num  int      NOT NULL,  order_date datetime NOT NULL,  cust_id    char(10) NOT NULL);CREATE TABLE Products(  prod_id    char(10)      NOT NULL,  vend_id    char(10)      NOT NULL,  prod_name  char(255)     NOT NULL,  prod_price decimal(8,2)  NOT NULL,  prod_desc  text          NULL);CREATE TABLE Vendors(  vend_id      char(10) NOT NULL,  vend_name    char(50) NOT NULL,  vend_address char(50) NULL,  vend_city    char(50) NULL,  vend_state   char(5)  NULL,  vend_zip     char(10) NULL,  vend_country char(50) NULL);-- Define primary keysALTER TABLE Customers ADD PRIMARY KEY (cust_id);ALTER TABLE OrderItems ADD PRIMARY KEY (order_num, order_item);ALTER TABLE Orders ADD PRIMARY KEY (order_num);ALTER TABLE Products ADD PRIMARY KEY (prod_id);ALTER TABLE Vendors ADD PRIMARY KEY (vend_id);-- Define foreign keysALTER TABLE OrderItems ADD CONSTRAINT FK_OrderItems_Orders FOREIGN KEY (order_num) REFERENCES Orders (order_num);ALTER TABLE OrderItems ADD CONSTRAINT FK_OrderItems_Products FOREIGN KEY (prod_id) REFERENCES Products (prod_id);ALTER TABLE Orders ADD CONSTRAINT FK_Orders_Customers FOREIGN KEY (cust_id) REFERENCES Customers (cust_id);ALTER TABLE Products ADD CONSTRAINT FK_Products_Vendors FOREIGN KEY (vend_id) REFERENCES Vendors (vend_id);-- Example table population scripts for MySQL &amp; MariaDB-- Populate Customers tableINSERT INTO Customers(cust_id, cust_name, cust_address, cust_city, cust_state, cust_zip, cust_country, cust_contact, cust_email)VALUES(&#x27;1000000001&#x27;, &#x27;Village Toys&#x27;, &#x27;200 Maple Lane&#x27;, &#x27;Detroit&#x27;, &#x27;MI&#x27;, &#x27;44444&#x27;, &#x27;USA&#x27;, &#x27;John Smith&#x27;, &#x27;sales@villagetoys.com&#x27;);INSERT INTO Customers(cust_id, cust_name, cust_address, cust_city, cust_state, cust_zip, cust_country, cust_contact)VALUES(&#x27;1000000002&#x27;, &#x27;Kids Place&#x27;, &#x27;333 South Lake Drive&#x27;, &#x27;Columbus&#x27;, &#x27;OH&#x27;, &#x27;43333&#x27;, &#x27;USA&#x27;, &#x27;Michelle Green&#x27;);INSERT INTO Customers(cust_id, cust_name, cust_address, cust_city, cust_state, cust_zip, cust_country, cust_contact, cust_email)VALUES(&#x27;1000000003&#x27;, &#x27;Fun4All&#x27;, &#x27;1 Sunny Place&#x27;, &#x27;Muncie&#x27;, &#x27;IN&#x27;, &#x27;42222&#x27;, &#x27;USA&#x27;, &#x27;Jim Jones&#x27;, &#x27;jjones@fun4all.com&#x27;);INSERT INTO Customers(cust_id, cust_name, cust_address, cust_city, cust_state, cust_zip, cust_country, cust_contact, cust_email)VALUES(&#x27;1000000004&#x27;, &#x27;Fun4All&#x27;, &#x27;829 Riverside Drive&#x27;, &#x27;Phoenix&#x27;, &#x27;AZ&#x27;, &#x27;88888&#x27;, &#x27;USA&#x27;, &#x27;Denise L. Stephens&#x27;, &#x27;dstephens@fun4all.com&#x27;);INSERT INTO Customers(cust_id, cust_name, cust_address, cust_city, cust_state, cust_zip, cust_country, cust_contact)VALUES(&#x27;1000000005&#x27;, &#x27;The Toy Store&#x27;, &#x27;4545 53rd Street&#x27;, &#x27;Chicago&#x27;, &#x27;IL&#x27;, &#x27;54545&#x27;, &#x27;USA&#x27;, &#x27;Kim Howard&#x27;);-- Populate Vendors tableINSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;BRS01&#x27;,&#x27;Bears R Us&#x27;,&#x27;123 Main Street&#x27;,&#x27;Bear Town&#x27;,&#x27;MI&#x27;,&#x27;44444&#x27;, &#x27;USA&#x27;);INSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;BRE02&#x27;,&#x27;Bear Emporium&#x27;,&#x27;500 Park Street&#x27;,&#x27;Anytown&#x27;,&#x27;OH&#x27;,&#x27;44333&#x27;, &#x27;USA&#x27;);INSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;DLL01&#x27;,&#x27;Doll House Inc.&#x27;,&#x27;555 High Street&#x27;,&#x27;Dollsville&#x27;,&#x27;CA&#x27;,&#x27;99999&#x27;, &#x27;USA&#x27;);INSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;FRB01&#x27;,&#x27;Furball Inc.&#x27;,&#x27;1000 5th Avenue&#x27;,&#x27;New York&#x27;,&#x27;NY&#x27;,&#x27;11111&#x27;, &#x27;USA&#x27;);INSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;FNG01&#x27;,&#x27;Fun and Games&#x27;,&#x27;42 Galaxy Road&#x27;,&#x27;London&#x27;, NULL,&#x27;N16 6PS&#x27;, &#x27;England&#x27;);INSERT INTO Vendors(vend_id, vend_name, vend_address, vend_city, vend_state, vend_zip, vend_country)VALUES(&#x27;JTS01&#x27;,&#x27;Jouets et ours&#x27;,&#x27;1 Rue Amusement&#x27;,&#x27;Paris&#x27;, NULL,&#x27;45678&#x27;, &#x27;France&#x27;);-- Populate Products tableINSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BR01&#x27;, &#x27;BRS01&#x27;, &#x27;8 inch teddy bear&#x27;, 5.99, &#x27;8 inch teddy bear, comes with cap and jacket&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BR02&#x27;, &#x27;BRS01&#x27;, &#x27;12 inch teddy bear&#x27;, 8.99, &#x27;12 inch teddy bear, comes with cap and jacket&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BR03&#x27;, &#x27;BRS01&#x27;, &#x27;18 inch teddy bear&#x27;, 11.99, &#x27;18 inch teddy bear, comes with cap and jacket&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BNBG01&#x27;, &#x27;DLL01&#x27;, &#x27;Fish bean bag toy&#x27;, 3.49, &#x27;Fish bean bag toy, complete with bean bag worms with which to feed it&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BNBG02&#x27;, &#x27;DLL01&#x27;, &#x27;Bird bean bag toy&#x27;, 3.49, &#x27;Bird bean bag toy, eggs are not included&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;BNBG03&#x27;, &#x27;DLL01&#x27;, &#x27;Rabbit bean bag toy&#x27;, 3.49, &#x27;Rabbit bean bag toy, comes with bean bag carrots&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;RGAN01&#x27;, &#x27;DLL01&#x27;, &#x27;Raggedy Ann&#x27;, 4.99, &#x27;18 inch Raggedy Ann doll&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;RYL01&#x27;, &#x27;FNG01&#x27;, &#x27;King doll&#x27;, 9.49, &#x27;12 inch king doll with royal garments and crown&#x27;);INSERT INTO Products(prod_id, vend_id, prod_name, prod_price, prod_desc)VALUES(&#x27;RYL02&#x27;, &#x27;FNG01&#x27;, &#x27;Queen doll&#x27;, 9.49, &#x27;12 inch queen doll with royal garments and crown&#x27;);-- Populate Orders tableINSERT INTO Orders(order_num, order_date, cust_id)VALUES(20005, &#x27;2020-05-01&#x27;, &#x27;1000000001&#x27;);INSERT INTO Orders(order_num, order_date, cust_id)VALUES(20006, &#x27;2020-01-12&#x27;, &#x27;1000000003&#x27;);INSERT INTO Orders(order_num, order_date, cust_id)VALUES(20007, &#x27;2020-01-30&#x27;, &#x27;1000000004&#x27;);INSERT INTO Orders(order_num, order_date, cust_id)VALUES(20008, &#x27;2020-02-03&#x27;, &#x27;1000000005&#x27;);INSERT INTO Orders(order_num, order_date, cust_id)VALUES(20009, &#x27;2020-02-08&#x27;, &#x27;1000000001&#x27;);-- Populate OrderItems tableINSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20005, 1, &#x27;BR01&#x27;, 100, 5.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20005, 2, &#x27;BR03&#x27;, 100, 10.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20006, 1, &#x27;BR01&#x27;, 20, 5.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20006, 2, &#x27;BR02&#x27;, 10, 8.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20006, 3, &#x27;BR03&#x27;, 10, 11.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20007, 1, &#x27;BR03&#x27;, 50, 11.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20007, 2, &#x27;BNBG01&#x27;, 100, 2.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20007, 3, &#x27;BNBG02&#x27;, 100, 2.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20007, 4, &#x27;BNBG03&#x27;, 100, 2.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20007, 5, &#x27;RGAN01&#x27;, 50, 4.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20008, 1, &#x27;RGAN01&#x27;, 5, 4.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20008, 2, &#x27;BR03&#x27;, 5, 11.99);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20008, 3, &#x27;BNBG01&#x27;, 10, 3.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20008, 4, &#x27;BNBG02&#x27;, 10, 3.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20008, 5, &#x27;BNBG03&#x27;, 10, 3.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20009, 1, &#x27;BNBG01&#x27;, 250, 2.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20009, 2, &#x27;BNBG02&#x27;, 250, 2.49);INSERT INTO OrderItems(order_num, order_item, prod_id, quantity, item_price)VALUES(20009, 3, &#x27;BNBG03&#x27;, 250, 2.49);\nSQL 语句语法约定| 符号指出多选择之一；[] 包含关键字或子句是可选的。\nCOMMIT将事务写入数据库。\nCOMMIT [TRANSACTION]\nCREATE INDEX再一个或多个列上创建索引。\nCREATE INDEX indexnameON tablename(column, ...);\nCREATE PROCEDURE创建存储过程。Oracle 语法不同。\nCREATE PROCEDURE procedurename [parameters] [options]ASSQL statement;\nCREATE TABLECREATE TABLE tablename(    column    datatype    [NULL|NOT NULL]    [CONSTRAINTS],    column    datatype    [NULL|NOT NULL]    [CONSTRAINTS],    ...);\nALTER TABLE更新已存在表结构。\nALTER TABLE tablename(    ADD|DROP    column    datatype    [NULL|NOT NULL]    [CONSTRAINTS],    ADD|DROP    column    datatype    [NULL|NOT NULL]    [CONSTRAINTS],    ...);\nCREATE VIEW创建一个或多个表上的视图。\nCREATE VIEW viewname ASSELECT columns, ...FROM tables, ...[WHERE ...][GROUP BY ...][HAVING ...];\nDELETE从表中删除一行或多行。\nDELETE FROM tablename[WHERE ...];\nDROP永久删除数据库对象。\nDROP INDEX|PROCEDURE|TABLE|VIEW indexname|procedurename|tablename|viewname;\nINSERT为表添加一行。\nINSERT INTO tablename[(columns, ...)]VALUES(values, ...);\nINSERT SELECT将 SELECT 的结果插入到一个表。\nINSERT INTO tablename[(columns, ...)]SELECT columns, ...FROM tablename, ...[WHERE ...];\nROLLBACK撤销一个事务块。\nROLLBACK [TO savepointname];或ROLLBACK TRANSACTION;\nSELECT从一个或多个表（视图）中检索数据。\nSELECT columnname, ...FROM tablename, ...[WHERE ...][UNION ...][GROUP BY ...][HAVING ...][ORDER BY ...];\nUPDATE更新表中的一行或多行。\nUPDATE tablenameSET columnname = value, ...[WHERE ...];\nSQL 数据类型字符串（单引号内）\n\n\n数据类型\n说 明\n\n\n\nCHAR\n1～ 255 个字符的定长字符串。它的长度必须在创建时规定\n\n\nNCHAR\nCHAR的特殊形式，用来支持多字节或 Unicode 字符（此类型的不同实现变化很大）\n\n\nNVARCHAR\nTEXT 的特殊形式，用来支持多字节或 Unicode 字符\n\n\nTEXT（也称 LONG、MEMO 或 VARCHAR）\n变长文本\n\n\n定长字符串的长度在创建表时指定，空余字符用空格填充，或根据需要补为 NULL。\n数值（不用引号）\n\n\n数据类型\n说 明\n\n\n\nBIT\n单个二进制位值，主要用于开/关标志\n\n\nDECIMAL（或 NUMERIC）\n定点或精度可变的浮点值\n\n\nFLOAT（或 NUMBER）\n浮点值\n\n\nREAL\n4 字节浮点值\n\n\nINT（或 INTEGER）\n4 字节整数值，支持 −2147483648～2147483647\n\n\nSMALLINT\n2 字节整数值，支持−32768～32767\n\n\nTINYINT\n1 字节整数值，支持0～255\n\n\n货币数据类型MONEY 或 CURRENCY，有特定取值范围的 DECIMAL 数据类型。\n日期和时间\n\n\n数据类型\n说 明\n\n\n\nDATE\n日期值\n\n\nDATETIME（或 TIMESTAMP）\n日期时间值\n\n\nSMALLDATETIME\n日期时间值，精确到分（无秒）\n\n\nTIME\n时间值\n\n\nODBC 日期该格式对每种数据库都起作用。\n日期 &#123;d &#39;2020-12-30&#39;&#125;时间 &#123;t &#39;12:30:59&#39;&#125;日期时间 &#123;ts &#39;2020-12-30 12:30:59&#39;&#125;\n二进制兼容性最差，最少使用，可包含任何数据。\n\n\n\n数据类型\n说 明\n\n\n\nBINARY\n定长二进制数据（最大长度从 255B 到 8000B，依赖于具体的实现）\n\n\nRAW（某些实现为 BINARY）\n定长二进制数据，最多 255B\n\n\nVARBINARY\n变长二进制数据（最大长度一般在 255B 到8000B 间变化，依赖于具体的实现）\n\n\nLONG RAW\n变长二进制数据，最长 2GB\n\n\nSQL 关键字保留字\n\nABORTABSOLUTEACTIONACTIVEADDAFTERALLALLOCATEALTERANALYZEANDANYAREASASCASCENDINGASSERTIONATAUTHORIZATIONAUTOAUTO-INCREMENTAUTOINCAVGBACKUPBEFOREBEGINBETWEENBIGINTBINARYBITBLOBBOOLEANBOTHBREAKBROWSEBULKBYBYTESCACHECALLCASCADECASCADEDCASECASTCATALOGCHANGECHARCHARACTERCHARACTER_LENGTHCHECKCHECKPOINTCLOSECLUSTERCLUSTEREDCOALESCECOLLATECOLUMNCOLUMNSCOMMENTCOMMITCOMMITTEDCOMPUTECOMPUTEDCONDITIONALCONFIRMCONNECTCONNECTIONCONSTRAINTCONSTRAINTSCONTAININGCONTAINSCONTAINSTABLECONTINUECONTROLROWCONVERTCOPYCOUNTCREATECROSSCSTRINGCUBECURRENTCURRENT_DATECURRENT_TIMECURRENT_TIMESTAMPCURRENT_USERCURSORDATABASEDATABASESDATEDATETIMEDAYDBCCDEALLOCATEDEBUGDECDECIMALDECLAREDEFAULTDELETEDENYDESCDESCENDINGDESCRIBEDISCONNECTDISKDISTINCTDISTRIBUTEDDIVDODOMAINDOUBLEDROPDUMMYDUMPELSEELSEIFENCLOSEDENDERRLVLERROREXITESCAPEESCAPEDEXCEPTEXCEPTIONEXECEXECUTEEXISTSEXITEXPLAINEXTENDEXTERNALEXTRACTFALSEFETCHFIELDFIELDSFILEFILLFACTORFILTERFLOATFLOPPYFORFORCEFOREIGNFOUNDFREETEXTFREETEXTTABLEFROMFULLFUNCTIONGENERATORGETGLOBALGOGOTOGRANTGROUPHAVINGHOLDLOCKHOURIDENTITYIFININACTIVEINDEXINDICATORINFILEINNERINOUTINPUTINSENSITIVEINSERTINTINTEGERINTERSECTINTERVALINTOISISOLATIONJOINKEYKILLLANGUAGELASTLEADINGLEFTLENGTHLEVELLIKELIMITLINENOLINESLISTENLOADLOCALLOCKLOGFILELONGLOWERMANUALMATCHMAXMERGEMESSAGEMINMINUTEMIRROREXITMODULEMONEYMONTHMOVENAMESNATIONALNATURALNCHARNEXTNEWNONOCHECKNONCLUSTEREDNONENOTNULLNULLIFNUMERICOFOFFOFFSETOFFSETSONONCEONLYOPENOPTIONORORDEROUTEROUTPUTOVEROVERFLOWOVERLAPSPADPAGEPAGESPARAMETERPARTIALPASSWORDPERCENTPERMPERMANENTPIPEPLANPOSITIONPRECISIONPREPAREPRIMARYPRINTPRIORPRIVILEGESPROCPROCEDUREPROCESSEXITPROTECTEDPUBLICPURGERAISERRORREADREADTEXTREALREFERENCESREGEXPRELATIVERENAMEREPEATREPLACEREPLICATIONREQUIRERESERVRESERVINGRESETRESTORERESTRICTRETAINRETURNRETURNSREVOKERIGHTROLLBACKROLLUPROWCOUNTRULESAVESAVEPOINTSCHEMASECONDSECTIONSEGMENTSELECTSENSITIVESEPARATORSEQUENCESESSION_USERSETSETUSERSHADOWSHAREDSHOWSHUTDOWNSINGULARSIZESMALLINTSNAPSHOTSOMESORTSPACESQLSQLCODESQLERRORSTABILITYSTARTINGSTARTSSTATISTICSSUBSTRINGSUMSUSPENDTABLETABLESTEMPTEMPORARYTEXTTEXTSIZETHENTIMETIMESTAMPTOTOPTRAILINGTRANTRANSACTIONTRANSLATETRIGGERTRIMTRUETRUNCATETYPEUNCOMMITTEDUNIONUNIQUEUNTILUPDATEUPDATETEXTUPPERUSAGEUSEUSERUSINGVALUEVALUESVARCHARVARIABLEVARYINGVERBOSEVIEWVOLUMEWAITWAITFORWHENWHEREWHILEWITHWORKWRITEWRITETEXTXORYEARZONE\n\n\nRefer《SQL必知必会（第5版）》《MySQL必知必会（第1版）》\nPS数据库语言除了关键字一般全大写有点看不习惯，整体语句比较简单，但逻辑较冗杂，刷力扣的时候感觉代码格式上也没有统一的标准，故行文中排版稍有混乱，日后再研究这些细节。\n","categories":["Programming"]},{"title":"堆和栈的区别『经典』","url":"/2020/05/05/Reverse_stack/","content":"0x00 前言转载一篇理解堆和栈区别的好文章此文章虽然是面向 C/C++ 程序员写的，但是对 Java 程序员还是很有帮助的。\n一、预备知识 — 程序的内存分配一个由 C/C++ 编译的程序占用的内存分为以下几个部分：\n\n栈区（stack）— 由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。\n\n堆区（heap）— 一般由程序员分配释放，若程序员不释放，程序结束时可能由 OS 回收。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表，呵呵。\n\n全局区（静态区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。— 程序结束后由系统释放。\n\n文字常量区 — 常量字符串就是放在这里的。程序结束后由系统释放。\n\n程序代码区 — 存放函数体的二进制代码。\n\n\n二、例子程序这是一个前辈写的，非常详细\n//main.cppint a = 0; 全局初始化区char *p1; 全局未初始化区main() &#123;int b; 栈char s[] = &quot;abc&quot;; 栈char *p2; 栈char *p3 = &quot;123456&quot;; 123456\\0 在常量区，p3 在栈上。static int c =0；全局（静态）初始化区p1 = (char *)malloc(10);p2 = (char *)malloc(20);分配得来的 10 和 20 字节的区域就在堆区。strcpy(p1, &quot;123456&quot;); 123456\\0 放在常量区，编译器可能会将它与 p3 所指向的 &quot;123456&quot; 优化成一个地方。&#125;\n三、堆和栈的理论知识3.1 申请方式stack:由系统自动分配。例如，声明在函数中一个局部变量 int b; 系统自动在栈中为 b 开辟空间。\nheap:需要程序员自己申请，并指明大小在 C 中 malloc 函数如 p1 = (char *)malloc(10);在 C++ 中用 new 运算符如 p2 = new char[10];但是注意 p1、p2 本身是在栈中的。\n3.2 申请后系统的响应栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。\n堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时，会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的 delete 语句才能正确的释放本内存空间。\n另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。\n3.3 申请大小的限制栈：在 Windows 下，栈是向低地址扩展的数据结构，是一块连续的内存的区域。这句话的意思是栈顶的地址和栈的最大容量是系统预先规定好的，在 Windows 下，栈的大小是 2M（也有的说是 1M，总之是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示 overflow。因此，能从栈获得的空间较小。\n堆：堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。\n3.4 申请效率的比较栈由系统自动分配，速度较快。但程序员是无法控制的。\n堆是由 new 分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便。另外，在 Windows 下，最好的方式是用 VirtualAlloc 分配内存，它不是在堆，也不是在栈，是直接在进程的地址空间中保留一块内存，虽然用起来最不方便。但是速度快，也最灵活。\n3.5 堆和栈中的存储内容栈：在函数调用时，第一个进栈的是主函数中的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的 C 编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。\n当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。\n堆：一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容由程序员安排。\n3.6 存取效率的比较char s1[] = &quot;aaaaaaaaaaaaaaa&quot;;char *s2 = &quot;bbbbbbbbbbbbbbbbb&quot;;aaaaaaaaaaa 是在运行时刻赋值的；而 bbbbbbbbbbb 是在编译时就确定的；\n但是，在以后的存取中，在栈上的数组比指针所指向的字符串（例如堆）快。比如：\n#includevoid main() &#123;char a = 1;char c[] = &quot;1234567890&quot;;char *p =&quot;1234567890&quot;;a = c[1];a = p[1];return;&#125;\n对应的汇编代码：\n10: a = c[1];00401067 8A 4D F1 mov cl,byte ptr [ebp-0Fh]0040106A 88 4D FC mov byte ptr [ebp-4],cl11: a = p[1];0040106D 8B 55 EC mov edx,dword ptr [ebp-14h]00401070 8A 42 01 mov al,byte ptr [edx+1]00401073 88 45 FC mov byte ptr [ebp-4],al\n第一种在读取时直接就把字符串中的元素读到寄存器 cl 中，而第二种则要先把指针值读到 edx 中，再根据 edx 读取字符，显然慢了。\n3.7 小结堆和栈的区别可以用如下的比喻来看出：\n使用 栈 就像我们去饭馆里吃饭，只管点菜（发出申请）、付钱、和吃（使用），吃饱了就走，不必理会切菜、洗菜等准备工作和洗碗、刷锅等扫尾工作，他的好处是快捷，但是自由度小。使用 堆 就像是自己动手做喜欢吃的菜肴，比较麻烦，但是比较符合自己的口味，而且自由度大。\n","categories":["Algorithm"]},{"title":"VS Code personalization","url":"/2023/05/07/tool_vscode/","content":"插件Emmet（内置）&gt; 子节点+ 兄弟节点* 乘法# ID. 类名&#123;    &quot;key&quot;: &quot;alt+w r&quot;,    &quot;command&quot;: &quot;editor.emmet.action.wrapWithAbbreviation&quot;&#125;\nAuto Rename TagbackgroundBookmarks&#123;    &quot;key&quot;: &quot;alt+b&quot;,    &quot;command&quot;: &quot;bookmarks.toggle&quot;,    &quot;when&quot;: &quot;editorTextFocus&quot;&#125;,&#123;    &quot;key&quot;: &quot;alt+k&quot;,    &quot;command&quot;: &quot;bookmarks.jumpToPrevious&quot;,    &quot;when&quot;: &quot;editorTextFocus&quot;&#125;,&#123;    &quot;key&quot;: &quot;alt+j&quot;,    &quot;command&quot;: &quot;bookmarks.jumpToNext&quot;,    &quot;when&quot;: &quot;editorTextFocus&quot;&#125;\nC/C++Code Spell CheckerCtrl+.\nImport CostMarkdown All in OneAlt + C  Check task listAlt + S  StrikeThroughAlt + shift + f  Table formatter\nPaste Imagectrl + alt + V\nPath Intellisense&#123;  &quot;key&quot;: &quot;.&quot;,  &quot;command&quot;: &quot;&quot;&#125;\nPrettierPythonTrailing Spaces&#123;  &quot;key&quot;: &quot;alt+t&quot;,  &quot;command&quot;: &quot;trailing-spaces.deleteTrailingSpaces&quot;,  &quot;when&quot;: &quot;editorTextFocus&quot;&#125;\nvscode-icons未装插件LeetCodevimBetter C++ SyntaxAuto Close TagColor Highlightopen in browserStylelintJavaScript (ES6) code snippetsVolarCode RunnerCtrl+Alt+N  runCtrl+Alt+M  stopCtrl+Alt+J  select\n配置\nexport settings as a profileimport settings from a profileopen settings\n\nRefer极客教程 VSCodeVSCode 官方教程跟我一起在 Visual Studio Code 添加自定义 snippet（代码段），附详细配置snippet-generatorvscode 代码片段如何输出$符号语言标识符VS Code 代码编辑器入门指南：核心组件与概念VS Code 代码编辑器入门指南下篇：场景化应用介绍Visual Studio Code 菜鸟教程：从入门到精通Visual Studio Code 使用指南(vscode 技巧)史上最全 vscode 配置使用教程vscode 手动备份配置文件Code Runner: 代码一键运行，支持超过 40 种语言VS Code 必备前端插件，你值得拥有！vscode 显示 120 字符或者 80 字符提示线或者显示垂直标尺vscode基础使用教程(基于macOS)\n","categories":["Software"]},{"title":"Toolset","url":"/2022/03/10/tool_toolset/","content":"0x00 Why平时有意无意收集了解到的一些小工具，可以解决些小需求，特开此篇记录。\n0x01 Icon Explorer\n环境：Win All\n介绍：图标提取工具，支持 exe、dll 等文件，单独或批量提取为 .ico 文件，或者将选择的图标重新打包为新的 dll、icl 库文件。\n使用：\n通过左上方的导航定位指定的文件夹（或直接拖动文件），右边就会列出其包含的 exe、dll 等文件，选中指定的文件即可浏览其包含的所有图标，每个图标都有不同的尺寸，使用右键菜单保存。\n如果取消选中 Clear previous selection，每次选中 exe 等文件后显示的图标将不会清除，这便于从不同的文件中提取图标并打包。\n搜索功能支持搜索指定目录下包含图标的指定类型的文件，搜索完成后结果会显示在右边的文件列表，是否搜索子目录由用户选择。如果不希望它自动将所有文件包含的图标显示在下方，可以取消勾选 Add all found icons to view。\n\n\n下载：https://mitec.cz/iconex.html\n\n0x02 cat-catch\n环境：Chrome\n介绍：猫抓 chrome 媒体嗅探插件\n使用：crx 文件导入到 Chrome 扩展里\n下载：https://github.com/xifangczy/cat-catch\n\n0x03 Dism++\n环境：Win All\n介绍：C 盘垃圾清理工具 Dism++\n使用：详见下载页，工具页面\n下载：https://github.com/Chuyu-Team/Dism-Multi-language\n\n0x04 peekPassword\n环境：Win All\n介绍：星号密码查看器支持查看 Outlook、FTP 等桌面软件窗口下的密码，（实测 Tim 会闪退）也支持查看 Gmail、yahoo 等网页式星号密码，还支持找回宽带拨号密码以及存储在路由器中的 ADSL 密码。\n使用：无需解释，开箱即用\n下载：http://www.51xiazai.cn/soft/1191486.htm\n\n0x05 Gif123\n环境：Win All\n介绍：软件极简单，只有 3 个主要按钮：录制、预览、复制。\n使用：FPS 调到 24 清晰度更佳\n下载：https://github.com/aardio/gif123\n\n0x06 CrystalDiskInfo\n环境：Win All\n介绍：CrystalDiskInfo是一款硬盘检测工具，只要在装了SSD的电脑上，安装运行CrystalDiskInfo软件，即可检测到硬盘信息。\n使用：开箱即用\n下载：https://crystalmark.info/en/download/\n\n0x07 BatteryInfoView\n环境：Win All\n介绍：检查笔记本电脑的电池状态\n使用：开箱即用\n下载：https://batteryinfoview.en.uptodown.com/windows/download\n\n0x0\n环境：\n介绍：\n使用：\n下载：\n\n0x0 References从程序exe、dll文件中提取图标的工具Icon Explorer\n","categories":["Software"]},{"title":"OD 基础总结","url":"/2020/03/22/Reverse_OD/","content":"0x00 Preface之前学了一段时间的 C 语言，算是打下了一点语言基础，接下来开始同步学习逆向的知识了，不得不说比起 WEB 方向，二进制方向的入门挺枯燥的，所以为了提前获得点愉悦感 &amp; 成就感，同时了解点汇编的相关知识，开始学习《使用 OD 从零开始 Cracking》，因为其中部分例子比较繁复，特此精简，为后续复习做些笔记，软件中英文对照学习效果更好。\n\n环境：VMware 15.5.6 Windows 10 Professional\n软件：吾爱破解专用版 OllyDbg 1.10\n\n0x01 OD 初识OD 四个主要窗口\n反汇编和数据窗口中间有一个解释窗口。\n\n\n1.反汇编窗口（disassembler）吾爱破解版 OD 已经默认勾选了自动对主模块进行分析，OD 会分析程序显示它的附加信息\nOptions -&gt; Debugging options -&gt; Analysis1 -&gt; Auto Start analysis of main module\n通常 OD 显示程序的某些部分是不正确的，错误的将可执行代码解释为数据，这种情况，在反汇编窗口中右键选择 Analysis -&gt; Remove analysis from module 手动删除分析结果。\n\n吾爱版已经默认高亮显示 jumps 和 calls，若需修改右键选择 Appearance -&gt; Highlighting\n\n2.寄存器窗口（registers）\n上图是寄存器和标志位。显示模式的四种类型：默认是 FPU 寄存器，比原版多了 MMX 寄存器。\n3.堆栈窗口（stack &amp; pile）\n注：我常见的堆是 heap，栈是 stack，但是 pile pila 也可翻译为堆，其中 pila 是原文的翻译，而堆栈又常常直接被 stack 指代，本文以堆（heap）栈（stack）为行文标准。\n\n显示 ESP 和 EBP 寄存器指向地址的信息。默认显示 ESP 指向的信息（最重要），右键切换。\n\n4.数据窗口（dump）这个窗口有很多显示模式，右键选择，默认模式为 8-byte Hex / ASCII，是最常用的，这里选择 Special -&gt; PE Header，之后会用到。\n\n5.菜单/控制面板上的图标按钮代表的窗口\n\n\nL 按钮或 View -&gt; Log，显示日志窗口，通过配置显示 OD 启动时保存在日志窗口的不同类型信息，也涉及条件断点的信息。最重要选项是保存到文件，即把信息保存为文本文件，右键 Log to file\n\nE 或 View -&gt; Executables 显示程序运行使用的模块：exe，dll，ocx 等。\n\nM 或 View -&gt; Memory 显示程序映射到内存的信息，右键可搜索不同种类的字符串，可在访问上设置中断。\n\nT 或 View -&gt; Threads 显示线程窗口。\n\nW 或 View -&gt; Windows 显示程序窗口，若程序未运行，窗口为空白。\n\nH 或 View -&gt; Handles，显示句柄窗口。\n\nC 或 View -&gt; CPU，返回到主 (CPU) 窗口。\n\n/ （原版）或 P （吾爱版）或 View -&gt; Patches，显示程序修改信息。\n\nK 或 View -&gt; Call stack 显示调用堆栈的窗口信息，尝试反向跟踪函数的调用顺序。\n\nB 或 View -&gt; Breakpoints 显示程序普通断点的列表窗口，这里不显示硬件断点和内存断点。\n\nR 或 View -&gt; Reference 参考窗口，显示在 OD 中搜索结果。\n\n… 或 View -&gt; Run trace 显示 RUN TRACE（RUN 跟踪）命令的结果。这里也可以通过 Log to file 保存。\n\nS 或 View -&gt; Source 显示源码。\n\n\n\n注：吾爱版里，鼠标悬停在图标上可以在左下角看到功能提示。\n\n6.设置实时调试 JIT选择菜单 Options -&gt; Just-in-time debugging开启点击 Make OD just-in-time debugger 后再点击 Done取消点击 Restore old just-in-time debugger 后再点击 Done\n7.关联插件默认自带 plugins 目录，选择 Options -&gt; Appearance，然后在窗口中选择 Directories\n\n点击 Pluginpath -&gt; Browse 选择你创建的文件夹，修改完成有弹窗提示则需要重启 OD，但在此之前需要拷贝刚下载的插件（解压后文件，通常只需复制 DLL 文件即可）。\n卸载插件只需删除 plugins 文件夹内相关的 DLL 文件然后重启 OD。\n8.数值系统正数从 00000000 到 7FFFFFFF，负数从 80000000 到 FFFFFFFF7FFFFFFF 为十进制的 2147483647（最大正数）80000000 为十进制的 -2147483648（最小负数）\n\n如下图右键选择 Modify（或选中回车），可修改寄存器的值，这里可以完成不同的转换功能。第一栏填入需转换的十六进制值，第二栏会出现对应的十进制值。\n\n\n\n在 OD 中使用空格，可以使用 20（Hex）或 32（Dec）\n\n\n0x02 寄存器\n数值以十六进制显示，ESP 指向栈顶，EIP 指向当前要执行的指令，?AX（问号用于查询寄存器的值）\n\n16 位寄存器分低八位和高八位\n\n\n\n\n改变寄存器的值上面数值系统提到过，这里说一下特殊情况。EIP 在反汇编窗口选择New origin here\n\n\n标志寄存器\n\nC （进位标志）无符号运算的结果，在超过最大数值时被设置，可能是寄存器的值。\n\nP （奇偶标志）指令的结果用二进制表示时，该二进制数中 1 的总个数为偶数时被设置。\n\nA （辅助进位标志）完成操作后，用其它的某种形式对其进行记录。\n\nZ （零标志）最有用的一个标志，当运算产生的结果为 0 时被设置。\n\nS （符号标志）运算结果为负时被设置。\n\nT 标志\n\nD 标志置 0 时，数据窗口中串操作向下执行；置 1 时，向上执行。\n\nO （溢出标志）当操作改变了符号位或结果超出了可能存取的最大值，返回错误值时被设置。\n\n\n0x03 常用指令及寻址1. 汇编指令\nNOP（无操作)没有特殊用途。用一个短指令来替换一个长指令的话，处理器没有错误，则多余的空间会被 NOP 填充。适当数目的 NOP 指令可以将其他指令完全替换掉。\n\n在数据窗口中，右键 Go to - Expression（Ctrl + G）输入需要转到的地址。\n红色突出显示刚修改过的字节。\n撤销修改的指令，数据窗口或反汇编窗口，选中区域后右键 UNDO         SELECTION（Alt + backpace）\n\n\nPUSH（压/入栈）将 操作数 / 寄存器 / 特定内存地址的值 压入堆栈中。新压入的数据总是在堆栈顶部，不会改变下面的数据。PUSH 401008 堆栈中将被放置 401008PUSH [401008] 内存单元中存储值，在数据窗口中查看。\n\n堆栈中存放数据窗口中颠倒过来的值，读/写内容在内存中倒序放置是处理器特点之一。\nPUSH DWORD PTR DS:[401008] OD 默认操作 4 个字节的内存，即 DWORD，2 字节 WORD，1 字节 BYTE。\nESP 中存放当前堆栈顶部的内存地址。\n\n\n\n\n\nPOP（弹/出栈）弹出堆栈，取出堆栈顶部第一个字母或值，存放到指定的目标地址内存单元中。\n\nPUSHAD把所有通用寄存器值按一定顺序压入堆栈中，相当于 PUSH EAX, PUSH ECX, PUSH EDX, PUSH EBX, PUSH ESP, PUSH EBP, PUSH ESI, PUSH EDI\n\nPOPAD从堆栈中取值放到相应的寄存器中，相当于 POP EDI, POP ESI, POP EBP, POP ESP, POP EBX, POP EDX, POP ECX, POP EAX\n\nPUSHAD 和 POPAD 经常使用，如需保存所有寄存器的内容，然后修改寄存器的值，或进行堆栈的相关操作，然后使用 POPAD 恢复原来的状态。\n\n\nPUSHA 等价于 PUSH AX, CX, DX, BX, SP, BP, SI, DI\n\nPOPA 等价于 POP DI, SI, BP, SP, BX, DX, CX, AX\n\nMOV（传送指令）将第二个操作数赋值给第一个操作数。其中如 MOV DWORD PTR DS:[400500],EAX 写入内存地址可能会导致内存访问异常，则为没有写入权限。\n\nMOVSX（带符号扩展的传送指令）第一个操作数的位数比第二个多，第二个操作数的符号位（正 0 负 F）填充第一个剩余部分。\n\nMOVZX（带 0 扩展的传送指令）剩余部分不根据第二个操作数的正负进行填充，而总是被填充为 0。\n\nLEA（取地址指令）类似于 MOV，第一个操作数是一个通用寄存器，第二个操作数是一个内存单元。当计算要依赖于之前结果时，这个指令非常有用。\n\n下面情况有括号，但只需计算 ECX+38 的值，然后将结果赋值给 EAX。\n因为完成的是赋值操作，所以会认为操作数是内存单元中的值，但实际上操作数是内存单元的地址，解释窗口 Stack address=00401038 已表明。\n\n\n\n\n\nXCHG (交换 寄存器 / 内存单元 和 寄存器)该指令交换两个操作数的值。存在对内存地址没有写入权限的情况。\n\n2. 数学指令\nINC DEC（增减 1 指令）\n\nADD ADC（带进位的加法）\n\nSUB SBB（带进位的减法）\n\nMUL（无符号数的乘法）只有一个操作数，另一个操作数是 EAX，结果存放到 EDX:EAX 中。\n\n先存放到 EAX，若空间不够则继续存放在 EDX，否则，EDX 置零，即乘积高 32 位存放在 EDX，低 32 位存放在 EAX\n下图理解偏误写成了 EAX:EDX，有幸请教了看雪讲师苏大哥，错误原因如下图，为谨记就不改图了！特此注意！！\n\n\n\n\n\nIMUL（有符号数的乘法）它允许使用多达三个操作数。第一个操作数保存后两个操作数相乘的结果，或者第一个操作数保存两个操作数相乘的结果。\n\n数字开头不能为字符，故可以在开头补 0 解决。多个操作数存放在一个寄存器的时候，容纳不下结果只能保存能够容纳的部分，从最高位依次丢弃。最好的方式是一个操作数，结果存放到 EDX:EAX 中，即拥有两倍大小。（图中 EAX:EDX 写法错误）\n\n\nDIV IDIV（无/有符号除法）\n\nXADD（交换并相加）即 XCHG 和 ADD 两个指令的组合。\n\nNEG（符号取反）\n\nAND OR XOR NOT（按位与/或/异或/取反）\n\n\n3. 比较和条件跳转指令\nCMP 比较两个操作数，相等时零标志位置 1\n\nTEST（逻辑比较）两个数值进行与操作，改变 P, Z, S 标志位，确定操作数是否等于 0\n\nJMP（无条件跳转）\n\nJE，JZ（结果为零跳转）JNE，JNZ\n\nJS（结果为负跳转）JNS\n\nJP，JPE（结果中偶数个 1 跳转）JNP，JNPE\n\nJO（结果溢出跳转）JNO\n\n\n\n\nJA，JNBE（大于跳转）无符号数\n\nJB，JNAE（小于跳转）无符号数\n\nJAE，JNB（大于等于跳转）无符号数\n\nJBE，JNA（小于等于跳转）无符号数\n\n\n\n当进位/借位标志位 C 与零标志位 Z 都为 0 时发生跳转。\n\n\n\nJG，JNLE（大于跳转）有符号数\n\nJL，JNGE（小于跳转）有符号数\n\nJGE，JNL（大于等于跳转）有符号数\n\nJLE，JNG（小于等于跳转）有符号数\n\n\n\n根据符号标志位 S 决定是否跳转。\n\n\n4. CALL RETN\nF7 跟进 CALL\n回车 查看 CALL 子程序\n- 返回 CALL 处\n堆栈处回车 返回到地址\nF8 执行下一条语句\n如果返回地址没有标红，每次修改完代码之后需重新分析代码。\n\n\n\n5. 循环、字符串指令及寻址XOR ECX,ECXADD ECX,15 &#x2F; MOV ECX,15Label:DEC ECX;循环体TEST ECX,ECX &#x2F; CMP ECX,0JNE Label\n\n\nLOOP将计数器 ECX 的值减 1，判断 ECX 的值是否为 0，若为 0 就跳转到指定地址。\n\n\n\nLOOPZ，LOOPE 循环到零标志位置 1，LOOPNZ，LOOPNE 循环到零标志位清 0\n\n只有计数器的值和零标志位同时满足条件时才循环。\n\n\nMOVS从一个地址向另一个地址复制数据。源地址保存在 ESI，目的地址保存在 EDI。\n\nMOVS 拷贝 4 个字节内容为 MOVSD，拷贝两个字节为 MOVSW，拷贝一个字节为 MOVSB。注意 ESI，EDI 拷贝的方向，拷贝的方向取决于方向标志位 D。\n\n\n\n\n\nREP此前缀表示当前指令需要执行的次数 ECX，每次循环计数器 ECX 值递减 1。\nREP MOVS 不一定拷贝 4 个字节，它拷贝的大小为每次拷贝的大小 * ECX，源指针 ESI 和目的指针 EDI 每次递增 4 或递减 4（递增或递减取决于方向标志位 D）\n\n\n\n\n\nLODS从源地址 ESI 拷贝数据到 EAX。REP 可配合使用。衍生 LODSW 和 LODSB。\n\nSTOS将 EAX 值拷贝到 EDI 指向的内存单元。\n\nCMPS比较 ESI 和 EDI 指向内存单元的内容。差值为 0，零标志位置 1。\n\n配合 REPE/REPZ 使用，直到计数器 ECX 值为 0 或零标志位清 0 停止比较。\n\n\n直接寻址操作数中包含一个具体的地址。地址的值是纯数字。\nMOV DWORD PTR [00513450], ECXMOV AX, WORD PTR [00510A25]CALL 452200JMP 421000\n间接寻址\nMOV DWORD PTR[EAX], ECXCALL EAXJMP [EBX + 4]\n想在指令执行之前看到真实地址，需要在该指令上下断点，然后运行到断点，查看寄存器的值或解释窗口中的信息。使用间接寻址的指令，只能在执行这条指令的时候获取地址当前的值。\n\n调用任何子程序,堆栈顶部存放的都是返回地址。\n\n\n\n0x04 断点普通断点当我们设置断点后，OD 会将对应指令处第一个字节指令替换成 CC。F2，BP 命令栏设置断点BPX 可以给引用或者调用了指定 API 函数的指令都下断点。\n内存断点内存访问断点有时候也称之为 BPM，但是不要与 SoftIce 中的 BPM 弄混淆了。这种类型的断点修改内存页的访问属性。内存访问断点有两个缺点:1.它们不会出现[B]断点列表中和其他的地址。所以,你必须记得设置在什么地址处。2.不能同时设置多个内存断点。如果你设置了一个那么你之前设置的就会被自动删除。\n硬件断点最多可以设置 4 个硬件断点。硬件执行断点与普通断点作用一样,但硬件执行断点并不会将指令首字节修改为 CC,所以更难检测。命令行 HE 设置。硬件访问/写入断点是断在触发硬件断点的下一条指令处。\n条件断点条件断点实际上就是普通断点。\n条件记录断点日志精确记录。\n消息断点消息断点在内核调试器 SoftICE 中也称为 BMSG。普通断点在程序启动之前就可以设置,但是对于消息断点来说,只有在窗口创建之后才能够设置消息断点以及拦截消息。\n0x05 Others异常\n内存访问异常Characteristics(特征)为CODE,EXECUTE,READ(代码段,可执行,可读)。\n\n除0异常\n\n无效指令，尝试执行特权指令异常:当 CPU 试图执行越权指令的话就会产生该异常。最典型是 INT 3\n\nSEH链或结构化异常处理，它是用来确保该程序可以从错误中恢复。\n\n\n壳壳的解密例程(外壳程序)首先会定位加密/压缩过的原程序的各个区段,将其解密/解压,然后跳转至 OEP (程序未加壳时的入口点)处开始执行。\n\n通常脱壳的基本步骤如下:\n\n1:寻找 OEP\n2:转储(传说中的 dump)\n3:修复 IAT(修复导入表) IT = 导入表 IAT = 输入函数地址表\n4:检查目标程序是否存在 AntiDump 等阻止程序被转储的保护措施,并尝试修复这些问题。\n\nImport REConstructor 重建 IAT 需要三项指标:\n\n1)IAT的起始地址，减去映像基址 400000 就得到了(RVA:相对虚拟地址)。\n2)IAT的大小\n3)OEP = 虚拟地址 - 映像基址 = OEP 的 RVA\n0x06 Postscript本来写完了，结果简书的自动保存日常抽风，写了八个小时全没了，所以第二次写的时候语言再次精炼了一遍！文章中我尽可能一句话阐明指令定义，缩短文章篇幅，以便于复习查询。下一篇继续整理相关断点和硬编码序列号寻踪的知识点。\n0x07 References《使用OD从零开始Cracking》\n","categories":["Binary"]},{"title":"找工作那些事","url":"/2023/05/16/work_basis/","content":"Pref找工作那些事，八股文、面试。\nOS计网Open System Interconnection Model\n应用层（application layer）OSI Layer 7表示层（presentation layer）OSI Layer 6会话层（session layer）OSI Layer 5传输层（transport layer）OSI Layer 4网络层（network layer）OSI Layer 3数据链路层（data link layer）OSI Layer 2物理层（physical layer）OSI Layer 1\n物联网叔会使用\n根据信息在传输线上的传送方向，分为以下三种通信方式：\n单工通信：单向传输半双工通信：双向交替传输全双工通信：双向同时传输\n半双工：对讲机全双工：打电话\nCSMA/CD: 载波监听多点接入 / 碰撞检测（Detect）CSMA/CA: 载波监听多点接入 / 碰撞避免（Avoid）\n反正我只知道CSMA/CD用于有线局域网（LAN），CSMA/CA用于无线局域网（WIFI）\n子网作用是什么？好比送情书，寝室的位置比如哪栋就是网络号，哪层就是子网号，寝室号就是主机号\nRIP（Routing Informaiton Protocols）路由信息协议OSPF（Open Shortest Path First）开放式最短路径优先协议BGP（Border Gateway Protocol）边界网关协议\nAS（autonomous system）自治系统\nUDP 和 TCP 的特点用户数据报协议 UDP（User Datagram Protocol）是无连接的，尽最大可能交付，没有拥塞控制，面向报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部），支持一对一、一对多、多对一和多对多的交互通信。\n传输控制协议 TCP（Transmission Control Protocol）是面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块），每一条 TCP 连接只能是点对点的（一对一）。\nTCP 首部格式ACK: Acknowledgement(确认)SYN: Synchronization(同步)FIN: Finish(终止)\n看了网上一个比喻觉得很对：TCP三次握手就像和朋友打电话：\n客户端： 喂， 你听到到我说话吗服务器： 可以，你听到得到我吗客户端： 我也听得到，开传！如果没有TCP三次握手，服务器收到请求就打开链接，等待客户端的传输。但由于此时实际上没有传输的必要，服务器凭空的一直等待会导致资源的浪费。有了TCP后，如果客户端收到第二次服务器的确认建立连接报文后就不会给予回应，服务器也就不会打开两个通道导致资源浪费了。\n三次握手的目的是连接服务器指定端口，建立 TCP 连接，并同步连接双方的序列号和确认号，交换 TCP 窗口大小信息。在 socket 编程中，客户端执行 connect() 时。将触发三次握手。\ntcp.jpg\nTCP 的四次挥手客户端A：分手！发送FIN（不发微信了）服务器B：啊？真的要分手吗？（发微信问问）服务器B：（A没来信）算了那就分吧！发送FIN客户端A：收到B的来信，发送“好的”，然后进入等待状态，确认再也没信了就拉黑服务器B：收到A的来信，直接拉黑A\n1.客户端：我想中断。2.服务器：好吧，等我收完刚刚的数据。3.服务器：我收完了，再见！4.客户端：再见！\n客户端：我话说完；服务器：好的，知道了；（双向→单向通信）服务器：我话说完了；客户端：好的，知道了。最终结果→断开\ntcp标志位，有6种标示：SYN(synchronous建立联机)ACK(acknowledgement 确认)PSH(push传送)FIN(finish结束)RST(reset重置)URG(urgent紧急)Sequence number(顺序号码)Acknowledge number(确认号码)\nTCP 滑动窗口\n知乎上看到的一段，很清晰\n看这个场景, 老师说一段话, 学生来记.老师说”从前有个人, 她叫马冬梅. 她喜欢他, 而他却喜欢她.”学生写道”从前有..”.“老师你说的太快我跟不上”于是他们换了一种模式.老师说”从”学生写”从”. 学生说”嗯”老师说”前”学生写”前”.学生说”嗯”老师说”今天我还想早点下班呢…”于是他们换了一种模式.老师说”从前有个人”学生写”从前有个人”. 学生说”嗯”老师说”她叫马冬梅”.学生写”她叫马…梅”.学生说”马什么梅?”老师说”她叫马冬梅”.学生写”她叫马冬…”. 学生说”马冬什么?”老师”…..”学生说”有的时候状态好我能把5个字都记下来, 有的时候状态不好就记不下来.我状态不好的时候你能不能慢一点. “于是他们换了一种模式老师说”从前有个人”学生写”从前有个人”. 学生说”嗯, 再来5个”老师说”她叫马冬梅”学生写”她叫马..梅”. 学生说”啥?重来, 来2个”老师说”她叫”学生写”她叫”. 学生说”嗯,再来3个”老师说”马冬梅”.学生写”马冬梅”. 学生说”嗯, 给我来10个”老师说”她喜欢他,而他却喜欢她”学生写…所以呢第一种模式简单粗暴, 发的只管发, 收的更不上.第二种模式稳定却低效, 每发一个, 必须等到确认才再次发送, 等待时间很多.第三种模式提高了效率, 分组进行发送, 但是分组的大小该怎么决定呢?第四中模式才是起到了流控的作用, 接收方认为状态好的时候, 让发送方每次多发一点. 接收方认为状态不好的时候(阻塞), 让发送方每次少发送一点.\nTCP的流量控制是接收方控制发送方的发送速度，拥塞控制是去全局的网络状态来控制发送方的发送速度，当需要确定发送方的发送速度时，取流量控制和拥塞控制要求发送速率的最小值\n电子邮件协议SMTP(Simple Mail Transfer Protocol) 简单邮件传输协议IMAP（Internet Message Access Protocol）交互邮件访问协议MIME(Multipurpose Internet Mail Extensions) 多用途互联网邮件扩展类型\n常用端口\n\n\n\n应用\n应用层协议\n端口号\n传输层协议\n备注\n\n\n\n域名解析\nDNS\n53\nUDP/TCP\n长度超过 512 字节时使用 TCP\n\n\n动态主机配置协议\nDHCP\n67/68\nUDP\n\n\n\n简单网络管理协议\nSNMP\n161/162\nUDP\n\n\n\n文件传送协议\nFTP\n20/21\nTCP\n控制连接 21，数据连接 20\n\n\n远程终端协议\nTELNET\n23\nTCP\n\n\n\n超文本传送协议\nHTTP\n80\nTCP\nHTTPS 443 端口\n\n\n简单邮件传送协议\nSMTP\n25\nTCP\n\n\n\n邮件读取协议\nPOP3\n110\nTCP\n\n\n\n网际报文存取协议\nIMAP\n143\nTCP\n\n\n\n简单文件传输协议\nTFTP\n69\nUDP\n\n\n\nWeb 页面请求过程\n打开电脑，连接WIFI（或者插上网线）“1. DHCP 配置主机信息” —— 获得连接网络的能力打开浏览器输入网址：https://leetcode-cn.com/“2. ARP 解析 MAC 地址” —— 找到路由器的MAC地址“3. DNS 解析域名” —— 通过路由表找到DNS服务器，并解析域名对应的IP“4. HTTP 请求页面” —— 通过IP地址访问到HTTP服务器，浏览器得到HTTP服务器的响应后进行解析和渲染，显示页面。\nDHCP 配置主机信息” —— 获得连接网络的能力（具体包括获取自己各种信息及DNS的IP地址、默认网关的IP地址）ARP 解析 MAC 地址” —— 找到默认网关的MAC地址，方便离开局域网DNS 解析域名” —— 通过路由表找到DNS服务器，DNS查询报文经默认网关到达DNS服务器，由DNS服务器解析域名对应的IPHTTP 请求页面” —— 通过IP地址访问到HTTP服务器，自己与服务器三次握手建立连接，浏览器得到HTTP服务器的响应后进行解析和渲染，显示页面。\n计网测试\n进程是资源分配的基本单位。\n进程控制块 (Process Control Block, PCB) 描述进程的基本信息和运行状态，所谓的创建进程和撤销进程，都是指对 PCB 的操作。\n线程是独立调度的基本单位。\n一个进程中可以有多个线程，它们共享进程资源。\nQQ 和浏览器是两个进程，浏览器进程里面有很多线程，例如 HTTP 请求线程、事件响应线程、渲染线程等等，线程的并发执行使得在浏览器中点击一个新链接从而发起 HTTP 请求时，浏览器还可以响应用户的其它事件。\n区别Ⅰ 拥有资源\n进程是资源分配的基本单位，但是线程不拥有资源，线程可以访问隶属进程的资源。\nⅡ 调度\n线程是独立调度的基本单位，在同一进程中，线程的切换不会引起进程切换，从一个进程中的线程切换到另一个进程中的线程时，会引起进程切换。\nⅢ 系统开销\n由于创建或撤销进程时，系统都要为之分配或回收资源，如内存空间、I/O 设备等，所付出的开销远大于创建或撤销线程时的开销。类似地，在进行进程切换时，涉及当前执行进程 CPU 环境的保存及新调度进程 CPU 环境的设置，而线程切换时只需保存和设置少量寄存器内容，开销很小。\nⅣ 通信方面\n线程间可以通过直接读写同一进程中的数据进行通信，但是进程通信需要借助 IPC。\nIPC(Inter-Process Communication)进程间通信，提供了各种进程间通信的方法。在Linux C编程中有几种方法(1) 半双工Unix管道(2) FIFOs(命名管道)(3) 消息队列(4) 信号量(5) 共享内存(6) 网络Socket\n进程是一辆辆的火车；而线程是火车上的各节车厢\n进程状态的切换就绪状态（ready）：等待被调度运行状态（running）阻塞状态（waiting）：等待资源\n\n应该注意以下内容：\n只有就绪态和运行态可以相互转换，其它的都是单向转换。就绪状态的进程通过调度算法从而获得 CPU 时间，转为运行状态；而运行状态的进程，在分配给它的 CPU 时间片用完之后就会转为就绪状态，等待下一次调度。阻塞状态是缺少需要的资源从而由运行状态转换而来，但是该资源不包括 CPU 时间，缺少 CPU 时间会从运行态转换为就绪态。\n进程调度算法不同环境的调度算法目标不同，因此需要针对不同环境来讨论调度算法。\n\n批处理系统批处理系统没有太多的用户操作，在该系统中，调度算法目标是保证吞吐量和周转时间（从提交到终止的时间）。\n\n1.1 先来先服务 first-come first-serverd（FCFS）\n非抢占式的调度算法，按照请求的顺序进行调度。\n有利于长作业，但不利于短作业，因为短作业必须一直等待前面的长作业执行完毕才能执行，而长作业又需要执行很长时间，造成了短作业等待时间过长。\n1.2 短作业优先 shortest job first（SJF）\n非抢占式的调度算法，按估计运行时间最短的顺序进行调度。\n长作业有可能会饿死，处于一直等待短作业执行完毕的状态。因为如果一直有短作业到来，那么长作业永远得不到调度。\n1.3 最短剩余时间优先 shortest remaining time next（SRTN）\n最短作业优先的抢占式版本，按剩余运行时间的顺序进行调度。 当一个新的作业到达时，其整个运行时间与当前进程的剩余时间作比较。如果新的进程需要的时间更少，则挂起当前进程，运行新的进程。否则新的进程等待。\n\n交互式系统交互式系统有大量的用户交互操作，在该系统中调度算法的目标是快速地进行响应。\n\n2.1 时间片轮转\n将所有就绪进程按 FCFS 的原则排成一个队列，每次调度时，把 CPU 时间分配给队首进程，该进程可以执行一个时间片。当时间片用完时，由计时器发出时钟中断，调度程序便停止该进程的执行，并将它送往就绪队列的末尾，同时继续把 CPU 时间分配给队首的进程。\n时间片轮转算法的效率和时间片的大小有很大关系：\n因为进程切换都要保存进程的信息并且载入新进程的信息，如果时间片太小，会导致进程切换得太频繁，在进程切换上就会花过多时间。而如果时间片过长，那么实时性就不能得到保证。\n2.2 优先级调度\n为每个进程分配一个优先级，按优先级进行调度。\n为了防止低优先级的进程永远等不到调度，可以随着时间的推移增加等待进程的优先级。\n2.3 多级反馈队列\n一个进程需要执行 100 个时间片，如果采用时间片轮转调度算法，那么需要交换 100 次。\n多级队列是为这种需要连续执行多个时间片的进程考虑，它设置了多个队列，每个队列时间片大小都不同，例如 1,2,4,8,..。进程在第一个队列没执行完，就会被移到下一个队列。这种方式下，之前的进程只需要交换 7 次。\n每个队列优先权也不同，最上面的优先权最高。因此只有上一个队列没有进程在排队，才能调度当前队列上的进程。\n可以将这种调度算法看成是时间片轮转调度算法和优先级调度算法的结合。\n\n实时系统实时系统要求一个请求在一个确定时间内得到响应。\n\n分为硬实时和软实时，前者必须满足绝对的截止时间，后者可以容忍一定的超时。\n进程同步与进程通信很容易混淆，它们的区别在于：\n进程同步：控制多个进程按一定顺序执行；进程通信：进程间传输信息。进程通信是一种手段，而进程同步是一种目的。也可以说，为了能够达到进程同步的目的，需要让进程进行通信，传输一些进程同步所需要的信息。\n套接字（socket）TCP用主机的IP地址加上主机上的端口号作为TCP连接的端点，这种端点就叫做套接字（socket）或插口。套接字用（IP地址：端口号）表示，区分不同应用程序进程间的网络通信和连接,主要有3个参数：通信的目的IP地址、使用的传输层协议(TCP或UDP)和使用的端口号。\n\n并发并发是指宏观上在一段时间内能同时运行多个程序，而并行则指同一时刻能运行多个指令。\n\n并行需要硬件支持，如多流水线、多核处理器或者分布式计算系统。\n操作系统通过引入进程和线程，使得程序能够并发运行。\n\n共享共享是指系统中的资源可以被多个并发进程共同使用。\n\n有两种共享方式：互斥共享和同时共享。\n互斥共享的资源称为临界资源，例如打印机等，在同一时刻只允许一个进程访问，需要用同步机制来实现互斥访问。\n\n虚拟虚拟技术把一个物理实体转换为多个逻辑实体。\n\n主要有两种虚拟技术：时（时间）分复用技术和空（空间）分复用技术。\n多个进程能在同一个处理器上并发执行使用了时分复用技术，让每个进程轮流占用处理器，每次只执行一小个时间片并快速切换。\n虚拟内存使用了空分复用技术，它将物理内存抽象为地址空间，每个进程都有各自的地址空间。地址空间的页被映射到物理内存，地址空间的页并不需要全部在物理内存中，当使用到一个没有在物理内存的页时，执行页面置换算法，将该页置换到内存中。\n\n异步异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。\n\n基本特征：（1）并发：交替执行（2）共享：资源被多个并发进程共同使用，分互斥共享和同事共享（3）虚拟：物理转换为多个逻辑实体，分时（时间）分复用技术和空（空间）分复用技术（4）异步：进程不是一次性执行完毕，而是走走停停\n并发和共享是操作系统两个最基本的特征，这两者之间又是互为存在条件的。\n并发（Concurrence)共享（Sharing)虚拟（Virtual)异步性（Asynchronism)\n一般来说，同步中断又称为异常（exception），异步中断称为中断（interrupt）。\n同步中断是在指令执行时由CPU主动产生的，受到CPU控制，其执行点是可控的。异步中断是CPU被动接收到的，由外设发出的电信号引起，其发生时间不可预测。\n禁止抢占（no preemption）：系统资源不能被强制从一个进程中退出。持有和等待（hold and wait）：一个进程可以在等待时持有系统资源。互斥（mutual exclusion）：资源只能同时分配给一个进程，无法多个进程共享。循环等待（circular waiting）：一系列进程互相持有其他进程所需要的资源。死锁只有在四个条件同时满足时发生，预防死锁必须至少破坏其中一项。\n磁盘结构盘面（Platter）：一个磁盘有多个盘面；磁道（Track）：盘面上的圆形带状区域，一个盘面可以有多个磁道；扇区（Track Sector）：磁道上的一个弧段，一个磁道可以有多个扇区，它是最小的物理储存单位，目前主要有 512 bytes 与 4 K 两种大小；磁头（Head）：与盘面非常接近，能够将盘面上的磁场转换为电信号（读），或者将电信号转换为盘面的磁场（写）；制动手臂（Actuator arm）：用于在磁道之间移动磁头；主轴（Spindle）：使整个盘面转动。\n\n磁盘调度算法读写一个磁盘块的时间的影响因素有：\n旋转时间（主轴转动盘面，使得磁头移动到适当的扇区上）寻道时间（制动手臂移动，使得磁头移动到适当的磁道上）实际的数据传输时间其中，寻道时间最长，因此磁盘调度的主要目标是使磁盘的平均寻道时间最短。\n\n先来先服务FCFS, First Come First Served\n\n按照磁盘请求的顺序进行调度。\n优点是公平和简单。缺点也很明显，因为未对寻道做任何优化，使平均寻道时间可能较长。\n\n最短寻道时间优先SSTF, Shortest Seek Time First\n\n优先调度与当前磁头所在磁道距离最近的磁道。\n虽然平均寻道时间比较低，但是不够公平。如果新到达的磁道请求总是比一个在等待的磁道请求近，那么在等待的磁道请求会一直等待下去，也就是出现饥饿现象。具体来说，两端的磁道请求更容易出现饥饿现象。\n\n电梯算法SCAN\n\n电梯总是保持一个方向运行，直到该方向没有请求为止，然后改变运行方向。\n电梯算法（扫描算法）和电梯的运行过程类似，总是按一个方向来进行磁盘调度，直到该方向上没有未完成的磁盘请求，然后改变方向。\n因为考虑了移动方向，因此所有的磁盘请求都会被满足，解决了 SSTF 的饥饿问题。\n针对电梯算法补充一些：4.C-SCAN 循环扫描算法会像SCAN算法一样从磁盘的一端到另一端，并且处理请求。而当到达另一端时会立即返回到开头，并不会处理回程上的请求，然后开始新一轮的一端到另一端。\n5.LOOK磁臂只移动到一个方向的最远请求为止，不会到末端。这种模式的SCAN和C-SCAN称为LOOK和C-LOOK。\nHTTP 状态码\n\n\n\n状态码\n类别\n含义\n\n\n\n1XX\nInformational（信息性状态码）\n接收的请求正在处理\n\n\n2XX\nSuccess（成功状态码）\n请求正常处理完毕\n\n\n3XX\nRedirection（重定向状态码）\n需要进行附加操作以完成请求\n\n\n4XX\nClient Error（客户端错误状态码）\n服务器无法处理请求\n\n\n5XX\nServer Error（服务器错误状态码）\n服务器处理请求出错\n\n\n\n1XX 信息100 Continue ：表明到目前为止都很正常，客户端可以继续发送请求或者忽略这个响应。\n2XX 成功200 OK\n\n204 No Content ：请求已经成功处理，但是返回的响应报文不包含实体的主体部分。一般在只需要从客户端往服务器发送信息，而不需要返回数据时使用。\n206 Partial Content ：表示客户端进行了范围请求，响应报文包含由 Content-Range 指定范围的实体内容。\n\n3XX 重定向301 Moved Permanently ：永久性重定向\n\n302 Found ：临时性重定向\n303 See Other ：和 302 有着相同的功能，但是 303 明确要求客户端应该采用 GET 方法获取资源。\n注：虽然 HTTP 协议规定 301、302 状态下重定向时不允许把 POST 方法改成 GET 方法，但是大多数浏览器都会在 301、302 和 303 状态下的重定向把 POST 方法改成 GET 方法。\n304 Not Modified ：如果请求报文首部包含一些条件，例如：If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since，如果不满足条件，则服务器会返回 304 状态码。\n307 Temporary Redirect ：临时重定向，与 302 的含义类似，但是 307 要求浏览器不会把重定向请求的 POST 方法改成 GET 方法。\n\n4XX 客户端错误400 Bad Request ：请求报文中存在语法错误。\n\n401 Unauthorized ：该状态码表示发送的请求需要有认证信息（BASIC 认证、DIGEST 认证）。如果之前已进行过一次请求，则表示用户认证失败。\n403 Forbidden ：请求被拒绝。\n404 Not Found\n\n5XX 服务器错误500 Internal Server Error ：服务器正在执行请求时发生错误。\n\n503 Service Unavailable ：服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。\nHTTP 首部有 4 种类型的首部字段：通用首部字段、请求首部字段、响应首部字段和实体首部字段。\n各种首部字段及其含义如下（不需要全记，仅供查阅）：\n\n通用首部字段首部字段名|说明Cache-Control|控制缓存的行为Connection|控制不再转发给代理的首部字段、管理持久连接Date|创建报文的日期时间Pragma|报文指令Trailer|报文末端的首部一览Transfer-Encoding|指定报文主体的传输编码方式Upgrade|升级为其他协议Via|代理服务器的相关信息Warning|错误通知\n请求首部字段首部字段名|说明Accept|用户代理可处理的媒体类型Accept-Charset|优先的字符集Accept-Encoding|优先的内容编码Accept-Language|优先的语言（自然语言）Authorization|Web 认证信息Expect|期待服务器的特定行为From|用户的电子邮箱地址Host|请求资源所在服务器If-Match|比较实体标记（ETag）If-Modified-Since|比较资源的更新时间If-None-Match|比较实体标记（与 If-Match 相反）If-Range|资源未更新时发送实体 Byte 的范围请求If-Unmodified-Since|比较资源的更新时间（与 If-Modified-Since 相反）Max-Forwards|最大传输逐跳数Proxy-Authorization|代理服务器要求客户端的认证信息Range|实体的字节范围请求Referer|对请求中 URI 的原始获取方TE|传输编码的优先级User-Agent|HTTP 客户端程序的信息\n响应首部字段首部字段名|说明Accept-Ranges|是否接受字节范围请求Age|推算资源创建经过时间ETag|资源的匹配信息Location|令客户端重定向至指定 URIProxy-Authenticate|代理服务器对客户端的认证信息Retry-After|对再次发起请求的时机要求Server|HTTP 服务器的安装信息Vary|代理服务器缓存的管理信息WWW-Authenticate|服务器对客户端的认证信息\n实体首部字段首部字段名|说明Allow|资源可支持的 HTTP 方法Content-Encoding|实体主体适用的编码方式Content-Language|实体主体的自然语言Content-Length|实体主体的大小Content-Location|替代对应资源的 URIContent-MD5|实体主体的报文摘要Content-Range|实体主体的位置范围Content-Type|实体主体的媒体类型Expires|实体主体过期的日期时间Last-Modified|资源的最后修改日期时间\n\n会话期 Cookie：浏览器关闭之后它会被自动删除，也就是说它仅在会话期内有效。持久性 Cookie：指定过期时间（Expires）或有效期（max-age）之后就成为了持久性的 Cookie。\nHTTP 有以下安全性问题：\n使用明文进行通信，内容可能会被窃听；不验证通信方的身份，通信方的身份有可能遭遇伪装；无法证明报文的完整性，报文有可能遭篡改。\nHTTPS （全称：Hypertext Transfer Protocol Secure ），是以安全为目标的 HTTP 通道，在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性 。HTTPS 在HTTP 的基础下加入SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。HTTPS 存在不同于 HTTP 的默认端口及一个加密/身份验证层（在 HTTP与 TCP 之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面 。\nHTTPS 并不是新协议，而是让 HTTP 先和 SSL（Secure Sockets Layer）通信，再由 SSL 和 TCP 通信，也就是说 HTTPS 使用了隧道进行通信。\n通过使用 SSL，HTTPS 具有了加密（防窃听）、认证（防伪装）和完整性保护（防篡改）。\n\n对称密钥加密对称密钥加密（Symmetric-Key Encryption），加密和解密使用同一密钥。\n\n优点：运算速度快；缺点：无法安全地将密钥传输给通信方。\n\n2.非对称密钥加密非对称密钥加密，又称公开密钥加密（Public-Key Encryption），加密和解密使用不同的密钥。\n公开密钥所有人都可以获得，通信发送方获得接收方的公开密钥之后，就可以使用公开密钥进行加密，接收方收到通信内容后使用私有密钥解密。\n非对称密钥除了用来加密，还可以用来进行签名。因为私有密钥无法被其他人获取，因此通信发送方使用其私有密钥进行签名，通信接收方使用发送方的公开密钥对签名进行解密，就能判断这个签名是否正确。\n优点：可以更安全地将公开密钥传输给通信发送方；缺点：运算速度慢。\n\n\nHTTPS 采用的加密方式上面提到对称密钥加密方式的传输效率更高，但是无法安全地将密钥 Secret Key 传输给通信方。而非对称密钥加密方式可以保证传输的安全性，因此我们可以利用非对称密钥加密方式将 Secret Key 传输给通信方。HTTPS 采用混合的加密机制，正是利用了上面提到的方案：\n\n使用非对称密钥加密方式，传输对称密钥加密方式所需要的 Secret Key，从而保证安全性;获取到 Secret Key 后，再使用对称密钥加密方式进行通信，从而保证效率。（下图中的 Session Key 就是 Secret Key）\n通过使用 证书 来对通信方进行认证。\n数字证书认证机构（CA，Certificate Authority）是客户端与服务器双方都可信赖的第三方机构。\n服务器的运营人员向 CA 提出公开密钥的申请，CA 在判明提出申请者的身份之后，会对已申请的公开密钥做数字签名，然后分配这个已签名的公开密钥，并将该公开密钥放入公开密钥证书后绑定在一起。\n进行 HTTPS 通信时，服务器会把证书发送给客户端。客户端取得其中的公开密钥之后，先使用数字签名进行验证，如果验证通过，就可以开始通信了。\n数据库SQL基础主键的值不允许修改，也不允许复用（不能将已经删除的主键值赋给新数据行的主键）。\nSQL（Structured Query Language），标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSI SQL。各个 DBMS 都有自己的实现，如 PL/SQL、Transact-SQL 等。\nSQL 语句不区分大小写，但是数据库表名、列名和值是否区分依赖于具体的 DBMS 以及配置。\nSQL 支持以下三种注释：\n## 注释SELECT *FROM mytable; -- 注释/* 注释1   注释2 */\n数据库创建与使用：\nCREATE DATABASE test;USE test;\n外模式（外部用户）：决定用户的数据记录；逻辑模式（数据库管理员）：决定数据库内的逻辑结构；内模式（系统程序员）：决定数据库的物理存储结构。\n创建表\nCREATE TABLE mytable (  # int 类型，不为空，自增  id INT NOT NULL AUTO_INCREMENT,  # int 类型，不可为空，默认值为 1，不为空  col1 INT NOT NULL DEFAULT 1,  # 变长字符串类型，最长为 45 个字符，可以为空  col2 VARCHAR(45) NULL,  # 日期类型，可为空  col3 DATE NULL,  # 设置主键为 id  PRIMARY KEY (`id`));\n为了防止建表的时候关键字重复，比如用max作为字段关键字的话，为了可读性需要加反引号\n修改表添加列\nALTER TABLE mytableADD col CHAR(20);\n删除列\nALTER TABLE mytableDROP COLUMN col;\n删除表\nDROP TABLE mytable;\n普通插入\nINSERT INTO mytable(col1, col2)VALUES(val1, val2);\n插入检索出来的数据\nINSERT INTO mytable1(col1, col2)SELECT col1, col2FROM mytable2;\n将一个表的内容插入到一个新表\nCREATE TABLE newtable ASSELECT * FROM mytable;\n更新\nUPDATE mytableSET col = valWHERE id = 1;\nupdate 表名 set 列名 = 新值 where 其他列 = 限定值\n一次更新多个列UPDATE mytable SET col1 = val1, col2 = val2 WHERE id = 1；\n删除\nDELETE FROM mytableWHERE id = 1;\nTRUNCATE TABLE 可以清空表，也就是删除所有行。\nTRUNCATE TABLE mytable;\n使用更新和删除操作时一定要用 WHERE 子句，不然会把整张表的数据都破坏。可以先用 SELECT 语句进行测试，防止错误删除。\nTRUNCATE清除表的内容，但表还存在数据库\n查询\nDISTINCT相同值只会出现一次。它作用于所有列，也就是说所有列的值都相同才算相同。\nSELECT DISTINCT col1, col2FROM mytable;\nLIMIT限制返回的行数。可以有两个参数，第一个参数为起始行，从 0 开始；第二个参数为返回的总行数。\n返回前 5 行：\nSELECT *FROM mytableLIMIT 5;\n返回第 3 ~ 5 行：\nSELECT *FROM mytableLIMIT 2, 3;\n“限制返回的行数。可以有两个参数，第一个参数为起始行，从 0 开始；第二个参数为返回的总行数。”所以 2 3是说从第2行开始起三行，是2-5行。\n假设从sys_user表查询user_id的结果行数有6行。\nSELECT user_idFROM sys_user;\n现在我们需要限制返回的行数，比如需要返回从第3行至第5行的这三行记录，操作如下：\n# 写法一：SELECT user_idFROM sys_user# 偏移2行后，开始取3行记录LIMIT 2, 3;# 写法二：SELECT user_idFROM sys_user# 取3行记录，在偏移2行之后LIMIT 3 OFFSET 2;\n排序ASC ：升序（默认）DESC ：降序可以按多个列进行排序，并且为每个列指定不同的排序方式：\nSELECT *FROM mytableORDER BY col1 DESC, col2 ASC;\n好像 asc 和 desc 语句需要在 limit 前面. 从逻辑上合理, 因为需要先排序, 然后再选取特别行数.\n过滤不进行过滤的数据非常大，导致通过网络传输了多余的数据，从而浪费了网络带宽。因此尽量使用 SQL 语句来过滤不必要的数据，而不是传输所有的数据到客户端中然后由客户端进行过滤。\nSELECT *FROM mytableWHERE col IS NULL;\n下表显示了 WHERE 子句可用的操作符\n操作符|说明=|等于&lt;|小于\n\n|大于&lt;&gt; !=|不等于&lt;= !&gt;|小于等于= !&lt;|大于等于BETWEEN|在两个值之间IS NULL|为 NULL 值\n\n应该注意到，NULL 与 0、空字符串都不同。\nAND 和 OR 用于连接多个过滤条件。优先处理 AND，当一个过滤表达式涉及到多个 AND 和 OR 时，可以使用 () 来决定优先级，使得优先级关系更清晰。\nIN 操作符用于匹配一组值，其后也可以接一个 SELECT 子句，从而匹配子查询得到的一组值。\nNOT 操作符用于否定一个条件。\n通配符通配符也是用在过滤语句中，但它只能用于文本字段。\n% 匹配 &gt;=0 个任意字符；\n_ 匹配 ==1 个任意字符；\n[ ] 可以匹配集合内的字符，例如 [ab] 将匹配字符 a 或者 b。用脱字符 ^ 可以对其进行否定，也就是不匹配集合内的字符。\n使用 Like 来进行通配符匹配。\nSELECT *FROM mytableWHERE col LIKE &#x27;[^AB]%&#x27;; -- 不以 A 和 B 开头的任意文本\n不要滥用通配符，通配符位于开头处匹配会非常慢。\nMySQL 的 Like 只支持 %, -. 想用 [] 需要使用 Rlike 或 Regexp 并使用正则表达式.\n通配位于开头会使索引失效\n计算字段在数据库服务器上完成数据的转换和格式化的工作往往比客户端上快得多，并且转换和格式化后的数据量更少的话可以减少网络通信量。\n计算字段通常需要使用 AS 来取别名，否则输出的时候字段名为计算表达式。\nSELECT col1 * col2 AS aliasFROM mytable;\nCONCAT() 用于连接两个字段。许多数据库会使用空格把一个值填充为列宽，因此连接的结果会出现一些不必要的空格，使用 TRIM() 可以去除首尾空格。\nSELECT CONCAT(TRIM(col1), &#x27;(&#x27;, TRIM(col2), &#x27;)&#x27;) AS concat_colFROM mytable;\n函数各个 DBMS 的函数都是不相同的，因此不可移植，以下主要是 MySQL 的函数。\n汇总函 数    说 明AVG()    返回某列的平均值COUNT()    返回某列的行数MAX()    返回某列的最大值MIN()    返回某列的最小值SUM()    返回某列值之和\nAVG() 会忽略 NULL 行。\n使用 DISTINCT 可以汇总不同的值。\nSELECT AVG(DISTINCT col1) AS avg_colFROM mytable;\n文本处理函数    说明LEFT()    左边的字符RIGHT()    右边的字符LOWER()    转换为小写字符UPPER()    转换为大写字符LTRIM()    去除左边的空格RTRIM()    去除右边的空格LENGTH()    长度SOUNDEX()    转换为语音值\n其中， SOUNDEX() 可以将一个字符串转换为描述其语音表示的字母数字模式。\nSELECT *FROM mytableWHERE SOUNDEX(col1) = SOUNDEX(&#x27;apple&#x27;)\n日期和时间处理日期格式：YYYY-MM-DD时间格式：HH:MM:SS\n函 数    说 明ADDDATE()    增加一个日期（天、周等）ADDTIME()    增加一个时间（时、分等）CURDATE()    返回当前日期CURTIME()    返回当前时间DATE()    返回日期时间的日期部分DATEDIFF()    计算两个日期之差DATE_ADD()    高度灵活的日期运算函数DATE_FORMAT()    返回一个格式化的日期或时间串DAY()    返回一个日期的天数部分DAYOFWEEK()    对于一个日期，返回对应的星期几HOUR()    返回一个时间的小时部分MINUTE()    返回一个时间的分钟部分MONTH()    返回一个日期的月份部分NOW()    返回当前日期和时间SECOND()    返回一个时间的秒部分TIME()    返回一个日期时间的时间部分YEAR()    返回一个日期的年份部分\nmysql&gt; SELECT NOW();2018-4-14 20:25:11\n数值处理函数    说明SIN()    正弦COS()    余弦TAN()    正切ABS()    绝对值SQRT()    平方根MOD()    余数EXP()    指数PI()    圆周率RAND()    随机数\nORM即Object-Relational Mapping（对象关系映射），它的作用是在关系型数据库和业务实体对象之间作一个映射，这样，我们在具体的操作业务对象的时候，就不需要再去和复杂的SQL语句打交道，只需简单的操作对象的属性和方法。\n实际工作中使用ORM提高开发效率，写SQL的机会也逐渐减少。\n分组把具有相同的数据值的行放在同一组中。\n可以对同一分组数据使用汇总函数进行处理，例如求分组数据的平均值等。\n指定的分组字段除了能按该字段进行分组，也会自动按该字段进行排序。\nSELECT col, COUNT(*) AS numFROM mytableGROUP BY col;\nGROUP BY 自动按分组字段进行排序，ORDER BY 也可以按汇总字段来进行排序。\nSELECT col, COUNT(*) AS numFROM mytableGROUP BY colORDER BY num;\nWHERE 过滤行，HAVING 过滤分组，行过滤应当先于分组过滤。\nSELECT col, COUNT(*) AS numFROM mytableWHERE col &gt; 2GROUP BY colHAVING num &gt;= 2;\n分组规定：\nGROUP BY 子句出现在 WHERE 子句之后，ORDER BY 子句之前；除了汇总字段外，SELECT 语句中的每一字段都必须在 GROUP BY 子句中给出；NULL 的行会单独分为一组；大多数 SQL 实现不支持 GROUP BY 列具有可变长度的数据类型。\nGROUP BY 子句出现在WHERE子句之后，ORDER BY 子句之前；\n子查询子查询中只能返回一个字段的数据。\n可以将子查询的结果作为 WHRER 语句的过滤条件：\nSELECT *FROM mytable1WHERE col1 IN (SELECT col2               FROM mytable2);\n下面的语句可以检索出客户的订单数量，子查询语句会对第一个查询检索出的每个客户执行一次：\nSELECT cust_name, (SELECT COUNT(*)                   FROM Orders                   WHERE Orders.cust_id = Customers.cust_id)                   AS orders_numFROM CustomersORDER BY cust_name;\n连接连接用于连接多个表，使用 JOIN 关键字，并且条件语句使用 ON 而不是 WHERE。\n连接可以替换子查询，并且比子查询的效率一般会更快。\n可以用 AS 给列名、计算字段和表名取别名，给表名取别名是为了简化 SQL 语句以及连接相同表。\n内连接内连接又称等值连接，使用 INNER JOIN 关键字。\nSELECT A.value, B.valueFROM tablea AS A INNER JOIN tableb AS BON A.key = B.key;\n可以不明确使用 INNER JOIN，而使用普通查询并在 WHERE 中将两个表中要连接的列用等值方法连接起来。\nSELECT A.value, B.valueFROM tablea AS A, tableb AS BWHERE A.key = B.key;\n自连接自连接可以看成内连接的一种，只是连接的表是自身而已。\n一张员工表，包含员工姓名和员工所属部门，要找出与 Jim 处在同一部门的所有员工姓名。\n子查询版本\nSELECT nameFROM employeeWHERE department = (      SELECT department      FROM employee      WHERE name = &quot;Jim&quot;);\n自连接版本\nSELECT e1.nameFROM employee AS e1 INNER JOIN employee AS e2ON e1.department = e2.department      AND e2.name = &quot;Jim&quot;;\n自然连接自然连接是把同名列通过等值测试连接起来的，同名列可以有多个。\n内连接和自然连接的区别：内连接提供连接的列，而自然连接自动连接所有同名列。\nSELECT A.value, B.valueFROM tablea AS A NATURAL JOIN tableb AS B;\n外连接外连接保留了没有关联的那些行。分为左外连接，右外连接以及全外连接，左外连接就是保留左表没有关联的行。\n检索所有顾客的订单信息，包括还没有订单信息的顾客。\nSELECT Customers.cust_id, Customer.cust_name, Orders.order_idFROM Customers LEFT OUTER JOIN OrdersON Customers.cust_id = Orders.cust_id;\ncustomers 表：\ncust_id    cust_name1    a2    b3    corders 表：\norder_id    cust_id1    12    13    34    3结果：\ncust_id    cust_name    order_id1    a    11    a    23    c    33    c    42    b    Null\n组合查询使用 UNION 来组合两个查询，如果第一个查询返回 M 行，第二个查询返回 N 行，那么组合查询的结果一般为 M+N 行。\n每个查询必须包含相同的列、表达式和聚集函数。\n默认会去除相同行，如果需要保留相同行，使用 UNION ALL。\n只能包含一个 ORDER BY 子句，并且必须位于语句的最后。\nSELECT colFROM mytableWHERE col = 1UNIONSELECT colFROM mytableWHERE col =2;\n视图视图是虚拟的表，本身不包含数据，也就不能对其进行索引操作。\n对视图的操作和对普通表的操作一样。\n视图具有如下好处：\n简化复杂的 SQL 操作，比如复杂的连接；只使用实际表的一部分数据；通过只给用户访问视图的权限，保证数据的安全性；更改数据格式和表示。\nCREATE VIEW myview ASSELECT Concat(col1, col2) AS concat_col, col3*col4 AS compute_colFROM mytableWHERE col5 = val;\n存储过程存储过程可以看成是对一系列 SQL 操作的批处理。\n使用存储过程的好处：\n代码封装，保证了一定的安全性；代码复用；由于是预先编译，因此具有很高的性能。命令行中创建存储过程需要自定义分隔符，因为命令行是以 ; 为结束符，而存储过程中也包含了分号，因此会错误把这部分分号当成是结束符，造成语法错误。补充一个缺点：存储过程将复杂的业务逻辑封装进DB中，增加了维护成本。\n包含 in、out 和 inout 三种参数。\n给变量赋值都需要用 select into 语句。\n每次只能给一个变量赋值，不支持集合的操作。\ndelimiter //create procedure myprocedure( out ret int )    begin        declare y int;        select sum(col1)        from mytable        into y;        select y*y into ret;    end //delimiter ;\n游标在存储过程中使用游标可以对一个结果集进行移动遍历。\n游标主要用于交互式应用，其中用户需要对数据集中的任意行进行浏览和修改。\n使用游标的四个步骤：\n声明游标，这个过程没有实际检索出数据；打开游标；取出数据；关闭游标；\ndelimiter //create procedure myprocedure(out ret int)    begin        declare done boolean default 0;        declare mycursor cursor for        select col1 from mytable;        # 定义了一个 continue handler，当 sqlstate &#x27;02000&#x27; 这个条件出现时，会执行 set done = 1        declare continue handler for sqlstate &#x27;02000&#x27; set done = 1;        open mycursor;        repeat            fetch mycursor into ret;            select ret;        until done end repeat;        close mycursor;    end // delimiter ;\nCREATE PROCEDURE pro_city()BEGIN\n定义三个变量，分别保存城市名、城市代码、城市人口DECLARE row_name VARCHAR(20);DECLARE row_code VARCHAR(20);DECLARE row_pop INT;\n定义游标DECLARE getCity CURSOR FOR SELECT name, countrycode, population FROM city LIMIT 3;\n打开游标OPEN getCity;\n从游标中取值FETCH getCity INTO row_name, row_code, row_pop;\n显示结果SELECT row_name, row_code, row_pop;\n\n\nCLOSE getCity;\n\n\nEND $DELIMITER ; # 恢复 MySQL 的默认结束符\n\n\nCALL pro_city();\n触发器触发器（trigger）是SQL server 提供给程序员和数据分析员来保证数据完整性的一种方法，它是与表事件相关的特殊的存储过程，它的执行不是由程序调用，也不是手工启动，而是由事件来触发，比如当对一个表进行操作（ insert，delete， update）时就会激活它执行。触发器经常用于加强数据的完整性约束和业务规则等。\n触发器会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE。\n触发器必须指定在语句执行之前还是之后自动执行，之前执行使用 BEFORE 关键字，之后执行使用 AFTER 关键字。BEFORE 用于数据验证和净化，AFTER 用于审计跟踪，将修改记录到另外一张表中。\nINSERT 触发器包含一个名为 NEW 的虚拟表。\n不允许在触发器中使用存储过程\nCREATE TRIGGER mytrigger AFTER INSERT ON mytableFOR EACH ROW SELECT NEW.col into @result;SELECT @result; -- 获取结果\nDELETE 触发器包含一个名为 OLD 的虚拟表，并且是只读的。\nUPDATE 触发器包含一个名为 NEW 和一个名为 OLD 的虚拟表，其中 NEW 是可以被修改的，而 OLD 是只读的。\nMySQL 不允许在触发器中使用 CALL 语句，也就是不能调用存储过程。\n事务管理基本术语：\n事务（transaction）指一组 SQL 语句；回退（rollback）指撤销指定 SQL 语句的过程；提交（commit）指将未存储的 SQL 语句结果写入数据库表；保留点（savepoint）指事务处理中设置的临时占位符（placeholder），你可以对它发布回退（与回退整个事务处理不同）。不能回退 SELECT 语句，回退 SELECT 语句也没意义；也不能回退 CREATE 和 DROP 语句。\nMySQL 的事务提交默认是隐式提交，每执行一条语句就把这条语句当成一个事务然后进行提交。当出现 START TRANSACTION 语句时，会关闭隐式提交；当 COMMIT 或 ROLLBACK 语句执行后，事务会自动关闭，重新恢复隐式提交。\n设置 autocommit 为 0 可以取消自动提交；autocommit 标记是针对每个连接而不是针对服务器的。\n如果没有设置保留点，ROLLBACK 会回退到 START TRANSACTION 语句处；如果设置了保留点，并且在 ROLLBACK 中指定该保留点，则会回退到该保留点。\nSTART TRANSACTION// ...SAVEPOINT delete1// ...ROLLBACK TO delete1// ...COMMIT\n字符集基本术语：\n字符集为字母和符号的集合；编码为某个字符集成员的内部表示；校对字符指定如何比较，主要用于排序和分组。除了给表指定字符集和校对外，也可以给列指定：\nCREATE TABLE mytable(col VARCHAR(10) CHARACTER SET latin COLLATE latin1_general_ci )DEFAULT CHARACTER SET hebrew COLLATE hebrew_general_ci;\n可以在排序、分组时指定校对：\nSELECT *FROM mytableORDER BY col COLLATE latin1_general_ci;\n权限管理MySQL 的账户信息保存在 mysql 这个数据库中。\nUSE mysql;SELECT user FROM user;\n创建账户\n新创建的账户没有任何权限。\nCREATE USER myuser IDENTIFIED BY &#x27;mypassword&#x27;;\n修改账户名\nRENAME USER myuser TO newuser;\n删除账户\nDROP USER myuser;\n查看权限\nSHOW GRANTS FOR myuser;\n授予权限\n账户用 username@host 的形式定义，username@% 使用的是默认主机名。\nGRANT SELECT, INSERT ON mydatabase.* TO myuser;\n删除权限\nGRANT 和 REVOKE 可在几个层次上控制访问权限：\n整个服务器，使用 GRANT ALL 和 REVOKE ALL；整个数据库，使用 ON database.*；特定的表，使用 ON database.table；特定的列；特定的存储过程。\nREVOKE SELECT, INSERT ON mydatabase.* FROM myuser;\n更改密码\n必须使用 Password() 函数进行加密。\nSET PASSWROD FOR myuser = Password(&#x27;new_password&#x27;);\n数据库系统原理事务指的是满足 ACID 特性的一组操作，可以通过 Commit 提交一个事务，也可以使用 Rollback 进行回滚。\nACID\n\n原子性（Atomicity）事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚。\n\n回滚可以用回滚日志（Undo Log）来实现，回滚日志记录着事务所执行的修改操作，在回滚时反向执行这些修改操作即可。\n\n一致性（Consistency）数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对同一个数据的读取结果都是相同的。\n\n隔离性（Isolation）一个事务所做的修改在最终提交以前，对其它事务是不可见的。\n\n持久性（Durability）一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失。\n\n\n系统发生崩溃可以用重做日志（Redo Log）进行恢复，从而实现持久性。与回滚日志记录数据的逻辑修改不同，重做日志记录的是数据页的物理修改。\n事务的 ACID 特性概念简单，但不是很好理解，主要是因为这几个特性不是一种平级关系：\n只有满足一致性，事务的执行结果才是正确的。在无并发的情况下，事务串行执行，隔离性一定能够满足。此时只要能满足原子性，就一定能满足一致性。在并发的情况下，多个事务并行执行，事务不仅要满足原子性，还需要满足隔离性，才能满足一致性。事务满足持久化是为了能应对系统崩溃的情况。\n\nAUTOCOMMITMySQL 默认采用自动提交模式。也就是说，如果不显式使用 START TRANSACTION 语句来开始一个事务，那么每个查询操作都会被当做一个事务并自动提交。\n现实中分布式一致性场景\n我们来看一下几个典型的分布式一致性场景\n1、银行转账\n在跨行转账过程中，我们经常会遇到这种情况：我本行的money已经扣除成功，但是对方银行入账可能需要在N个工作日后到账！此时我们一般不担心钱丢失问题：只要在给定的期限内到账且钱不要少就好了！—-这也成为了几乎所有用户对于现代银行系统最基本的需求\n2、火车购票\nK1314次列车，深圳-北京的卧铺仅剩下最后一张车票了，可能在同一时刻，有很多乘客在不同地点的不同售票窗口都想买这一张车票，但是这张票只会卖给一位用户，这就需要购票系统的每一个节点都要有强一致的剩余车票数据\n3、网上购物\n我们经常会看到某个秒杀物品会在页面上展示商品的剩余数量，其实大家都知道这个数量绝大多数是缓存数据，不是实时更新的，但是在某一段时间后会同步最终剩余数量。\n封锁粒度MySQL 中提供了两种封锁粒度：行级锁以及表级锁。\n应该尽量只锁定需要修改的那部分数据，而不是所有的资源。锁定的数据量越少，发生锁争用的可能就越小，系统的并发程度就越高。\n但是加锁需要消耗资源，锁的各种操作（包括获取锁、释放锁、以及检查锁状态）都会增加系统开销。因此封锁粒度越小，系统开销就越大。\n在选择封锁粒度时，需要在锁开销和并发程度之间做一个权衡。\n封锁类型\n\n读写锁互斥锁（Exclusive），简写为 X 锁，又称写锁。共享锁（Shared），简写为 S 锁，又称读锁。有以下两个规定：\n\n一个事务对数据对象 A 加了 X 锁，就可以对 A 进行读取和更新。加锁期间其它事务不能对 A 加任何锁。一个事务对数据对象 A 加了 S 锁，可以对 A 进行读取操作，但是不能进行更新操作。加锁期间其它事务能对 A 加 S 锁，但是不能加 X 锁。锁的兼容关系如下：\n\n\n意向锁使用意向锁（Intention Locks）可以更容易地支持多粒度封锁。\n\n在存在行级锁和表级锁的情况下，事务 T 想要对表 A 加 X 锁，就需要先检测是否有其它事务对表 A 或者表 A 中的任意一行加了锁，那么就需要对表 A 的每一行都检测一次，这是非常耗时的。\n意向锁在原来的 X/S 锁之上引入了 IX/IS，IX/IS 都是表锁，用来表示一个事务想要在表中的某个数据行上加 X 锁或 S 锁。有以下两个规定：\n一个事务在获得某个数据行对象的 S 锁之前，必须先获得表的 IS 锁或者更强的锁；一个事务在获得某个数据行对象的 X 锁之前，必须先获得表的 IX 锁。通过引入意向锁，事务 T 想要对表 A 加 X 锁，只需要先检测是否有其它事务对表 A 加了 X/IX/S/IS 锁，如果加了就表示有其它事务正在使用这个表或者表中某一行的锁，因此事务 T 加 X 锁失败。\n各种锁的兼容关系如下：\n\n解释如下：\n任意 IS/IX 锁之间都是兼容的，因为它们只表示想要对表加锁，而不是真正加锁；这里兼容关系针对的是表级锁，而表级的 IX 锁和行级的 X 锁兼容，两个事务可以对两个数据行加 X 锁。（事务T1想要对数据行R1加 X 锁，事务T2想要对同一个表的数据行R2加 X 锁，两个事务都需要对该表加 IX 锁，但是 IX 锁是兼容的，并且 IX 锁与行级的 X 锁也是兼容的，因此两个事务都能加锁成功，对同一个表中的两个数据行做修改。）\n封锁协议\n\n三级封锁协议一级封锁协议\n\n事务 T 要修改数据 A 时必须加 X 锁，直到 T 结束才释放锁。\n可以解决丢失修改问题，因为不能同时有两个事务对同一个数据进行修改，那么事务的修改就不会被覆盖。\n\n二级封锁协议\n在一级的基础上，要求读取数据 A 时必须加 S 锁，读取完马上释放 S 锁。\n可以解决读脏数据问题，因为如果一个事务在对数据 A 进行修改，根据 1 级封锁协议，会加 X 锁，那么就不能再加 S 锁了，也就是不会读入数据。\n\n三级封锁协议\n在二级的基础上，要求读取数据 A 时必须加 S 锁，直到事务结束了才能释放 S 锁。\n可以解决不可重复读的问题，因为读 A 时，其它事务不能对 A 加 X 锁，从而避免了在读的期间数据发生改变。\n\n\n两段锁协议加锁和解锁分为两个阶段进行。\n\n可串行化调度是指，通过并发控制，使得并发执行的事务结果与某个串行执行的事务结果相同。串行执行的事务互不干扰，不会出现并发一致性问题。\n事务遵循两段锁协议是保证可串行化调度的充分条件。例如以下操作满足两段锁协议，它是可串行化调度。\nlock-x(A)…lock-s(B)…lock-s(C)…unlock(A)…unlock(C)…unlock(B)\n但不是必要条件，例如以下操作不满足两段锁协议，但它还是可串行化调度。\nlock-x(A)…unlock(A)…lock-s(B)…unlock(B)…lock-s(C)…unlock(C)\nMySQL 隐式与显示锁定MySQL 的 InnoDB 存储引擎采用两段锁协议，会根据隔离级别在需要的时候自动加锁，并且所有的锁都是在同一时刻被释放，这被称为隐式锁定。\nInnoDB 也可以使用特定的语句进行显示锁定：\nSELECT ... LOCK In SHARE MODE;SELECT ... FOR UPDATE;\nX 完全封禁，封条标志。S Share,分享，可以读，但不能改。\nX S 加在行上的锁IX IS 加在表上的锁\n隔离级别未提交读（READ UNCOMMITTED）事务中的修改，即使没有提交，对其它事务也是可见的。\n提交读（READ COMMITTED）一个事务只能读取已经提交的事务所做的修改。换句话说，一个事务所做的修改在提交之前对其它事务是不可见的。\n可重复读（REPEATABLE READ）保证在同一个事务中多次读取同一数据的结果是一样的。\n可串行化（SERIALIZABLE）强制事务串行执行，这样多个事务互不干扰，不会出现并发一致性问题。\n该隔离级别需要加锁实现，因为要使用加锁机制保证同一时间只有一个事务执行，也就是保证事务串行执行。\n\n多版本并发控制（Multi-Version Concurrency Control, MVCC）是 MySQL 的 InnoDB 存储引擎实现隔离级别的一种具体方式，用于实现提交读和可重复读这两种隔离级别。而未提交读隔离级别总是读取最新的数据行，要求很低，无需使用 MVCC。可串行化隔离级别需要对所有读取的行都加锁，单纯使用 MVCC 无法实现。\n基本思想在封锁一节中提到，加锁能解决多个事务同时执行时出现的并发一致性问题。在实际场景中读操作往往多于写操作，因此又引入了读写锁来避免不必要的加锁操作，例如读和读没有互斥关系。读写锁中读和写操作仍然是互斥的，而 MVCC 利用了多版本的思想，写操作更新最新的版本快照，而读操作去读旧版本快照，没有互斥关系，这一点和 CopyOnWrite 类似。\n在 MVCC 中事务的修改操作（DELETE、INSERT、UPDATE）会为数据行新增一个版本快照。\n脏读和不可重复读最根本的原因是事务读取到其它事务未提交的修改。在事务进行读取操作时，为了解决脏读和不可重复读问题，MVCC 规定只能读取已经提交的快照。当然一个事务可以读取自身未提交的快照，这不算是脏读。\n版本号系统版本号 SYS_ID：是一个递增的数字，每开始一个新的事务，系统版本号就会自动递增。事务版本号 TRX_ID ：事务开始时的系统版本号。\nUndo 日志MVCC 的多版本指的是多个版本的快照，快照存储在 Undo 日志中，该日志通过回滚指针 ROLL_PTR 把一个数据行的所有快照连接起来。\n例如在 MySQL 创建一个表 t，包含主键 id 和一个字段 x。我们先插入一个数据行，然后对该数据行执行两次更新操作。\nINSERT INTO t(id, x) VALUES(1, &quot;a&quot;);UPDATE t SET x=&quot;b&quot; WHERE id=1;UPDATE t SET x=&quot;c&quot; WHERE id=1;\n因为没有使用 START TRANSACTION 将上面的操作当成一个事务来执行，根据 MySQL 的 AUTOCOMMIT 机制，每个操作都会被当成一个事务来执行，所以上面的操作总共涉及到三个事务。快照中除了记录事务版本号 TRX_ID 和操作之外，还记录了一个 bit 的 DEL 字段，用于标记是否被删除。\n快照读与当前读\n\n快照读MVCC 的 SELECT 操作是快照中的数据，不需要进行加锁操作。\n\nSELECT * FROM table ...;\n\n当前读MVCC 其它会对数据库进行修改的操作（INSERT、UPDATE、DELETE）需要进行加锁操作，从而读取最新的数据。可以看到 MVCC 并不是完全不用加锁，而只是避免了 SELECT 的加锁操作。\n\nINSERT;UPDATE;DELETE;\n在进行 SELECT 操作时，可以强制指定进行加锁操作。以下第一个语句需要加 S 锁，第二个需要加 X 锁。\nSELECT * FROM table WHERE ? lock in share mode;SELECT * FROM table WHERE ? for update;\n解决脏读，不可重复读使用MVCC来实现解决幻读，MVCC+Next-Key Locks\nNext-Key Locks锁住一条记录的索引，还会锁住索引之间的间隙MVCC+Next-Key Locks解决幻读问题\nNext-Key LocksNext-Key Locks 是 MySQL 的 InnoDB 存储引擎的一种锁实现。\nMVCC 不能解决幻影读问题，Next-Key Locks 就是为了解决这个问题而存在的。在可重复读（REPEATABLE READ）隔离级别下，使用 MVCC + Next-Key Locks 可以解决幻读问题。\nRecord Locks锁定一个记录上的索引，而不是记录本身。\n如果表没有设置索引，InnoDB 会自动在主键上创建隐藏的聚簇索引，因此 Record Locks 依然可以使用。\nGap Locks锁定索引之间的间隙，但是不包含索引本身。例如当一个事务执行以下语句，其它事务就不能在 t.c 中插入 15。\nSELECT c FROM t WHERE c BETWEEN 10 and 20 FOR UPDATE;\nNext-Key Locks它是 Record Locks 和 Gap Locks 的结合，不仅锁定一个记录上的索引，也锁定索引之间的间隙。它锁定一个前开后闭区间，例如一个索引包含以下值：10, 11, 13, and 20，那么就需要锁定以下区间：\n(-∞, 10](10, 11](11, 13](13, 20](20, +∞)\n关系数据库设计理论函数依赖记 A-&gt;B 表示 A 函数决定 B，也可以说 B 函数依赖于 A。\n如果 {A1，A2，… ，An} 是关系的一个或多个属性的集合，该集合函数决定了关系的其它所有属性并且是最小的，那么该集合就称为键码。\n对于 A-&gt;B，如果能找到 A 的真子集 A’，使得 A’-&gt; B，那么 A-&gt;B 就是部分函数依赖，否则就是完全函数依赖。\n对于 A-&gt;B，B-&gt;C，则 A-&gt;C 是一个传递函数依赖。\n异常以下的学生课程关系的函数依赖为 {Sno, Cname} -&gt; {Sname, Sdept, Mname, Grade}，键码为 {Sno, Cname}。也就是说，确定学生和课程之后，就能确定其它信息。\nSno    Sname    Sdept    Mname    Cname    Grade1    学生-1    学院-1    院长-1    课程-1    902    学生-2    学院-2    院长-2    课程-2    802    学生-2    学院-2    院长-2    课程-1    1003    学生-3    学院-2    院长-2    课程-2    95\n不符合范式的关系，会产生很多异常，主要有以下四种异常：\n冗余数据：例如 学生-2 出现了两次。修改异常：修改了一个记录中的信息，但是另一个记录中相同的信息却没有被修改。删除异常：删除一个信息，那么也会丢失其它信息。例如删除了 课程-1 需要删除第一行和第三行，那么 学生-1 的信息就会丢失。插入异常：例如想要插入一个学生的信息，如果这个学生还没选课，那么就无法插入。\n范式范式理论是为了解决以上提到四种异常。\n高级别范式的依赖于低级别的范式，1NF 是最低级别的范式。\n\n第一范式 (1NF)属性不可分。\n第二范式 (2NF)每个非主属性完全函数依赖于键码。\n\n可以通过分解来满足。\n分解前\nSno    Sname    Sdept    Mname    Cname    Grade1    学生-1    学院-1    院长-1    课程-1    902    学生-2    学院-2    院长-2    课程-2    802    学生-2    学院-2    院长-2    课程-1    1003    学生-3    学院-2    院长-2    课程-2    95\n以上学生课程关系中，{Sno, Cname} 为键码，有如下函数依赖：\nSno -&gt; Sname, SdeptSdept -&gt; MnameSno, Cname-&gt; GradeGrade 完全函数依赖于键码，它没有任何冗余数据，每个学生的每门课都有特定的成绩。\nSname, Sdept 和 Mname 都部分依赖于键码，当一个学生选修了多门课时，这些数据就会出现多次，造成大量冗余数据。\n分解后\n关系-1\nSno    Sname    Sdept    Mname1    学生-1    学院-1    院长-12    学生-2    学院-2    院长-23    学生-3    学院-2    院长-2\n有以下函数依赖：\nSno -&gt; Sname, SdeptSdept -&gt; Mname\n关系-2\nSno    Cname    Grade1    课程-1    902    课程-2    802    课程-1    1003    课程-2    95有以下函数依赖：\nSno, Cname -&gt; Grade3. 第三范式 (3NF)非主属性不传递函数依赖于键码。\n上面的 关系-1 中存在以下传递函数依赖：\nSno -&gt; Sdept -&gt; Mname可以进行以下分解：\n关系-11\nSno    Sname    Sdept1    学生-1    学院-12    学生-2    学院-23    学生-3    学院-2\n关系-12\nSdept    Mname学院-1    院长-1学院-2    院长-2\n详解数据库三大范式、BCNF范式\nER 图Entity-Relationship，有三个组成部分：实体、属性、联系。\n用来进行关系型数据库系统的概念设计。\n实体的三种联系包含一对一，一对多，多对多三种。\n如果 A 到 B 是一对多关系，那么画个带箭头的线段指向 B；如果是一对一，画两个带箭头的线段；如果是多对多，画两个不带箭头的线段。\n表示出现多次的关系一个实体在联系出现几次，就要用几条线连接。\n下图表示一个课程的先修关系，先修关系出现两个 Course 实体，第一个是先修课程，后一个是后修课程，因此需要用两条线来表示这种关系。\n\n联系的多向性虽然老师可以开设多门课，并且可以教授多名学生，但是对于特定的学生和课程，只有一个老师教授，这就构成了一个三元联系。\n\n表示子类用一个三角形和两条线来连接类和子类，与子类有关的属性和联系都连到子类上，而与父类和子类都有关的连到父类上。\n\nMySQLMySQL 索引索引优化\n\n独立的列在进行查询时，索引列不能是表达式的一部分，也不能是函数的参数，否则无法使用索引。\n\n例如下面的查询不能使用 actor_id 列的索引：\nSELECT actor_id FROM sakila.actor WHERE actor_id + 1 = 5;\n\n多列索引在需要使用多个列作为条件进行查询时，使用多列索引比使用多个单列索引性能更好。例如下面的语句中，最好把 actor_id 和 film_id 设置为多列索引。\n\nSELECT film_id, actor_ id FROM sakila.film_actorWHERE actor_id = 1 AND film_id = 1;\n\n索引列的顺序让选择性最强的索引列放在前面。\n\n索引的选择性是指：不重复的索引值和记录总数的比值。最大值为 1，此时每个记录都有唯一的索引与其对应。选择性越高，每个记录的区分度越高，查询效率也越高。\n例如下面显示的结果中 customer_id 的选择性比 staff_id 更高，因此最好把 customer_id 列放在多列索引的前面。\nSELECT COUNT(DISTINCT staff_id)/COUNT(*) AS staff_id_selectivity,COUNT(DISTINCT customer_id)/COUNT(*) AS customer_id_selectivity,COUNT(*)FROM payment;   staff_id_selectivity: 0.0001customer_id_selectivity: 0.0373               COUNT(*): 16049\n\n前缀索引对于 BLOB、TEXT 和 VARCHAR 类型的列，必须使用前缀索引，只索引开始的部分字符。\n\n前缀长度的选取需要根据索引选择性来确定。\n\n覆盖索引索引包含所有需要查询的字段的值。\n\n具有以下优点：\n索引通常远小于数据行的大小，只读取索引能大大减少数据访问量。一些存储引擎（例如 MyISAM）在内存中只缓存索引，而数据依赖于操作系统来缓存。因此，只访问索引可以不使用系统调用（通常比较费时）。对于 InnoDB 引擎，若辅助索引能够覆盖查询，则无需访问主索引。\n查询性能优化使用 Explain 进行分析Explain 用来分析 SELECT 查询语句，开发人员可以通过分析 Explain 结果来优化查询语句。\n比较重要的字段有：\nselect_type : 查询类型，有简单查询、联合查询、子查询等key : 使用的索引rows : 扫描的行数\n优化数据访问\n\n减少请求的数据量只返回必要的列：最好不要使用 SELECT * 语句。只返回必要的行：使用 LIMIT 语句来限制返回的数据。缓存重复查询的数据：使用缓存可以避免在数据库中进行查询，特别在要查询的数据经常被重复查询时，缓存带来的查询性能提升将会是非常明显的。\n减少服务器端扫描的行数最有效的方式是使用索引来覆盖查询。\n\n重构查询方式\n\n切分大查询一个大查询如果一次性执行的话，可能一次锁住很多数据、占满整个事务日志、耗尽系统资源、阻塞很多小的但重要的查询。\n\nDELETE FROM messages WHERE create &lt; DATE_SUB(NOW(), INTERVAL 3 MONTH);\n\n分解大连接查询将一个大连接查询分解成对每一个表进行一次单表查询，然后在应用程序中进行关联，这样做的好处有：\n\n让缓存更高效。对于连接查询，如果其中一个表发生变化，那么整个查询缓存就无法使用。而分解后的多个查询，即使其中一个表发生变化，对其它表的查询缓存依然可以使用。分解成多个单表查询，这些单表查询的缓存结果更可能被其它查询使用到，从而减少冗余记录的查询。减少锁竞争；在应用层进行连接，可以更容易对数据库进行拆分，从而更容易做到高性能和可伸缩。查询本身效率也可能会有所提升。例如下面的例子中，使用 IN() 代替连接查询，可以让 MySQL 按照 ID 顺序进行查询，这可能比随机的连接要更高效。\nSELECT * FROM tagJOIN tag_post ON tag_post.tag_id=tag.idJOIN post ON tag_post.post_id=post.idWHERE tag.tag=&#x27;mysql&#x27;;\n存储引擎InnoDB是 MySQL 默认的事务型存储引擎，只有在需要它不支持的特性时，才考虑使用其它存储引擎。\n实现了四个标准的隔离级别，默认级别是可重复读（REPEATABLE READ）。在可重复读隔离级别下，通过多版本并发控制（MVCC）+ Next-Key Locking 防止幻影读。\n主索引是聚簇索引，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。\n内部做了很多优化，包括从磁盘读取数据时采用的可预测性读、能够加快读操作并且自动创建的自适应哈希索引、能够加速插入操作的插入缓冲区等。\n支持真正的在线热备份。其它存储引擎不支持在线热备份，要获取一致性视图需要停止对所有表的写入，而在读写混合场景中，停止写入可能也意味着停止读取。\nMyISAM设计简单，数据以紧密格式存储。对于只读数据，或者表比较小、可以容忍修复操作，则依然可以使用它。\n提供了大量的特性，包括压缩表、空间数据索引等。\n不支持事务。\n不支持行级锁，只能对整张表加锁，读取时会对需要读到的所有表加共享锁，写入时则对表加排它锁。但在表有读取操作的同时，也可以往表中插入新的记录，这被称为并发插入（CONCURRENT INSERT）。\n可以手工或者自动执行检查和修复操作，但是和事务恢复以及崩溃恢复不同，可能导致一些数据丢失，而且修复操作是非常慢的。\n如果指定了 DELAY_KEY_WRITE 选项，在每次修改执行完成时，不会立即将修改的索引数据写入磁盘，而是会写到内存中的键缓冲区，只有在清理键缓冲区或者关闭表的时候才会将对应的索引块写入磁盘。这种方式可以极大的提升写入性能，但是在数据库或者主机崩溃时会造成索引损坏，需要执行修复操作。\n比较事务：InnoDB 是事务型的，可以使用 Commit 和 Rollback 语句。\n并发：MyISAM 只支持表级锁，而 InnoDB 还支持行级锁。\n外键：InnoDB 支持外键。\n备份：InnoDB 支持在线热备份。\n崩溃恢复：MyISAM 崩溃后发生损坏的概率比 InnoDB 高很多，而且恢复的速度也更慢。\n其它特性：MyISAM 支持压缩表和空间数据索引。\n数据类型\n整型TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT 分别使用 8, 16, 24, 32, 64 位存储空间，一般情况下越小的列越好。\nINT(11) 中的数字只是规定了交互工具显示字符的个数，对于存储和计算来说是没有意义的。\n浮点数FLOAT 和 DOUBLE 为浮点类型，DECIMAL 为高精度小数类型。CPU 原生支持浮点运算，但是不支持 DECIMAl 类型的计算，因此 DECIMAL 的计算比浮点类型需要更高的代价。\nFLOAT、DOUBLE 和 DECIMAL 都可以指定列宽，例如 DECIMAL(18, 9) 表示总共 18 位，取 9 位存储小数部分，剩下 9 位存储整数部分。\n字符串主要有 CHAR 和 VARCHAR 两种类型，一种是定长的，一种是变长的。\nVARCHAR 这种变长类型能够节省空间，因为只需要存储必要的内容。但是在执行 UPDATE 时可能会使行变得比原来长，当超出一个页所能容纳的大小时，就要执行额外的操作。MyISAM 会将行拆成不同的片段存储，而 InnoDB 则需要分裂页来使行放进页内。\n在进行存储和检索时，会保留 VARCHAR 末尾的空格，而会删除 CHAR 末尾的空格。\n时间和日期MySQL 提供了两种相似的日期时间类型：DATETIME 和 TIMESTAMP。\n\nDATETIME能够保存从 1000 年到 9999 年的日期和时间，精度为秒，使用 8 字节的存储空间。\n\n它与时区无关。\n默认情况下，MySQL 以一种可排序的、无歧义的格式显示 DATETIME 值，例如“2008-01-16 22:37:08”，这是 ANSI 标准定义的日期和时间表示方法。\n\nTIMESTAMP和 UNIX 时间戳相同，保存从 1970 年 1 月 1 日午夜（格林威治时间）以来的秒数，使用 4 个字节，只能表示从 1970 年到 2038 年。\n\n它和时区有关，也就是说一个时间戳在不同的时区所代表的具体时间是不同的。\nMySQL 提供了 FROM_UNIXTIME() 函数把 UNIX 时间戳转换为日期，并提供了 UNIX_TIMESTAMP() 函数把日期转换为 UNIX 时间戳。\n默认情况下，如果插入时没有指定 TIMESTAMP 列的值，会将这个值设置为当前时间。\n应该尽量使用 TIMESTAMP，因为它比 DATETIME 空间效率更高。\n水平切分水平切分又称为 Sharding，它是将同一个表中的记录拆分到多个结构相同的表中。\n当一个表的数据不断增多时，Sharding 是必然的选择，它可以将数据分布到集群的不同节点上，从而缓存单个数据库的压力。\n垂直切分垂直切分是将一张表按列切分成多个表，通常是按照列的关系密集程度进行切分，也可以利用垂直切分将经常被使用的列和不经常被使用的列切分到不同的表中。\n在数据库的层面使用垂直切分将按数据库中表的密集程度部署到不同的库中，例如将原来的电商数据库垂直切分成商品数据库、用户数据库等。\nSharding 策略\n\n哈希取模：hash(key) % N；\n范围：可以是 ID 范围也可以是时间范围；\n映射表：使用单独的一个数据库来存储映射关系。\n\nSharding 存在的问题\n\n事务问题使用分布式事务来解决，比如 XA 接口。\n\n连接可以将原来的连接分解成多个单表查询，然后在用户程序中进行连接。\n\nID 唯一性使用全局唯一 ID（GUID）为每个分片指定一个 ID 范围分布式 ID 生成器 (如 Twitter 的 Snowflake 算法)\n\n\n主从复制主要涉及三个线程：binlog 线程、I/O 线程和 SQL 线程。\nbinlog 线程 ：负责将主服务器上的数据更改写入二进制日志（Binary log）中。I/O 线程 ：负责从主服务器上读取二进制日志，并写入从服务器的中继日志（Relay log）。SQL 线程 ：负责读取中继日志，解析出主服务器已经执行的数据更改并在从服务器中重放（Replay）。\n读写分离主服务器处理写操作以及实时性要求比较高的读操作，而从服务器处理读操作。\n读写分离能提高性能的原因在于：\n主从服务器负责各自的读和写，极大程度缓解了锁的争用；从服务器可以使用 MyISAM，提升查询性能以及节约系统开销；增加冗余，提高可用性。\n读写分离常用代理方式来实现，代理服务器接收应用层传来的读写请求，然后决定转发到哪个服务器。\nLinux 的系统调用主要有以下这些：\nTask|Commands进程控制|fork(); exit(); wait();进程通信|pipe(); shmget(); mmap();文件操作|open(); read(); write();设备操作|ioctl(); read(); write();信息维护|getpid(); alarm(); sleep();安全|chmod(); umask(); chown();\n编程常识跨平台的编程语言都需要做内存对齐。\n为什么会有内存对齐？\n平台原因：不是所有的硬件平台都能访问任意内存地址上的任意数据，某些硬件平台只能在某些地址处取某些特定类型的数据，否则抛出硬件异常。为了同一个程序可以在多平台运行，需要内存对齐。\n硬件原因：经过内存对齐后，CPU 访问内存的速度大大提升。\n简历① 基本信息：姓名、手机、邮箱、求职意向、年龄、居住地、求职照可酌情提供② 教育背景：建议列出优秀绩点和排名；实验室履历或师从著名导师③ 工作/实习经历：公司、岗位及工作内容和成果④ 科研/项目经历：发表论文、 取得专利、 参加比赛及参与的业务项目；体现专业、科研、 思维、解决问题能力⑤ 荣誉/获奖经历：奖学金、 荣誉称号、学科竞赛、 学术竞赛、 创业竞赛、 编程竞赛⑥ 组织/社团经历：参与的学生组织、 担任的职位、 工作内容及成果；体现领导能力、 沟通力和实践能力⑦ 其他：个人评价、技能证书、 技能等级\n企业关注顺序：经历：工作、实习、科研、项目学历、学校专业技能：与岗位匹配的软/硬技能，语言技能荣誉：证书业余爱好：健身、游泳、羽毛球\n快速聚焦的关键词：全系排名、最高XX可熟练使用、掌握语言技能优秀毕业生、优秀实习生、国家奖学金精通、擅长、掌握、熟悉、负责、参与\n环境：时间、地点、起因、具体问题「项目背景，强调项目的重要性」任务：完成的任务「项目目标，尽可能用数据量化，做到什么样的程度则代表成功」行动：使用/选择/采用X方法工具「不需要面面俱到，应重点描述里程碑式事件，突出短时间高效益」结果：做到了什么，认知「结果与目标对比以体现是否成功。交代自己的贡献度，是带领团队一起，还是在团队中扮演某个角色去完成的。」\n应描述实际行为，而非个人观点应描述自己的行为，而非他人的行为应描述具体事件，而非概括总结\n了解岗位的招聘诉求扩充团队：要求求职者能快速上手投入工作，培养周期偏短，对应聘者的过往经历、背景、能力要求比较高补齐能力：求职者的能力是否刚好吻合岗位当前所缺培养梯队：指培养接班人，如管培生，除了看中求职者当前与岗位的适配度之外，更关注其成长性以及综合素养。\n面试官提问：如果重新负责某项工作，你会如何思考并改进？建议在重点描述的经历里， 增加对于此类经历的复盘和反思。\n展现并突出自己能够保障有效落地、规避落地风险的品质，比如聪明、乐观、皮实、自信等特质。\n词语的强烈程度：精通 &gt; 熟悉&gt; 掌握&gt; 了解\n了解，熟悉，掌握，熟练，精通\n专业技能扩展细化，缩小面试提问范围\n熟悉 C++，（列举C++的若干知识点，熟练使用C的指针应用及内存管理，C++的封装继承多态，STL常用容器，C++11常用特性（智能指针等）），掌握 Go（），了解 Java，python 等（适当补充对这些语言的理解）熟悉 linux 操作系统常用命令，vim 开发环境，（列举网络编程相关知识，例如 epoll，socket 等）了解框架 ……熟悉网络，（列举网络协议相关考点，tcp/ip,http, https, 三次，四次握手，流量控制等等）掌握基础数据结构和算法\n项目经历记录思路，挖掘亮点、难点\n公司 - xx服务器 - 独立开发 - 201508- 201512\n\n具体功能\n运用了那些技术，技术难点是\n效果如何\ndemo演示地址，github地址\n\n分「项目描述」「个人工作」「项目亮点/难点/个人收获」三块来写\n面试一面机试：一般会考选择题和编程题二面基础算法面：就是基础的算法都是该专栏要讲的，白纸代码三面综合技术面：会考察编程语言，计算机基础知识，以及了解项目经历（技术原理、 技术深度、应变能力）四面技术boss面：会问一些比较范范的内容，考察大家解决问题和快速学习的能力解决问题的能力面试官最喜欢问的相关问题:\n在项目中遇到的最大的技术挑战是什么，而你是如果解决的给出一个项目问题来让面试者分析\n快速学习的能力面试官最喜欢问的相关问题:\n快速学习的能力 如果快速学习一门新的技术或者语言?总结一下自己学习的技巧\n读研之后发现自己和本科毕业有什么差别？这里要体现出自己思维方式和学习方法上的进步，而不是用了两三年的时间有多学了那些技术，因为互联网是不断变化的。\n最后hr面：主要了解面试者与企业文化相不相符，面试者的职业发展，offer的选择以及介绍一下企业提供的薪资待遇等等\n为什么选择我们公司？这个大家一定要有所准备，不能被问到了之后一脸茫然，然后说 就是想找个工作，那基本就没戏了\n要从技术氛围，职业发展，公司潜力等等方面来说自己为什么选择这家公司\n#有没有职业规划？其实如果刚刚毕业并没有明确的职业规划，这里建议大家不要说 自己想工作几年想做项目经理，工作几年想做产品经理的\n这样会被HR认为 职业规划不清晰，尽量从技术的角度规划自己。\n#是否接受加班？虽然大家都不喜欢加班，但是这个问题 我还是建议如果手头没有offer的话，大家尽量选择接受了\n#坚持最长的一件事情是什么？这里大家最好之前就想好，有一些同学可能印象里自己没有坚持很长的事情，也没有好好想过这个问题，在HR面的时候被问到的时候，一脸茫然\n憋了半天说出一个不痛不痒的事情。这就是一个减分项了\n#如果校招，直接会问：期望薪资XXX是否接受？这里大家如果感觉自己表现的很好 给面试官留下的很好的印象，可以在这里争取 special offer，或者ssp offer\n这都是可以的，但是要真的对自己信心十足。\n#如果社招，则会了解前一家目前公司薪水多少 ？这里大家切记不要虚报工资，因为入职前是要查流水的，这个是比较严肃的问题。介绍一下公司薪酬福利待遇\n面试技巧与面试官交流，准备纸笔，讲清思路怎么来的，对题目的描述、关键点和细节追问，包括询问数据的范围先说暴力解法，再说优化解法说解法后再说复杂度，得到面试官确认后在再写代码\nOther七张图片转换成目录\nRefer热招技术岗上岸指南暑期实习岗位攻略春招热门岗位攻略校招基础知识详解求职突破一本通【校招版】代码随想录-最强八股文-第3版《用面试官的思维写简历》招聘信息里对技术的要求有“了解”、“熟悉”、“精通”，该怎么界定？校招时间节点、简历编写、笔试、HR面、实习等注意事项💪\n","categories":["Self-improvement"]},{"title":"LeetCode Record","url":"/2023/05/19/code_LeetCode/","content":"PrefLeetCode 刷题记录。 Hard\nConvert the Temperature - EasyKelvin = Celsius + 273.15Fahrenheit = Celsius * 1.80 + 32.00\nclass Solution:    def convertTemperature(self, celsius: float) -&gt; List[float]:        return [celsius + 273.15, celsius * 1.80 + 32.00]\nSmallest Even Multiple - Easy最小偶倍数：\nGiven a positive integer n, return the smallest positive integer that is a multiple of both 2 and n.\nclass Solution:    def smallestEvenMultiple(self, n: int) -&gt; int:        return n if n % 2 == 0 else n * 2        # return n &lt;&lt; (n &amp; 1)        &#x27;&#x27;&#x27;        位运算避免分支判断。常用 n &amp; 1 判断奇数，二进制奇数最低位一定为 1，        因此，若按位与结果为 1，则最后一位为 1，n 为奇数；若为 0，则为偶数。        &#x27;&#x27;&#x27;        # return (n % 2) == 0 ? n : n * 2\nXOR Operation in an Array - Easy给你两个整数，n 和 start。\n定义 nums[i] = start + 2*i（下标从 0 开始）且 n == nums.length。\n请返回 nums 中所有元素按位异或后得到的结果。\n输入：n = 5, start = 0输出：8解释：数组 nums 为 [0, 2, 4, 6, 8]，其中 (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8 。\n# 模拟class Solution:    def xorOperation(self, n: int, start: int) -&gt; int:        ans = 0        for i in range(n):            ans ^= (start + i * 2)        return ans\n方法二：数学\nNumber of Good Pairs - Easy好数对的数目：\n给你一个整数数组 nums。\n如果一组数字 (i,j) 满足 nums[i] == nums[j] 且 i &lt; j ，就可以认为这是一组好数对。\n返回好数对的数目。\n输入：nums = [1,2,3,1,1,3]输出：4解释：有 4 组好数对，分别是 (0,3), (0,4), (3,4), (2,5) ，下标从 0 开始\n# 暴力统计class Solution:    def numIdenticalPairs(self, nums: List[int]) -&gt; int:        ans = 0        for i in range(len(nums)):            for j in range(i + 1, len(nums)):                if nums[i] == nums[j]:                    ans += 1        return ans\n方法二：组合计数\nCount Good Triplets - Easy一个整数数组 arr，以及 a、b 、c 三个整数。\n如果三元组 (arr[i], arr[j], arr[k]) 满足下列全部条件，则认为它是一个好三元组。\n0 &lt;= i &lt; j &lt; k &lt; arr.length|arr[i] - arr[j]| &lt;= a|arr[j] - arr[k]| &lt;= b|arr[i] - arr[k]| &lt;= c其中 |x| 表示 x 的绝对值。\n返回好三元组的数量。\n输入：arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3输出：4解释：一共 4 个好三元组：[(3,0,1), (3,0,1), (3,1,1), (0,1,1)]\n# 枚举class Solution:    def countGoodTriplets(self, arr: List[int], a: int, b: int, c: int) -&gt; int:        n = len(arr)        cnt = 0        for i in range(n):            for j in range(i + 1, n):                for k in range(j + 1, n):                    if abs(arr[i] - arr[j]) &lt;= a and abs(arr[j] - arr[k]) &lt;= b and abs(arr[i] - arr[k]) &lt;= c:                        cnt += 1        return cnt# 暴力法三重循环可以提前判断终止最内层的计算class Solution:    def countGoodTriplets(self, arr: List[int], a: int, b: int, c: int) -&gt; int:        size = len(arr)        cnt = 0        for i in range(size-2):            for j in range(i+1,size-1):                if abs(arr[i] - arr[j]) &lt;= a:                    for k in range(j+1, size):                        if abs(arr[j] - arr[k]) &lt;= b and abs(arr[i] - arr[k]) &lt;= c:                            cnt += 1        return cnt\n方法二：枚举优化\nAdd Digits - Easy各位相加：\n给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。返回这个结果。\n输入: num = 38输出: 2解释: 各位相加的过程为：38 –&gt; 3 + 8 –&gt; 1111 –&gt; 1 + 1 –&gt; 2\n# 模拟class Solution:    def addDigits(self, num: int) -&gt; int:        while num &gt;= 10:            sum = 0            while num:                sum += num % 10                num //= 10            num = sum        return num# 数学class Solution:    def addDigits(self, num: int) -&gt; int:        return (num - 1) % 9 + 1 if num else 0\n方法二：数学\nSubtract the Product and Sum of Digits of an Integer - Easy整数的各位积和之差：\n整数 n，计算并返回该整数「各位数字之积」与「各位数字之和」的差。\n输入：n = 234输出：15解释：各位数之积 = 2 * 3 * 4 = 24各位数之和 = 2 + 3 + 4 = 9结果 = 24 - 9 = 15\n# 模拟class Solution:    def subtractProductAndSum(self, n: int) -&gt; int:        add, mul = 0, 1        while n &gt; 0:            add += n % 10            mul *= n % 10            n //= 10        return mul - add# 暴力class Solution:    def subtractProductAndSum(self, n: int) -&gt; int:        add, mul = 0, 1        for num in str(n):            num = int(num)            add += num            mul *= num        return mul - add\nPower of Two - Easy给你一个整数 n，请你判断该整数是否是 2 的幂次方。如果是，返回 true；否则返回 false。\n输入：n = 1输出：true解释：2^0 = 1\n# 判断是否为最大 2 的幂的约数class Solution:    BIG = 2**30    def isPowerOfTwo(self, n: int) -&gt; bool:        return n &gt; 0 and Solution.BIG % n == 0\n方法一：二进制表示\nPower of Three - Easy# 试除法class Solution:    def isPowerOfThree(self, n: int) -&gt; bool:        while n and n % 3 == 0:            n //= 3        return n == 1# 判断是否为最大 3 的幂的约数# 这里限定范围最大 3 的幂为 3^19 = 1162261467class Solution:    def isPowerOfThree(self, n: int) -&gt; bool:        return n &gt; 0 and 1162261467 % n == 0\nUgly Number - Easy丑数：只包含质因数 2、3 和 5 的正整数。\n1 没有质因数，因此它的全部质因数是 {2, 3, 5} 的空集。习惯上将其视作第一个丑数。\n给你一个整数 n，请你判断 n 是否为丑数。如果是，返回 true；否则返回 false。\n输入：n = 6输出：true解释：6 = 2 × 3\n# 数学class Solution:    def isUgly(self, n: int) -&gt; bool:        if n &lt;= 0:            return False        factors = [2, 3, 5]        for factor in factors:            while n % factor == 0:                n //= factor        return n == 1\nShuffle the Array - Easy重新排序数组：\n给你一个数组 nums，数组中有 2n 个元素，按 [x1,x2,…,xn,y1,y2,…,yn] 的格式排列。\n请你将数组按 [x1,y1,x2,y2,…,xn,yn] 格式重新排列返回。\n# 一次遍历class Solution:    def shuffle(self, nums: List[int], n: int) -&gt; List[int]:        ans = [0] * (2 * n)        for i in range(n):            ans[2 * i] = nums[i]            ans[2 * i + 1] = nums[n + i]        return ans# 切片赋值class Solution:    def shuffle(self, nums: List[int], n: int) -&gt; List[int]:        nums[::2], nums[1::2] = nums[:n], nums[n:]        return nums# 模拟class Solution:    def shuffle(self, nums: List[int], n: int) -&gt; List[int]:        ans = []        for i in range(n):            ans.append(nums[i])            ans.append(nums[n + i])        return ans\nTranspose Matrix - Easy二维整数数组 matrix，返回 matrix 的转置矩阵。\n输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]输出：[[1,4,7],[2,5,8],[3,6,9]]\n# 模拟class Solution:    def transpose(self, matrix: List[List[int]]) -&gt; List[List[int]]:        m, n = len(matrix), len(matrix[0])        transposed = [[0] * m for _ in range(n)]        for i in range(m):            for j in range(n):                transposed[j][i] = matrix[i][j]        return transposed# 模拟 python3_onelineclass Solution:    def transpose(self, matrix: List[List[int]]) -&gt; List[List[int]]:        return list(list(row) for row in zip(*matrix))        # return [list(row) for row in zip(*matrix)] # 强制转换返回列表值# 迭代器class Solution:    def transpose(self, matrix: List[List[int]]):        return zip(*matrix)# numpy 库class Solution:    def transpose(self, matrix: List[List[int]]) -&gt; List[List[int]]:        import numpy as np        return np.array(matrix).T.tolist()\nMaximum Score After Splitting a String - Easy分割字符串的最大得分：\n由若干 0 和 1 组成的字符串 s，计算并返回将该字符串分割成两个非空子字符串（即左和右子字符串）所能获得的最大得分。\n「分割字符串的得分」为左子字符串中 0 的数量加上右子字符串中 1 的数量。\n输入：s = “011101”输出：5解释：将字符串 s 划分为两个非空子字符串的可行方案有：左子字符串 = “0” 且 右子字符串 = “11101”，得分 = 1 + 4 = 5左子字符串 = “01” 且 右子字符串 = “1101”，得分 = 1 + 3 = 4左子字符串 = “011” 且 右子字符串 = “101”，得分 = 1 + 2 = 3左子字符串 = “0111” 且 右子字符串 = “01”，得分 = 1 + 1 = 2左子字符串 = “01110” 且 右子字符串 = “1”，得分 = 2 + 1 = 3\n# 枚举每个分割点class Solution:    def maxScore(self, s: str) -&gt; int:        return max(s[:i].count(&#x27;0&#x27;) + s[i:].count(&#x27;1&#x27;) for i in range(1, len(s)))# 两次遍历class Solution:    def maxScore(self, s: str) -&gt; int:        ans = score = (s[0] == &#x27;0&#x27;) + s[1:].count(&#x27;1&#x27;)        for c in s[1:-1]:            score += 1 if c == &#x27;0&#x27; else -1            ans = max(ans, score)        return ans\nCount the Number of Vowel Strings in Range - Easy统计范围内的元音字符串数：\n给你一个下标从 0 开始的字符串数组 words 和两个整数：left 和 right。\n如果字符串以元音字母开头并以元音字母结尾，那么该字符串就是一个元音字符串，其中元音字母是 ‘a’、’e’、’i’、’o’、’u’。\n返回 words[i] 是元音字符串的数目，其中 i 在闭区间 [left, right] 内。\n输入：words = [“are”,”amy”,”u”], left = 0, right = 2输出：2解释：\n\n“are” 是一个元音字符串，因为它以 ‘a’ 开头并以 ‘e’ 结尾。\n“amy” 不是元音字符串，因为它没有以元音字母结尾。\n“u” 是一个元音字符串，因为它以 ‘u’ 开头并以 ‘u’ 结尾。在上述范围中的元音字符串数目为 2 。\n\nclass Solution:    def vowelStrings(self, words: List[str], left: int, right: int) -&gt; int:        return sum(s[0] in &quot;aeiou&quot; and s[-1] in &quot;aeiou&quot; for s in words[left:right+1])\nPeak Index in a Mountain Array - Medium山脉数组的峰顶索引：\n符合下列属性的数组 arr 称为 山脉数组：arr.length &gt;= 3存在 i（0 &lt; i &lt; arr.length - 1）使得：arr[0] &lt; arr[1] &lt; … arr[i-1] &lt; arr[i]arr[i] &gt; arr[i+1] &gt; … &gt; arr[arr.length - 1]\n给你由整数组成的山脉数组 arr，返回满足 arr[0] &lt; arr[1] &lt; … arr[i - 1] &lt; arr[i] &gt; arr[i + 1] &gt; … &gt; arr[arr.length - 1] 的下标 i。\n设计并实现时间复杂度为 O(logn) 的解决方案。\n输入：arr = [0,2,1,0]输出：1\n# 枚举，时间复杂度 O(n)class Solution:    def peakIndexInMountainArray(self, arr: List[int]) -&gt; int:        ans = -1        for i in range(1, len(arr)-1):            if arr[i] &gt; arr[i+1]:                ans = i                break        return ans# 二分查找class Solution:    def peakIndexInMountainArray(self, arr: List[int]) -&gt; int:        left, right, ans = 1, len(arr) - 2, 0        while left &lt;= right:            mid = (left + right) // 2            if arr[mid] &gt; arr[mid + 1]:                ans = mid                right = mid - 1            else:                left = mid + 1        return ans\n\n\n\n\n\nDatabaseFind Customer Referee - Easy寻找用户推荐人：\nTable: Customer+----+------+------------+| id | name | referee_id |+----+------+------------+| 1  | Will | null       || 2  | Jane | null       || 3  | Alex | 2          || 4  | Bill | null       || 5  | Zack | 1          || 6  | Mark | 2          |+----+------+------------+\n写一个查询语句，返回一个客户列表，列表中客户的推荐人的编号都不是 2。\nOutput:+------+| name |+------+| Will || Jane || Bill || Zack |+------+\nMySQL 使用三值逻辑 —— TRUE, FALSE 和 UNKNOWN。任何与 NULL 值进行的比较都会与第三种值 UNKNOWN 做比较。\nSELECT name FROM customer WHERE referee_id &lt;&gt; 2 OR referee_id IS NULL;-- MySQLSELECT name FROM customer WHERE referee_id != 2 OR referee_id IS NULL;-- 用安全等于取反SELECT name FROM customer WHERE NOT referee_id &lt;=&gt; 2;/*因此，最后一句意思是选择所有 referee_id 不等于 2 的行，包括 NULL  行。&lt;=&gt; 是 MySQL 特有的运算符，用于比较两个值是否相等，包括 NULL 值。使用方式：如果两个值都不是 NULL，&quot;&lt;=&gt;&quot; 的作用与 &quot;=&quot; 相同，即比较两个值是否相等。如果其中一个值为 NULL，那么 &quot;&lt;=&gt;&quot; 的结果为 FALSE（不相等），而&quot;=&quot; 的结果为 UNKNOWN（未知）。如果两个值都为 NULL，那么 &quot;&lt;=&gt;&quot; 的结果为 TRUE（相等），而&quot;=&quot; 的结果为 UNKNOWN（未知）。*/\nRecyclable and Low Fat Products - Easy可回收且低脂的产品：\nTable: Products+-------------+----------+------------+| product_id  | low_fats | recyclable |+-------------+----------+------------+| 0           | Y        | N          || 1           | Y        | Y          || 2           | N        | Y          || 3           | Y        | Y          || 4           | N        | N          |+-------------+----------+------------+product_id 是这个表的主键。low_fats 是枚举类型，取值为以下两种 (&#39;Y&#39;, &#39;N&#39;)，其中 &#39;Y&#39; 表示该产品是低脂产品，&#39;N&#39; 则不是。recyclable 同上。\n查找既是低脂又是可回收的产品编号。返回结果无顺序要求。\nOutput:+-------------+| product_id  |+-------------+| 1           || 3           |+-------------+\n-- MySQLSELECT product_id FROM products WHERE low_fats = &#x27;Y&#x27; AND recyclable = &#x27;Y&#x27;;\nBig Countries - EasyTable: World+-------------+---------+| Column Name | Type    |+-------------+---------+| name        | varchar || continent   | varchar || area        | int     || population  | int     || gdp         | bigint  |+-------------+---------+name is the primary key column\n面积至少为 300 万平方公里，或人口至少为 2500 万。编写一个 SQL 查询以报告大国的国家名称、人口和面积。\n按任意顺序返回结果表。\nInput:World table:+-------------+-----------+---------+------------+--------------+| name        | continent | area    | population | gdp          |+-------------+-----------+---------+------------+--------------+| Afghanistan | Asia      | 652230  | 25500100   | 20343000000  || Albania     | Europe    | 28748   | 2831741    | 12960000000  || Algeria     | Africa    | 2381741 | 37100000   | 188681000000 || Andorra     | Europe    | 468     | 78115      | 3712000000   || Angola      | Africa    | 1246700 | 20609294   | 100990000000 |+-------------+-----------+---------+------------+--------------+Output:+-------------+------------+---------+| name        | population | area    |+-------------+------------+---------+| Afghanistan | 25500100   | 652230  || Algeria     | 37100000   | 2381741 |+-------------+------------+---------+\n-- MySQL-- 使用 ORSELECT name, population, areaFROM worldWHERE population &gt;= 25000000 OR area &gt;= 3000000;-- 使用 or 可能会使索引失效，在数据量较大的时候查找效率较低，通常建议使用 union。-- 使用 UNION，比上一种速度更块，但差别不大SELECT name, population, areaFROM worldWHERE population &gt;= 25000000UNIONSELECT name, population, areaFROM worldWHERE area &gt;= 3000000;\nArticle Views I - Easy文章浏览 I：\nTable: Views+---------------+---------+| Column Name   | Type    |+---------------+---------+| article_id    | int     || author_id     | int     || viewer_id     | int     || view_date     | date    |+---------------+---------+此表无主键，因此可能会存在重复行。此表的每一行都表示某人在某天浏览了某位作者的某篇文章。同一人的 author_id 和 viewer_id 是相同的。\n找出所有浏览过自己文章的作者，结果按照 id 升序排列。\nInput:Views table:+------------+-----------+-----------+------------+| article_id | author_id | viewer_id | view_date  |+------------+-----------+-----------+------------+| 1          | 3         | 5         | 2019-08-01 || 1          | 3         | 6         | 2019-08-02 || 2          | 7         | 7         | 2019-08-01 || 2          | 7         | 6         | 2019-08-02 || 4          | 7         | 1         | 2019-07-22 || 3          | 4         | 4         | 2019-07-21 || 3          | 4         | 4         | 2019-07-21 |+------------+-----------+-----------+------------+Output:+------+| id   |+------+| 4    || 7    |+------+\n-- MySQLSELECT DISTINCT author_id AS idFROM  ViewsWHERE author_id = viewer_idORDER BY author_id;\nInvalid Tweets - EasyTable: Tweets+----------------+---------+| Column Name    | Type    |+----------------+---------+| tweet_id       | int     || content        | varchar |+----------------+---------+tweet_id is the primary key.\n查询所有无效推文的编号（ID）。当推文内容中的字符数严格大于 15 时，该推文是无效的。\n以任意顺序返回结果表。\nInput:Tweets table:+----------+----------------------------------+| tweet_id | content                          |+----------+----------------------------------+| 1        | Vote for Biden                   || 2        | Let us make America great again! |+----------+----------------------------------+Output:+----------+| tweet_id |+----------+| 2        |+----------+Explanation:Tweet 1 has length &#x3D; 14. It is a valid tweet.Tweet 2 has length &#x3D; 32. It is an invalid tweet.\n-- MySQLSELECT tweet_idFROM tweetsWHERE CHAR_LENGTH(content) &gt; 15;\nReplace Employee ID With The Unique Identifier - Easy使用唯一标识码替换员工 ID：\nTable: Employees+---------------+---------+| Column Name   | Type    |+---------------+---------+| id            | int     || name          | varchar |+---------------+---------+id is the primary key.Table: EmployeeUNI+---------------+---------+| Column Name   | Type    |+---------------+---------+| id            | int     || unique_id     | int     |+---------------+---------+\n展示每位用户的唯一标识码（unique ID ）；如果某位员工没有唯一标识码，使用 null 填充即可。\n你可以以任意顺序返回结果表。\nInput:Employees table:+----+----------+| id | name     |+----+----------+| 1  | Alice    || 7  | Bob      || 11 | Meir     || 90 | Winston  || 3  | Jonathan |+----+----------+EmployeeUNI table:+----+-----------+| id | unique_id |+----+-----------+| 3  | 1         || 11 | 2         || 90 | 3         |+----+-----------+Output:+-----------+----------+| unique_id | name     |+-----------+----------+| null      | Alice    || null      | Bob      || 2         | Meir     || 3         | Winston  || 1         | Jonathan |+-----------+----------+\n-- MySQLSELECT unique_id, nameFROM employeesLEFT JOIN employeeUNION employees.id = employeeUNI.id;\nProduct Sales Analysis I - Easy产品销售分析 I:\nTable: Sales+-------------+-------+| Column Name | Type  |+-------------+-------+| sale_id     | int   || product_id  | int   || year        | int   || quantity    | int   || price       | int   |+-------------+-------+(sale_id, year) is the primary key of this table.product_id is a foreign key to Product table.Table: Product+--------------+---------+| Column Name  | Type    |+--------------+---------+| product_id   | int     || product_name | varchar |+--------------+---------+product_id is the primary key of this table.\n获取 Sales 表中所有产品对应的产品名称 product_name 以及该产品的所有售卖年份 year 和价格 price。\n查询结果中的顺序无特定要求。\nInput:Sales table:+---------+------------+------+----------+-------+| sale_id | product_id | year | quantity | price |+---------+------------+------+----------+-------+| 1       | 100        | 2008 | 10       | 5000  || 2       | 100        | 2009 | 12       | 5000  || 7       | 200        | 2011 | 15       | 9000  |+---------+------------+------+----------+-------+Product table:+------------+--------------+| product_id | product_name |+------------+--------------+| 100        | Nokia        || 200        | Apple        || 300        | Samsung      |+------------+--------------+Output:+--------------+-------+-------+| product_name | year  | price |+--------------+-------+-------+| Nokia        | 2008  | 5000  || Nokia        | 2009  | 5000  || Apple        | 2011  | 9000  |+--------------+-------+-------+\n-- MySQLSELECT p.product_name, s.year, s.priceFROM sales sLEFT JOIN product pON s.product_id = p.product_id;\nCustomer Who Visited but Did Not Make Any Transactions - Easy进店却未进行过交易的顾客：\nTable: Visits+-------------+---------+| Column Name | Type    |+-------------+---------+| visit_id    | int     || customer_id | int     |+-------------+---------+visit_id is the primary key for this table.Table: Transactions+----------------+---------+| Column Name    | Type    |+----------------+---------+| transaction_id | int     || visit_id       | int     || amount         | int     |+----------------+---------+transaction_id is the primary key for this table.\n有一些顾客可能光顾了购物中心但没有进行交易。请你编写一个 SQL 查询，来查找这些顾客的 ID，以及他们只光顾不交易的次数。\n返回以 任何顺序 排序的结果表。\nInput:Visits+----------+-------------+| visit_id | customer_id |+----------+-------------+| 1        | 23          || 2        | 9           || 4        | 30          || 5        | 54          || 6        | 96          || 7        | 54          || 8        | 54          |+----------+-------------+Transactions+----------------+----------+--------+| transaction_id | visit_id | amount |+----------------+----------+--------+| 2              | 5        | 310    || 3              | 5        | 300    || 9              | 5        | 200    || 12             | 1        | 910    || 13             | 2        | 970    |+----------------+----------+--------+Output:+-------------+----------------+| customer_id | count_no_trans |+-------------+----------------+| 54          | 2              || 30          | 1              || 96          | 1              |+-------------+----------------+解释:ID &#x3D; 23 的顾客曾经逛过一次购物中心，并在 ID &#x3D; 12 的访问期间进行了一笔交易。ID &#x3D; 9 的顾客曾经逛过一次购物中心，并在 ID &#x3D; 13 的访问期间进行了一笔交易。ID &#x3D; 30 的顾客曾经去过购物中心，并且没有进行任何交易。ID &#x3D; 54 的顾客三度造访了购物中心。在 2 次访问中，他们没有进行任何交易，在 1 次访问中，他们进行了 3 次交易。ID &#x3D; 96 的顾客曾经去过购物中心，并且没有进行任何交易。如我们所见，ID 为 30 和 96 的顾客一次没有进行任何交易就去了购物中心。顾客 54 也两次访问了购物中心并且没有进行任何交易。\n-- MySQLSELECT customer_id, count(customer_id) count_no_transFROM visits vLEFT JOIN transactions tON v.visit_id = t.visit_idWHERE amount IS NULLGROUP BY customer_id;\nRising Temperature - EasyTable: Weather+---------------+---------+| Column Name   | Type    |+---------------+---------+| id            | int     || recordDate    | date    || temperature   | int     |+---------------+---------+id is the primary key for this table.\n查找与之前（昨天的）日期相比温度更高的所有日期的 id。\n返回结果不排序。\nInput:Weather table:+----+------------+-------------+| id | recordDate | temperature |+----+------------+-------------+| 1  | 2015-01-01 | 10          || 2  | 2015-01-02 | 25          || 3  | 2015-01-03 | 20          || 4  | 2015-01-04 | 30          |+----+------------+-------------+Output:+----+| id |+----+| 2  || 4  |+----+解释：2015-01-02 的温度比前一天高（10 -&gt; 25）2015-01-04 的温度比前一天高（20 -&gt; 30）\n-- MySQLSELECT a.idFROM weather aCROSS JOIN weather bON datediff(a.recorddate, b.recorddate) = 1WHERE a.temperature &gt; b.temperatureSELECT a.idFROM weather aCROSS JOIN weather bON timestampdiff(day, a.recorddate, b.recorddate) = -1WHERE a.temperature &gt; b.temperature;\nAverage Time of Process per Machine - Easy每台机器的进程平均运行时间：\nTable: Activity+----------------+---------+| Column Name    | Type    |+----------------+---------+| machine_id     | int     || process_id     | int     || activity_type  | enum    || timestamp      | float   |+----------------+---------+(machine_id, process_id, activity_type) 是当前表的主键。\n现在有一个工厂网站由几台机器运行，每台机器上运行着相同数量的进程。计算每台机器各自完成一个进程任务的平均耗时。\n完成一个进程任务的时间指进程的 ‘end’ 时间戳减去 ‘start’ 时间戳。平均耗时通过计算每台机器上所有进程任务的总耗费时间除以机器上的总进程数量获得。\n结果表必须包含 machine_id（机器ID）和对应的 average time（平均耗时） 别名 processing_time，且四舍五入保留 3 位小数。\n以 任意顺序 返回表。\nInput:Activity table:+------------+------------+---------------+-----------+| machine_id | process_id | activity_type | timestamp |+------------+------------+---------------+-----------+| 0          | 0          | start         | 0.712     || 0          | 0          | end           | 1.520     || 0          | 1          | start         | 3.140     || 0          | 1          | end           | 4.120     || 1          | 0          | start         | 0.550     || 1          | 0          | end           | 1.550     || 1          | 1          | start         | 0.430     || 1          | 1          | end           | 1.420     || 2          | 0          | start         | 4.100     || 2          | 0          | end           | 4.512     || 2          | 1          | start         | 2.500     || 2          | 1          | end           | 5.000     |+------------+------------+---------------+-----------+Output:+------------+-----------------+| machine_id | processing_time |+------------+-----------------+| 0          | 0.894           || 1          | 0.995           || 2          | 1.456           |+------------+-----------------+解释：一共有3台机器,每台机器运行着两个进程.机器 0 的平均耗时: ((1.520 - 0.712) + (4.120 - 3.140)) &#x2F; 2 &#x3D; 0.894\n-- MySQLSELECT    machine_id,    ROUND(AVG(IF(activity_type = &#x27;start&#x27;, -timestamp, timestamp)) * 2, 3) processing_timeFROM activityGROUP BY machine_id\nEmployee Bonus - Easy选出所有 bonus &lt; 1000 员工的 name 及其 bonus。\nInput:Employee table:+-------+--------+------------+--------+| empId | name   | supervisor | salary |+-------+--------+------------+--------+| 3     | Brad   | null       | 4000   || 1     | John   | 3          | 1000   || 2     | Dan    | 3          | 2000   || 4     | Thomas | 3          | 4000   |+-------+--------+------------+--------+Bonus table:+-------+-------+| empId | bonus |+-------+-------+| 2     | 500   || 4     | 2000  |+-------+-------+Output:+------+-------+| name | bonus |+------+-------+| Brad | null  || John | null  || Dan  | 500   |+------+-------+\n-- MySQLSELECT name, bonusFROM employeeLEFT JOIN bonusON employee.empId = bonus.empIdWHERE bonus IS NULL OR bonus &lt; 1000;\nStudents and Examinations - EasyTable: Students+---------------+---------+| Column Name   | Type    |+---------------+---------+| student_id    | int     || student_name  | varchar |+---------------+---------+student_id is the primary key.Table: Subjects+--------------+---------+| Column Name  | Type    |+--------------+---------+| subject_name | varchar |+--------------+---------+subject_name is the primary key.Table: Examinations+--------------+---------+| Column Name  | Type    |+--------------+---------+| student_id   | int     || subject_name | varchar |+--------------+---------+无主键，可能会有重复行。\n查询出每个学生参加每一门科目测试的次数，结果按 student_id 和 subject_name 排序。\nInput:Students table:+------------+--------------+| student_id | student_name |+------------+--------------+| 1          | Alice        || 2          | Bob          || 13         | John         || 6          | Alex         |+------------+--------------+Subjects table:+--------------+| subject_name |+--------------+| Math         || Physics      || Programming  |+--------------+Examinations table:+------------+--------------+| student_id | subject_name |+------------+--------------+| 1          | Math         || 1          | Physics      || 1          | Programming  || 2          | Programming  || 1          | Physics      || 1          | Math         || 13         | Math         || 13         | Programming  || 13         | Physics      || 2          | Math         || 1          | Math         |+------------+--------------+Output:+------------+--------------+--------------+----------------+| student_id | student_name | subject_name | attended_exams |+------------+--------------+--------------+----------------+| 1          | Alice        | Math         | 3              || 1          | Alice        | Physics      | 2              || 1          | Alice        | Programming  | 1              || 2          | Bob          | Math         | 1              || 2          | Bob          | Physics      | 0              || 2          | Bob          | Programming  | 1              || 6          | Alex         | Math         | 0              || 6          | Alex         | Physics      | 0              || 6          | Alex         | Programming  | 0              || 13         | John         | Math         | 1              || 13         | John         | Physics      | 1              || 13         | John         | Programming  | 1              |+------------+--------------+--------------+----------------+\n-- MySQLSELECT a.student_id, a.student_name, b.subject_name, COUNT(e.subject_name) AS attended_examsFROM Students aCROSS JOIN Subjects bLEFT JOIN Examinations eON a.student_id = e.student_idAND b.subject_name = e.subject_nameGROUP BY a.student_id, b.subject_nameORDER BY a.student_id, b.subject_name\nManagers with at Least 5 Direct Reports - Medium至少有 5 名直接下属的经理：\nTable: Employee+-------------+---------+| Column Name | Type    |+-------------+---------+| id          | int     || name        | varchar || department  | varchar || managerId   | int     |+-------------+---------+id is the primary key column.\n查询至少有 5 名直接下属的经理。\n以 任意顺序 返回结果表。\nInput:Employee table:+-----+-------+------------+-----------+| id  | name  | department | managerId |+-----+-------+------------+-----------+| 101 | John  | A          | None      || 102 | Dan   | A          | 101       || 103 | James | A          | 101       || 104 | Amy   | A          | 101       || 105 | Anne  | A          | 101       || 106 | Ron   | B          | 101       |+-----+-------+------------+-----------+Output:+------+| name |+------+| John |+------+\n-- MySQLSELECT nameFROM employee AS t1 JOIN(    SELECT managerID    FROM employee    GROUP BY managerID    HAVING COUNT(managerID) &gt;= 5) AS t2    ON t1.id = t2.managerID;\nConfirmation Rate - Medium确认率：\nTable: Signups+----------------+----------+| Column Name    | Type     |+----------------+----------+| user_id        | int      || time_stamp     | datetime |+----------------+----------+user_id is the primary key.Table: Confirmations+----------------+----------+| Column Name    | Type     |+----------------+----------+| user_id        | int      || time_stamp     | datetime || action         | ENUM     |+----------------+----------+(user_id, time_stamp) is the primary key.user_id is a foreign key.\n用户的确认率是 ‘confirmed’ 消息的数量除以请求的确认消息的总数。没有请求任何确认消息的用户的确认率为 0 。确认率四舍五入到小数点后两位。\n查找每个用户的确认率。\n以任意顺序返回结果表。\nInput:Signups table:+---------+---------------------+| user_id | time_stamp          |+---------+---------------------+| 3       | 2020-03-21 10:16:13 || 7       | 2020-01-04 13:57:59 || 2       | 2020-07-29 23:09:44 || 6       | 2020-12-09 10:39:37 |+---------+---------------------+Confirmations table:+---------+---------------------+-----------+| user_id | time_stamp          | action    |+---------+---------------------+-----------+| 3       | 2021-01-06 03:30:46 | timeout   || 3       | 2021-07-14 14:00:00 | timeout   || 7       | 2021-06-12 11:57:29 | confirmed || 7       | 2021-06-13 12:58:28 | confirmed || 7       | 2021-06-14 13:59:27 | confirmed || 2       | 2021-01-22 00:00:00 | confirmed || 2       | 2021-02-28 23:59:59 | timeout   |+---------+---------------------+-----------+Output:+---------+-------------------+| user_id | confirmation_rate |+---------+-------------------+| 6       | 0.00              || 3       | 0.00              || 7       | 1.00              || 2       | 0.50              |+---------+-------------------+解释:用户 6 没有请求任何确认消息。确认率为 0。用户 3 进行了 2 次请求，都超时了。确认率为 0。用户 7 提出了 3 个请求，所有请求都得到了确认。确认率为 1。用户 2 做了 2 个请求，其中一个被确认，另一个超时。确认率为 1 &#x2F; 2 &#x3D; 0.5。\n-- MySQLSELECT s.user_id, IFNULL(ROUND(SUM(action = &#x27;confirmed&#x27;) / COUNT(c.action), 2), 0.00) AS confirmation_rateFROM signups AS sLEFT JOIN confirmations AS cON s.user_id = c.user_idGROUP BY s.user_id;\nNot Boring Movies - EasyInput:Cinema table:+----+------------+-------------+--------+| id | movie      | description | rating |+----+------------+-------------+--------+| 1  | War        | great 3D    | 8.9    || 2  | Science    | fiction     | 8.5    || 3  | irish      | boring      | 6.2    || 4  | Ice song   | Fantacy     | 8.6    || 5  | House card | Interesting | 9.1    |+----+------------+-------------+--------+Output:+----+------------+-------------+--------+| id | movie      | description | rating |+----+------------+-------------+--------+| 5  | House card | Interesting | 9.1    || 1  | War        | great 3D    | 8.9    |+----+------------+-------------+--------+\n找出所有影片描述为非 boring 的且 id 为奇数的影片，结果请按等级 rating 排列。\n-- MySQLSELECT *FROM cinemaWHERE MOD(id, 2) = 1    AND description != &#x27;boring&#x27;ORDER BY rating DESC;-- SQLSELECT *FROM cinemaWHERE id % 2 &lt;&gt; 0    AND description &lt;&gt; &#x27;boring&#x27;ORDER BY rating DESC;\nAverage Selling Price - Easy平均售价：\nTable: Prices+---------------+---------+| Column Name   | Type    |+---------------+---------+| product_id    | int     || start_date    | date    || end_date      | date    || price         | int     |+---------------+---------+(product_id, start_date, end_date) is the primary key.Table: UnitsSold+---------------+---------+| Column Name   | Type    |+---------------+---------+| product_id    | int     || purchase_date | date    || units         | int     |+---------------+---------+There is no primary key for this table, it may contain duplicates.\n查找每种产品的平均售价。average_price 应该四舍五入到小数点后两位。\nInput:Prices table:+------------+------------+------------+--------+| product_id | start_date | end_date   | price  |+------------+------------+------------+--------+| 1          | 2019-02-17 | 2019-02-28 | 5      || 1          | 2019-03-01 | 2019-03-22 | 20     || 2          | 2019-02-01 | 2019-02-20 | 15     || 2          | 2019-02-21 | 2019-03-31 | 30     |+------------+------------+------------+--------+UnitsSold table:+------------+---------------+-------+| product_id | purchase_date | units |+------------+---------------+-------+| 1          | 2019-02-25    | 100   || 1          | 2019-03-01    | 15    || 2          | 2019-02-10    | 200   || 2          | 2019-03-22    | 30    |+------------+---------------+-------+Output:+------------+---------------+| product_id | average_price |+------------+---------------+| 1          | 6.96          || 2          | 16.96         |+------------+---------------+平均售价 &#x3D; 产品总价 &#x2F; 销售的产品数量。产品 1 的平均售价 &#x3D; ((100 * 5)+(15 * 20) )&#x2F; 115 &#x3D; 6.96产品 2 的平均售价 &#x3D; ((200 * 15)+(30 * 30) )&#x2F; 230 &#x3D; 16.96\n-- MySQLSELECT    product_id,    Round(SUM(sales) / SUM(units), 2) AS average_priceFROM (    SELECT        Prices.product_id AS product_id,        Prices.price * UnitsSold.units AS sales,        UnitsSold.units AS units    FROM Prices    JOIN UnitsSold ON Prices.product_id = UnitsSold.product_id    WHERE UnitsSold.purchase_date BETWEEN Prices.start_date AND Prices.end_date) TGROUP BY product_id\nProject Employees I - EasyTable: Project+-------------+---------+| Column Name | Type    |+-------------+---------+| project_id  | int     || employee_id | int     |+-------------+---------+(project_id, employee_id) is the primary key of this table.employee_id is a foreign key to Employee table.Table: Employee+------------------+---------+| Column Name      | Type    |+------------------+---------+| employee_id      | int     || name             | varchar || experience_years | int     |+------------------+---------+employee_id is the primary key.\n查询每一个项目中员工的 平均 工作年限，精确到小数点后两位。\nInput:Project table:+-------------+-------------+| project_id  | employee_id |+-------------+-------------+| 1           | 1           || 1           | 2           || 1           | 3           || 2           | 1           || 2           | 4           |+-------------+-------------+Employee table:+-------------+--------+------------------+| employee_id | name   | experience_years |+-------------+--------+------------------+| 1           | Khaled | 3                || 2           | Ali    | 2                || 3           | John   | 1                || 4           | Doe    | 2                |+-------------+--------+------------------+Output:+-------------+---------------+| project_id  | average_years |+-------------+---------------+| 1           | 2.00          || 2           | 2.50          |+-------------+---------------+第一个项目中，员工的平均工作年限是 (3 + 2 + 1) &#x2F; 3 &#x3D; 2.00；第二个项目中，员工的平均工作年限是 (3 + 2) &#x2F; 2 &#x3D; 2.50\n-- MySQLSELECT    p.project_id,    ROUND(AVG(e.experience_years), 2) AS average_yearsFROM project p, employee eWHERE p.employee_id = e.employee_idGROUP BY p.project_id;\nPercentage of Users Attended a Contest - Easy各赛事的用户注册率：\nTable: Users+-------------+---------+| Column Name | Type    |+-------------+---------+| user_id     | int     || user_name   | varchar |+-------------+---------+user_id is the primary key.Table: Register+-------------+---------+| Column Name | Type    |+-------------+---------+| contest_id  | int     || user_id     | int     |+-------------+---------+(contest_id, user_id) is the primary key.\n查询各赛事的用户注册百分率，保留两位小数。\n返回的结果表按 percentage 的 降序 排序，若相同则按 contest_id 的 升序 排序。\nInput:Users table:+---------+-----------+| user_id | user_name |+---------+-----------+| 6       | Alice     || 2       | Bob       || 7       | Alex      |+---------+-----------+Register table:+------------+---------+| contest_id | user_id |+------------+---------+| 215        | 6       || 209        | 2       || 208        | 2       || 210        | 6       || 208        | 6       || 209        | 7       || 209        | 6       || 215        | 7       || 208        | 7       || 210        | 2       || 207        | 2       || 210        | 7       |+------------+---------+Output:+------------+------------+| contest_id | percentage |+------------+------------+| 208        | 100.0      || 209        | 100.0      || 210        | 100.0      || 215        | 66.67      || 207        | 33.33      |+------------+------------+解释：所有用户都注册了 208、209 和 210 赛事，因此这些赛事的注册率为 100% ，我们按 contest_id 的降序排序加入结果表中。Alice 和 Alex 注册了 215 赛事，注册率为 ((2&#x2F;3) * 100) &#x3D; 66.67%Bob 注册了 207 赛事，注册率为 ((1&#x2F;3) * 100) &#x3D; 33.33%\n-- MySQLSELECT    contest_id,    ROUND(COUNT(user_id) * 100 / (SELECT count(*) FROM users), 2) percentageFROM RegisterGROUP BY contest_idORDER BY percentage desc, contest_id-- SQLSELECT    contest_id,    CONVERT(DECIMAL(18, 2), COUNT(user_id * 1.00) * 100 / (SELECT COUNT(*) * 1.00 FROM users)) percentageFROM RegisterGROUP BY contest_idORDER BY percentage desc, contest_id\nQueries Quality and Percentage - Easy查询结果的质量和占比：\nTable: Queries+-------------+---------+| Column Name | Type    |+-------------+---------+| query_name  | varchar || result      | varchar || position    | int     || rating      | int     |+-------------+---------+此表没有主键，并可能有重复的行。此表包含了一些从数据库中收集的查询信息。“位置”（position）列的值为 1 到 500 。“评分”（rating）列的值为 1 到 5 。评分小于 3 的查询被定义为质量很差的查询。\n将查询结果的质量 quality 定义为：\n各查询结果的评分与其位置之间比率的平均值。\n将劣质查询百分比 poor_query_percentage 为：\n评分小于 3 的查询结果占全部查询结果的百分比。\n编写一组 SQL 来查找每次查询的名称(query_name)、质量(quality) 和 劣质查询百分比(poor_query_percentage)。\n质量(quality) 和劣质查询百分比(poor_query_percentage) 都应四舍五入到小数点后两位。\nInput:Queries table:+------------+-------------------+----------+--------+| query_name | result            | position | rating |+------------+-------------------+----------+--------+| Dog        | Golden Retriever  | 1        | 5      || Dog        | German Shepherd   | 2        | 5      || Dog        | Mule              | 200      | 1      || Cat        | Shirazi           | 5        | 2      || Cat        | Siamese           | 3        | 3      || Cat        | Sphynx            | 7        | 4      |+------------+-------------------+----------+--------+Output:+------------+---------+-----------------------+| query_name | quality | poor_query_percentage |+------------+---------+-----------------------+| Dog        | 2.50    | 33.33                 || Cat        | 0.66    | 33.33                 |+------------+---------+-----------------------+Dog 查询结果的质量为 ((5 &#x2F; 1) + (5 &#x2F; 2) + (1 &#x2F; 200)) &#x2F; 3 &#x3D; 2.50Dog 查询结果的劣质查询百分比为 (1 &#x2F; 3) * 100 &#x3D; 33.33Cat 查询结果的质量为 ((2 &#x2F; 5) + (3 &#x2F; 3) + (4 &#x2F; 7)) &#x2F; 3 &#x3D; 0.66Cat 查询结果的劣质查询百分比为 (1 &#x2F; 3) * 100 &#x3D; 33.33\n-- MySQLSELECT    query_name,    ROUND(AVG(rating/position), 2) quality,    ROUND(SUM(IF(rating &lt; 3, 1, 0)) * 100 / COUNT(*), 2) poor_query_percentageFROM QueriesGROUP BY query_name\nMonthly Transactions I - Medium每月交易 I：\nTable: Transactions+---------------+---------+| Column Name   | Type    |+---------------+---------+| id            | int     || country       | varchar || state         | enum    || amount        | int     || trans_date    | date    |+---------------+---------+id is the primary keyThe state column is an enum of type [&quot;approved&quot;, &quot;declined&quot;].\n查找每个月和每个国家/地区的事务数及其总金额、已批准的事务数及其总金额。\n以 任意顺序 返回结果表。\nInput:Transactions table:+------+---------+----------+--------+------------+| id   | country | state    | amount | trans_date |+------+---------+----------+--------+------------+| 121  | US      | approved | 1000   | 2018-12-18 || 122  | US      | declined | 2000   | 2018-12-19 || 123  | US      | approved | 2000   | 2019-01-01 || 124  | DE      | approved | 2000   | 2019-01-07 |+------+---------+----------+--------+------------+Output:+----------+---------+-------------+----------------+--------------------+-----------------------+| month    | country | trans_count | approved_count | trans_total_amount | approved_total_amount |+----------+---------+-------------+----------------+--------------------+-----------------------+| 2018-12  | US      | 2           | 1              | 3000               | 1000                  || 2019-01  | US      | 1           | 1              | 2000               | 2000                  || 2019-01  | DE      | 1           | 1              | 2000               | 2000                  |+----------+---------+-------------+----------------+--------------------+-----------------------+\n-- MySQLSELECT    DATE_FORMAT(trans_date, &#x27;%Y-%m&#x27;) AS month,    country,    COUNT(*) AS trans_count,    COUNT(IF(state = &#x27;approved&#x27;, 1, NULL)) AS approved_count,    SUM(amount) AS trans_total_amount,    SUM(IF(state = &#x27;approved&#x27;, amount, 0)) AS approved_total_amountFROM transactionsGROUP BY month, country\nImmediate Food Delivery II - Medium即时食物配送 II：\nTable: Delivery+-----------------------------+---------+| Column Name                 | Type    |+-----------------------------+---------+| delivery_id                 | int     || customer_id                 | int     || order_date                  | date    || customer_pref_delivery_date | date    |+-----------------------------+---------+delivery_id is the primary key\n如果顾客期望的配送日期和下单日期相同，则该订单称为 「即时订单」，否则称为「计划订单」。\n「首次订单」是顾客最早创建的订单。我们保证一个顾客只会有一个「首次订单」。\n写一条 SQL 查询语句获取即时订单在所有用户的首次订单中的比例。保留两位小数。\nInput:Delivery table:+-------------+-------------+------------+-----------------------------+| delivery_id | customer_id | order_date | customer_pref_delivery_date |+-------------+-------------+------------+-----------------------------+| 1           | 1           | 2019-08-01 | 2019-08-02                  || 2           | 2           | 2019-08-02 | 2019-08-02                  || 3           | 1           | 2019-08-11 | 2019-08-12                  || 4           | 3           | 2019-08-24 | 2019-08-24                  || 5           | 3           | 2019-08-21 | 2019-08-22                  || 6           | 2           | 2019-08-11 | 2019-08-13                  || 7           | 4           | 2019-08-09 | 2019-08-09                  |+-------------+-------------+------------+-----------------------------+Output:+----------------------+| immediate_percentage |+----------------------+| 50.00                |+----------------------+1 号顾客的 1 号订单是首次订单，并且是计划订单。2 号顾客的 2 号订单是首次订单，并且是即时订单。3 号顾客的 5 号订单是首次订单，并且是计划订单。4 号顾客的 7 号订单是首次订单，并且是即时订单。因此，一半顾客的首次订单是即时的。\n-- MySQLSELECT    ROUND(SUM(order_date = customer_pref_delivery_date) * 100 / COUNT(*), 2)    AS immediate_percentageFROM deliveryWHERE (customer_id, order_date) IN (    SELECT customer_id, min(order_date)    FROM delivery    GROUP BY customer_id)\nGame Play Analysis IV - Medium游戏玩法分析 IV：\nTable: Activity+--------------+---------+| Column Name  | Type    |+--------------+---------+| player_id    | int     || device_id    | int     || event_date   | date    || games_played | int     |+--------------+---------+(player_id, event_date) is the primary key\n编写一个 SQL 查询，报告在首次登录的第二天再次登录的玩家的比率，四舍五入到小数点后两位。换句话说，您需要计算从首次登录日期开始至少连续两天登录的玩家的数量，然后除以玩家总数。\nInput:Activity table:+-----------+-----------+------------+--------------+| player_id | device_id | event_date | games_played |+-----------+-----------+------------+--------------+| 1         | 2         | 2016-03-01 | 5            || 1         | 2         | 2016-03-02 | 6            || 2         | 3         | 2017-06-25 | 1            || 3         | 1         | 2016-03-02 | 0            || 3         | 4         | 2018-07-03 | 5            |+-----------+-----------+------------+--------------+Output:+-----------+| fraction  |+-----------+| 0.33      |+-----------+只有 ID 为 1 的玩家在第一天登录后才重新登录，所以答案是 1&#x2F;3 &#x3D; 0.33\n-- MySQLSELECT ROUND(AVG(a.event_date IS NOT NULL), 2) fractionFROM    (SELECT player_id, min(event_date) AS login    FROM activity    GROUP BY player_id) pLEFT JOIN activity aON p.player_id = a.player_id AND datediff(a.event_date, p.login) = 1\nNumber of Unique Subjects Taught by Each Teacher - Easy每位教师所教授的科目种类的数量：\nTable: Teacher+-------------+------+| Column Name | Type |+-------------+------+| teacher_id  | int  || subject_id  | int  || dept_id     | int  |+-------------+------+(subject_id, dept_id) is the primary key\n查询每位老师在大学里教授的科目种类的数量。\n以 任意顺序 返回结果表。\nInput:Teacher table:+------------+------------+---------+| teacher_id | subject_id | dept_id |+------------+------------+---------+| 1          | 2          | 3       || 1          | 2          | 4       || 1          | 3          | 3       || 2          | 1          | 1       || 2          | 2          | 1       || 2          | 3          | 1       || 2          | 4          | 1       |+------------+------------+---------+Output:+------------+-----+| teacher_id | cnt |+------------+-----+| 1          | 2   || 2          | 4   |+------------+-----+解释:教师 1:  - 他在 3、4 系教科目 2。  - 他在 3 系教科目 3。教师 2:  - 他在 1 系教科目 1。  - 他在 1 系教科目 2。  - 他在 1 系教科目 3。  - 他在 1 系教科目 4。\n-- MySQLSELECT teacher_id, COUNT(distinct subject_id) AS cntFROM teacherGROUP BY teacher_id;\nUser Activity for the Past 30 Days I - Easy查询近 30 天活跃用户数：\nTable: Activity+---------------+---------+| Column Name   | Type    |+---------------+---------+| user_id       | int     || session_id    | int     || activity_date | date    || activity_type | enum    |+---------------+---------+There is no primary key for this table, it may have duplicate rows.\n请写SQL查询出截至 2019-07-27（包含2019-07-27），近 30 天的每日活跃用户数（当天只要有一条活动记录，即为活跃用户）。\n以 任意顺序 返回结果表。\nInput:Activity table:+---------+------------+---------------+---------------+| user_id | session_id | activity_date | activity_type |+---------+------------+---------------+---------------+| 1       | 1          | 2019-07-20    | open_session  || 1       | 1          | 2019-07-20    | scroll_down   || 1       | 1          | 2019-07-20    | end_session   || 2       | 4          | 2019-07-20    | open_session  || 2       | 4          | 2019-07-21    | send_message  || 2       | 4          | 2019-07-21    | end_session   || 3       | 2          | 2019-07-21    | open_session  || 3       | 2          | 2019-07-21    | send_message  || 3       | 2          | 2019-07-21    | end_session   || 4       | 3          | 2019-06-25    | open_session  || 4       | 3          | 2019-06-25    | end_session   |+---------+------------+---------------+---------------+Output:+------------+--------------+| day        | active_users |+------------+--------------+| 2019-07-20 | 2            || 2019-07-21 | 2            |+------------+--------------+解释：注意非活跃用户的记录不需要展示。\n-- MySQLSELECT activity_date AS day, COUNT(DISTINCT(user_id)) AS active_usersFROM ActivityWHERE DATEDIFF(&#x27;2019-7-27&#x27;, activity_date) &lt; 30 AND activity_date &lt;= &#x27;2019-7-27&#x27;GROUP BY activity_date;\nSales Analysis III - Easy销售分析III：\nTable: Product+--------------+---------+| Column Name  | Type    |+--------------+---------+| product_id   | int     || product_name | varchar || unit_price   | int     |+--------------+---------+product_id is the primary keyTable: Sales+-------------+---------+| Column Name | Type    |+-------------+---------+| seller_id   | int     || product_id  | int     || buyer_id    | int     || sale_date   | date    || quantity    | int     || price       | int     |+-------------+---------+This table has no primary key, it can have repeated rows.product_id is a foreign key to the Product table.\n编写一个SQL查询，报告2019年春季才售出的产品。即仅在2019-01-01至2019-03-31（含）之间出售的商品。\n以 任意顺序 返回结果表。\nInput:Product table:+------------+--------------+------------+| product_id | product_name | unit_price |+------------+--------------+------------+| 1          | S8           | 1000       || 2          | G4           | 800        || 3          | iPhone       | 1400       |+------------+--------------+------------+Sales table:+-----------+------------+----------+------------+----------+-------+| seller_id | product_id | buyer_id | sale_date  | quantity | price |+-----------+------------+----------+------------+----------+-------+| 1         | 1          | 1        | 2019-01-21 | 2        | 2000  || 1         | 2          | 2        | 2019-02-17 | 1        | 800   || 2         | 2          | 3        | 2019-06-02 | 1        | 800   || 3         | 3          | 4        | 2019-05-13 | 2        | 2800  |+-----------+------------+----------+------------+----------+-------+Output:+-------------+--------------+| product_id  | product_name |+-------------+--------------+| 1           | S8           |+-------------+--------------+解释:id为1的产品仅在2019年春季销售。id为2的产品在2019年春季销售，但也在2019年春季之后销售。id 3的产品在2019年春季之后销售。我们只退回产品1，因为它是2019年春季才销售的产品。\n-- MySQLSELECT    sales.product_id AS product_id,    product.product_name AS product_nameFROM salesLEFT JOIN productON sales.product_id = product.product_idGROUP BY product_idHAVING COUNT(sale_date BETWEEN &#x27;2019-01-01&#x27; AND &#x27;2019-03-31&#x27; OR NULL) = COUNT(*)\nClasses More Than 5 Students - Easy超过 5 名学生的课：\nTable: Courses+-------------+---------+| Column Name | Type    |+-------------+---------+| student     | varchar || class       | varchar |+-------------+---------+(student, class) is the primary key column\n编写一个SQL查询来报告 至少有5个学生 的所有班级。\n以 任意顺序 返回结果表。\nInput:Courses table:+---------+----------+| student | class    |+---------+----------+| A       | Math     || B       | English  || C       | Math     || D       | Biology  || E       | Math     || F       | Computer || G       | Math     || H       | Math     || I       | Math     |+---------+----------+Output:+---------+| class   |+---------+| Math    |+---------+解释:-数学课有6个学生，所以我们包括它。-英语课有1名学生，所以我们不包括它。-生物课有1名学生，所以我们不包括它。-计算机课有1个学生，所以我们不包括它。\n-- MySQL-- 方法一：使用 GROUP BY 子句和子查询SELECT    classFROM    (SELECT        class, COUNT(DISTINCT student) AS num    FROM        courses    GROUP BY class) AS temp_tableWHERE    num &gt;= 5;-- 方法二：使用 GROUP BY 和 HAVING 条件SELECT    classFROM    coursesGROUP BY classHAVING COUNT(DISTINCT student) &gt;= 5;\nFind Followers Count - Easy求关注者的数量：\nTable: Followers+-------------+------+| Column Name | Type |+-------------+------+| user_id     | int  || follower_id | int  |+-------------+------+(user_id, follower_id) is the primary key\n对于每一个用户，返回该用户的关注者数量。\n按 user_id 的顺序返回结果表。\nInput:Followers table:+---------+-------------+| user_id | follower_id |+---------+-------------+| 0       | 1           || 1       | 0           || 2       | 0           || 2       | 1           |+---------+-------------+Output:+---------+----------------+| user_id | followers_count|+---------+----------------+| 0       | 1              || 1       | 1              || 2       | 2              |+---------+----------------+解释：0 的关注者有 &#123;1&#125;1 的关注者有 &#123;0&#125;2 的关注者有 &#123;0,1&#125;\n-- MySQLSELECT user_id, COUNT(*) AS followers_countFROM followersGROUP BY user_idORDER BY user_id;\nBiggest Single Number - Easy只出现一次的最大数字：\nTable: MyNumbers+-------------+------+| Column Name | Type |+-------------+------+| num         | int  |+-------------+------+There is no primary key\n单一数字 是在 MyNumbers 表中只出现一次的数字。\n请你编写一个 SQL 查询来报告最大的 单一数字 。如果不存在 单一数字 ，查询需报告 null 。\nInput:MyNumbers table:+-----+| num |+-----+| 8   || 8   || 3   || 3   || 1   || 4   || 5   || 6   |+-----+Output:+-----+| num |+-----+| 6   |+-----+解释：单一数字有 1、4、5 和 6 。6 是最大的单一数字，返回 6 。\n-- MySQLSELECT MAX(num) AS numFROM(SELECT num    FROM mynumbers    GROUP BY num    HAVING COUNT(num) = 1)    AS t;\nCustomers Who Bought All Products - Medium买下所有产品的客户：\nTable: Customer+-------------+---------+| Column Name | Type    |+-------------+---------+| customer_id | int     || product_key | int     |+-------------+---------+There is no primary keyproduct_key is a foreign key to Product table.Table: Product+-------------+---------+| Column Name | Type    |+-------------+---------+| product_key | int     |+-------------+---------+product_key is the primary key\n从 Customer 表中查询购买了 Product 表中所有产品的客户的 id。\nInput:Customer table:+-------------+-------------+| customer_id | product_key |+-------------+-------------+| 1           | 5           || 2           | 6           || 3           | 5           || 3           | 6           || 1           | 6           |+-------------+-------------+Product table:+-------------+| product_key |+-------------+| 5           || 6           |+-------------+Output:+-------------+| customer_id |+-------------+| 1           || 3           |+-------------+购买了所有产品（5 和 6）的客户的 id 是 1 和 3 。\n-- MySQLSELECT customer_idFROM customerGROUP BY customer_idHAVING COUNT(DISTINCT product_key) = (    SELECT COUNT(DISTINCT product_key)    FROM product);\nThe Number of Employees Which Report to Each Employee - Easy每位经理的下属员工数量：\nTable: Employees+-------------+----------+| Column Name | Type     |+-------------+----------+| employee_id | int      || name        | varchar  || reports_to  | int      || age         | int      |+-------------+----------+employee_id is the primary key\n对于此问题，我们将至少有一个其他员工需要向他汇报的员工，视为一个经理。\n编写SQL查询需要听取汇报的所有经理的ID、名称、直接向该经理汇报的员工人数，以及这些员工的平均年龄，其中该平均年龄需要四舍五入到最接近的整数。\n返回的结果集需要按照 employee_id 进行排序。\nInput:Employees table:+-------------+---------+------------+-----+| employee_id | name    | reports_to | age |+-------------+---------+------------+-----+| 9           | Hercy   | null       | 43  || 6           | Alice   | 9          | 41  || 4           | Bob     | 9          | 36  || 2           | Winston | null       | 37  |+-------------+---------+------------+-----+Output:+-------------+-------+---------------+-------------+| employee_id | name  | reports_count | average_age |+-------------+-------+---------------+-------------+| 9           | Hercy | 2             | 39          |+-------------+-------+---------------+-------------+Hercy 有两个需要向他汇报的员工, 他们是 Alice and Bob. 他们的平均年龄是 (41+36)&#x2F;2 &#x3D; 38.5, 四舍五入的结果是 39.\n-- MySQLSELECT    b.employee_id,    b.name,    COUNT(a.name) reports_count,    ROUND(AVG(a.age), 0) average_ageFROM Employees AS aJOIN employees AS bON a.reports_to = b.employee_idGROUP BY b.employee_idORDER BY b.employee_id;\nPrimary Department for Each Employee - Easy员工的直属部门：\nTable: Employee+---------------+---------+| Column Name   |  Type   |+---------------+---------+| employee_id   | int     || department_id | int     || primary_flag  | varchar |+---------------+---------+(employee_id, department_id) is the primary key\n当一个员工加入超过一个部门的时候，他需要决定哪个部门是他的直属部门。\n请注意，当员工只加入一个部门的时候，那这个部门将默认为他的直属部门，虽然表记录的值为’N’.\n请编写一段SQL，查出员工所属的直属部门。\n返回结果没有顺序要求。\nInput:Employee table:+-------------+---------------+--------------+| employee_id | department_id | primary_flag |+-------------+---------------+--------------+| 1           | 1             | N            || 2           | 1             | Y            || 2           | 2             | N            || 3           | 3             | N            || 4           | 2             | N            || 4           | 3             | Y            || 4           | 4             | N            |+-------------+---------------+--------------+Output:+-------------+---------------+| employee_id | department_id |+-------------+---------------+| 1           | 1             || 2           | 1             || 3           | 3             || 4           | 3             |+-------------+---------------+Explanation:- The Primary department for employee 1 is 1.- The Primary department for employee 2 is 1.- The Primary department for employee 3 is 3.- The Primary department for employee 4 is 3.\n-- MySQLSELECT employee_id, department_idFROM employeeGROUP BY employee_idHAVING COUNT(department_id) = 1UNIONSELECT employee_id, department_idFROM employeeWHERE primary_flag = &#x27;Y&#x27;;\nTriangle Judgement - Easy判断三角形：\nTable: Triangle+-------------+------+| Column Name | Type |+-------------+------+| x           | int  || y           | int  || z           | int  |+-------------+------+(x, y, z) is the primary key\n写一个SQL查询，每三个线段报告它们是否可以形成一个三角形。\n以 任意顺序 返回结果表。\nInput:Triangle table:+----+----+----+| x  | y  | z  |+----+----+----+| 13 | 15 | 30 || 10 | 20 | 15 |+----+----+----+Output:+----+----+----+----------+| x  | y  | z  | triangle |+----+----+----+----------+| 13 | 15 | 30 | No       || 10 | 20 | 15 | Yes      |+----+----+----+----------+\n-- MySQLSELECT    x,    y,    z,    CASE        WHEN x + y &gt; z AND x + z &gt; y AND y + z &gt; x THEN &#x27;Yes&#x27;        ELSE &#x27;No&#x27;    END AS &#x27;triangle&#x27;FROM triangle;\nConsecutive Numbers - Medium连续出现的数字：\nTable: Logs+-------------+---------+| Column Name | Type    |+-------------+---------+| id          | int     || num         | varchar |+-------------+---------+id is the primary key for this table.id is an autoincrement column.\n编写一个 SQL 查询，查找所有至少连续出现三次的数字。\n返回的结果表中的数据可以按 任意顺序 排列。\nInput:Logs table:+----+-----+| id | num |+----+-----+| 1  | 1   || 2  | 1   || 3  | 1   || 4  | 2   || 5  | 1   || 6  | 2   || 7  | 2   |+----+-----+Output:+-----------------+| ConsecutiveNums |+-----------------+| 1               |+-----------------+Explanation: 1 is the only number that appears consecutively for at least three times.\n-- MySQLSELECT DISTINCT    l1.num AS ConsecutiveNumsFROM    Logs l1,    Logs l2,    Logs l3WHERE    l1.id = l2.id - 1    AND    l2.id = l3.id - 1    AND    l1.num = l2.num    AND    l2.num = l3.num;\nProduct Price at a Given Date - Medium指定日期的产品价格：\nTable: Products+---------------+---------+| Column Name   | Type    |+---------------+---------+| product_id    | int     || new_price     | int     || change_date   | date    |+---------------+---------+(product_id, change_date) is the primary key\n写一段 SQL来查找在 2019-08-16 时全部产品的价格，假设所有产品在修改前的价格都是 10 。\n以 任意顺序 返回结果表。\nInput:Products table:+------------+-----------+-------------+| product_id | new_price | change_date |+------------+-----------+-------------+| 1          | 20        | 2019-08-14  || 2          | 50        | 2019-08-14  || 1          | 30        | 2019-08-15  || 1          | 35        | 2019-08-16  || 2          | 65        | 2019-08-17  || 3          | 20        | 2019-08-18  |+------------+-----------+-------------+Output:+------------+-------+| product_id | price |+------------+-------+| 2          | 50    || 1          | 35    || 3          | 10    |+------------+-------+\n-- MySQLSELECT    p1.product_id,    IFNULL(p2.new_price, 10) AS priceFROM (    SELECT DISTINCT product_id    FROM products) AS p1LEFT JOIN (    SELECT product_id, new_price    FROM products    WHERE (product_id, change_date) IN (        SELECT product_id, MAX(change_date)        FROM products        WHERE change_date &lt;= &#x27;2019-08-16&#x27;        GROUP BY product_id    )) AS p2ON p1.product_id = p2.product_id;\nLast Person to Fit in the Bus - Medium最后一个能进入电梯的人：\nTable: Queue+-------------+---------+| Column Name | Type    |+-------------+---------+| person_id   | int     || person_name | varchar || weight      | int     || turn        | int     |+-------------+---------+person_id is the primary key\n有一群人在等着上公共汽车。然而，巴士有 1000 公斤的重量限制，所以可能会有一些人不能上。\n写一条 SQL 查询语句查找 最后一个 能进入电梯且不超过重量限制的 person_name 。题目确保队列中第一位的人可以进入电梯，不会超重。\nInput:Queue table:+-----------+-------------+--------+------+| person_id | person_name | weight | turn |+-----------+-------------+--------+------+| 5         | Alice       | 250    | 1    || 4         | Bob         | 175    | 5    || 3         | Alex        | 350    | 2    || 6         | John Cena   | 400    | 3    || 1         | Winston     | 500    | 6    || 2         | Marie       | 200    | 4    |+-----------+-------------+--------+------+Output:+-------------+| person_name |+-------------+| John Cena   |+-------------+解释：为了简化，Queue 表按 turn 列由小到大排序。上例中 George Washington(id 5), John Adams(id 3) 和 Thomas Jefferson(id 6) 将可以进入电梯,因为他们的体重和为 250 + 350 + 400 &#x3D; 1000。Thomas Jefferson(id 6) 是最后一个体重合适并进入电梯的人。\n-- MySQL-- 方法一：自连接SELECT a.person_nameFROM Queue a, Queue bWHERE a.turn &gt;= b.turnGROUP BY a.person_idHAVING SUM(b.weight) &lt;= 1000ORDER BY a.turn DESCLIMIT 1;-- 方法二：自定义变量SELECT a.person_nameFROM (    SELECT        person_name,        @pre := @pre + weight AS weight    FROM        queue,        (SELECT @pre := 0) AS tmp    ORDER BY turn) AS aWHERE a.weight &lt;= 1000ORDER BY a.weight DESCLIMIT 1;\nCount Salary Categories - Medium按分类统计薪水：\nTable: Accounts+-------------+------+| Column Name | Type |+-------------+------+| account_id  | int  || income      | int  |+-------------+------+account_id is the primary key\n写出一个 SQL 查询，来报告每个工资类别的银行账户数量。 工资类别如下：\n“Low Salary”：所有工资 严格低于 20000 美元。“Average Salary”： 包含 范围内的所有工资 [$20000, $50000] 。“High Salary”：所有工资 严格大于 50000 美元。\n结果表 必须 包含所有三个类别。如果某个类别中没有帐户，则报告 0。\n按 任意顺序 返回结果表。\nInput:Accounts table:+------------+--------+| account_id | income |+------------+--------+| 3          | 108939 || 2          | 12747  || 8          | 87709  || 6          | 91796  |+------------+--------+Output:+----------------+----------------+| category       | accounts_count |+----------------+----------------+| Low Salary     | 1              || Average Salary | 0              || High Salary    | 3              |+----------------+----------------+Explanation:Low Salary: Account 2.Average Salary: No accounts.High Salary: Accounts 3, 6, and 8.\n-- MySQLSELECT    &#x27;Low Salary&#x27; category,    SUM(income &lt; 20000) accounts_countFROM accountsUNION ALLSELECT    &#x27;Average Salary&#x27;,    SUM(income &gt;= 20000 AND income &lt;= 50000)FROM accountsUNION ALLSELECT    &#x27;High Salary&#x27;,    SUM(income &gt; 50000)FROM accounts;\nEmployees Whose Manager Left the Company - Easy上级经理已离职的公司员工\nTable: Employees+-------------+----------+| Column Name | Type     |+-------------+----------+| employee_id | int      || name        | varchar  || manager_id  | int      || salary      | int      |+-------------+----------+employee_id is the primary keySome employees do not have a manager (manager_id is null)\n查找这些员工的id，他们的薪水严格少于$30000 并且他们的上级经理已离职。当一个经理离开公司时，他们的信息需要从员工表中删除掉，但是表中的员工的manager_id  这一列还是设置的离职经理的id 。\n返回的结果按照employee_id 从小到大排序。\nInput:Employees table:+-------------+-----------+------------+--------+| employee_id | name      | manager_id | salary |+-------------+-----------+------------+--------+| 3           | Mila      | 9          | 60301  || 12          | Antonella | null       | 31000  || 13          | Emery     | null       | 67084  || 1           | Kalel     | 11         | 21241  || 9           | Mikaela   | null       | 50937  || 11          | Joziah    | 6          | 28485  |+-------------+-----------+------------+--------+Output:+-------------+| employee_id |+-------------+| 11          |+-------------+Explanation:薪水少于 30000 美元的员工有 1 号(Kalel) 和 11号 (Joziah)。Kalel 的上级经理是 11 号员工，他还在公司上班(他是 Joziah )。Joziah 的上级经理是 6 号员工，他已经离职，因为员工表里面已经没有 6 号员工的信息了，它被删除了。\n-- MySQL--方法一：左连接select e1.employee_idfrom Employees e1left join Employees e2on e1.manager_id = e2.employee_idwhere e1.salary &lt; 30000 and e1.manager_id is not null and e2.employee_id is nullorder by e1.employee_id--方法二：not in + 子查询select employee_idfrom Employeeswhere salary &lt; 30000\tand manager_id not in (select employee_id from Employees)order by employee_id\nExchange Seats - MediumTable: Seat+-------------+---------+| Column Name | Type    |+-------------+---------+| id          | int     || student     | varchar |+-------------+---------+id is the primary key (unique value) columnid is a continuous increment. 「连续增量」\n编写解决方案来交换每两个连续的学生的座位号。如果学生的数量是奇数，则最后一个学生的id不交换。\n按 id 升序 返回结果表。\nInput:Seat table:+----+---------+| id | student |+----+---------+| 1  | Abbot   || 2  | Doris   || 3  | Emerson || 4  | Green   || 5  | Jeames  |+----+---------+Output:+----+---------+| id | student |+----+---------+| 1  | Doris   || 2  | Abbot   || 3  | Green   || 4  | Emerson || 5  | Jeames  |+----+---------+Explanation:如果学生人数为奇数，则不需要更换最后一名学生的座位。\n-- MySQL方法一：使用 CASESELECT    COUNT(*) AS countsFROM    seatSELECT    (CASE        WHEN MOD(id, 2) != 0 AND counts != id THEN id + 1        WHEN MOD(id, 2) != 0 AND counts = id THEN id        ELSE id - 1    END) AS id,    studentFROM    seat,    (SELECT        COUNT(*) AS counts    FROM        seat) AS seat_countsORDER BY id ASC;方法二：使用位操作和 COALESCE()SELECT id, (id+1)^1-1, student FROM seat;SELECT    *FROM    seat s1        LEFT JOIN    seat s2 ON (s1.id+1)^1-1 = s2.idORDER BY s1.id;SELECT    s1.id, COALESCE(s2.student, s1.student) AS studentFROM    seat s1        LEFT JOIN    seat s2 ON ((s1.id + 1) ^ 1) - 1 = s2.idORDER BY s1.id;\nMovie Rating - MediumTable: Movies+---------------+---------+| Column Name   | Type    |+---------------+---------+| movie_id      | int     || title         | varchar |+---------------+---------+movie_id is the primary keyTable: Users+---------------+---------+| Column Name   | Type    |+---------------+---------+| user_id       | int     || name          | varchar |+---------------+---------+user_id is the primary keyTable: MovieRating+---------------+---------+| Column Name   | Type    |+---------------+---------+| movie_id      | int     || user_id       | int     || rating        | int     || created_at    | date    |+---------------+---------+(movie_id, user_id) is the primary key\n查找评论电影数量最多的用户名。如果出现平局，返回字典序较小的用户名。查找在 February 2020 平均评分最高 的电影名称。如果出现平局，返回字典序较小的电影名称。\n字典序 ，即按字母在字典中出现顺序对字符串排序，字典序较小则意味着排序靠前。\nInput:Movies table:+-------------+--------------+| movie_id    |  title       |+-------------+--------------+| 1           | Avengers     || 2           | Frozen 2     || 3           | Joker        |+-------------+--------------+Users table:+-------------+--------------+| user_id     |  name        |+-------------+--------------+| 1           | Daniel       || 2           | Monica       || 3           | Maria        || 4           | James        |+-------------+--------------+MovieRating table:+-------------+--------------+--------------+-------------+| movie_id    | user_id      | rating       | created_at  |+-------------+--------------+--------------+-------------+| 1           | 1            | 3            | 2020-01-12  || 1           | 2            | 4            | 2020-02-11  || 1           | 3            | 2            | 2020-02-12  || 1           | 4            | 1            | 2020-01-01  || 2           | 1            | 5            | 2020-02-17  || 2           | 2            | 2            | 2020-02-01  || 2           | 3            | 2            | 2020-03-01  || 3           | 1            | 3            | 2020-02-22  || 3           | 2            | 4            | 2020-02-25  |+-------------+--------------+--------------+-------------+Output:+--------------+| results      |+--------------+| Daniel       || Frozen 2     |+--------------+Explanation:Daniel 和 Monica 都点评了 3 部电影（&quot;Avengers&quot;, &quot;Frozen 2&quot; 和 &quot;Joker&quot;） 但是 Daniel 字典序比较小。Frozen 2 和 Joker 在 2 月的评分都是 3.5，但是 Frozen 2 的字典序比较小。\n-- MySQL# 评论电影数量最多且字典序较小的用户名(    select Users.name as results    FROM MovieRating        JOIN Users ON MovieRating.user_id = Users.user_id    GROUP BY MovieRating.user_id    ORDER BY        count(MovieRating.user_id) desc,        Users.name    LIMIT 1)UNION ALL(# 2020年2月份平均评分最高且字典序较小的电影名    select        Movies.title as results    FROM MovieRating        JOIN Movies ON MovieRating.movie_id = Movies.movie_id    WHERE        MovieRating.created_at &gt;= &#x27;2020-02-01&#x27;        AND MovieRating.created_at &lt; &#x27;2020-03-01&#x27;    GROUP BY MovieRating.movie_id    ORDER BY        avg(MovieRating.rating) desc,        Movies.title    LIMIT 1)\nRestaurant Growth - Medium餐馆营业额变化增长\n该表包含一家餐馆的顾客交易数据。visited_on 表示 (customer_id) 的顾客在 visited_on 那天访问了餐馆。amount 是一个顾客某一天的消费总额。\n分析一下可能的营业额变化增长（每天至少有一位顾客）。\n计算以 7 天（某日期 + 该日期前的 6 天）为一个时间段的顾客消费平均值。average_amount 要 保留两位小数。\n结果按 visited_on 升序排序。\n第一个七天消费平均值从 2019-01-01 到 2019-01-07 是restaurant-growth&#x2F;restaurant-growth&#x2F; (100 + 110 + 120 + 130 + 110 + 140 + 150)&#x2F;7 &#x3D; 122.86第二个七天消费平均值从 2019-01-02 到 2019-01-08 是 (110 + 120 + 130 + 110 + 140 + 150 + 80)&#x2F;7 &#x3D; 120第三个七天消费平均值从 2019-01-03 到 2019-01-09 是 (120 + 130 + 110 + 140 + 150 + 80 + 110)&#x2F;7 &#x3D; 120第四个七天消费平均值从 2019-01-04 到 2019-01-10 是 (130 + 110 + 140 + 150 + 80 + 110 + 130 + 150)&#x2F;7 &#x3D; 142.86\n\n\n好友申请 II ：谁有最多的好友\n\n找出拥有最多的好友的人和他拥有的好友数目。\n生成的测试用例保证拥有最多好友数目的只有 1 个人。\n编号为 3 的人是编号为 1 ，2 和 4 的人的好友，所以他总共有 3 个好友，比其他人都多。\n\n\n\n\n\n表中的每一行都包含一条保险信息，其中：pid 是投保人的投保编号。tiv_2015 是该投保人在 2015 年的总投保金额，tiv_2016 是该投保人在 2016 年的总投保金额。lat 是投保人所在城市的纬度。题目数据确保 lat 不为空。lon 是投保人所在城市的经度。题目数据确保 lon 不为空。\n报告 2016 年 (tiv_2016) 所有满足下述条件的投保人的投保金额之和：\n他在 2015 年的投保额 (tiv_2015) 至少跟一个其他投保人在 2015 年的投保额相同。他所在的城市必须与其他投保人都不同（也就是说 (lat, lon) 不能跟其他任何一个投保人完全相同）。tiv_2016 四舍五入的 两位小数 。\n表中的第一条记录和最后一条记录都满足两个条件。tiv_2015 值为 10 与第三条和第四条记录相同，且其位置是唯一的。第二条记录不符合任何一个条件。其 tiv_2015 与其他投保人不同，并且位置与第三条记录相同，这也导致了第三条记录不符合题目要求。因此，结果是第一条记录和最后一条记录的 tiv_2016 之和，即 45 。\n\n\n\n\n\n公司的主管们感兴趣的是公司每个部门中谁赚的钱最多。一个部门的 高收入者 是指一个员工的工资在该部门的 不同 工资中 排名前三 。\n编写解决方案，找出每个部门中 收入高的员工 。\n以 任意顺序 返回结果表。\n在IT部门:- Max的工资最高- 兰迪和乔都赚取第二高的独特的薪水- 威尔的薪水是第三高的在销售部:- 亨利的工资最高- 山姆的薪水第二高- 没有第三高的工资，因为只有两名员工\n\n\n\n\n修复表中的名字\n该表包含用户的 ID 和名字。名字仅由小写和大写字符组成。\n修复名字，使得只有第一个字符是大写的，其余都是小写的。\n返回按 user_id 排序的结果表。\n\n\n\n\n\n\n患某种疾病的患者\n&#39;conditions&#39; （疾病）包含 0 个或以上的疾病代码，以空格分隔。\n查询患有 I 类糖尿病的患者 ID （patient_id）、患者姓名（patient_name）以及其患有的所有疾病代码（conditions）。I 类糖尿病的代码总是包含前缀 DIAB1 。\n按 任意顺序 返回结果表。\nBob 和 George 都患有代码以 DIAB1 开头的疾病。\n\n\n\n删除重复的电子邮箱\n该表的每一行包含一封电子邮件。电子邮件将不包含大写字母。\n删除 所有重复的电子邮件，只保留一个具有最小 id 的唯一电子邮件。\n（对于 SQL 用户，请注意你应该编写一个 DELETE 语句而不是 SELECT 语句。）\n（对于 Pandas 用户，请注意你应该直接修改 Person 表。）\n运行脚本后，显示的答案是 Person 表。驱动程序将首先编译并运行您的代码片段，然后再显示 Person 表。Person 表的最终顺序 无关紧要 。\njohn@example.com重复两次。我们保留最小的Id &#x3D; 1。\n\n\n\n\n\n第二高的薪水\n\n查询并返回 Employee 表中第二高的薪水 。如果不存在第二高的薪水，查询应该返回 null(Pandas 则返回 None) 。\n\n\n按日期分组销售产品\n\n找出每个日期、销售的不同产品的数量及其名称。每个日期的销售产品名称应按词典序排列。返回按 sell_date 排序的结果表。\n对于2020-05-30，出售的物品是 (Headphone, Basketball, T-shirt)，按词典序排列，并用逗号 &#39;,&#39; 分隔。对于2020-06-01，出售的物品是 (Pencil, Bible)，按词典序排列，并用逗号分隔。对于2020-06-02，出售的物品是 (Mask)，只需返回该物品名。\n\n\n列出指定时间段内所有的下单产品\n该表可能包含重复行。unit 是在日期 order_date 内下单产品的数目。\n获取在 2020 年 2 月份下单的数量不少于 100 的产品的名字和数目。\n返回结果表单的 顺序无要求 。\n2020 年 2 月份下单 product_id &#x3D; 1 的产品的数目总和为 (60 + 70) &#x3D; 130 。2020 年 2 月份下单 product_id &#x3D; 2 的产品的数目总和为 80 。2020 年 2 月份下单 product_id &#x3D; 3 的产品的数目总和为 (2 + 3) &#x3D; 5 。2020 年 2 月份 product_id &#x3D; 4 的产品并没有下单。2020 年 2 月份下单 product_id &#x3D; 5 的产品的数目总和为 (50 + 50) &#x3D; 100 。\n\n\n查找拥有有效邮箱的用户\n该表包含了网站已注册用户的信息。有一些电子邮件是无效的。\n查找具有有效电子邮件的用户。\n一个有效的电子邮件具有前缀名称和域，其中：\n 前缀 名称是一个字符串，可以包含字母（大写或小写），数字，下划线 ‘_’ ，点 ‘.’ 和/或破折号 ‘-‘ 。前缀名称 必须 以字母开头。域 为 ‘@leetcode.com’ 。以任何顺序返回结果表。\n用户 2 的电子邮件没有域。用户 5 的电子邮件带有不允许的 &#39;#&#39; 符号。用户 6 的电子邮件没有 leetcode 域。用户 7 的电子邮件以点开头。\n\n\n\nRefer「新」动计划 · 编程入门高频 SQL 50 题（基础版）LeetCode 热题 100算法通关手册代码随想录1.初级算法2.数组类算法3.数组和字符串4.链表图文学5.队列 &amp; 栈图文学6.二分查找7.二叉树8.二叉搜索树9.N 叉树10.前缀树11.中级算法12.高级算法13.动态规划路径问题14.算法面试题汇总2020 名企高频面试题图解算法数据结构设计数据结构数据结构教程(第 6 版) - 在线编程实训CodeTop 企业题库\nPS期待有一天 LeetCode 基本刷遍……\n","categories":["Programming"]},{"title":"Data Structure & Algorithm","url":"/2023/05/21/code_algorithm/","content":"Pref\n程序 = 数据结构 + 算法\n\n数据结构和算法的学习整理，部分用英文书写。\nData StructureLogical Structure1.集合结构：集合中没有相同的数据元素。\n2.线性结构：元素之间是「一对一」关系，数组、链表、栈、队列、哈希表。\n3.树形结构：元素之间是「一对多」层次关系，二叉树、字典树。\n4.图形结构：元素之间是「多对多」关系，无向图、有向图、连通图。\nPhysical Structure1.顺序存储结构（Sequential Storage）：连续\n2.链式存储结构（Linked Storage）：连续/不连续\nAlgorithm\n五个特性：输入、输出、有穷、确定、可行性\n\n比较算法优劣的两种方法：\n\n事后统计：各编写一个可执行程序，执行后记录下各自的运行时间和占用空间，挑选出最好的算法。(工作量太大)\n\n预先估算：算法设计出来后，估算出算法的运行时间和占用空间，比较估算值，从中挑选。（常用）\n\n\nTime Complexity\n在问题的输入规模为 n 的条件下，算法运行要花费的时间，记作 T(n) = O(f(n))O 是一种渐进符号，T(n) 称作算法的 渐进（Asymptotic）时间复杂度。「基本操作次数」作为时间复杂度的度量标准。\n\n求解时间复杂度：\n\n找出算法中的基本语句：执行次数最多的语句就是基本语句，通常是最内层循环的循环体部分。\n\n计算基本语句执行次数的数量级：保证函数中的最高次幂正确即可。\n\n用大 O 表示法表示时间复杂度：将数量级放入 O 渐进上界符号。\n\n\n常用数量级：\n常数 O(1)线性 O(n)平方 O(n²)指数 O(2^n)阶乘 O(n!)对数 O(log₂n)线性对数 O(nlog₂n)\n常见时间复杂度关系：\nO(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n²) &lt; O(n³) &lt; O(2^n) &lt; O(n!) &lt; O(n^n)\n递归算法的时间复杂度 = 每次递归的时间复杂度 * 递归次数递归算法的空间复杂度 = 每次递归的空间复杂度 * 递归深度\n求 x 的 n 次方的递归算法复杂度分析：\n\n一个 for 循环，时间复杂度为 O(n)。\n\nint function1(int x, int n) &#123;    int result = 1;  // 注意 任何数的0次方等于1    for (int i = 0; i &lt; n; i++) &#123;        result = result * x;    &#125;    return result;&#125;\n\n递归算法 1，每次 n-1，递归了 n 次是 O(n)，每次进行了一个乘法操作是 O(1)，故时间复杂度是 n × 1 = O(n)。\n\nint function2(int x, int n) &#123;    if (n == 0) &#123;        return 1; // return 1 同样是因为0次方是等于1的    &#125;    return function2(x, n - 1) * x;&#125;\n\n递归算法 2，把递归抽象出一棵满二叉树，每个节点代表着一次递归并进行了一次相乘操作，所以递归数即节点数。其节点数是 2^3 + 2^2 + 2^1 + 2^0 = 15（等比数列求和）。\n\n\n求 x 的 n 次方，m 为深度。时间复杂度还是 O(n)。\n\nint function3(int x, int n) &#123;    if (n == 0) &#123;        return 1;    &#125;    if (n % 2 == 1) &#123;        return function3(x, n / 2) * function3(x, n / 2)*x;    &#125;    return function3(x, n / 2) * function3(x, n / 2);&#125;\n\n递归算法 3，只有一个递归调用，且每次都是 n/2，即调用了 log₂n 次，每次递归都做一次乘法操作，常数项忽略，故时间复杂度是 O(logn)。\n\nint function4(int x, int n) &#123;    if (n == 0) &#123;        return 1;    &#125;    int t = function4(x, n / 2);// 这里相对于function3，是把这个递归操作抽取出来    if (n % 2 == 1) &#123;        return t * t * x;    &#125;    return t * t;&#125;\n求斐波那契数列的性能分析：\n\n非递归，时间复杂度 O(n)，空间复杂度 O(1)。\n\nint main() &#123;    int n1 = 0, n2 = 1, n3, i, n; //n 为打印数    cin &gt;&gt; n;    if (n &lt;= 1) cout &lt;&lt; n1 &lt;&lt; endl;    if (n == 2) cout &lt;&lt; n1 &lt;&lt; &quot; &quot; &lt;&lt; n2 &lt;&lt;endl;    if (n &gt; 2) &#123;        cout &lt;&lt; n1 &lt;&lt; &quot; &quot; &lt;&lt; n2;        for (i = 3; i &lt;= n; ++i) &#123;            n3 = n1 + n2;            cout &lt;&lt; &quot; &quot; &lt;&lt; n3;            n1 = n2;            n2 = n3;        &#125;    &#125;    return 0;&#125;\n\n递归算法，每次递归都是 O(1)，抽象出一棵递归树，递归次数最多为 2^n-1 个节点数（n 为深度），故时间复杂度 O(2^n)；每次递归的空间复杂度是 O(1)，调用栈深度为 n，故空间复杂度 O(n)。\n\n\nint fibonacci(int i) &#123;       if(i &lt;= 0) return 0;       if(i == 1) return 1;       return fibonacci(i-1) + fibonacci(i-2);&#125;\n\n递归算法，每次递归的时候 n-1，即只是递归了 n 次，时间复杂度 O(n)，空间复杂度 O(n)。\n\n//fibonacci(1, 1, n);int fibonacci(int first, int second, int n) &#123;    if (n &lt;= 0)        return 0;    if (n &lt; 3)        return 1;    else if (n == 3)        return first + second;    else        return fibonacci(second, first + second, n - 1);&#125;\n\n使用递归算法并不一定是性能最优，但能简化代码。\n\nSpace Complexity\n在问题的输入规模为 n 的条件下，算法所占用的空间大小，记作为 S(n)。「算法的辅助空间」作为空间复杂度的度量标准。\n\n空间复杂度更容易计算，主要包括「局部变量（算法范围内定义的变量）所占用的存储空间」「系统为实现递归（如果算法是递归的话）所使用的堆栈空间」\n常见空间复杂度关系：\nO(1) &lt; O(logn) &lt; O(n) &lt; O(n²) &lt; O(2^n)\nArray数组：线性表顺序存储结构。使用一组连续的内存空间，存储一组相同类型的数据，可随机访问。\n寻址公式：下标 i 对应的数据元素地址 = 数据首地址 + i * 单个数据元素所占内存大小\n访问元素：\ndef value(nums, i):    if 0 &lt;= i &lt;= len(nums) - 1:        print(nums[i])arr = [0, 5, 2, 3, 7, 1, 6]value(arr, 3)\n查找元素：（线性查找）\n# 从数组 nums 中查找值 val 第一次出现的位置def find(nums, val):    for i in range(len(nums)):        if nums[i] == val:            return i    return -1arr = [0, 5, 3, 7]print(find(arr, 7))\n插入元素：\n# Python 中 list 封装了尾部插入操作，直接调用 append 方法，该方法当数组满了，会开辟新空间插入。arr = [0, 5, 3, 7]val = 4arr.append(val)print(arr)\n# Python 中 list 封装了中间插入操作，直接调用 insert 方法即可。arr = [0, 5, 3, 7]i, val = 2, 4arr.insert(i, val)print(arr)\n改变元素：\ndef change(nums, i, val):    if 0 &lt;= i &lt;= len(nums) - 1:        nums[i] = valarr = [0, 5, 3, 7]i, val = 2, 4change(arr, i, val)print(arr)\n删除元素：\n# Python 中的 list 直接封装了删除数组尾部元素的操作，只需要调用 pop 方法即可。pop()：根据索引值删除元素arr = [0, 5, 3, 7]arr.pop()print(arr)\n# Python 中的 list 直接封装了删除数组中间元素的操作，只需要以下标作为参数调用 pop 方法即可。arr = [0, 5, 3, 7]i = 1arr.pop(i)print(arr)\n# 基于条件删除元素：要求删除满足某条件的元素。删除多个元素涉及到多次移动元素操作，将其转变为一趟移动元素，时间复杂度降为 O(n)。remove()：根据元素值进行删除arr = [0, 5, 2, 3, 7, 1, 6]i = 3arr.remove(5)print(arr)\nTopichttps://algo.itcharge.cn/01.Array/01.Array-Basic/02.Array-Basic-List/\n\n冒泡排序\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefer算法通关手册代码随想录\nPS","categories":["Programming"]},{"title":"解决某些软件无法在虚拟机中运行的方法","url":"/2022/01/02/art_anti_vmware/","content":"\nReference：https://www.cnblogs.com/RM-Anton/p/9113826.htmlhttps://www.daimajiaoliu.com/daima/60c5a5fa94e6c08https://www.52pojie.cn/thread-701845-1-1.html\n\n在虚拟机内下载并安装某软件，直接打开会被提示 “Sorry, this application cannot run under a Virtual Machine”，\n意思就是“对不起，这个应用不能在虚拟机上运行”。\n这时候我们需要先关闭虚拟机（不关闭之后的修改无效），\n找到在新建虚拟机时系统的安装目录（不是软件虚拟机的安装目录），\n找到目录下的类似于 “Windows 10 x64.vmx” 的文件。\n找到后以记事本的方式打开该文件，\n在文本的末尾增加如下内容并保存：\nmonitor_control.restrict_backdoor &#x3D; &quot;TRUE&quot;\n重新打开虚拟机，运行软件，现在就能够正常打开软件了。\n备注：如果还是不行，可以再打开文件 “Windows 10 x64.vmx”，最后再增加一行：\ndisable_acceleration &#x3D; &quot;TRUE&quot;\n\n原因：是因为此程序会自动执行虚拟机检测，从而禁止在虚拟机运行。解决办法：打开 VMware 虚拟机的配置文件，一个后缀为 vmx 的文本文件。在里面加入以下内容\nisolation.tools.getPtrLocation.disable &#x3D; &quot;TRUE&quot;isolation.tools.setPtrLocation.disable &#x3D; &quot;TRUE&quot;isolation.tools.setVersion.disable &#x3D; &quot;TRUE&quot;isolation.tools.getVersion.disable &#x3D; &quot;TRUE&quot;monitor_control.disable_directexec &#x3D; &quot;TRUE&quot;monitor_control.disable_chksimd &#x3D; &quot;TRUE&quot;monitor_control.disable_ntreloc &#x3D; &quot;TRUE&quot;monitor_control.disable_selfmod &#x3D; &quot;TRUE&quot;monitor_control.disable_reloc &#x3D; &quot;TRUE&quot;monitor_control.disable_btinout &#x3D; &quot;TRUE&quot;monitor_control.disable_btmemspace &#x3D; &quot;TRUE&quot;monitor_control.disable_btpriv &#x3D; &quot;TRUE&quot;monitor_control.disable_btseg &#x3D; &quot;TRUE&quot;","categories":["BUG"]},{"title":"自定义 Hexo 代码高亮","url":"/2020/02/02/art_custom_code_highlight/","content":"对于 hexo 默认的代码高亮插件 highlight.js 的配色方案我不太喜欢，然后 gg 了一下，总算找到了一种不错的方案，其中用到了 prism.js 这个代码高亮的插件，特此记录一下具体配置方案。\n禁用 highlight.js修改 _config.yml 配置文件\nhighlight:  enable: false  line_number: true  auto_detect: false\n下载 prism.js 配置文件个人配置 选择 theme，这里我用 Okaidia，然后是 language 和 plugin；最后下载 js 和 css 文件，默认就是 prism.js 和 prism.css，如果不是建议重命名，然后将其直接放置在如下路径，或者也可以在其中一个目录下新建 prism 文件，将 js 和 css 文件放入。\nblog\\themes\\cactus\\source\\jsblog\\themes\\cactus\\source\\css\n配置 prism.js\n在 blog\\themes\\cactus\\layout\\_partial\\head.ejs 尾部添加以下代码：&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/prism.css&quot;&gt;\n在 blog\\themes\\cactus\\layout\\_partial\\footer.ejs 尾部添加以下代码：&lt;script src=&quot;/js/prism.js&quot; async&gt;&lt;/script&gt;\n如果你选择了 Copy to Clipboard Button 插件，则可能还需下载 clipboard.min.js，因为这个插件需要使用 clipboard.min.js 里面的函数，不过 hexo 很多主题都自带了，放在 blog\\themes\\cactus\\source\\lib\\clipboard 里，此间可以将 clipboard.min.js 放到之前新建的 prism 文件下，或者直接在 footer.swig 文件末尾添加修改路径。&lt;script src=&quot;/lib/clipboad/clipboard.min.js&quot;&gt;&lt;/script&gt;\n修改 blog\\node_modules\\marked\\lib\\marked.js，搜索 &lt;pre&gt;&lt;code class=&quot; 关键字（应该只有一处），将这行语句改为如下代码，其中如果你下载的 prism.js 未选择 Line Numbers 插件，则去掉 line-numbers，注意后面还有个空格，也要去掉。return &#x27;&lt;pre&gt;&lt;code class=&quot;line-numbers language-&#x27;\n上面的方法是 prism.js 官网里提到的，第三步相当 hack，有位老哥研究了源码发现没必要改 marked，又提出了一个更简单的方法：因为 hexo 在封装 marked 的时候一步步把配置往外暴露了出来，最关键的是在 hexo-renderer-marked 里面，把配置暴露给了 hexo 配置：hexo.config.marked = assign(&#123;   gfm: true,   pedantic: false,   sanitize: false,   tables: true,   breaks: true,   smartLists: true,   smartypants: true,   modifyAnchors: &#x27;&#x27;,   autolink: true&#125;, hexo.config.marked);\n所以最终的解决就是在站点 _config.yml 添加如下配置就好：marked:    langPrefix: language-\n测试 prism.js在站点根目录，run hexo g，然后本地查看效果。比较麻烦的一点是，改用 prism.js 后，代码块必须指定一个语言，如果当前代码块没有合适的 language，可以将其语言指定为 none。这一点，个人认为在 markdown 语法中是个不错的习惯。\n\n\nReference: https://zfl9.github.io/hexo-code.html\n\n","categories":["Programming"]},{"title":"Data structure & algorithm Summary","url":"/2021/02/25/art_temp/","content":"Perface\n知识有没有用，主要是看你要实现的目标是什么。\n\n编程的书看了不少，一直缺乏实战提高，正式开启算法训练，提高编程能力。\nQuicksort/*快速排序算法核心：找到基准值的位置。将小于基准值的元素放在基准值的前面，大于的元素放在后面。这一步通常被叫做 partition 操作，中文直译就是分割操作partition 就是空出一个位置，反复地前后调换元素。利用双指针进行前后迭代。前后两个指针，同时移动，后面小于基准值的放前面，前面大于基准值的放后面。30 13 52 10 24 41 29 43*/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define MAX 10000#define DEBUG 1void output(int, int, int);// arr    : 用来存储待排序的元素// n      : 代表元素数量// output : 输出过程中的调试信息// DEBUG  : 调试信息开关int arr[MAX], n;void start() &#123;    printf(&quot;请输入元素数量：&quot;);    scanf(&quot;%d&quot;, &amp;n);    printf(&quot;请输入 %d 个整数：\\n&quot;, n);    for (int i = 0; i &lt; n; i++) &#123;        scanf(&quot;%d&quot;, arr + i);    &#125;    while (getchar() != &#x27;\\n&#x27;);    return;&#125;// 快速排序：对 arr 中 l 到 r 位进行排序// l   : 待排序区间起始坐标// r   : 待排序区间结束坐标void sort(int* arr, int l, int r) &#123;    // 递归的边界条件是区间中只有一个元素    // x : 记录从前向后扫描的位置    // y : 记录从后向前扫描的位置    // z : 基准值，选择待排序区间的第一个元素    // while 循环中是 partition 过程    // 每一轮，先从后向前扫，再从前向后扫    if (l &gt;= r) return;    int x = l, y = r, z = arr[l];    while (x &lt; y) &#123;        while (x &lt; y &amp;&amp; arr[y] &gt;= z) --y;        if (x &lt; y) arr[x++] = arr[y];        while (x &lt; y &amp;&amp; arr[x] &lt;= z) ++x;        if (x &lt; y) arr[y--] = arr[x];    &#125;    // 将基准值 z 放入其正确位置数组的 x 位    // 其实此时 x==y，所以 arr[y] = z 也行    // 再分别对左右区间，进行快速排序    arr[x] = z;    output(l, x, r);    sort(arr, l, x - 1);    sort(arr, x + 1, r);    return;&#125;void output(int l, int x, int r) &#123;    if (!DEBUG) return;    printf(&quot;\\n待排序区间范围 [%d, %d]\\n&quot;, l, r);    printf(&quot;基准值：%d\\n&quot;, arr[x]);    char str[30];    int cnt = 2; // 预留 &#x27;[ &#x27; 的空间    for (int i = 0; i &lt; x; i++) &#123;        cnt += sprintf(str, &quot;%d &quot;, arr[i]); //spritnf 返回了本次函数调用最终打印到字符缓冲区中的字符数目    &#125;    for (int i = 0; i &lt; l; i++) printf(&quot;%d &quot;, arr[i]);    printf(&quot;[ &quot;);    for (int i = l; i &lt;= r; i++) &#123;        printf(&quot;%d &quot;, arr[i]);    &#125;    printf(&quot;] &quot;);    for (int i = r + 1; i &lt; n; i++) printf(&quot;%d &quot;, arr[i]);    printf(&quot;\\n&quot;);    for (int i = 0; i &lt; cnt; i++) printf(&quot; &quot;);    printf(&quot;^\\n&quot;);    printf(&quot;按回车继续...&quot;);    while (getchar() != &#x27;\\n&#x27;);    return;&#125;int main() &#123;    start();    sort(arr, 0, n - 1);    for (int i = 0; i &lt; n; i++)        printf(&quot;%d &quot;, arr[i]);    return 0;&#125;\nReference《常用算法 25 讲》《数据结构与算法之美》\n","categories":["Algorithm"]},{"title":"写作规范 & 代码风格","url":"/2023/04/20/art_write/","content":"Pref模板化文章结构，重塑写作规范，整理代码风格。\n写作规范命名文件名、文件夹名：小写字母，下划线代替空格\n空格英文、数字、超链接数字与单元之间°／% 与数字之间不加英文前后接全角符号或单位符号时不加\n标点引号使用直角引号「『』」不重复使用同一标点省略号……不建议使用~中文句中出现英文，全用中文标点引用部分不变动\n专有名词名称过长可自定缩写，但需注明「全称，下同」品牌和应用名称不需要加「」称呼 app 时，用「应用/应用程序/app」，而非「软件/程序」\n格式学会放弃 Word 文档的写作习惯，不过度使用加粗、斜体、删除线、引用不要用「斜体」作为强调\n注明引用来源如有必要做概念解析，首选维基百科图片来源非 CC0，参考使用「图片来自 XX」注明作者及原文链接，注意使用第一来源\n设置电脑自定义短语「yh」第四五位固定为「」『』\n代码规范变量命名小驼峰：myAge，第一个单词首字母小写，后面大写（Java、Go、C++）\n大驼峰：MyAge，首字母都大写（Java、Go、C++：类名、函数、属性名）\n下划线：my_age（python，Linux 下 C/C++）\n水平留白操作符 i = i + 1;\n分隔符（, ;） int i, j;\n控制语句（while，if，for）后有一个空格，大括号和函数同行，并有一个空格 while () &#123;\n缩进将制表符转换成四个空格，不要混合使用（python）\n行长建议每行不超过 80 字符，可设置垂直参考线（python）\n函数编写小写字母和下划线；（python）函数定义后紧跟文档字符串格式的注释，描述函数功能；形参指定默认值，调用关键字实参，等号两边不要有空格。\n# 形参过长分行标准def function_name(    &quot;&quot;&quot;函数功能，此处建议用双引号，其他多行注释用单引号&quot;&quot;&quot;        parameter_0, parameter_1, parameter_2,        parameter_3, parameter_4=&#x27;eli&#x27;):    function body\n类编写实例名和模块名：小写、下划线（python）类中，可使用一个空行来分隔方法；模块中，可使用两个空行来分隔类。先导入标准库，再导入自编模块，之间一个空行。\nSQL最后 ; 单独一行；and，or，逗号等放行首，便于修改条件；\ntodoObsidian\n\nCalenderOutlinerDataviewkanbanAdvanced TablesAuto Link Title粘贴互联网链接的时候自动提取页面的标题Link Favicons外部链接显示网站的 Favicons，一个很小的增强但也不错。Mousewheel Image Zoom滚轮缩放图片，可以直接把图片大小写进 Markdown，排版的时候很方便。Customizable Sidebar可以自己在侧边的 Ribbon 中增加按钮，链接功能。我添加了「在默认应用中打开」功能，还是挺方便的。Find and replace in selection如字面意思，只在选中的区域进行查找和替换。Remember Cursor Position记住上次打开文件时光标的位置。当然了笔记是不推荐太长的，不过如果你比较习惯这样子可以试试。Shortcuts Extender这个我就没放在快捷操作里面了，Ctrl+1 变成标题一，Ctrl+2 变成 Heading2，跟 Confluence 的使用习惯是一样的，我觉得比 Markdown 语法还方便一点。File tree alternative plugin方便浏览器的层层打开模式，适用于需要反复编辑同一文件夹里面内容的时候。Fullscreen mode plugin能进到全屏的沉浸模式，Esc 直接退出，适合大量码字的时候。Show current file path在状态栏显示当前文件的路径。这个有用的点在于，新建笔记的时候经常文件夹就错了……有这个比较容易发现。Hider隐藏 UI 上面一些不需要的东西，比如我平时关闭窗口基本使用快捷键，所以直接隐藏了标题栏。Minimal Theme Settings &amp; Style Settings这是两个插件。我是使用 Minimal theme 这个主题的所以非常有用，大版本更新后重新调整了结构现在已经非常好用了。两个插件功能有重合的部分不过我选择两个都装。Hotkey helper在社区插件的列表里面显示快捷键设置的按钮，还有一些提示冲突之类的功能。Hotkeys for templates可以指定快捷键直接调用某一个模板，这个还是挺常用的。Hotkeys++一些本来不能设置快捷键的功能也变得能设置了。\n\n\nObsidian 的性能还是和 VS Code 差很多的。我现在最需要的 Obsidian 功能是键入两个中括号后，他可以直接生成一个 Markdown Style 的内部链接。不知道有没有 VSCode 插件有这个功能。- 2022.03.27 后续：没找到类似的插件，所以修改了原版 Foam 的插件，发布了 Foam Lite，功能很少，但完美满足了我的需求。\n\nRefer中文文案排版指北少数派写作排版指南成为少数派签约作者这一年，我这样写出了 10W+ 阅读量的文章如何输入直角引号「」和『』时代弃婴——大三下大四上学期总结代码风格《clean code-代码整洁之道》《python 编程从入门到实践第 2 版》python 格式化代码【自动排版】 yapf、black 风格选择\n","categories":["Self-improvement"]},{"title":"明修栈道——2024 年度总结","url":"/2025/01/29/summary_2024/","content":"对抗优化极简强迫症，文件整理上，增加文件夹分类，避免后期单个文件夹下文件过多不利于查找，长期主义。\n"},{"title":"暗渡陈仓——2025 年度总结","url":"/2025/01/29/summary_2025/","content":""},{"title":"往事如烟——大一上学期总结","url":"/2020/02/16/summary_semester_1/","content":"今年的疫情让我们难得有时间思考人生……\n转眼间大学的第一个寒假即将结束，将近两个月的假期里，我开始了真正的安全入门。作为一个仪式感比较强烈的我，还是想重新搭建一个博客来记录自己的成长历程，往事如过眼云烟，稍纵即逝，在这个自媒体盛行的时代，我亦想在网络上留下我的痕迹。\n在重新搭建博客及写公众号的时候，无意间发现了许多优秀的博客，并学着他们的样子，开始写自己的年度总结、学期总结和书单影视总结，开始对自己的孤陋寡闻做出改变，在闲暇时间里放松自己的同时去欣赏经典的影视、书籍和体验一些不错的游戏，在大学里真正充实自己的人生阅历，拓宽自己的视野，提高认知。\n步入大学，我渐渐地喜欢自己现在的状态，有了更清晰的人生目标，明确了奋斗方向，但与之缺少的是还没有淡然的人生态度，也没有明确的行事准则，这是我需要在新学期里实现的事情。而这大学之初，我也从开始对学校的诸多不满，到现在渐渐收获了许多的感动。\n开学不久我在电脑上一些小小的「造诣」在其他女童鞋的友情扩散下传遍了全班，又在帮助舍友后，被舍友卖给了实验室的学长们，接着传到了实验室主任的耳里，于是乎我莫名其妙地得到了主任的重视，着实受宠若惊，但随之而来的就是压力与高要求了，导致我前段时间一度给自己的压力太大，都有些抑郁了……不得不说这算沾了高中时代混安全圈经历的光，可谓有舍有得吧！\n\n此间忆起高中时代，也曾写过小说，徘徊于网文圈；也曾渴望技术，徘徊于安全圈；也曾追忆过去，埋头于建站中「前端博客、后端论坛」……\n\n所幸现在如愿于大学开启了二进制安全之路，但时至今日，仍未真正踏入安全之门，唯有以此自勉之。加上当时学的东西太杂，浮于表面，实在有些飘，不过也收获了最重要的能力之一——自学能力，如李尚龙老师的《大学不迷茫》里说的「大学大学，大不了自己学」，总算是为今后的学习做了些铺垫吧，也权当是自我安慰了哈哈。\n不论怎样，尽管那时迷恋于各种技术的浅层了解中，兜兜转转也没有真正学到什么东西，走了很多弯路，踩了很多坑，但也提前接触了很多大佬，一些 HR 和猎头，认识了很多朋友，甚至在高二的时候还遇到了联系我出书「区块链方面」的电子社刘主编「皎子阿姨」，当然最后乌龙了，却也因此有幸结识。「 注：《CTF 竞赛权威指南》的编辑 」\n萍水相逢行业领军人物「如看雪段钢老师」，和他们为数不多的几次交流，即便只是寥寥数语或只停留在谈笑间，都已经让我收获了许多经验，为我打开了更广阔的天空，更遑论那些弥足珍贵的认可和赞赏。记得他们说我不是天才，也是鬼才，如今再忆起当真有些受之有愧。我知道自己还远远达不到他们的评价，但他们的鼓励也让我愈加坚定地走上了安全之路。\n高中三年的时光，当时我做了很多与学业无关的事情，失去了很多，也收获了许多，上天总是公平的。一路走来，我遇到的许多人，有的成了至今仍相伴左右的同伴，有的只是擦身而过的过客。在这段旅程里，有人与我一路相伴前行很长时间，有人中途很早下车，消失在茫茫人海。有的人也许会再次相逢，有的人说了再见就再也不见。\n\n人生在世会有很多人离开我们，我也经历过最好的朋友逐渐转化为过客的过程，虽然很唏嘘很遗憾，但不得不承认这就是现实。人生相逢，永远不知道是谁打扰了谁，还是谁成全了谁。\n\n\n接触了这么多优秀的人，我也想要在未来过上他们那样的一生，同时原生家庭的负担，使我需要尽快地能够不依赖任何人，自给自足。坚持的路上，充满荆棘，每当我熬不下去的时候，脑海里就会浮现《太阳的后裔》里的一个片段——\n\n姜暮烟被关系户顶替后一个人坐在走廊上边哭边背稿子，第二天却依然光鲜亮丽地出现在屏幕前，看不出丝毫情绪波动。这是我想成为的模样，所以我掐自己一把，洗个冷水脸，继续打起精神完成未尽的工作，背起我应尽的责任。\n\n我也很怀念那一年半载的建站过程，感谢 Arust、Army、老陈、小史、山寨、老王等诸多前辈朋友对我的指点与帮助，那段经历教会我 提问的智慧、搜索技巧，开始了解到国外更广阔的世界，学会如何高效地查找需要的资料、如何迅速从零开始，以及由建站引起的不止局限于 Web 方向的一大堆七零八碎的知识，这些让我在遇到任何一堆全新的知识与概念时都不曾感到绝望无助，而一次一次地建站，手起刀落，果断斩断自己从前的努力成果不带丝毫犹豫，磨练了我从头开始的勇气决心与耐心毅力。\n我很喜欢一句话：非偏执狂不能生存。我是一个固执的人，一直坚持着这条路，虽然不知道会有什么样的结局，会有什么样的未来，会被别人怎样评价，又会被人怎样说教，但我仍愿一路走到黑。因为我坚信我所经历的一切事情，去过的地方，见过的人，读过的书，这些，造就了现在的我；我看过的远方，听过的故事，都会融入我的血液，如影随形，那些会变成我的格局，我的修养，和我的眼界。所以最终无论结果好坏，每段经历必有收获，这大概就是人生吧！\n\n我希望能在这个领域走到巅峰，希望能为这个领域做出贡献，希望在这个领域走很久很久，久到把生命都燃烧在这里面。\n\n而在这个假期的学习过程中，我终于迎来了当头一棒，学习之路上的瓶颈比我预计的来得更早，来得更快，也来得更猛。我终于体会到，无论是谁都要接受残酷现实的洗礼，才能走得更长远，特别还是我这种 IQ 和 EQ 都泯然众人的存在……\n絮叨了这么多，最后再列下大学四年想实现一定要实现的 flag 和对自己的鼓励吧——\n\n尽早脱离学生思维，培养职场思维，靠实力而非荣誉说话\n\n实现学费、生活费全独立的目标，学习更多的理财知识\n\n过四六级，阅读英语达到无障碍\n\n人没有动力的根本原因，在于 Ta 还有退路，而我要把自己逼到没有退路\n\n读万卷书，行万里路。现在想想，日后自己也能侃侃而谈，一定挺好\n\n\n未来，愿自己不迷茫，终有一日也能胸有成竹，淡然若素……\n","categories":["Relive youth"]},{"title":"自律人生——大一下学期总结","url":"/2020/09/18/summary_semester_2/","content":"疫情比我们想象的要漫长许多，我们见证了历史，经历了属于我们这个时代的波折，也度过了最幸福的半年大一生活，这将是属于我们这一代人的回忆……\n以前的我，总是迷恋上某件事情，便一头扎进去，而刻意将其他事情排除在外，颇有些「心无旁骛」的感觉。奈何假期太漫长，某一天心血来潮，在上个寒假看了《疯狂动物城》，我终于懂得开始去接触新的事物，以往对电影、游戏的排斥，让我的生活显得太过单调，自己也有些孤陋寡闻，不过在写博客总结自我的过程中，一切都开始变得不一样了，自己开始接纳新的领域和事物，开始向更加多元化的方向发展蜕变，迎接更好的自己。\n这半年多的时间，做了不少事情，此文便以记录的方式列出，算是一次复盘吧。\n\n花了两天的时间公号疯狂互关成功开通了流量主，于是乎第一个月有了近 100 的收入，但是后来见效不太好，活粉还是太少了，不过意外的是发表的一篇 SPSS 破姐版的文章一直在吸粉，这本是之前帮英语老师的一个小忙，没想到会有这种回报，倒是意外之喜了。\n\n17 年停更的小说又重新更新了一段时间，本来目标是在一年时间里写完，简书和豆瓣上都在更新，同时顺带研究简书钻，简书开始小额投资，前前后后花了半个季度的时间，勉强挣了 100 多，但是提现太慢、规则变动太频繁，云赞能存活多久也尚未可知，便见好就收果断退场了。\n\n基金开始尝试中高风险的混合型基金，最大的教训是止盈比止损更重要！之后开始真正学习基金理财知识，主要转向指基定投，并记录基金分析表，长期理财。\n\n极简强迫症发作，开始清理之前互关的一大堆公号，发现有些文章写得蛮不错的，于是开始整理写作素材，闲暇时间刷一波豆瓣 TOP250 书籍，充实下自己的文学底蕴，毕竟我也是个爱写小说的资深扑街写手呐…\n\n无意间在假期里发现了 Anki/AnkiDroid 这个辅助记忆神器，一番体验后自定义性高，但是用了一段时间，因为某些网络原因，还有自己添加单词有些繁琐，故而备份相关文件，再次回归到一点英语，才发现它的单词学习模式和 Anki 的比较类似，而且模式也更加全面，果断转场，后期在提现通道关闭之前还拿了点小收入。\n\n在刀网上又掘出了一些微信工具，也算实现了微信防撤回功能，还有机器人等，其他不常用姑且不提。\n\n开始学习高数了，从 B 站上爬下来的视频，上传到了 YouTube 上，今后多多少少可能会做点视频转载吧，目前来看 YouTube 是个不错的视频备份平台…\n\n想找些英文网站翻译文献，看到耗子叔推荐的 Medium，感觉不错，每日订阅和 Twitter 上推送都不错，希望可以借此提高自己的英语水平。\n\n正式注册 PayPal 和 Payoneer 账户，从方糖气球的 《程序员如何优雅的挣零花钱？》 中学到颇多，入驻 Udemy，有望录制些学习实操课程，兴许还能挣点美元。\n\n假期里习惯了每日刷推，在 Twitter 上发现一个在线视频的网站，可以和老外直接视频语音，等听力口语好点了也许有机会聊聊。\n\n整理 QQ 邮箱，书写十年来的经历，注册了领英账号，为以后投递简历做个准备，虽然我还只是大一，未雨绸缪嘛……\n\n受到 Tinyfool 的启发，惊觉以前学英语有些本末倒置了，听说读写，听力才应该是放在第一位要学习的，那段时间正值 618，买了极客时间的《互联网人的英语私教课》，单词继续用「一点英语」记忆，听力开始学习背诵《新概念》系列，美剧上时间充裕的话可能追一波《老友记》，这个假期希望自己能够好好把握住，变得有料有内涵，才能更有魅力啊~\n\n不知不觉，夏天到了，游泳一直是我想学习的，假期也要学起来，主要担心有一天自己掉水里了，还可以自救咳咳……\n\n\n\n我的人生哲理之一：永远不要把希望寄托在别人身上，自己才是最可靠的。\n\n\n游泳计划开启，到了买泳镜泳帽的时候了，第一次下载了拼多多，价格比淘宝便宜了不少，说起来，因为总是遇到给我发拼多多消息的，让我烦不胜烦，对拼多多误解颇深，加上之前不断自我设限，好在现在不断突破限制，试水新事物，完善自己。其实扯了这么多还不是穷的……\n\n突然间，得知爷爷的病情加重了，甚至可能只有两三个月的时间了……莫名的，有种想哭又哭不出来的感觉，长大之后，最担心的事情——生离死别，还是发生了。\n\n抛开一切杂念……开始学习游泳了，渐渐放松自我，敢于尝试，没什么不可能的！\n\n看雪课程《汇编语言详解与二进制漏洞初阶》属实不错，学会了利用 VS 反汇编学习，以及一些简单的 C/C++ 调试技巧，比如很常用的断点调试，又一次发现自己有些固执了，看书学系统基础，视频补实战技巧，才是王道！\n\n开始学习自定义配置 Vimium，之前装过没研究，再次尝试才真正体会到它的效率之高 逼格更高！\n\n从五月校赛出的一道 《九层妖塔》 开始，一直到暑假七月份，断断续续地在字节脉搏实验室投稿了几篇文章，人生第一桶金「1K」目标达到！\n\n假期计划把《鸟叔的私房菜》基础版看完，结果一边看书一边实操中，实在有些变扭，无意间对比发现，实体书体验太差了，图片不清晰，相比作者的文字版还有个别语法上的删减，少了些幽默，果断放弃实体书……\n\n之前博客莫名崩掉，不能提交了，于是重新搭建，换了个很小众「star 只有 112」但是好看的主题，顺带解决了「git 超时和拒绝请求」的历史遗留问题，现在想想之前博客不能提交的问题应该也可以解决了，果然前端还是要多折腾哎~因为主题小众，开发者 Readme 写得对小白不友好，故发起了自己第一个 issue 和 PR；十多天的时间收到邮件提醒——Merged #28 into master 第一次真正意义上为开源项目做贡献，成就感满满，继续努力！\n\n\n最后总结了一下这个学期的经历，也渐渐对人情世故多了些了解，像恋爱一样，时间会让你看清每一张脸，久伴会让你知道每一颗心。热烈的乍见之欢很容易，温柔的久处不厌最难得。\n\n《请停止无效社交》中写道——「你忙于交际、疲于应付，鸡同鸭讲的尴尬无处不在。你为了别人的欢笑而奔波，又为了别人的肯定而牺牲自我，你的人生仿佛都不是你的。其实，你根本不是在社交，而是在无谓地蹉跎光阴。」\n\n未来的日子里，尽可能低调一些，降低自己的存在感吧~~少说话多做事，愿我对计算机的热爱可敌岁月漫长！\n最后，在漫长的假期里，也许我收获的最大的成就便是养成了健身的习惯，通过健身展现出的自律——那种演绎到深处的自律其实就是一种近乎变态的自虐，但无疑，现在对自己的残忍都是为更好的未来铺路。而且健身锻炼这件事情，于我而言，不只是炼体，更重要的也是炼心！\n","categories":["Relive youth"]},{"title":"功不唐捐——大二上学期总结","url":"/2021/03/11/summary_semester_3/","content":"\n今年我们都经历了太多，最痛苦莫不过小梦人生中第一次生离死别，最治愈也许便是承认了彼此的感情……\n\n居家期间我有了更多学习的时间，这是我高中时代就期盼了许久的，可是我却忽略了和亲人的相处，上学期知道爷爷的病情加重，可也还未曾病重到住院治疗，真是应了那句话——我们总以为时间还早，未来还有很多时间陪伴家人，不曾想意外来临之迅猛，总抵不过对明天和未来的期待……\n2020 年 10 月 22 日，犹记得那天晴空万里，下午一点多收到父亲的消息，在我这漫漫人生里黑暗的一天，最爱我的爷爷病故了……尽管几个月前已经有了心理准备，可一时还是接受不了这个消息。我就那么握着手机，陷入了儿时的无尽回忆中——爷爷总是风雨无阻地接送我上下学，我受了委屈总是扑到爷爷怀里，感受着爷爷的安慰……想着忆着，眼泪止不住地流淌而下，模糊了视线，打湿了手机屏幕。之后我远程看了半个小时的监控，没有里屋的画面，只能看到外屋大姑取剩抛在地下的寿衣袋子，孤零零躺在那里，扎眼地提醒着我，爷爷不在了……当监控画面永远定格在爷爷被担架拉走的瞬间，一刹那，通体冰凉。\n后来让我遗憾的一件事是我把上学之前录下的包含着爷爷声音的唯一一段录音弄丢了，都怪自己该死的强迫症，手残误删了，我找了一天，翻遍了所有的备份，都没有了……我知道，未来的余生我再也听不到爷爷那雄厚沙哑疼爱我的声音了，我竭力回忆着和爷爷的每一个过往，努力回忆着他的音容相貌，可是长大后的记忆给我的留存太少太少了，反反复复只是儿时的几个记忆碎片……另一件遗憾的事是 8 月 21《八佰》上映，还有后来的《金刚川》，都是爷爷爱看的战争题材，还想着放假回家和爷爷一起看，奈何天不遂人愿……\n在爷爷离开的第二个夜里我终于赶回去了，入殓的最后一刻，终于见到了一面遗容，握着冰凉干枯的手，我知道以后冬天，爷爷再也不能温暖我天生体凉的手了……\n虽然这一年，苦难不断，但是我依然觉得，那一丝幸运仍坚定不移地还停留在我们身边，之前选课还差一门创新，下午又突然放出计划，每一次失望之后，似乎总有「柳暗花明又一村」的小惊喜眷顾，尽管过程坎坷，所幸结果也算让人心安，多少给这灰暗的一年多添了几笔色彩吧。唯一伤感的是时常忆起爷爷，那些童年的温柔时光如奶茶般沁人心脾，总觉得恍若置身梦中，祈愿噩梦破碎，可最终还是要接受现实，往后的新年也不再完整了……\n\n因为请假回家，小梦没有参加蓝帽杯的培训，比赛名额被替换，但最终合肥的线下赛因为疫情还是变成了期末结束后的线上赛，大家期待了许久，连机票都订好了，结果通知延期，对于小梦来讲，也许多少有点同情他们幸灾乐祸吧噗，但是真正让他「无奈」的是祥云杯线下赛，AWD 模式他也准备好了好久，比赛时间刚好和四级冲突，所以他四级都放弃了，结果最后又被替换了，本以为鱼和熊掌不可兼得，是自己能力不够，可最后却兼不可得，一时之间，他有些迷茫了……\n最后，他也成了四级裸考中的一员，不过聊以安慰的是，最后备考期末考试，每科半天的时间「复习」，他被自己的超高效率惊呆了，果真应了那句老话——人都是被逼出来的！\n某一日小梦和我倾倒着苦水，那天朋友圈的一个梗，秋天第一杯奶茶，小梦给他的她发了 52 的红包，向她告白，那或许是他第一次真正意义上的正视自己的感情，也是第一次给他特别在意的女生送礼物。起初，她始终不愿收下那份「奶茶」，推推搡搡，最后也许是被他的真情告白小小的触动到了吧，才告诉他有人追她好久了，但…他没有放弃啊，因为他发现自己一直忘不了她，那么多年走走聚聚，却始终忘不掉，那份感情随着时间的推移，没有变淡反而愈发深厚，莫名的执念也好，痴心也罢，那个下午似乎一切都不重要了，接着又聊了许久，她才终于「勉为其难地」收下了。\n我看着镜头里他最近痤疮肆虐的脸，默默感受着他按耐不住的激动，鬼使神差地问了一句他的她刚问过的问题，「值得吗？」「啊？」他可能还沉浸在之前的余温中，又或者被我冷不丁的灵魂提问惊到了，表情错愕，不过很快回过神来，脸上重新洋溢起孩子般 傻子般 的笑容，美滋滋道，「喜欢一个人，深陷其中，定好过隔岸观火」，呵！这小子，线上骚话连篇，线下不敢多看一眼，我看他也就只能这样隔着屏幕和我得瑟一下了，讲这话的时候，他声音高昂，眉飞色舞的嚣张表情让我有些不悦，便戏言道：「掐指一算，你俩要散。」\n话音落下，热烈的气氛突然凝固，像冰块坠入火海，连一丝涟漪都未泛起，但温度却低到了极致，他沉默了，我清楚地看到，他前一刻还陷入着美好的回忆和憧憬中，下一瞬被我一句话打回了原型，似有无尽难言的落寞涌出，他嘴角泛起一丝苦笑，轻轻摇了摇头，声音低沉了许多：「以前也没真正在一起过，哪来的散……我甚至连她的手都没拉过，是我太傻，没把握住……『此时应该放一首《信仰》如果当时吻你，当时抱你，也许结局难讲。我那么多遗憾，那么多期盼，你知道吗……』但我也不傻……」说完，他抬头看向我，带着异样的眼光，突然让我觉得有些刺眼，多了些不自在。\n到这里，我其实不知道该说什么好了，是鼓励他勇敢去爱，别轻言放弃，还是劝他及时止损，我也不知道，确实如果他早一点说出来，更可能在一个女孩情窦初开的年纪，高中时代便住进她的心里，但显然这个时间点已经被他错过了，不过至少也让他学到了些经验教训，不要一味地只专注自己的事情，有时也要学着珍惜当下，目光看的不要太远，而忽视了身边的人和风景。\n转念间，我也想了很多，再怎么轰轰烈烈的爱情还是要归于平淡，异地恋又是不同的专业，他努力想走进她的世界，可她的世界却很少为他打开，而她也不曾去了解一下他的领域，像极了两条相交过的线，也许有一方愿意弯转，才会有再次交集的机会，而能不能真正缠在一起，又尚未可知了，但我想那绝不是一方的一厢情愿能改变的，哪怕竭尽全力。\n如果说外语的学习是付出必有回报，那爱情往往是付出与回报不成正比的东西，人性善变，教人难以捉摸，而双向奔赴的缘分似乎又遥遥无期，原地等待或是主动出击，于他，都不容易。\n网抑云：「舔狗舔到最后，要么应有尽有，要么一无所有」，他想成为前者，可几次聊天下来，那种明显的距离感实在让他感受不到属于爱情的舒适，也许是另一个更早向她表白的男孩让她心有所牵，但回归本源，他们三观不同，很难有共同的话题，也许错过才是更好的结局，自嘲一句，感谢遇见。作为旁观者，理性上我应该劝他，没有回应的付出就别再继续了。没有回应的喜欢，也就别在坚持了。也许他与她最后的相遇，已经用尽了彼此的缘分吧。\n\n整理度盘，重新搜了下「盘姬工具箱」，没想到是个同龄小姐姐，但是人家 18 年就做出辣么优秀的工具了，我都 21 年了还在学 C 语言，真是菜哭了。悠悠小姐姐的博客上留下了走过好多平台的脚印，好奇心墙裂的我沿着她的步伐开始了一波「了解」，从 keep 粉起来，到推上，再到知乎，还了解到一个新的技术领域，倒是忆起许久前看过的黑客类小说中有所提及，这次算是一次较正式的会面啦，音视频编解码技术确实比较封闭，却是我们日常频繁接触的东西，有点像一种底层技术吧，顺带的了解到雷霄骅这位英年早逝的大佬，于是更坚定了我保持锻炼的信心，毕竟偶不想某一日猝死，偶还有辣么多梦想没有实现惹。「浅尝下新奇的文风咳」\n最近静下心研读 C 的很多大块头，理解也越来越深刻了，理论基础夯实了，再学其他的一定可以事半功倍了。但只是如此还远远不够，基本功扎实可以决定我可以入行吃这碗饭，但我的创造力、我的审美、我的品位、我的情商等等，将决定我职业发展的无限可能。而那些一直坚持的理想，也都需要实实在在的实战能力来支撑。\n之后《元尊》也追完了，从高一开始，追到现在大二，跟着土豆每天一更的节奏，和周元度过了我的那年青春，想起当年也曾踏足网文圈，又涉足黑客圈和币圈，直到现在的安全圈，真是满满的回忆啊！\n在林老的带领下，看雪也创建了 TG 群，之前一直没整，到现在微信几乎停用，我成为了 TG 的忠实拥趸，它的魅力深深地将我折服。它就像一个宝藏，带我打开了很多新的领域。不禁再次感叹，不断尝试新的事物是多么重要。\n年初获得了妹妹的投资，本金终于达到了第一目标，继续努力。好景不长，年后消费医药板块的大幅调整，给我当头一棒，仓位布局不合理，后续子弹不多，只能稳定心态，与时间做朋友。而这场下跌回调，也让我实战了一把 倒 T 操作，这对我来讲也是新的理财体验，毕竟本金翻了十倍后带来的风险要更大，但现在的试错成本依然很低，经历得越多未来的投资心态也会更好，抗压能力也会更强。而投资也许是最能考验一个人的心态和体现长期主义的事情了。\n\n所谓长期主义，就是敢进窄门，愿走远路，瞄准长线收益的目标，忽略眼下的难题，重视每个微弱的优势，坚定且持续前进的一种理念。微观上我们要拆掉思维里的墙，改变你的心智模式，不满足于现状，走出舒适圈，在做具体事的时候，都能有一颗热情饱满的心。宏观上我们要使我们的每一点优势都能在时间的复利效应下，积累形成壁垒。Re: 顶级的客服高手，都是敢进窄门，愿走远路那些开挂的人生，都是长期主义者：敢进窄门，愿走远路\n\n另一件事，Chrome 自 89 版本更新删掉了右键菜单的 () 提示符，虽然伤害不大，但侮辱性极高，尤其对我这种键盘控而言。所幸塞翁失马焉知非福，又意外收获了几个鲜为人知的 Win 快捷键，小小弥补了我的失落……如今看来，自己在快捷键的道路上渐行渐远，不知不觉中脑海里装载了近五百行的快捷键和命令，还有双拼的学习，按键量缩减带来的优势在写作时着实友好，敲击时成双成对，轻松感和韵律感十足，这些看似微不足道的东西，对我的效率却有着难以估量的提高。\n于是我也曾作为一个布道者，安利身边的朋友去学习使用，可惜不是谁都有勇气有毅力去走出自己的舒适区，自此我不再去试图说服别人，路都是自己走出来的，每个人的选择都不一样，于我，敢进窄门，愿走远路，做个长期主义者，向死而生，期待着有一天我能成长为一名老司机——普通人最害怕做的那些事情，都变成我巨大的成就感和快乐的源泉。\n\n老司机之所以是老司机，不是因为知识多，只是因为，慷慨赴死变成了一种习惯。\n\n思维层面的养成自大一订下 flag 后也有了新的见解，看了四月酱 这篇推文 ，收获了新的职业思维，工作一定要和私人感情分开。对于「这世界上最难的事情就是把自己的思想灌输给别人」，也是深有体会，期间做过很多努力，虽然结局不太好，但是自己也不后悔，相比失去的，得到的更多——我学会了树立边界，保护自己，拥抱改变。\n最后在时间管理上，优化作息时间，改变以前想通过早起，来延长自己学习时间的观念，提高单位时间的效率，平时通勤时间尝试收听播客，目前以完结的《极客视点》为主，丰富获取知识的方式和渠道，播客、书籍、视频，各取所长。未来的生活里为了自己要坚持的目标，持续不断做减法。\n\n学霸猫：我是如何做到每天4：45起床的\n\n「每个优秀的人都有一段沉默的时光，那段时光是付出了很多努力却得不到结果的日子，我们把它叫做扎根。」新的学期里，和大家共勉，一起成为优秀的人呀！\n\n\n文章题名灵感源于 TK 教主的 「艺无止境，功不唐捐」引申阅读 一个女生怎样才能进入腾讯的玄武实验室？\n\n最后附一张 GitHub 图留念。I gain Arctic Code Vault Contributor in 2020.2.2, and in 2021.3.8 who is glad to join GitHub Developer Program, be a Developer Program Member.\n","categories":["Relive youth"]},{"title":"重构自我——大三上学期总结","url":"/2022/02/27/summary_semester_5/","content":"\n保持足够的好奇心，人生不要给自己设限，勇于突破自我，趁着年轻多去体验新事物，扩大自己的视野认知。\n\n想做的事很多，要走的路且长，心却日渐浮躁，故本文题目用了「重构」一词，灵感源于《重构：改善既有代码的设计》书名，像重构代码一样优化自己，像研发产品一样对自己的思想更新迭代。\n生活开学初期，通宵达旦狂追了几部大女主剧，剧情深得我心。\n\n日常刷公众号，每天为生活充电——\n某一天看到一篇记录癌症晚期患者一年的变化，触动很大，在此立下一个待办——毕业后，尽可能每年带家人做一次体检，未雨绸缪。\n依照这篇 如何每天只睡 6 小时，依然精力充沛？ 中的方法，设置了两个闹钟，为了不会被室友爆头，找到了一个非常舒缓，适合作为第一个闹钟的音乐 Into Ether - Jeremy 又降了一半的音量，听起来体验还不错，渐进式的纯音变化，可以等自己独居的时候用整首作为起床铃声，是宝藏音乐无疑了。\n设置闹钟时，发掘了手机语音助手的场景功能，相似的还有苹果的快捷指令，这些小功能利用好可以提高生活场景的自动化。\n电商拼多多开了两家个人店铺，算是一次在电商领域的尝试，但是由于备考时间安排，没有合适的人暂时接手，这笔投资宣告失败。学期总结复盘这件事在此刻终于发挥出了它的重要意义，2021 大三上的这学期有过三次投资，两次情感上，一次事业上，加起来大概损失了 ￥4k 以内吧。\n冷静下来我想把他们归为一种表面投资，本质却是冲动消费的行为，就是把自己被一定程度上压制的消费/情感需求寄托到了外物上，最终人财两空，唯有一声感叹——浮生若梦，为欢几何？\n维权在科技产品上，闲暇间体验了一款 DT7+ 的 iwatch，发现自己对 apple watch 的需求始于颜值… 于是在 万能的知乎 上了解到了华米品牌，符合我的审美需求——方形表盘，颜值在线，心率检测（心脏健康研究更 nice），睡眠监测，运动记录，定位，续航时间长，可惜不足是表带单一，没有屏幕常亮。\n之后又看到一篇 怎样将Apple Watch功能用到极致，我突然理清既然是手表，当下的科技水平，再智能它的第一定位还是在轻奢消费的装饰品范畴，而不是发挥生产力压榨性能。在科幻片的影响下，自己思想太极客化了。另外，基于苹果生态下体验还是更好一点，毕竟不能唯颜值论。\n而 DT7+ 退款发生了意外，第一次遇到退款纠纷，退货时包装产品完好，结果商家拒绝退款说是有划痕，但我可不是轻易认亏的主，了解了很多投诉维权渠道，最终完美解决还倒赚一笔，不过还是蛮浪费时间的。好在以后能更快地定位哪个环节出了问题，开箱/退货也学会了保留证据，不然着实闹心。\n挫折恋情上，这学期意外有了短暂性的突破和成长……\n暑假做高考志愿操盘手的时候，认识了她，这一学期，随着彼此了解加深，当我大学生涯过去一半的时候，有了女朋友……\n连续相处了 100 天，直到 2021 年的双十二，我们在一起的第 50 天，她放手了……教会了我爱不要太满，准备了那么多，终不过是自我感动。\n\n惟自感叹：你若及时止损 准备好的不会变点燃的烟花 终究会绽放只不过没有了欣赏的人罢\n\n那一夜无眠，重温了《司藤》，试图转移注意力，如一匹受伤的狼，蜷缩在角落里独自舔舐伤口。「狂欢」过后，脑子开启了自我修复——嗜睡……时间在此间悄然流逝，治愈一切。\n之后的日子，正如她闺蜜所言——留不下要走的人。当然以我的性格也不会挽留，更多是一种遗憾不甘和事后醒悟。旁观者清，幸运的是姐姐后来的话点醒了我，「没有感情基础的异地恋如虚无缥缈的网恋」，脆弱不堪。\n就这样，抱着种种复杂的情绪，时间长河就在蹉跎中匆匆流过，流水无情，不会因任何人任何事而停留，爱而不得，几乎占据了我整个学期，所幸这是临近毕业/考研/工作的过渡学期，我经历了人财两空的逆境，感情的挫折，阴差阳错也学到了很多，那些打不倒我的必将使我更强大。\n一段恋情结束的最后，我很，怀念我们刚认识那会大家都有些拘谨和真诚。谢谢她，在我大学过去一半的时候，给我补上了爱情这门实践课。\n\n你大概不会再找到比校园更好的人了，因为这是唯一次能跨阶层恋爱的地方。出了校园踏入社会，人们开始考虑车、考虑房子、考虑彩礼、考虑家庭、背景、职业，考虑了很多，唯独不再考虑爱情。\n\n未来的日子，放空自己，从头开始，静下心来，专注自我提升，而我所追求的，不仅仅是爱情，「与其追风去，不如等风来！」\n品牌一直在思考如何打造自己的个人 IP，可惜所知太少，仍没有找到适合的内容方向，故只能先注册多平台「西瓜视频、抖音、今日头条、Reddit、Quora」，占个用户名。\n其中 「V2EX」 在虚拟货币上的规则，和自己曾经做过的暗循论坛有相似的设计思路，很开心加入这里带来的回忆，夜间模式的配色也深得我心，迟来的注册~\nYouTube 因为猴博士的线代被举报，收到了两次版权警告，被迫暂时下架所有视频等待警告过期，于是又开始思考到底要做什么，想起来公众号当初耗费了很多心血结果却扔下了，坚持这件事都没有做到，所以 2022 会重拾公众号，继续思考摸索自己的定位。\n视频题材暂时没有好的想法，便继续寻找写作题材，而博客也该多投入些了，首先想到的自然就是域名。时光荏苒，以前万网注册的两个域名 hackwm.com dfsxz.com(.cn) 现在都变成黄网的跳转域名了……\n今年囊中羞涩，只好先折腾了个腾讯云新用户，￥23 拿下了一个域名，和阿里云一样每年提供 20 个免费的 SSL 证书这一点太香了。不过在安装证书时发现，GitHub Page 自带证书也很香。\n自高中后，三年光阴一晃而过，兜兜转转再一次走到了似曾相识的路上，初心尚在，奈何多了牵绊和迷茫，此次重构自我，博客命名也算告别了武侠风的「踏雪无痕」（取自某黑客大佬），工作学习重心从信息安全尝试转向开发，后者为生活所供，前者作更纯粹的兴趣吧。\n域名有了，博客的排版格式也进行了重构，在写 C++ 系列文章的时候，发现六档标题的渲染分配不太好，第一档和第五六档用的极少，多数文章用的都是第二三四档，其中第五六档无自带加粗，第一档目录无前置序号，还有部分引用和标题中间空一行仍出现粘连渲染，故对 Blog 的 markdown 文件写法有了新的改进，在以往第二三四档标题使用基础上，添上手动加粗的第五档标题，用更多的留白换取移植性和渲染性更好的体验。\n除了格式上的重构，在创作内容上，本文较之前几篇总结，超链和图片明显增多，不再拘泥于精简字数，把文章可读性和信息熵提高是今后的重构方向。而作为强迫极简主义者，我仍然尽可能压缩文章数量，提高单篇文章的质量和信息密度，这个快餐化的时代，这种大长文也许不利于搜索浏览量，但是当整体文章数量也上去，每篇文章便都是一个小专题，我把这称为「信息熵洞」 —— 突破「信息茧房」，从有序到无序的发散思维，由点及面，持续扩大自己的信息认知，试图将文章打造成熵增的黑洞一般，追求深度的同时拓宽一些广度，这也是此次总结对自己新的定位。\n学习之前忙于比赛，四级裸考挂了两次，第三次依然裸考，「没办法，听力占一半，纯纯聋子」但明显感觉此次听力和阅读要简单一些，写译则偏难，而听力是我的梦魇，只要听力卡到及格线，低分飘过倒也预料之中。\n从八月底开始准备考研资料，还没开始就预料到未来将度过的一段枯燥岁月，学着苦中作乐，学会高效放松和休息，一定要坚持下去。从 3 月开学，就该全身心投入到考研中了。\n\n具体学科规划，在英语学习上，主攻美音，停用了英音的 单词叭叭 ，转用默认美音的 欧路词典 。\n珍惜剩下的大学生涯，读到 刘未鹏-我在南大的七年 ，上大学本科几年，一个是专业能力专业基础得打好，还有一个就是认知的提升。我觉得能做到这两点就很厉害了，大学就没白上。「可惜现在看来前者远远不够，后者趟了不少弯路，拨云见日有待时。——23/02/08」\n除此之外，为了尽可能提高自己的竞争力，还考虑到未来积分落户，选择了中级软考的软件设计师，也能和专业课相辅相成，尽力而为。\n休息时间，搜集一些工作信息，完善简历。在看过 N 篇知乎回答后，模板选择、证件照拍摄、排版内容等都有了基本的认知，细节上自然也不能放过， 选择企业色调作为简历的主色调 ，比如百度蓝，京东红，阿里橙，毕导黄（这篇回答认真的吗？看乐了）\n最后，想起许久没有刷推了，本来是看看 @章工 的新语录，才发现自己还 fo 了 @编程随想 ，可惜他似乎已经「消失」一年了，从置顶推文 《学习与人生——700篇博文之感悟》 进去，又粗略读了几篇文章，不禁再次感叹其文章透露出的思想深度和广度，真的是自学大佬的典范。\n抛开政治，仅谈学术方面，反复品读其文章，朴实无华的文字却仿佛有生命一般，让人感觉在与一个深邃的灵魂对话，不时引人主动思考，分明只是单调的文字，可蕴含的信息却是语音视频都难以展现出来的东西，如其一文所提，体现的是真正发散性的思维，因媒介是文字，便有了「一千个人眼中有一千个哈姆雷特」的感觉，而不是语音视频，虽然这种可视化降低了信息知识的吸收难度，却也有了收敛性，一定程度局限了学习者的想象和思维，从人的生理角度上考虑，相比「主动学习」，「懒人-被动灌输」对大脑而言自然是更省心省力的。\n他的文章通篇读下来，很烧脑，如果把大脑比作芯片，那就是芯片写入焊接的感觉，需精雕细琢。似我印象中小学五六年级学到的授之以鱼不如授之以渔，亦是有着心理学上费曼学习法的影子，而这都是用精辟的文字体现出来的，其无穷的魅力让人着迷而流连，即便同一篇文章，每隔一段时间温读，依然让人获益匪浅。\n感悟有次和姐姐聊天提到——「我感觉自己每年都挺忙，过得很充实，但是一年后又感觉自己本可以做的更多，感觉还是有很多时间没有安排好浪费掉了，焦虑和空虚仍萦绕在心头。」\n说到底，还是对当下把握不够理想，对未来又充满期盼，对过去仍抱有不甘，终究都是欲望在作祟。\n心到底还是难以平静，唯有时常安慰自己，我们都在各自的生活里失去一些，得到一些，难免疲倦于当下，但偶尔回来读一读我们和你们记录下的生活，看着优秀的人仍在更加努力，便也渐渐抚平了一些心头的焦躁，继续仰望星空，不忘脚踏实地~\n倦了便在临睡前，偶尔和父母通通电话，若有个话题能聊好久，回味起来，感慨在外面困了累了倦了，家人永远都是自己最坚强的后盾。\n一路走来，身边的人渐行渐少，无论自己性格的缘故，所处行业的关系，自己选择的路，总要走出一番天地。想欣赏烟花绽放的美丽，就要做好承受美丽过后只剩孤寂的心理落差。\n\n《百年孤独》里的有句话——生命中曾拥有的所有灿烂，原来终究，都需要寂寞来偿还。\n\n这个学期，寒假之际，重构了爱情、工具、目标，乃至影响到人生走向，但求问心无愧，落子无悔。今后，待人待事，当求同存异，戒骄戒躁，谦卑待人。\n\n在自学这条路上，愈走愈远，艺无止境，功不唐捐！\n\n新的一年，继续投资自己，背水一战！\n\n","categories":["Relive youth"]},{"title":"接纳自我与救赎——大二下学期总结","url":"/2021/08/16/summary_semester_4/","content":"\n本来是暑假就要写的，奈何每天晃晃悠悠，看似忙忙碌碌，却总感觉无所事事，所获甚少，也不知道时间都去哪了，而这篇总结也一拖再拖，转眼间就到了大三开学……\n\n自检回顾之前三篇总结，总体都是积极向上，努力向前，但在校的日子过着过着就平淡了，尽管我每天早出晚归的状态，可能在室友同学眼里，很努力也很不合群，可自己的状态自己最清楚，这份看似努力的背后付出的时间精力成本和自己的实际收获远远不成正比，我并不优秀，也不够努力，这让我从小学就追求优秀的心理受到了挫伤，我被自己灌输的功利性和施加的压力，打倒了。我自以为是地觉得自己内心足够强大，可以化压力为动力，想象着自己是弹力十足的弹簧，可搬来的石头却超出了自己的承受能力。于是，在到校第三天我终于下决定去一院首诊，想到这，我脸上定是有一抹苦笑吧，最终还是躲不过，有些事情一直想一直想只会让它更糟糕，索性忍一时之痛揭开伤口，坦然面对。从下午一点等到四点，耐心在漫长等待中一点点被磨灭，心情被隔壁急诊重症监护病房（EICU）匆匆推进去拉出来的人群所蹂躏，呼，终于到我了……\n当检查报告摆在自己面前时，有一丝如释重负的感觉，仿佛心里悬着的石头终于落地了，尽管它落到了我身上，但好歹不再是之前悬而未决的感觉了，我也才发现自己的心理状态竟是如此敏感脆弱得不堪一击，所谓的坚强不过是自欺欺人罢。这实在让我有些难以接受，可同时却又不可遏制地生出了一丝庆幸的感觉，仿佛为自己放下找到了一个借口，可我的理智不断告诉我，我要对自己负责，我不能这样再次堕落，于是两种情绪在我的脑海里开始拼个你死我活，不死不休，事态便向着不可控发展而去。\n等来的这份结果，尘埃落地的同时，也让我一直极力压制的负面情绪，开始蠢蠢欲动，我甚至有预见性地明白它们突破我的心理防线只是时间问题了。所以，这篇总结的标题我取了「接纳自我与救赎」重新认识自我，接纳平凡的自己，与自己和解，实现自我救赎便是未来一年要努力的事情（灵感源自斗五的救赎组织）。\nOK，收拾心情，该进入正题了——\n迷茫当电脑的光幕映在我脸庞时，我竟想不起来这学期做了什么，心头一紧，莫名有种强烈的虚度感，也可能是最近状态较差的缘故，这学期似乎大多数时间都没去上课，忙于实验室的事情，在外参加护网，参加各类 CTF 比赛，密码学的讲课，一定程度上丰富了自己的大学生活，也似乎锻炼了自己在众人面前演讲的能力，这一点是以前的自己想都不敢想的事情。某个时刻，突然想起大一刚来参加公开课的我，也憧憬着有一天站在讲台上，现在我实现了，看着台下听我讲公开课的同学，却感受不到快乐，反而有了更强的空虚感。\n当站在讲台上，我们言语神色间仿佛掺杂着一丝骄傲？现在再看倒也豁然开朗，心态重新摆平了，毕竟，说到底他们（这包括过去的我），不过只是掌握了某项特殊技术的人群罢了。\n某天无意间了解到 xiuno 谢幕，不禁一阵唏嘘，爷青结~\n\n学的越多才发现要学的更多，开发和安全两个方向，不知该何去何从，真叫人头大，还是自己太菜了。\n尝试迷茫的时候，那就多做些尝试吧，重新规划定位自己要走的路。\n这学期学会了乒乓球，又 GET 了一项体育技能，尽管玩的时间可能很少。\n因为面试 RC² 的缘故，学习了一点日语五十音，二外为我打开了一个新世界——\n\n「俺开桑塔纳，蛤蟆压啦哇」 如何快速有效地学习日语五十音？\n\n日常学习上，也偶尔心血来潮跟一下锦堂的直播，感受一下直播的魅力，期待未来自己也能做视频，拍 Vlog。\n收获奶奶也有了智能手机，平时可以自己刷一刷抖音快手，不会太孤单了，我有时间还能打视频。\n这学期看了不少文章，继续优化我的认知思维。\n\n虽然我们能够从别人的经验和大道理中吸取到一些营养，但这些道理如果没有自己实际经历的支撑，其实都是无根之木而已。没有根基的大厦，只是海市蜃楼。\n\n知识不能替代经验（阅历），该走的弯路还是要经历，有些坑只有自己栽过了，才知道疼。很多事情，比如理财投资，只有入场了亲身体会过，才能逐渐把理论层面的知识内化成自己的经验，甚至达到举一反三的效果。趁着年轻给自己设定一个试错期，去耗尽自己那些不切实际的幻想，在这个过程中发掘自己真正感兴趣的东西，最后认定一个方向，在某一个领域开始深耕。\n\n试错的本质就是进行大量的尝试，大量的体验你之前从没接触过的事物。\n\n这一点我一直在做，目前来看，确实丰富了我的生活，体验到了很多东西。\n这学期讲课，也收获了很多，在极客时间上看到的复盘记录，感觉不错，特此记录：\n\n内容上有所取舍，层次分明\n节奏上把控有度，流畅自然\n形式上诙谐生动，轻松问答\n\n转眼间临近期末，回顾这学期，经历了人生真正意义上的生离死别，曾经担心的事情终于还是发生了，然而自己受到的刺激却并非想象之大，此间忆起小学课文「和时间赛跑」，没有所谓的沉默寡言、发愤图强，到底是我骨子里生性凉薄，还是许久未见感情减淡，亦或埋下了难以感知的悲情种子，我不想深究。\n只是大学前，曾被所有人定义的我本该是内向之人，如今却有些「外向过度」，仿佛姗姗来迟的叛逆期，但这终归不是我本性，下学期重归校园，备战考研之际，做回自己罢，不再自添烦恼，享受孤独，在沉默的时光里沉淀自己，免去无谓的争论，减少不必要的精力开销，见天地，见众生，见自己！\n这个假期自费买了 ipad pro，还有一大堆健身器材，开销太大，以致于钱包严重缩水的我终于向生活低头，趁此高考季便充当了几天报志愿操盘手，小有成就的是，得益于一年前学习的双拼和 Vimium，我显得比较「专业」，真的应了那句老话（每一次写总结都要重温修缮一下之前的总结，这句话是第三次了……）——「你永远不知道你今天所学的哪一天可能就会用到了」，还有假期中河南洪灾，虽然自己游泳还不利索但有意外发生还是能扑腾两下的，居安思危很重要，所以说嘛，人还是要勇于踏出自己舒适区的。\n有了设备，尝试听 Podcast，还是有望做一个听觉学习者的。为了或多或少营造一点英语的氛围，iPad 上 Apple ID 用美区做了主区，而充值美区礼品卡需要用到 VISA，临近开学便做了些尝试，最后成功申请到了招行的 FIRST 毕业生和 YOUNG 青年版信用卡，可惜都是银联，只能等毕业后再申请了，但这份申请经历同样学到了一些信用卡知识，提前积累信用，为未来做些准备吧。\n最后，B 站刷到几个很励志的视频，接受努力而不得的现实，接纳平凡的自己。\n\nGitHub 页面有了小小的改版，截图留念哈\n从过审到发布等了一个月，终于拿下了一血，感谢安全客~\n\n","categories":["Relive youth"]},{"title":"从头开始——大四下学期 & 2023 总结","url":"/2024/04/04/summary_semester_8_2023/","content":"这一年，从大学毕业到步入社会工作，节奏变幻之快，此间忆起，不禁让人有些恍惚。时间就像穿越了虫洞一般，眨眼间便是跨越到了 24 年，而 23 年的总结才姗姗来迟。如题，文章先从我的大学讲起，也许这也是最后一次正式地怀念人生彻底逝去的校园时光了。\n对这所大学从开始的厌弃到后来的即来之则安之，\n阴差阳错，甚至觉得是命运之神眷顾，因为横空出世的疫情，四年大学在校期间却尚不及两年，\n恍恍惚惚间，更是到了毕业季，看着到手的学位证和毕业证，忽念至此，竟有些唏嘘惆怅，对这大学的复杂情感也画上了句号。\n十几年的学校生涯终究临近尾声，还没好好感受到象牙塔的美好，就被时间洪流冲进了社会这个大染缸兼屠宰场\n\n钱钟书先生说「年轻的时候，我们常常把自己的创作冲动误以为是自己的创作才华」。其实，我们也容易由创作欲望出发误以为自己有创作时间。很多时候，我们想做的事情很多，但其实时间和精力都是单一且有限的，很难做到并行。如何有效协调管理自己的创作欲望，如何在工作和兴趣之间做取舍，这又是一个新的课题，我们以后再谈。\n\n整理完了一年前做的鸟叔 Linux 笔记包含的 bash/shell 脚本也学完了后期可以再学着写一些简单的批处理脚本\n利用 PaperYY 查重降重，达到免费版 0.%、专业版 %、至尊版 % 的重复率，最后等待学校系统的开放及知网查重。\n效仿 @OdysseysEth ，今年年终总结也整理一些自己的人生信条。\n不愿言说的事情，你有权对我保密，但请明言。我虽有好奇心，但也有分寸感；比起欺骗与敷衍，我更喜欢真实，一个虚假的谎言与借口，我无法接受，更拒绝所谓的沉默，那样我只会当作是冷暴力。\n不会把自己的意愿强加给别人，这也是基本素养我会慢慢引导，感兴趣我乐意付出，不感兴趣我在分享过程中也是梳理自己的思路，现在的我从不无的放矢，我所做的每一步皆有自己的考量，也力图从中获得些许思考和感悟，如此自可抵消所谓的失望情绪，当身边人不再能够给予精神上的鼓励，反而会带来不断内耗的时候，我就懂得了，人不过都是在自我救赎，能拯救自己的只有自己，安全感是自己给自己的\n用「无忧行」开启了号码托管，两张主卡都降到了 8 元保号套餐，转用流量卡——电信星卡，整体体验不错，又学到了一波节流操作。\n去年写到 Notepad++ 转 VSCode，其实还应该加上 VS2019，\n\n想用 vscode 开发 c++，你需要先学 gcc, makefile, cmake, c++ 的编译过程，如何链接库，如何引入头文件，如果vscode + linux 运行就还需要学习 Linux 的使用以及如何配置 vscode 中的 launch.json, task.json 和 c_cpp_properties.json。 劝退是不是？但体积小运行快的确很好，hello world 选手还是推荐vs入门\n\n6 月 2 日从家出发，和四位可爱的室友来了一场令人艳羡的毕业旅行。\n彩云之南，落地昆明，游览大理，抵达丽江，还在山城重庆一日游，最后踏上归途，9 日到家。\n昆明之行，\n白族大理，\n丽江之游，\n山城重庆，\n然，冥冥中在最后一趟呼和东站的旅程中，隐隐有种要阳的感觉，嗓子有些发炎，直至归家第三日 12 日，测了第一次抗原，果真是二阳了……事实上，9 日那天已经嗓子干涩，前兆分明，可惜还是没引起足够重视，「就是懒……」，发烧到飘飘欲仙，恍恍惚惚。明明不想摆烂，可病毒终究打烂了我。\n从编程讲师，下降到乐高机器人老师，最终落地于淘宝客服。\n最后发展到了 产品开发 的方向\n刷 V2EX 有感，决定重新拾起 Notion，之后搞定 Python 的剩余项目，C++ 先放一下，开始研究开发自己的 ios 应用。\n12 月 8 日，晴飞往广州，一如我当初寻她一般，从前期得知消息时不时的激动期盼，再到正式启程前的平淡，平复的情绪之下，是一种自然又心安的感觉，心头不自觉想到「哦！这一场双向奔赴的爱情啊」很快，当在时空隧道的尽头见到她的那一刻，心底的幸福感油然而生，入眼是她，满心欢喜。\n越秀公园 圣心大教堂 沙面岛 广州塔 海心沙\nVS2019编译运行 C/C++ 详细教程——同时美化你的 IDE\n"},{"title":"时代弃婴——大三下大四上学期总结","url":"/2023/02/07/summary_semester_6_7/","content":"\n在疫情黑天鹅的驱赶之下，时间长河无情地冲刷而过，无暇四顾间，四年大学便临近尾声……这一年的家里蹲，懒懒散散没留下什么深刻印象，知行不合一带来的内心焦虑，如今唯剩叹息与无力。复盘无事可述，这两篇总结便放在了一起。\n\n过往与追求重读了之前的总结，发现大二下内心就对安全和开发的职业发展有了分歧，可惜后来又被一时的考研洪流裹挟，一年备考时光最终全部歇菜。犹记得文章前置标题的思路还是源自 薇拉航线🌺 ，这次「时代弃婴」略显悲怆，但也展现了疫情三年多，我第一次被封控，及突然放开后的感染，风云变幻中，个人在时代的洪流里如一叶扁舟，摇摇欲坠的深切感触。\n随之「互联网寒冬」带来的裁员潮席卷而来，让我再次有些生不逢时之感，加上考研政治科目的摆烂，更让我感到环境对人的影响之深，足以左右人生的方向，对绝大多数人来说「出淤泥而不染」只是个幻想，被「潜移默化」才是生活的真相，为了一纸文凭把时间浪费在无用的东西上，让我愈发觉得在亵渎自己的生命。\n尤其当我看到了更多的可能，趁着还年轻，我想去追寻更多不确定性的东西……\n尝试与收获大三下学习图形学的时候，没有使用老师发放的内置图形库的 DevC++，自己用 VS 2019 折腾，了解了 EGE安装与配置 ，对于 C++ 库的安装，包括 VS 的 include 和 lib 目录的查找，还有些细节如 VS 2019 去掉控制台。\n软件设计师的备考，范围很广，顺带对 CS 相关学科的总体框架有了一个新的了解和认识，也算为转开发做了一些前期知识储备吧。\n了解了配音，还没尝试就胎死腹中了……\n突然想提高生活质量，列了些小物件：电动牙刷飞利浦 HX6511，就是声音比我预想得还是大了太多；人体工学椅，不想要头枕，国产还都有，真符合劳动人民的国情啊；电动升降桌，据说宜家不错，搬家党只是想想罢了；电子钢琴 YAMAHA P-125（音色更香，红白黑配色的外观也喜欢）Roland FP-30X（键盘手感更好，蓝牙等支持更现代化，搭配 U 型架单踏 + 监听耳机琴凳礼包 ￥4K+）\n遇到的一些问题，暂待解决：\n\n如何解决 Google AdSense 中的低价值内容问题？只写独特和原创的内容。确保没有从其他网站盗窃内容。删除抄袭的内容（如果有的话）。通过改变写作风格和内容结构来提高内容质量。将每篇博文的字数增加到 800 字以上。\n\n\n获得 Google AdSense 批准的建议发布至少 15 - 20 个帖子；确保已被 Google Search Console 编入索引（如检查 site:yourwebsite.com）；只编写内容丰富、原创且组织良好的高质量文本内容；质量比数量重要得多。\n\nBlogger 搭建第二博客站点—— 信息熵\n\nHexo进阶-生成站点地图\n\n粤语的学习再次让我感到语言的魅力，每一门外语的开启都能让自己的世界随之扩大。\n开始学习 Python，顺带把正则表达式学了一些，着实强大。\n课设项目中，学会了 Nvicat、mvn 等基操；在 debug 过程中痛并快乐着，有了些处理报错的经验，不能揪着一条不放，多试几条不同的，问题也许就解决了；复现环境，最好严格按照原作者的来，不然可能各种报错。\n渐渐体会到了 IDM 的强大，一些网站下载链接无法在浏览器打开的，用 IDM 还能下载下来。\n每一次翻墙意外失足的时候，我都有一种尽快住在外面的打算和冲动，而且愈演愈烈！\n左手尺神经病变，查了诸多资料表示，这不大不小的症状也许要伴随终生了。\n第一次自己一个人看电影——《人生大事》\n《重生之似水流年》真的超级羡慕书中那随性散漫的生活和彼此相知相熟的伙伴啊！不论大家是什么身份，也不论生活变成什么样子。只是大伙聚在一块儿，就又回到了当年的样子。就像在齐磊家的小院，一切都是那么随性，无拘无束。\n要用到 GoodNotes 中的图片，遂临时折腾了下黑苹果（大有学问，故点到为止），当是提前适应 MacOS 了。\n\n正如我 10 年前刚接触双拼，我认为我剑指如飞，没必要换。但后面被小鹤双拼的一位网友晒的码字速度吸引，探索下去，花了 3 个月，打开了新的世界。正如我 7 年前刚接触 macbook ，我认为 windows 已经很棒，没必要换。但后面被 10 小时续航吸引，买了回来，花了 3 个月，打开了新的世界。正如我 5 年前刚接触健身，我认为肌肉酸痛导致卧床 1 天的体验太可怕，太痛苦了。但后面被基友鼓励，坚持下去，花了 3 个月，打开了新的世界。但是也反复接触了很多对我而言，最终确定为没用的东西，但探索这个过程本身，就令我得到了其他额外的收获。\n\n这个过程如我从全拼转双拼，从手机 9 键转 26 键，从 Windows 转 macOS，从 Notepad++ 转 VSCode 一般痛苦，但转变成功后的新世界也让我充满期待，像品味酸苦的咖啡，回味无穷~\n也正是这些转变，我又学习到很多新概念和东西，如双链笔记这个「挖坑神功能」、「引用万金油」，macOS 的高效优美，还有 Notion 的游戏化自勉机制，都让我为之着迷。\n折腾了几个 GitHub 成就徽章。\n\n《英语自学手册》从阅读出发，「三个台阶」的方法论条理清晰，看起来很科学，未来用一年的时间实操起来，好好提升一下自己的英语能力。等 100 篇阅读结束，COCA20000 词汇达到 90% 的掌握度，就可以迈向第二台阶的打磨阶段了。\n视频号刷到一首特别好听的宝藏歌曲——《可能》李怡然在 22 年山东日照实验高中军训晚会上唱的（原创歌曲），被天使吻过的嗓音，真的太治愈了。\n\n李怡然同学，推心置腹，无话不说，偶尔也心存芥蒂闺蜜：就是那种今天吵，明天笑，近了烦，远了想，不见时挂念，见了时讨厌，自己能欺负，别人不能欺负的奇怪东西。\n\n2022 年 10 月 9 日，意外发现 @435Hz 章工推特在 10 月 6 日删号，各种猜测，众说纷纭，接着又去看 核电站 发现也炸了……祸不单行啊，我的精神食粮没了。\n意外发现这个 网站头像 和章工的是同一只熊，曾经的疑惑又浮现在脑海，二人是否是同一人呢？同一个时间节点消失，着实巧合了一些。\n去互联网博物馆找到了核电站截止 8 月 2 日之前的 快照 仅作备份吧，根据记录从 8 月 22 日开始网站解析应该就失效了，到现在随机乱跳。\n10.6 “一个人知道自己为什么而活，就可以忍受任何一种生活。天纵英才，晨勃不再。” 30 天 deactivate 已过，章工真没了。11.5 @Sunmonek 抢注了章工的 ID11.13 章工回来了，评论区 @Abcz_Tw 提到了核电站，进一步验证了我的猜想。不过用 @ubuyfun 的话说，根本就无需证明，真假也许很重要，也许不重要。12.7 确定了核电站是章工的，也恢复了，开心！\n\n11 月初，学着用 PR 剪了七八个 shorts 发在 YouTube 上，效果还不错，先做点简单的剪辑熟悉 PR，尽快把订阅混上 1K，再慢慢探索自己的影片风格，当下有了一些思路，但内容题材上还需要继续思考，「主要还是会的东西太少了，没什么拿得出手的」。\n之后 Mac 本上再换 FCPX，考虑到超级大的渲染空间，外接一块 1T SSD 是最佳选择，本地处理起来据说很麻烦。AE 大概是用不到，视频方向不同，加特效会显得花里胡哨，简洁明了，内容为王；后期有调色需要再学达芬奇，新手上路，觉得视频剪辑还蛮好玩的「而且逼格也高不是」哈哈！写到这里，要吐槽自己一句，考研的事情是一拖再拖，实在是动力不足啊……\n注册了一亩三分地，熟悉的 Discuz 论坛系统，怀念曾经的黑客内参了。\n11.15 天人交战了好久，终于下定决心放弃考研，转向求职工作之路……耳机里循环着 걱정말아요 그대，到底还是没忍住大哭了一场，压抑了许久的情绪也得到了些许释放。回想这一路走来，断断续续备考了一年多，付出了很多，也放弃了太多，而收获却寥寥无几，不禁唏嘘慨叹。\n这世间，世事难料，疫情肆虐，经济下行，未来难测，前路茫茫，我不知道这个选择是否正确，是临阵脱逃，无论沉没成本，亦或及时止损，我只知道，两条路都不好走。当仰望过世界，当凝视久深渊，当野心已膨胀，当自由的光辉洒满胸膛，怀抱着最好的希望，但预做最坏的打算，我还是做出了这可能影响我一生的决定与抉择。\n这样也好，被时代裹挟的身躯挣脱了枷锁，不再随波逐流，且初心尚在，找回了来时的路，再次奔向充满未知的远方。那些所担心的，所纠结的，似乎也不再是问题，我本身在深渊，又何惧坠入深渊！\n12.27 突然去 B站搜了个花手视频 然后学会了……感觉自己多少有点神经，之前一直不会突然会了好离谱。\n12.31 和晴一起熬夜跨年，收到了第一次也定将终生难忘的跨年祝福。2023.1.1 教晴双拼。\n晴也会用 「」，会用到我的口头禅、词语，细节这方面，不曾让我失望，甚至还总是带给我惊喜。除夕前夜度过了人生迄今最难忘的一天，第一次玩剧本杀，第一次和朋友吃路边煮串，这一次，感谢遇见。\n12 月底几天时间完成了论文的开题报告和整体的框架设计，论文初稿也完成一半有余，剩下的部分预计在 1 月中旬完工。\n心血来潮做了个验光，初体验隐形眼镜，真的方便哎，就是疲劳用眼，红血丝好多，消不下去。\n工具上的转变：弃用 VS 2019、Notepad++，体验 Obsidian，转向 VS Code。\n\n12.20 阳了！晚上发烧加剧，睡眠很差，嗓子干12.21 早上发烧 39 浑身酸疼，腰疼，喝了一颗双酚退烧片，晚上高烧 39+，没喝药硬扛了一晚，睡眠很差，嗓子疼，咳嗽12.22 早上发烧，37，嗑药一颗，嗓子疼，咳嗽，感冒流鼻涕，流眼泪，晚上睡眠很差12.23 晚上发烧加剧，39+，嗑药一颗，罗红霉素和氨咖黄敏胶囊一天的量，睡前退烧，睡眠一般，嗓子干，感冒流鼻涕，流眼泪12.24 晚上 38+，嗑药一颗，睡前退烧，睡眠恢复，嗓子干，晚上鼻子通透，不再流眼泪12.25 早上一切正常，睡眠正常，嗜睡12.26 晚上一直咳嗽，睡眠很差，嗓子干\n12.27 嗓子发炎，咳嗽持续不断12.28 咳嗽减弱，鼻子基本通气12.29 咳嗽依然挺严重，鼻涕血丝含量较多12.30 咳嗽依然存在，鼻子通气，血丝较少12.31 咳嗽1.1 咳嗽，鼻子干疼1.2 两周了，开始渐渐恢复训练，流鼻涕有点真感冒了，不咳嗽了\n1.3 一到下午四点就开始咳嗽，后来这几天都是1.4 早上出去走了走，状态不错；中午被干锅呛到了，然后就一直咳嗽，这次带着肺疼心脏疼，无语了1.5 咳嗽依然存在，鼻子有血丝1.6 咳嗽依然存在，鼻子有血丝，脸肿了，牙疼，起溃疡1.7 咳嗽减弱，鼻子有血丝，脸肿了，牙疼，起溃疡1.8 恶心乏力，咳嗽变淡，脸还肿着，牙疼，溃疡1.9 脸还肿着，左面牙疼，溃疡有点疼\n1.10 脸还肿着，左右都牙疼，溃疡挺疼1.11 脸消肿了许多，牙疼消失，溃疡基本无感，鼻子有点感冒状态1.12 脸基本消肿，按压还疼，溃疡这次起得快好得快，之后半个月温度骤降，最后一个温暖的晚上洗了个澡，神清气爽1.13 洗澡后无不良感觉，脸部按压痛感降低，1.14 状态正常，除了容易犯困1.15 一切正常了，鼻子还有点冒血1.16 阳康……\n生活经验与感慨托室友邮寄学校的行李，只有德邦能走「第一次听和用」，天真以为和其他快递一样好协商，没想到恶心吐了，投诉坏件赔偿不处理，国家邮政局都不给面子，最后建议司法仲裁，心累无力……\n消费者也好，打工人也罢，老祖宗遗留下来的退让观念，助长了卖方市场的嚣张气焰，最后普通人在维权道路上成了任人宰割的弱者，愈发能感受到经济增长过快和思想进步太慢的不平衡，社会发展的畸形在慢慢呈现。\n大学结束在即，回想小学到高中，没留下一点深刻回忆，昔日同学皆成过往，到站下车便分道扬镳，而我像蒲公英般，随风飘荡，见了诸多风景，却也走马观花，恍恍惚惚，留不住一丝一毫。\n时间真的是让人又爱又恨的东西，我们不用买，时间就有了，可是也不用去花，时间就没了。\n\n终于到了小时候最羡慕的年纪，却没有活成小时候想要的模样。\n\nReference5 款md模块化笔记工具全方位对比Obsidian 是可以用一辈子不换的笔记软件吗Obsidian 中文教程你在 Notion、Obsidian、Remnote 等之间做出什么选择，为什么这么选？Obsidian中有哪些好用的插件值得推荐？回归 Obsidian 的纯与真，写给普通人的入门指南Obsidian 最优雅的多端同步插件LiveSync我的 Obsidian 使用经验2019 我的极简生活2020 极简中的边界与平衡2021 极简三部曲终章：用 Notion 重新管理人生Notion Template GalleryTemplate GalleryNotion PagesFree Notion TemplatesNotion 模板中心Notion 主页墙3000+小时积累的学习工作流\n","categories":["Relive youth"]},{"title":"Self-shortcuts & commands","url":"/2020/11/13/art_shortcuts/","content":"OD\n\n\n断点\nF2\n打开 exe\nF3\n\n\n\n单步步入\nF7\n\n单步步过\n\n\n暂停执行\nF12\n运行\nF9\n\n\n到返回\nCtrl + F9\n跳过异常\nShift + F9\n\n\n重新运行\nCtrl + F2\n关闭程序\nAlt + F2\n\n\n跟踪步入 Call\nCtrl + F11\n跟踪步过 Call\nCtrl + F12\n\n\n撤销修改\nAlt + backspace\n查找地址\nCtrl + G\n\n\n补丁窗口\nCtrl + P\nAPI 函数\nCtrl + N\n\n\n查找二进制字符串\nCtrl + B\n查找\nCtrl + L\n\n\n显示记录窗口\nAlt + L\n显示模块窗口\nAlt + E\n\n\n显示呼叫堆栈\nAlt + K\n显示断点窗口\nAlt + B\n\n\nMarkdown[toc]#1-6\n\n“- + *” 与 “1.” 结合\n开头两空格\n开头五空格\n\n\n\n\n\n\\ 转义\n[名称](url) 图片前加 !\n\n引用第一层\n\n内层引用 前空一格\n\n\n斜体 粗体 代码块\n*** — ___ 分割线\n删除线\n^上标^ ~下标~\n|左|右|居中||:--|--:|:-:||单|元|格|\n\nChrome\n\n\n打开主页\nAlt + Home\n关闭当前窗口\nAlt + F4\n\n\n\n打开菜单\nAlt + F/E\n跳转到地址栏\nAlt + D\n\n\n切换用户\nCtrl + Shift + M\n网址补充www.com\nCtrl + Enter\n\n\n清除浏览数据\nCtrl + Shift + backspace\n打开新窗口\nCtrl + N\n\n\n无痕打开新窗口\nCtrl + Shift + N\n打开跳转新标签页\nCtrl + T\n\n\n关闭当前标签页\nCtrl + W\n跳转到特定标签页\nCtrl + 1~9\n\n\n跳转到下一个标签页\nCtrl + PgDn\n跳转到上一个标签页\nCtrl + PgUp\n\n\n查找\nCtrl + F 或 F3\n历史\nCtrl + H\n\n\n下载\nCtrl + J\n书签\nCtrl + Shift + O\n\n\n保存书签\nCtrl + D\n保存所有书签\nCtrl + Shift + D\n\n\n显示/隐藏书签栏\nCtrl + Shift + B\n\n\n\n\n放大/缩小\nCtrl +/-\n恢复大小\nCtrl + 0\n\n\n源码\nCtrl + U\n检查\nCtrl + Shift + J/I 或 F12\n\n\n\n快速按右键接着马上按 Alt 键，可以出现右键快捷键提示……\n\nchrome://flags国内环境推荐关闭 QUIC 协议：（影响不大）Experimental QUIC protocol 值改为 Disabled\nside-panel 值改为 Disabled（已失效）\n去掉更新Chrome浏览器后工具栏的扩展程序图标只能启动时加 “–disable-features=ExtensionsToolbarMenu” (别忘带引号)\nSearch your screen with Google Lens 值改为 Disabledhttps://limbopro.com/archives/21070.htmlLens-Standalone 值改为 Disabled\nParallel downloading 值改为 Enabled\nSmooth Scrolling 值改为 Enabled\nWindows\n\n\n远程桌面\nWin + R mstsc\n布局\nWin + ←↑→↓\n\n\n\n任务栏切换\nWin + 数字\n投影\nWin + P\n\n\n创建新文件夹\nCtrl + Shift + N\n显示桌面\nWin + D/M\n\n\n表情符号\nWin + .\n显示设置\nWin + I\n\n\n文件资源管理器\nWin + E\n左侧工具栏\nWin + X\n\n\n右侧设置\nWin + A\n锁定计算机\nWin + L\n\n\n任务视图\nWin + Tab\n连接\nWin + K\n\n\n切换输入法\nWin + 空格 / Alt + 左/右 Shift\n\n\n\n\n计算器 Win + R calc屏幕键盘 Win + R oskWin + RWin + R\nScroll lock 键：FN + K/C\n设置自启动 Win+R 复制，添加快捷键\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n搜索栏输入 cmd 后，Ctrl + shift + enter 直接进入管理员模式命令行\nCopy /b 1.exe+1.txt 2.exe（把1.txt藏进2.exe文件）\nText processing\n\n\nCtrl + Home\n光标达到文本最前面\nCtrl + End\n光标达到文本最后面\n\n\n\nCtrl + Shift + Home\n光标所在位置到最前面的部分\nCtrl + Shift + End\n光标所在位置到最前面的部分\n\n\nCtrl + Shift + F\n输入法繁简转换\nCtrl + D\n复制上一行\n\n\nVimium\n\n\n向下/上/左/右移动\nj/k/h/l\n后退/前进网页\nH/L\n\n\n\n选择左/右标签\nJ/K\n向下/上跳动\nd/u-e\n\n\n回到顶/尾部\ngg/G\n本窗口/新窗口\nf/F\n\n\n刷新\nr\n创建/查看标签页\nt/T(数字nt)\n\n\n新标签打开多个链接\nAlt + f\n打开新页面并切换\nS\n\n\n查找历史书签\no/O\n查找书签\nb/B\n\n\n关闭/恢复标签\nx/X-z\n切换到刚才标签\n^-q\n\n\n移动当前标签到左/右侧边\n&lt;&lt;-&lt;/&gt;&gt;-&gt;\n将标签页移动到新窗口\nW-ww\n\n\n搜索剪贴板关键字\np/P\n开/关静音\nAlt + m\n\n\n固定标签栏\nAlt + p\n上/下一页\n[[,]]-[,]\n\n\n复制当前页面\nyt\n第 n 个输入框\nngi\n\n\n复制当前网址\nyy\n编辑当前网址\nge/gE\n\n\n复制网址拷贝\nyf\n显示网页源代码\ngs\n\n\n跳转到当前 url 上一级/最高级\ngu/gU\n切换到第一个 tab\ng0\n\n\n切换到最后一个 tab\ng$-g9\n\n\n\n\n当页标记\nm + 一个小写字母\n跳转到当页标记\n`小写字母\n\n\n全局标记\nm + 一个大写字母\n跳转到全局标记\n`大写字母\n\n\n插入模式\ni\n查找模式\n/\n\n\n下/上一个匹配\nn/N\n\n\n\n\nVisual Studio\n\n\n新建项\nCtrl + Shift + A\n现有项\nAlt + Shift + A\n\n\n\n生成\nCtrl + B\n反汇编\nCtrl + Alt + D\n\n\nVisual Studio Code\n\n\n行复制\nCtrl + c\n行移动\nAlt + ↑/↓\n\n\n\n行复制\nAlt + Shift + ↑/↓\n格式化\nAlt + Shift + F\n\n\n行注释\nCtrl + /\n块注释\nAlt + Shit + A\n\n\n整行缩进\nCtrl + ]/[\n切换编辑点\nAlt + →/←\n\n\n跳转括号\nCtrl + Shift + \\\n重开一行\nshift + enter\n\n\nCtrl+Space\n代码模板\nCtrl + Shift + P\n命令窗口\n\n\n断点\nF9\nCtrl + \\\n分裂窗口\n\n\nCtrl+Shift+V\nmd 预览\nCtrl+K V\n侧栏 md 预览\n\n\n逐过程\nF10\n逐语句\nF11\n\n\n裁剪尾随空格\nCtrl + shift + x\n自动换行\nalt + Z\n\n\n回到上一个光标\nCtrl+U\n删除一行\nCtrl+Shift+K\n\n\n选中每行末加光标\nAlt+Shift+i\n行跳转\nCtrl + G\n\n\n跳转到函数定义\nF12\n跳转到函数实现\nCtrl + f12\n\n\n跳转到函数引用\nShift + F12\n代码重构\nF2\n\n\n删除光标左部\nCtrl + backspace\n删除光标左部\nCtrl + Delete\n\n\n折叠\nCtrl + Shift + ]/[\n选中下一个\nCtrl + d\n\n\n终端\nCtrl + `\n清空终端\nCtrl + k\n\n\n底部面板\nCtrl + j\n侧边栏\nCtrl + b\n\n\n打开文件位置\nalt+shift+R R\n\n\n\n\nBookmarks&#123;    &quot;key&quot;: &quot;alt+b&quot;,    &quot;key&quot;: &quot;alt+k&quot;,    &quot;key&quot;: &quot;alt+j&quot;,&gt; 子节点+ 兄弟节点* 乘法# ID. 类名    &quot;key&quot;: &quot;alt+w r&quot;,    &quot;command&quot;: &quot;editor.emmet.action.wrapWithAbbreviation&quot;Ctrl+Alt+N  runCtrl+Alt+M  stopCtrl+Alt+J  select### Code Spell Checker```jsonCtrl+.Alt + C  Check task listAlt + S  StrikeThroughAlt + shift + f  Table formatter### Paste Image```jsonctrl + alt + V### Trailing Spaces```json&#123;    &quot;key&quot;: &quot;alt+t&quot;,&#123;   &quot;key&quot;: &quot;alt+q&quot;,    &quot;command&quot;: &quot;workbench.action.quickSwitchWindow&quot;## Git &amp; Hexo### 更换电脑部署```ymlnpm install hexo-cli -gnpm installnpm install hexo-deployer-git --save\nhexo cleanhexo s -o 实时预览hexo d -g 生成部署hexo new &quot;post&quot; 新建文章hexo new page &quot;page&quot; 新建页面\ntheme updategit rm -rf --cached keepgit add keep&#x2F;*git add . &#x2F;&#x2F;更新工作的状态树git stash &#x2F;&#x2F;将未提交修改保存至堆栈中git pull  &#x2F;&#x2F;获取更新git stash pop &#x2F;&#x2F;弹栈\n\nhexo upgradenpm -vnode -vhexo -vnpm install npm@latest -g  //npm 更新[node](https://nodejs.org/zh-cn/download/) 下载覆盖安装npm install -g npm-check     //安装 npm-checknpm-check                    //查看系统插件是否需要升级npm install -g npm-upgrade   //安装 npm-upgradenpm-upgrade                  //更新 package.json//在执行 npm-upgrade 命令后会要求输入 yes 或 no ，直接输入 Y 即可npm update -g                //更新全局插件npm update --save            //更新系统插件\n\ngit initgit statusgit add filenamegit commit -m &quot;commit filename&quot;git log 按 Q 退出git branch [a] [-d/D a] 新建分支 a / 删除/强制删除分支 agit push origin --delete 删除远程分支git checkout [a] [v1] [-b b] 切换到 a 分支 / v1 标签 / 创建并切换到 b 分支git merge [a] 将 a 分支合并到 master 分支git tag [v1] 添加标签git remote add origin url 关联远程仓库git pull/push origin master:djs 拉/推 远程主机名 远程分支名:本地分支名\n删除所有远程标签git show-ref --tag | awk &#x27;&#123;print &quot;:&quot; $2&#125;&#x27; | xargs git push origin\n删除所有本地标签git tag -l |awk &#x27;/1\\.1\\../&#x27; | xargs git tag -d\n从远程仓库获取所有分支git clone xxxgit branch -r | grep -v &#x27;\\-&gt;&#x27; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;;git fetch --allgit pull --all\n合并两个仓库现在有两个仓库 kktjs/kkt 和 kktjs/kkt-next 我们需要将 kkt-next 仓库合并到 kkt 并保留 kkt-next 的所有提交内容。\n\n1.克隆主仓库代码\n\ngit clone git@github.com:kktjs/kkt.git\n\n2.将 kkt-next 作为远程仓库，添加到 kkt 中，设置别名为 other\n\ngit remote add other git@github.com:kktjs/kkt-next.git\n\n3.从 kkt-next 仓库中拉取数据到本仓库\n\ngit fetch other\n\n4.将 kkt-next 仓库拉取的 master 分支作为新分支 checkout 到本地，新分支名设定为 kkt-next\n\ngit checkout -b kkt-next other/master\n\n5.切换回 kkt 的 master 分支\n\ngit checkout master\n\n6.将 kkt-next 合并入 kkt 的 master 分支\n\ngit merge kkt-next\n\n如果第 6 步报错 fatal: refusing to merge unrelated histories，执行下面：\n\ngit merge kkt-next --allow-unrelated-histories\n在合并时有可能两个分支对同一个文件都做了修改，这时需要解决冲突，对文本文件来说很简单，根据需要对冲突的位置进行处理就可以。对于二进制文件，需要用到如下命令:\ngit checkout --theirs YOUR_BINARY_FILES     # 保留需要合并进来的分支的修改git checkout --ours YOUR_BINARY_FILES       # 保留自己的修改git add YOUR_BINARY_FILES\n\n创建密钥ssh-keygen -t rsa\nssh -T git@github.com\n别名git config --global alias.plm &#x27;pull origin master&#x27;\ngit config --global alias.psm &#x27;push origin master&#x27;\n其他配置git config -l\ngit log --graph --pretty=format:&#x27;%Cred%h%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit --date=relative\ngit config --global http.http://github.com.proxy 127.0.0.1:10808\ngit config --global https.https://github.com.proxy 127.0.0.1:10808\nssh: connect to host github.com port 22: Connection timed out修改 .ssh/known_hosts 文件中任意一个 ip 为当前 IP\nFailed to connect to github.com port 443: Operation timed out/etc/hosts 把 GitHub 相关的几行代码注释掉，保存 hosts 文件这种的 #192.30.253.112 github.com\nFailed to connect to 127.0.0.1 port 1080: Connection refused查询是否使用代理：\ngit config --global http.proxy\n取消代理：\ngit config --global --unset http.proxy\n\nhttps://blog.csdn.net/qq_35246620/article/details/66973794\n\nGitHubShift + / 查看快捷键\n在github上任意项目加个”gh-pages”分支，通过github page/你项目的名称就可以访问到那个分支的静态文件issue 模板 https://github.blog/2016-02-17-issue-and-pull-request-templates/小绿点可以通过修改系统时间再 commit 来控制形状。\ngithub.githistory.xyz\nSite wide shortcutss or / Focus the search bar.\ng n    Go to your notifications.\nRepositoriesg c    Go to the Code tab\ng i    Go to the Issues tab.\ng p    Go to the Pull requests tab.\ng a    Go to the Actions tab.\ng b    Go to the Projects tab.\ng w    Go to the Wiki tab.\nSource code editinge    Open source code file in the Edit file tab\ncontrol f or command f    Start searching in file editor\ncontrol g or command g    Find next\nshift control g or shift command g    Find previous\nshift control f or command option f    Replace\nshift control r or shift command option f    Replace all\nalt g    Jump to line\ncontrol z or command z    Undo\ncontrol y or command y    Redo\ncmd + shift + p    Toggles between the Edit file and Preview changes tabs\nSource code browsingt    Activates the file finder\nl    Jump to a line in your code\nw    Switch to a new branch or tag\ny    Expand a URL to its canonical form\ni    Show or hide comments on diffs.\na    Show or hide annotations on diffs\nb    Open blame view.\nVim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCursor Movement左，下，上，右h j k l上/下翻页，半翻页，翻一行^-f/b , ^-u/d , ^-y/e将第 n 行滚至屏幕顶部，当前行nz , z跳至下个单词尾部/头部 以空格区分e / w , E / W跳至上个单词头部/以空格区分b / B跳至行首/首字母，行尾0 / ^ , $跳至首行/某行/尾行gg / [N]G / G跳至最后一次编辑的地点. 句首 / 句尾 ， 段首 / 段尾 ( / ) , &#123; / &#125; 屏幕 首行 / 中间行 / 底行 H / W / l 跳至书签 a a向右/向左跳至本行字符 x 处，右前/左后fx / Fx , tx / Tx 使用 ; 重复括号匹配%\nMacros开始/停止录制名为 a 的宏qa / q执行名为 a 的宏 / 重复执行@a / @@\nExiting保存 / 保存退出 / 退出 / 不保存退出:w / :wq , :x , ZZ / :q / :q!:syntax on 语法高亮\nInsert Mode字 前 / 后 插入，行 前 / 后 插入i / a , I / A行 下 / 上 插入o / O匹配下 / 上一个关键字（自动补全）^-n / ^-p\nEditing替换单个字符 / 替换模式r / R合并下面的行到当前行J 删除并重新编辑 行/ 单词/ 当前至行尾cc / cw / c$删除 字符 / 行 并进入编辑模式s / S交换字符xp撤销 / 重做 / 修正之前对改行的操作u / ^-r / U重复最后一个命令. 大小写转换 字符 / 单词 ,单词 大写/ 小写~ / g~iw , gUiw / guiw左 / 右 / 自动 缩进&lt;&lt; / &gt;&gt; / ==\nSearch &amp; Replace从首行 / 向前 / 向后查找当前单词gd / # / *向下 / 向上 查找， 下一个 / 上一个/pattern / ?pattern , n / N行内替换不询问，询问（特殊字符需转译）:s/old/new , :s/old/new/gc替换 1 至 2 行，替换文件中所有:1,2s/old/new , g/old/s//new:set nu/number 显示行号\nMulti-File打开 / 关闭文件，下 / 上 一个文件:e / :bd , :bn / :bp打开文件并分屏/垂直分屏:sp fn / :vsp fn切换分屏h j k l分屏/垂直分屏，切换，关闭&lt;^-w&gt; s / v , w , q最大化尺寸，等分尺寸，增加/减小尺寸&lt;^-w&gt; _ / | , = , + , -标签 创建，前/后/最前/最后切换，移动:tabe fn,gt/gT/:tabr/l,:tabm [N]\nVisual Mode开启选择模式 字符 / 行 / 块v / V / ^-v跳至区域边缘/角 ， 区域大/小写切换o / O , U / u选择一个单词,()/{}内,不包括左括号aw , ab / aB , ib / iB多行同时插入 –^-v ^-d I – [ESC]\nCut &amp; Paste剪切 行 / 到行尾 / 单词 / 字符 / 前字符dd / D / dw / x / X复制 行 / 多行 / 单词 / 到行尾yy / 2yy / yw / y$粘贴 后 / 前 / 自动缩进p / P / ]p寄存器 查看(0 是复制，1-9 是删除的行):reg新建 / 追加 / 粘贴 [a] 寄存器“a / “A / “ap:set tabstop/shiftwidth=4 缩进:set cindent C/C++语法缩进:set nocompatible 去掉一致性\n注：^- 代表 Ctrl\n\nyy 复制当前行p 粘贴dd 剪切当前行：2ddu 撤销:set nu 行号:set nonu 取消行号:noh 临时取消高亮i 插入o 当前行下插入空行并进入编辑模式O 当前行上插入空行并进入编辑模式n 继续向上搜索N 继续向下搜索$ 光标到行尾0/^ 光标到开头G/$ 光标到最后一行100gg/100 光标到指定行C 删除光标到行尾内容并进入编辑模式A 到行尾并进入编辑模式\nctrl + f&#x2F;b&#x2F;d&#x2F;u 向下&#x2F;上移动一&#x2F;半页+&#x2F;- 移动到非空白字符下&#x2F;上一列n空格 向右移动 n 字符n回车 向下移动 n 行0&#x2F;Home $&#x2F;End 移动到这一列最前&#x2F;后面字符处H&#x2F;M&#x2F;L 移动到屏幕最上方&#x2F;中间&#x2F;下方那一列的第一个字符nG 移动到这个文件的第 n 列&#x2F;? 向下&#x2F;上搜索:n1,n2s&#x2F;word1&#x2F;word2&#x2F;g 在第 n1 与 n2 列之间寻找 word1 字串，并将该字串取代为 word2:1,$s&#x2F;word1&#x2F;word2&#x2F;g &#x2F; gc 从第一列到最后一列寻找 word1 字串，并将该字串取代为 word2 &#x2F; 在取代前显示提示字符给使用者确认是否需要取代nx(del)&#x2F;nX(backspace) 向后&#x2F;前删除 n 个字符ndd 删除光标所在的一整行&#x2F;向下 n 行nyy 复制光标所在的那一行&#x2F;向下 n 行p&#x2F;P 将已复制数据在光标下&#x2F;上一列贴上J 将光标所在列与下一列的数据结合成同一列c 重复删除多个数据，例如向下删除 10 列，10cju 复原前一个动作Ctrl + r 重做上一个动作. 重复前一个动作i&#x2F;I 从目前光标处插入&#x2F;在目前所在列的第一个非空白字符处开始插入a&#x2F;A 从目前光标所在的下一个字符处插入&#x2F;从光标所在列的最后一个字符处插入o&#x2F;O 在目前光标所在的下&#x2F;上一列处插入新的一列r&#x2F;R 取代模式，取代光标所在的那一个字符一次&#x2F;一直取代光标所在的文字，直到 ESC:w 写入硬盘文件:q! （强制离开不储存）离开:wq 储存后离开ZZ 文件没有更动，则不储存离开&#x2F;文件已经更动过，则储存后离开:w file 另存新文件:r file 在编辑的数据中，读入另一个文件的数据:n1,n2 w file 将 n1 到 n2 的内容储存成 file:! command 暂时离开 vi 到命令行界面下执行 command 的显示结果:set nu 显示行号:set nonu 取消行号:set\thlsearch\t:setnohlsearch 高亮度搜寻:set\tautoindent\t:set noautoindent 自动缩排（setting）自建 ~&#x2F;.vimrc[dmtsai@study\t~]$\tvim\t~&#x2F;.vimrc&quot;这个文件的双引号\t（&quot;）\t是注解set\thlsearch\t\t\t\t\t\t\t\t\t\t\t\t&quot;高亮度反白set\tbackspace&#x3D;2\t\t\t\t\t\t\t\t\t&quot;可随时用倒退键删除set\tautoindent\t\t\t\t\t\t\t\t\t\t&quot;自动缩排set\truler\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;可显示最后一列的状态set\tshowmode\t\t\t\t\t\t\t\t\t\t\t\t&quot;左下角那一列的状态set\tnu\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;可以在每一列的最前面显示行号啦！set\tbg&#x3D;dark\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;显示不同的底色色调syntax\ton\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;进行语法检验，颜色显示。:files 列出目前这个 vim 的打开的所有文件 :n&#x2F;N:sp &#123;filename&#125; 多窗口 ctrl + w + j&#x2F;k 先按下\t[ctrl]\t不放，\t再按下\tw\t后放开所有的按键，然后再按下\tj\t（或向下方向键），则光标可移动到下方的窗口[ctrl]+x\t-&gt;\t[ctrl]+n 通过目前正在编辑的这个“文件的内容文字”作为关键字，予以补齐[ctrl]+x\t-&gt;\t[ctrl]+f 以当前目录内的“文件名”作为关键字，予以补齐[ctrl]+x\t-&gt;\t[ctrl]+o 以扩展名作为语法补充，以\tvim\t内置的关键字，予以补齐按下‘q’键让vim开始记录，然后按任意键，来告诉vim你想把保存的记录下次通过这个键来调出。本次案例中，这个键设置为‘a’，所以完整的指令就是‘qa’。执行你的命令。按下‘q’来结束记录。需要重复保存的系列动作时，输入‘@a’即可。相对行号.vimrc中加入set relativenumber删除其后的25行：25dd.vimrc中加入以下指令：set clipboard&#x3D;unnamedset clipboard&#x3D;unnamedplus加入这项指令后，在vim中复制粘贴文本就从“CTRL+V”, 和“CTRL+C”这一过程变为简单地输入‘p’。如果你想在不重写你的寄存器的情况下删除文本，你可以在指令前加上“_符号：“_dd 来删除一行。重映射Escape操作.vimrc中加入：cnoremap kj &lt;C-C&gt;cnoremap jk &lt;C-C&gt;键入’jk’或者‘kj’来离开一个指令动词+修饰词+宾语处理空白格(White space fixing).vimrc加入：set list这个指令会在每行结尾显示一个$符号，并且用^I代替tabs。你从而能更容易地识别出tabs和行尾。除此之外，下面的例子中，使用了空代替所有的tabs，这也让空白格更加便于处理：快速查找(navigate)敲击‘gg’来移动到文档的顶部，‘G’来移动到最底部。敲击CTRL+F来快速向前移动，CTRL+B来快速向后移动。敲击‘zz’来重新定位页的中心，这也你的光标就成为新的中心。遇到上括号像‘&#123;’或者‘(’，你可以敲击‘%’来移动到它们所匹配的下括号。‘&#x2F;’可以开始查找你想要的词。日期(date)nmap &lt;F3&gt; i&lt;C-R&gt;&#x3D;strftime(&quot;%Y-%m-%d %a %I:%M %p&quot;)&lt;CR&gt;&lt;Esc&gt;imap &lt;F3&gt; &lt;C-R&gt;&#x3D;strftime(&quot;%Y-%m-%d %a %I:%M %p&quot;)&lt;CR&gt;从而可以只通过键入F3来给文档加日期和时间。x → 删当前光标所在的一个字符。:wq → 存盘 + 退出 (:w 存盘, :q 退出)   （陈皓注：:w 后可以跟文件名）dd → 删除当前行，并把删除的行存到剪贴板里p → 粘贴剪贴板:help &lt;command&gt; → 显示相关命令的帮助。你也可以就输入 :help 而不跟命令。（陈皓注：退出帮助需要输入:q）a → 在光标后插入o → 在当前行后插入一个新行O → 在当前行前插入一个新行cw → 替换从光标所在位置后到一个单词结尾的字符0 → 数字零，到行头^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）$ → 到本行行尾g_ → 到本行最后一个不是blank字符的位置。&#x2F;pattern → 搜索 pattern 的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）P → 粘贴yy → 拷贝当前行当行于 ddPp&#x2F;P都可以，p是表示在当前位置之后，P表示在当前位置之前）u → undo&lt;C-r&gt; → redo:e &lt;path&#x2F;to&#x2F;file&gt; → 打开一个文件:w → 存盘:saveas &lt;path&#x2F;to&#x2F;file&gt; → 另存为 &lt;path&#x2F;to&#x2F;file&gt;:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ不需要输入冒号并回车):q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n到下一个文件）. → (小数点) 可以重复上一次的命令N&lt;command&gt; → 重复某个命令N次NG → 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）gg → 到第一行。（陈皓注：相当于1G，或 :1）G → 到最后一行。w → 到下一个单词的开头。e → 到下一个单词的结尾。如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（陈皓注：程序变量）&gt; 如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（陈皓注：程序语句）% : 匹配括号移动，包括 (, &#123;, [. （陈皓注：你需要把光标先移到括号上）* 和 #:  匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）&lt;start position&gt;&lt;command&gt;&lt;end position&gt;0y$ 命令意味着：0 → 先到行头y → 从这里开始拷贝$ → 拷贝到本行最后一个字符d (删除 )v (可视化的选择)gU (变大写)gu (变小写)可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）在当前行上移动光标:0 → 到行头^ → 到本行的第一个非blank字符$ → 到行尾g_ → 到本行最后一个不是blank字符的位置。fa → 到下一个为a的字符处，你也可以fs到下一个为s的字符。t, → 到逗号前的第一个字符。逗号可以变成其它字符。3fa → 在当前行查找第三个出现的a。F 和 T → 和 f 和 t 一样，只不过是相反方向。dt&quot; → 删除所有的内容，直到遇到双引号—— &quot;区域选择在visual 模式下&lt;action&gt;a&lt;object&gt; 和 &lt;action&gt;i&lt;object&gt;action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符：&quot;、 &#39;、 )、 &#125;、 ]。假设你有一个字符串 (map (+) (&quot;foo&quot;)).而光标键在第一个 o 的位置。vi&quot; → 会选择 foo.va&quot; → 会选择 &quot;foo&quot;.vi) → 会选择 &quot;foo&quot;.va) → 会选择(&quot;foo&quot;).v2i) → 会选择 map (+) (&quot;foo&quot;)v2a) → 会选择 (map (+) (&quot;foo&quot;))块操作，典型的操作： 0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]^ → 到行头&lt;C-v&gt; → 开始块操作&lt;C-d&gt; → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)I-- [ESC] → I是插入，插入“--”，按ESC键来为每一行生效。自动提示： &lt;C-n&gt; 和 &lt;C-p&gt;在 Insert 模式下，你可以输入一个词的开头，然后按 &lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……宏录制： qa 操作序列 q, @a, @@qa 把你的操作记录在寄存器 a。于是 @a 会replay被录制的宏。@@ 是一个快捷键用来replay最新录制的宏。在一个只有一行且这一行只有“1”的文本中，键入如下命令：qaYp&lt;C-a&gt;q→qa 开始录制Yp 复制行.&lt;C-a&gt; 增加1.q 停止录制.@a → 在1下面写下 2@@ → 在2 正面写下3现在做 100@@ 会创建新的100行，并把数据增加到 103.可视化选择： v,V,&lt;C-v&gt;前面，我们看到了 &lt;C-v&gt;的示例 （在Windows下应该是&lt;C-q&gt;），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：J → 把所有的行连接起来（变成一行）&lt; 或 &gt; → 左右缩进&#x3D; → 自动给缩进在所有被选择的行后加上点东西：&lt;C-v&gt;选中相关的行 (可使用 j 或 &lt;C-d&gt; 或是 &#x2F;pattern 或是 % 等……)$ 到行最后A, 输入字符串，按 ESC。分屏: :split 和 vsplit:help split:split → 创建分屏 (:vsplit创建垂直分屏)&lt;C-w&gt;&lt;dir&gt; : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。&lt;C-w&gt;_ (或 &lt;C-w&gt;|) : 最大化尺寸 (&lt;C-w&gt;| 垂直分屏)&lt;C-w&gt;+ (或 &lt;C-w&gt;-) : 增加尺寸https:&#x2F;&#x2F;coolshell.cn&#x2F;articles&#x2F;11312.html#%E7%AA%97%E5%8F%A3%E5%88%86%E5%B1%8F%E6%B5%8F%E8%A7%88\nshell &amp; gdbSHELL : Cursor Movement前 / 后 跳一个字符 backward/forward^-b / ^-f前后跳一个单词alt-b / alt-f跳至 行首 / 行尾 a/end^-a / ^-e删除当前光标到行首的字符^-x ←\nSHELL : Editing粘贴最后一次命令最后的参数alt-.删除光标到右边单词开始(符号空格区分)alt-d删除光标到左边单词结束(仅空格区分)^-w删除光标 前 / 后 一个字符^-h / ^-d删除光标 左 / 右 所有^-u / ^-k清屏^-l复制 / 粘贴^-shift-c/v\nSHELL : Other上 / 下 一条命令^-p / ^-n在历史中向上 / 下寻找最近一条命令alt-p / alt-n向 上 / 下 翻页shift-PageUp/PageDown从历史中查找命令，重复按代表下一匹配^-r\n注：^- 代表 Ctrl\nGCC一步编译$ gcc xxx.c -o xxx预处理$ gcc -E xxx.c (-o xxx.i)-可选预处理后编译为汇编代码$ gcc -S xxx.i -o xxx.s将汇编代码汇编$ gcc -c xxx.s -o xxx.o汇编后连接$ gcc xxx.o -o xxx多文件编译$ gcc xxx1.c xxx2.c test检错$ gcc -padantic xxx.c -o xxx$ gcc -Wall/Werror xxx.c -o xxx调用 GDB 编译$ gcc -g xxx.c -o xxx\nGDB启动 GDB$ gdb 从第一行开始列出源码(gdb) l在 第 n 行 / func 函数入口 设置，取消断点(gdb) break n / func , clear n删除 / 暂停 /开启 断点 n(gdb) delete / disable / enable n运行/ 单步/ 单步进函数/ 继续/ 退出函数(gdb) r / n / step / c / finish单步跟踪机器指令(gdb) stepi / nexti每次单步之后输出设置的表达式及值(gdb) display a打印变量 a 值 / 调用后打印(gdb) p a / xxx(a) / xxx(22)指定运行时的参数 / 查看设置好的参数(gdb) set args / show args查看程序运行路径(gdb) show paths设置环境变量(gdb) set environment varname [=v]查看环境变量(gdb) show environment [varname]打开 / 显示 目录(gdb) cd / pwd查看程序是否运行，进程号，暂停原因(gdb) info program查看函数堆栈(gdb) bt退出循环（退出前循环会自动运行完）(gdb) until运行 shell 命令行(gdb) shell设置监视点，一但监视内容值变化，调试终止(gdb) watch a强行终止(gdb) kill调用函数，并传参(gdb) call xxx(a)源码/反汇编/CPU 寄存器/源码和反汇编 分窗口(gdb) layout src/ asm/ regs/ split分割窗口刷新^-L查看内存的值(参数/oxdtficsbhwg)(gdb) x /x [ADDRESS]修改内存的值(gdb) set *ADDRESS=VALUE\n正则表达式Linux命令查询\n1.重启关机shutdown -h now 关机shutdown -r now 重启shutdown -c 取消\n2.帮助manhelpinfo命令–help\n3.快捷键ctrl+l clear 清屏ctrl+a 光标到行首ctrl+e 光标到行尾ctrl+u 把光标到行首的内容剪切ctrl+k 把光标到行尾的内容剪切ctrl+c 取消ctrl+y 粘贴ctrl+s 锁屏ctrl+q 解锁ctrl+z 暂停当前进程bg 把任务放入后台fg 把任务拿回前台jobs 查看当前队列\n4.文件和目录操作cd ~ 当前用户目录cd .. 回上一级目录cd . 当前目录，一般不用cd - 上一次所在目录mkdir -p [/a/b] 递归创建目录pwd 显示当前目录ls 显示目录内容ls -l 长格式详细信息ls -h 常与 -l 使用，人类可读形式ls -a 所有文件含隐藏ls -d 显示目录信息ls -i 显示 inode 号码ls -t 按修改时间排序ls -r 逆序排序ls -F 标记不同类型文件，如目录/touch 创建文件cp -r 递归复制目录及内容cp -p 复制属性不变cp -d 与复制符号链接有关cp -a 相当于 -pdrmv 移动或改名echo {1..9} 输出 1-9rm -r 递归删除目录rm -f 强制删除head 默认显示文件前十行head -n 数字 显示前多少行tail 默认显示文件后十行tail -n 数字 显示后多少行tail -f 显示文件实时更新内容tailf 跟踪日志文件less 按页查看文件内容G 到最后一行g/gg 到第一行f/空格 向下翻页b 向上翻页q 退出more 按页查看文件内容，到最后一行会退出wc 统计文件行数、单词字节数wc -l 显示行数which 查询命令的绝对路径whereis 查询命令的绝对路径，命令相关文件diff 比较两文件不同vimdiff 可视化比较两文件不同sort -n 按数字排序sort -r 逆序sort -k数字 对某列排序sort -t 指定分隔符uniq 与相邻行合并uniq -c 去重统计次数sort a.txt | uniq -c 统计文件中每个名字出现的去重次数\n5.用户管理及信息查询[Linux核心命令及案例-mk]\n6.文件属性\n7.打包压缩\n8.特殊符号\n9.文件处理\n10.系统管理\n11.磁盘管理\n12.进程管理\n13.网络命令\n14.防火墙命令\n观察系统的使用状态：\t如果要看目前有谁在线上，可以下达“who”这个指令，而如果要看网络的连线状态，可以下达\t“\tnetstat\t-a\t”这个指令，而要看背景执行的程序可以执行“\tps-aux\t”这个指令。chgrp\t：改变文件所属群组chown\t：改变文件拥有者chmod\t：改变文件的权限,\tSUID,\tSGID,\tSBIT等等的特性因此FHS标准建议：根目录（&#x2F;）所在分区应该越小越好，\t且应用程序所安装的软件最好不要与根目录放在同一个分区内，保持根目录越小越好。\t如此不但性能较佳，根目录所在的文件系统也较不容易发生问题。其实usr是Unix\tSoftware\tResource的缩写，\t也就是“Unix操作系统软件资源”所放置的目录.\t\t\t\t\t\t\t\t\t代表此层目录..\t\t\t\t\t\t\t\t代表上一层目录-\t\t\t\t\t\t\t\t\t代表前一个工作目录~\t\t\t\t\t\t\t\t\t代表“目前使用者身份”所在的主文件夹~account\t\t代表\taccount\t这个使用者的主文件夹（account是个帐号名称cd：变换目录pwd：显示目前的目录-P\t\t：显示出确实的路径，而非使用链接\t（link）\t路径。mkdir：创建一个新的目录-m\t：设置文件的权限喔！直接设置，不需要看默认权限\t（umask）\t的脸色～-p\t：帮助你直接将所需要的目录（包含上层目录）递回创建起来！rmdir：删除一个空的目录-p\t：连同“上层”“空的”目录也一起删除将\tll\t（L\t的小写）\t设置成为\tls\t-lcat\t由第一行开始显示文件内容tac\t从最后一行开始显示，可以看出\ttac\t是\tcat\t的倒着写！nl\t显示的时候，顺道输出行号！more\t一页一页的显示文件内容less\t与\tmore\t类似，但是比\tmore\t更好的是，他可以往前翻页！head\t只看头几行tail\t只看尾巴几行od\t以二进制的方式读取文件内容！echo password\t|\tod\t-t\toCc\techo  ASCII\t对照如果你还想要从文字压缩文件当中找数据的话，可以通过\tegrep\t来搜寻关键字喔！而不需要将压缩文件解开才以\tgrep\t进行！\t这对查询备份中的文本文件数据相当有用！另外值得一提的是，tar\t打包出来的文件有没有进行压缩所得到文件称呼不同喔！\t如果仅是打包而已，就是“\ttar\t-cv\t-f\tfile.tar\t”而已，这个文件我们称呼为\ttarfile\t。\t如果还有进行压缩的支持，例如“\ttar\t-jcv\t-f\tfile.tar .bz2\t”时，我们就称呼为\ttarballlinux cat&#x2F;proc&#x2F;cpuinfo及Ispci命令- Ctrl + Alt + F1\\~F6变量\\~符号代表的是“使用者的主文件夹”^M$ CRLF 转换成 LF#\tmount\t&#x2F;dev&#x2F;sr0\t&#x2F;mnt#\trpm\t-ivh\t&#x2F;mnt&#x2F;Packages&#x2F;dos2unix-*# umount\t&#x2F;mnt#\texit(transformer)bash[ctrl]+u&#x2F;[ctrl]+k 分别是从光标处向前删除指令串\t（[ctrl]+u）\t及向后删除指令串（[ctrl]+k）。[ctrl]+a&#x2F;[ctrl]+e 分别是让光标移动到整个指令串的最前面\t（[ctrl]+a）\t或最后面（[ctrl]+e）。echo\t$PATH echo\t$&#123;HOME&#125;(base)变量与变量内容以一个等号“&#x3D;”来链接等号两边不能直接接空白字符变量名称只能是英文字母与数字，但是开头字符不能是数字如你想要让该变量内容继续的在子程序中使用，那么就请执行： export\t变量名称环境变量转成自订变量 declaredeclare\t&#x2F;\ttypeset基本上，指令运行的顺序可以这样看1 .\t 以相对&#x2F;绝对路径执行指令，例如“\t&#x2F;bin&#x2F;ls\t”或“\t.&#x2F;ls\t”；2 .\t 由\talias\t找到该指令来执行；3 .\t 由\tbash\t内置的\t（builtin）\t指令来执行；4 .\t 通过\t$P A TH\t这个变量的顺序搜寻到的第一个指令来执行。通过\ttype\t-a\tls 查询bash\t的进站与欢迎讯息(bash12)1 .\t 标准输入　　（stdin）\t：代码为\t0\t，使用\t&lt;\t或\t&lt;&lt;\t；2 .\t 标准输出　　（stdout）：代码为\t1\t，使用\t&gt;\t或\t&gt;&gt;\t；3 .\t 标准错误输出（stderr）：代码为\t2\t，使用\t2&gt;\t或\t2&gt;&gt;\t；1&gt;\t：以覆盖的方法将“正确的数据”输出到指定的文件或设备上；1&gt;&gt;：以累加的方法将“正确的数据”输出到指定的文件或设备上；2&gt;\t：以覆盖的方法将“错误的数据”输出到指定的文件或设备上；2&gt;&gt;：以累加的方法将“错误的数据”输出到指定的文件或设备上；&#x2F;dev&#x2F;null\t垃圾桶黑洞设备与特殊写法cmd\t;\tcmd\t（不考虑指令相关性的连续指令下达）$?\t（指令回传值）\t与\t&amp;&amp;\t或\t||(bash17)管线命令\t（pipe）管线命令仅会处理\tstandard\toutput，对于\tstandard\terror\toutput\t会予以忽略管线命令必须要能够接受来自前一个指令的数据成为\tstandard\tinput\t继续处理才行。撷取命令：\tcut,\tgrep(bash18)cut在处理多空格相连的数据时，可能会比较吃力一点排序命令：\tsort,\twc,\tuniq双向重导向：\ttee字符转换命令：\ttr ,\tcol,\tjoin,\tpaste,\texpandtr\t可以用来删除一段讯息当中的文字，或者是进行文字讯息的替换！join\t看字面上的意义\t（加入&#x2F;参加）\t就可以知道，他是在处理两个文件之间的数据，\t而且，主要是在处理“两个文件当中，有\t&quot;相同数据&quot;\t的那一行，才将他加在一起”的意思。我们利用下面的简单例子来说明：在使用\tjoin\t之前，你所需要处理的文件应该要事先经过排序（sort）\t处理！\t否则有些比对的项目会被略过呢这个\tpaste\t就要比\tjoin\t简单多了！相对于\tjoin\t必须要比对两个文件的数据相关性，\tpaste\t就直接“将两行贴在一起，且中间以\t[tab]\t键隔开”而已分区命令：\tsplit参数代换：\txargsxargs\t是在做什么的呢？就以字面上的意义来看，\tx\t是加减乘除的乘号，args\t则是arguments\t（参数）\t的意思，所以说，这个玩意儿就是在产生某个指令的参数的意思！xargs\t可以读入\tstdin\t的数据，并且以空白字符或断行字符作为分辨，将\tstdin\t的数据分隔成为\targuments\t。\t因为是以空白字符作为分隔，所以，如果有一些文件名或者是其他意义的名词内含有空白字符的时候，\txargs\t可能就会误判了～他的用法其实也还满简单的！就来看一看先！正则表达式\t（Regular\tExpression,\tRE（bash19）568shell script直接指令下达：\tshell.sh\t文件必须要具备可读与可执行\t（rx）\t的权限，然后：绝对路径：使用\t&#x2F;home&#x2F;dmtsai&#x2F;shell.sh\t来下达指令；相对路径：假设工作目录在\t&#x2F;home&#x2F;dmtsai&#x2F;\t，则使用\t.&#x2F;shell.sh\t来执行变量“P A TH”功能：将\tshell.sh\t放在\tP A TH\t指定的目录内，例如：\t~&#x2F;bin&#x2F;以\tbash\t程序来执行：通过“\tbash\tshell.sh\t”或“\tsh\tshell.sh\t”来执行var&#x3D;$（（运算内容））执行方式差异利用直接执行的方式来执行\tscript当使用前一小节提到的直接指令下达\t（不论是绝对路径&#x2F;相对路径还是\t$&#123;P A TH&#125;\t内），或者是利用\tbash\t（或\tsh）\t来下达脚本时，\t该\tscript\t都会使用一个新的\tbash\t环境来执行脚本内的指令！也就是说，使用这种执行方式时，\t其实\tscript\t是在子程序的\tbash\t内执行的利用\tsource\t来执行脚本：在父程序中执行利用\ttest\t指令的测试功能（608-633）计算\tLinux\t日期的时间是以\t1970\t年\t1月\t1\t日作为\t1\t而累加的日期touch filegroups 有效与支持群组的观察newgrp:\t有效群组的切换exit\t\t\t#\t注意！记得离开\tnewgrp\t的环境喔！（user）如果想要完整的将某个帐号完整的移除，最好可以在下达\tuserdel\t-r\tusername\t之前，\t先以“\tfind\t&#x2F;\t-user\tusername\t”查出整个系统内属于\tusername\t的文件，然后再加以删除吧！id finger默认不安装chfn\t有点像是：\tchange\tfinger\t的意思chsh  change\tshell\t的简写(grp)最好能够使用“\tgroupadd\t-r\t群组名”的方式来创建(su)su\t就这样简单的介绍完毕，总结一下他的用法是这样的：若要完整的切换到新使用者的环境，必须要使用“\tsu\t-\tusername\t”或“\tsu\t-l\tusername\t”，才会连同\tP A TH&#x2F;USER&#x2F;MAIL\t等变量都转成新使用者的环境；如果仅想要执行一次\troot\t的指令，可以利用“\tsu\t-\t-c\t&quot;指令串&quot;\t”的方式来处理；使用\troot\t切换成为任何使用者时，并不需要输入新使用者的密码；仅有规范到\t&#x2F;etc&#x2F;sudoers\t内的用户才能够执行\tsudo\t这个指令(sudo)visudo\t与\t&#x2F;etc&#x2F;sudoerslast\t可以列出从系统创建之后到目前为止的所有登陆者信息目前已登陆在系统上面的使用者呢？可以通过\tw\t或\twho\t来查询如果您想要知道每个帐号的最近登陆的时间，则可以使用\tlastlog\t这个指令喔！\tlastlog会去读取\t&#x2F;var&#x2F;log&#x2F;lastlog\t文件使用者对谈：\twrite,\tmesg,\twallwrite\t使用者帐号\t[使用者所在终端接口][crtl]-d\t来结束输入mesg\tn&#x2F;y 不接受信息#\twall\t&quot;I\twill&quot;mail\t-s\t&quot;邮件标题&quot;\tusername@localhost结束时，最后一行输入小数点\t.（mail）帐号相关的检查工具pwck\t这个指令在检查\t&#x2F;etc&#x2F;passwd\t这个帐号配置文件内的信息，与实际的主文件夹是否存在等信息，\t还可以比对\t&#x2F;etc&#x2F;passwd\t&#x2F;etc&#x2F;shadow\t的信息是否一致，另外，如果\t&#x2F;etc&#x2F;passwd\t内的数据字段错误时，会提示使用者修订。\t一般来说，我只是利用这个玩意儿来检查我的输入是否正确就是了。群组查询 grpckpwconv 这个指令主要的目的是在“将\t&#x2F;etc&#x2F;passwd\t内的帐号与密码，移动到\t&#x2F;etc&#x2F;shadow\t当中chpasswd\t是个挺有趣的指令，他可以“读入未加密前的密码，并且经过加密后，\t将加密后的密码写入\t&#x2F;etc&#x2F;shadow\t当中echo\t&quot;vbird3:abcdefg&quot;\t|\tchpasswdTarballMakefile\t怎么写？\t通常软件开发商都会写一支侦测程序来侦测使用者的作业环境，\t以及该作业环境是否有软件开发商所需要的其他功能，该侦测程序侦测完毕后，就会主动的创建这个\tMakefile\t的规则文件啦！通常这支侦测程序的文件名为\tconfigure\t或者是\tconfig\t。所谓的\tT arball\t文件，其实就是将软件的所有源代码文件先以\ttar\t打包，然后再以压缩技术来压缩，通常最常见的就是以\tgzip\t来压缩了。因为利用了\ttar\t与\tgzip\t的功能，所以\ttarball\t文件一般的扩展名就会写成\t.tar .gz\t或者是简写为\t.tgz\t啰！不过，近来由于\tbzip2\t与\txz\t的压缩率较佳，所以\tT arball\t渐渐的以\tbzip2\t及\txz\t的压缩技术来取代\tgzip\t啰！因此文件名也会变成.tar .bz2,\t.tar .xz\t之类T arball\t是一个软件包，\t你将他解压缩之后，里面的文件通常就会有：原始程序码文件；侦测程序文件\t（可能是\tconfigure\t或\tconfig\t等文件名）；本软件的简易说明与安装说明\t（INST ALL\t或\tREADME）。使用\tgcc\t编译时所加入的那个\t-lm\t是有意义的，他可以拆开成两部份来看：-l\t：是“加入某个函数库（library）”的意思，m\t：则是\tlibm.so\t这个函数库，其中，\tlib\t与扩展名（.a\t或\t.so）不需要写所以\t-lm\t表示使用\tlibm.so\t（或\tlibm.a）\t这个函数库的意思～至于那个\t-L\t后面接的路径呢？这表示：\t“我要的函数库\tlibm.so\t请到\t&#x2F;lib\t或\t&#x2F;lib64\t里面搜寻！”(1021-1091)## Google hack|&quot;&quot;|精确匹配|-|排除关键词|..|数字范围|\\*|通配符||:-|:-|:-|:-|:-|:-|:-|:-||and&#x2F;or|关系|filetype:|查找文件|site:|站内搜索|info:|基本信息||link:|含链接站|define:|单词含义|related:|域名相关站点|intext:|包含关键词页面|## 微软日语输入法清音あ a い i う u え e お oか ka き ki く ku け ke こ koさ sa し shi す su せ se そ soた ta ち chi つ tsu て te と toな na に ni ぬ nu ね ne の noは ha ひ hi ふ fu へ he ほ hoま ma み mi む mu め me も moや ya ゐ wi ゆ yu ゑ we よ yoら ra り ri る ru れ re ろ roわ wa を wo ん nn·浊音が ga ぎ gi ぐ gu げ ge ご goざ za じ ji ず zu ぜ ze ぞ zoだ da ぢ di づ du で de ど doば ba び bi ぶ bu べ be ぼ boぱ pa ぴ pi ぷ pu ぺ pe ぽ po·拗音诸如きゃ、きゅ、きょ，可输入kya、kyu、kyo。把第一个字的母音去掉即可。·其他诸如てゃ、てぃ（ティ）、てゅ，可输入tha、thi、thu。2、促音（小つ）将后面的子音重写两个来表示。如：国家（こっか）kokka、雑志（ざっし）zasshi。但在つ的前面则加“t”来表示，如：発着（はっちゃく）hatchaku。（但在输入时仍应输入hacchaku）|Alt + ~|英文假名切换|Alt&#x2F;Ctrl&#x2F;Shift + Caps Lock|片假名&#x2F;平假名&#x2F;英文平假名||:-|:-|:-|:-||F6|平假名|F7&#x2F;F8|全&#x2F;半角片假名||F9&#x2F;F10|全&#x2F;半角英文数字|F5|偏旁发音输入||きごう + F5|所有记号|たんい|单位符号||すうがく|数学符号|ぎりしゃ|希腊字母符号||前 x&#x2F;l|小假名|ゐ 输入 wi|ゑ 输入 we|||||||||||\nMacOS关闭和退出程序窗口\n⌘ + W 关闭当前的软件窗口（软件并没有真正退出进程），相当于点了左上角的红色叉叉。⌘ + Q 真正退出软件。⌘ + option + esc 强制退出某个软件。通常在软件无响应时使用。\n撤销\n⌘ + Z 键撤销。在 Mac 下，撤销快捷键不仅可以撤销文本输入，甚至可以撤销刚刚不小心的操作！\n比如你刚刚删除了一张图片，但是你马上又后悔了，你当然可以点开废纸篓，找到刚刚删除的图片，然后放回原处。或者在删除文件后马上点击 ⌘+Z，这时刚删除的文件又回到原来的位置！\n删除\n⌘ + delete 删除，即把文件移至废纸篓。\n保存\n⌘ + S 保存。\n新建\n⌘ + N 新建，比如你在用 Safari，那 ⌘+N 就是新建一个 Safari 窗口。你在用 Photoshop，⌘+N 就是新建一个 PS 文稿。\n快速打开聚焦搜索\n⌘ + 空格键可以快速打开聚焦搜索框。聚焦搜索有时候非常高效。\n快速切换软件\n⌘ + tab 可以快速切换已经打开的软看，试一下你就明白了。\n有些快捷键可以到系统偏好设置里修改成你喜欢（习惯）的，比如切换输入法，打开聚焦搜索等。\n空格（space）键\n这又是一个神奇的按键。在 macOS 里，几乎所有文件都可以直接用空格键快速查看预览。如视频、图片、音乐、页面、文档、PDF等等。拿图片举例，只要点选文件夹里某张图片，点击空格键就打开了，再点击上下左右键可切换浏览其他图片。而不用每次都双击打开，再关闭，再双击打开另一张，再关闭……\nOD\n\n\n断点\nF2\n打开 exe\nF3\n\n\n\n单步步入\nF7\n\n单步步过\n\n\n暂停执行\nF12\n运行\nF9\n\n\n到返回\nCtrl + F9\n跳过异常\nShift + F9\n\n\n重新运行\nCtrl + F2\n关闭程序\nAlt + F2\n\n\n跟踪步入 Call\nCtrl + F11\n跟踪步过 Call\nCtrl + F12\n\n\n撤销修改\nAlt + backspace\n查找地址\nCtrl + G\n\n\n补丁窗口\nCtrl + P\nAPI 函数\nCtrl + N\n\n\n查找二进制字符串\nCtrl + B\n查找\nCtrl + L\n\n\n显示记录窗口\nAlt + L\n显示模块窗口\nAlt + E\n\n\n显示呼叫堆栈\nAlt + K\n显示断点窗口\nAlt + B\n\n\nMarkdown[toc]#1-6\n\n“- + *” 与 “1.” 结合\n开头两空格\n开头五空格\n\n\n\n\n\n\\ 转义\n[名称](url) 图片前加 !\n\n引用第一层\n\n内层引用 前空一格\n\n\n斜体 粗体 代码块\n*** — ___ 分割线\n删除线\n^上标^ ~下标~\n|左|右|居中||:--|--:|:-:||单|元|格|\n\nChrome\n\n\n打开主页\nAlt + Home\n关闭当前窗口\nAlt + F4\n\n\n\n打开菜单\nAlt + F/E\n跳转到地址栏\nAlt + D\n\n\n切换用户\nCtrl + Shift + M\n网址补充www.com\nCtrl + Enter\n\n\n清除浏览数据\nCtrl + Shift + backspace\n打开新窗口\nCtrl + N\n\n\n无痕打开新窗口\nCtrl + Shift + N\n打开跳转新标签页\nCtrl + T\n\n\n关闭当前标签页\nCtrl + W\n跳转到特定标签页\nCtrl + 1~9\n\n\n跳转到下一个标签页\nCtrl + PgDn\n跳转到上一个标签页\nCtrl + PgUp\n\n\n查找\nCtrl + F 或 F3\n历史\nCtrl + H\n\n\n下载\nCtrl + J\n书签\nCtrl + Shift + O\n\n\n保存书签\nCtrl + D\n保存所有书签\nCtrl + Shift + D\n\n\n显示/隐藏书签栏\nCtrl + Shift + B\n\n\n\n\n放大/缩小\nCtrl +/-\n恢复大小\nCtrl + 0\n\n\n源码\nCtrl + U\n检查\nCtrl + Shift + J/I 或 F12\n\n\n\n快速按右键接着马上按 Alt 键，可以出现右键快捷键提示……\n\nchrome://flags国内环境推荐关闭 QUIC 协议：（影响不大）Experimental QUIC protocol 值改为 Disabled\nside-panel 值改为 Disabled（已失效）\n去掉更新Chrome浏览器后工具栏的扩展程序图标只能启动时加 “–disable-features=ExtensionsToolbarMenu” (别忘带引号)\nSearch your screen with Google Lens 值改为 Disabledhttps://limbopro.com/archives/21070.htmlLens-Standalone 值改为 Disabled\nParallel downloading 值改为 Enabled\nSmooth Scrolling 值改为 Enabled\nWindows\n\n\n远程桌面\nWin + R mstsc\n布局\nWin + ←↑→↓\n\n\n\n任务栏切换\nWin + 数字\n投影\nWin + P\n\n\n创建新文件夹\nCtrl + Shift + N\n显示桌面\nWin + D/M\n\n\n表情符号\nWin + .\n显示设置\nWin + I\n\n\n文件资源管理器\nWin + E\n左侧工具栏\nWin + X\n\n\n右侧设置\nWin + A\n锁定计算机\nWin + L\n\n\n任务视图\nWin + Tab\n连接\nWin + K\n\n\n切换输入法\nWin + 空格 / Alt + 左/右 Shift\n\n\n\n\n计算器 Win + R calc屏幕键盘 Win + R oskWin + RWin + R\nScroll lock 键：FN + K/C\n设置自启动 Win+R 复制，添加快捷键\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n搜索栏输入 cmd 后，Ctrl + shift + enter 直接进入管理员模式命令行\nCopy /b 1.exe+1.txt 2.exe（把1.txt藏进2.exe文件）\nText processing\n\n\nCtrl + Home\n光标达到文本最前面\nCtrl + End\n光标达到文本最后面\n\n\n\nCtrl + Shift + Home\n光标所在位置到最前面的部分\nCtrl + Shift + End\n光标所在位置到最前面的部分\n\n\nCtrl + Shift + F\n输入法繁简转换\nCtrl + D\n复制上一行\n\n\nVimium\n\n\n向下/上/左/右移动\nj/k/h/l\n后退/前进网页\nH/L\n\n\n\n选择左/右标签\nJ/K\n向下/上跳动\nd/u-e\n\n\n回到顶/尾部\ngg/G\n本窗口/新窗口\nf/F\n\n\n刷新\nr\n创建/查看标签页\nt/T(数字nt)\n\n\n新标签打开多个链接\nAlt + f\n打开新页面并切换\nS\n\n\n查找历史书签\no/O\n查找书签\nb/B\n\n\n关闭/恢复标签\nx/X-z\n切换到刚才标签\n^-q\n\n\n移动当前标签到左/右侧边\n&lt;&lt;-&lt;/&gt;&gt;-&gt;\n将标签页移动到新窗口\nW-ww\n\n\n搜索剪贴板关键字\np/P\n开/关静音\nAlt + m\n\n\n固定标签栏\nAlt + p\n上/下一页\n[[,]]-[,]\n\n\n复制当前页面\nyt\n第 n 个输入框\nngi\n\n\n复制当前网址\nyy\n编辑当前网址\nge/gE\n\n\n复制网址拷贝\nyf\n显示网页源代码\ngs\n\n\n跳转到当前 url 上一级/最高级\ngu/gU\n切换到第一个 tab\ng0\n\n\n切换到最后一个 tab\ng$-g9\n\n\n\n\n当页标记\nm + 一个小写字母\n跳转到当页标记\n`小写字母\n\n\n全局标记\nm + 一个大写字母\n跳转到全局标记\n`大写字母\n\n\n插入模式\ni\n查找模式\n/\n\n\n下/上一个匹配\nn/N\n\n\n\n\nVisual Studio\n\n\n新建项\nCtrl + Shift + A\n现有项\nAlt + Shift + A\n\n\n\n生成\nCtrl + B\n\n\n\n\n逐过程\nF10\n逐语句\nF11\n\n\n反汇编\nCtrl + Alt + D\n删除整行\nCtrl + backspace\n\n\nVisual Studio Code\n\n\n行复制\nCtrl + c\n行移动\nAlt + ↑/↓\n\n\n\n行复制\nShift + Alt + ↑/↓\n格式化\nAlt + Shit + F\n\n\n行注释\nCtrl + /\n块注释\nAlt + Shit + A\n\n\nCtrl + ]/[\n整行缩进\nAlt + →/←\n切换编辑点\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit &amp; HexoClone 远程仓库git clone ssh://user@domain.com/xx.git初始化本地 git 仓库（新建仓库）git init\nLOCAL CHANGES查看当前版本状态（是否修改）git status显示所有未添加至 index 的变更git diff比较与上一个版本的差异git diff HEAD^ / HEAD – ./lib增加更改过的文件至 indexgit add . / add * …提交git commit -m ‘xxx’合并上一次提交（用于反复修改）git commit -amend -m ‘xxx’将 add 和 commit 合为一步git commit -am ‘xxx’\nCOMMIT HISTORY显示日志git log显示某个提交的详细内容git show 在每一行显示 commit 号,提交者,最早提交日期git blame \nBRANCHES &amp; TAGS显示本地分支git branch切换分支git checkout 新建分支git branch 创建新分支跟踪远程分支git branch –track  删除本地分支git branch -d 给当前分支打标签git tag \nUPDATE &amp; PUBLISH列出远程分支详细信息git remote -v显示某个分支信息git remote show 添加一个新的远程仓库git remote add  获取远程分支，但不更新本地分支，另需 mergegit fetch 获取远程分支，并更新本地分支git pull  推送本地更新到远程分支git push  删除一个远程分支git push  –delete 推送本地标签git push –tags\nMERGE &amp; REBASE合并分支到当前分支，存在两个git merge 合并分支到当前分支，存在一个git rebase 回到执行 rebase 之前git rebase –abort解决矛盾后继续执行 rebasegit rebase –continue使用 mergetool 解决冲突git mergetool使用冲突文件解决冲突git add git rm \nUNDO将当前版本重置为 HEAD（用于 merge 失败）git reset –hard HEAD将当前版本重置至某一个提交状态（慎用！）git reset –hard 将当前版本重置至某一个提交状态，代码不变git reset 重置至某一状态，保留版本库中不同的文件git reset –merge 重置至某一状态，重置变化的文件，代码改变git reset –keep 丢弃本地更改信息并将其存入特定文件git checkout HEAD 撤销提交git revert \n更换电脑部署npm install hexo-cli -gnpm installnpm install hexo-deployer-git --save\nhexo cleanhexo s -o 实时预览hexo d -g 生成部署hexo new &quot;post&quot; 新建文章hexo new page &quot;page&quot; 新建页面\ntheme updategit rm -rf --cached keepgit add keep&#x2F;*git add . &#x2F;&#x2F;更新工作的状态树git stash &#x2F;&#x2F;将未提交修改保存至堆栈中git pull  &#x2F;&#x2F;获取更新git stash pop &#x2F;&#x2F;弹栈\n\nhexo upgradenpm -vnode -vhexo -vnpm install npm@latest -g  //npm 更新[node](https://nodejs.org/zh-cn/download/) 下载覆盖安装npm install -g npm-check     //安装 npm-checknpm-check                    //查看系统插件是否需要升级npm install -g npm-upgrade   //安装 npm-upgradenpm-upgrade                  //更新 package.json//在执行 npm-upgrade 命令后会要求输入 yes 或 no ，直接输入 Y 即可npm update -g                //更新全局插件npm update --save            //更新系统插件\n\ngit initgit statusgit add filenamegit commit -m &quot;commit filename&quot;git log 按 Q 退出git branch [a] [-d/D a] 新建分支 a / 删除/强制删除分支 agit push origin --delete 删除远程分支git checkout [a] [v1] [-b b] 切换到 a 分支 / v1 标签 / 创建并切换到 b 分支git merge [a] 将 a 分支合并到 master 分支git tag [v1] 添加标签git remote add origin url 关联远程仓库git pull/push origin master:djs 拉/推 远程主机名 远程分支名:本地分支名\n删除所有远程标签git show-ref --tag | awk &#x27;&#123;print &quot;:&quot; $2&#125;&#x27; | xargs git push origin\n删除所有本地标签git tag -l |awk &#x27;/1\\.1\\../&#x27; | xargs git tag -d\n从远程仓库获取所有分支git clone xxxgit branch -r | grep -v &#x27;\\-&gt;&#x27; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;;git fetch --allgit pull --all\n合并两个仓库现在有两个仓库 kktjs/kkt 和 kktjs/kkt-next 我们需要将 kkt-next 仓库合并到 kkt 并保留 kkt-next 的所有提交内容。\n\n1.克隆主仓库代码\n\ngit clone git@github.com:kktjs/kkt.git\n\n2.将 kkt-next 作为远程仓库，添加到 kkt 中，设置别名为 other\n\ngit remote add other git@github.com:kktjs/kkt-next.git\n\n3.从 kkt-next 仓库中拉取数据到本仓库\n\ngit fetch other\n\n4.将 kkt-next 仓库拉取的 master 分支作为新分支 checkout 到本地，新分支名设定为 kkt-next\n\ngit checkout -b kkt-next other/master\n\n5.切换回 kkt 的 master 分支\n\ngit checkout master\n\n6.将 kkt-next 合并入 kkt 的 master 分支\n\ngit merge kkt-next\n\n如果第 6 步报错 fatal: refusing to merge unrelated histories，执行下面：\n\ngit merge kkt-next --allow-unrelated-histories\n在合并时有可能两个分支对同一个文件都做了修改，这时需要解决冲突，对文本文件来说很简单，根据需要对冲突的位置进行处理就可以。对于二进制文件，需要用到如下命令:\ngit checkout --theirs YOUR_BINARY_FILES     # 保留需要合并进来的分支的修改git checkout --ours YOUR_BINARY_FILES       # 保留自己的修改git add YOUR_BINARY_FILES\n\n创建密钥ssh-keygen -t rsa\nssh -T git@github.com\n别名git config --global alias.plm &#x27;pull origin master&#x27;\ngit config --global alias.psm &#x27;push origin master&#x27;\n其他配置git config -l\ngit log --graph --pretty=format:&#x27;%Cred%h%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit --date=relative\ngit config --global http.http://github.com.proxy 127.0.0.1:10808\ngit config --global https.https://github.com.proxy 127.0.0.1:10808\nssh: connect to host github.com port 22: Connection timed out修改 .ssh/known_hosts 文件中任意一个 ip 为当前 IP\nFailed to connect to github.com port 443: Operation timed out/etc/hosts 把 GitHub 相关的几行代码注释掉，保存 hosts 文件这种的 #192.30.253.112 github.com\nFailed to connect to 127.0.0.1 port 1080: Connection refused查询是否使用代理：\ngit config --global http.proxy\n取消代理：\ngit config --global --unset http.proxy\n\nhttps://blog.csdn.net/qq_35246620/article/details/66973794\n\nGitHubShift + / 查看快捷键\n在github上任意项目加个”gh-pages”分支，通过github page/你项目的名称就可以访问到那个分支的静态文件issue 模板 https://github.blog/2016-02-17-issue-and-pull-request-templates/小绿点可以通过修改系统时间再 commit 来控制形状。\ngithub.githistory.xyz\nSite wide shortcutss or / Focus the search bar.\ng n    Go to your notifications.\nRepositoriesg c    Go to the Code tab\ng i    Go to the Issues tab.\ng p    Go to the Pull requests tab.\ng a    Go to the Actions tab.\ng b    Go to the Projects tab.\ng w    Go to the Wiki tab.\nSource code editinge    Open source code file in the Edit file tab\ncontrol f or command f    Start searching in file editor\ncontrol g or command g    Find next\nshift control g or shift command g    Find previous\nshift control f or command option f    Replace\nshift control r or shift command option f    Replace all\nalt g    Jump to line\ncontrol z or command z    Undo\ncontrol y or command y    Redo\ncmd + shift + p    Toggles between the Edit file and Preview changes tabs\nSource code browsingt    Activates the file finder\nl    Jump to a line in your code\nw    Switch to a new branch or tag\ny    Expand a URL to its canonical form\ni    Show or hide comments on diffs.\na    Show or hide annotations on diffs\nb    Open blame view.\nVim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nctrl + f&#x2F;b&#x2F;d&#x2F;u 向下&#x2F;上移动一&#x2F;半页+&#x2F;- 移动到非空白字符下&#x2F;上一列n空格 向右移动 n 字符n回车 向下移动 n 行0&#x2F;Home $&#x2F;End 移动到这一列最前&#x2F;后面字符处H&#x2F;M&#x2F;L 移动到屏幕最上方&#x2F;中间&#x2F;下方那一列的第一个字符nG 移动到这个文件的第 n 列&#x2F;? 向下&#x2F;上搜索:n1,n2s&#x2F;word1&#x2F;word2&#x2F;g 在第 n1 与 n2 列之间寻找 word1 字串，并将该字串取代为 word2:1,$s&#x2F;word1&#x2F;word2&#x2F;g &#x2F; gc 从第一列到最后一列寻找 word1 字串，并将该字串取代为 word2 &#x2F; 在取代前显示提示字符给使用者确认是否需要取代nx(del)&#x2F;nX(backspace) 向后&#x2F;前删除 n 个字符ndd 删除光标所在的一整行&#x2F;向下 n 行nyy 复制光标所在的那一行&#x2F;向下 n 行p&#x2F;P 将已复制数据在光标下&#x2F;上一列贴上J 将光标所在列与下一列的数据结合成同一列c 重复删除多个数据，例如向下删除 10 列，10cju 复原前一个动作Ctrl + r 重做上一个动作. 重复前一个动作i&#x2F;I 从目前光标处插入&#x2F;在目前所在列的第一个非空白字符处开始插入a&#x2F;A 从目前光标所在的下一个字符处插入&#x2F;从光标所在列的最后一个字符处插入o&#x2F;O 在目前光标所在的下&#x2F;上一列处插入新的一列r&#x2F;R 取代模式，取代光标所在的那一个字符一次&#x2F;一直取代光标所在的文字，直到 ESC:w 写入硬盘文件:q! （强制离开不储存）离开:wq 储存后离开ZZ 文件没有更动，则不储存离开&#x2F;文件已经更动过，则储存后离开:w file 另存新文件:r file 在编辑的数据中，读入另一个文件的数据:n1,n2 w file 将 n1 到 n2 的内容储存成 file:! command 暂时离开 vi 到命令行界面下执行 command 的显示结果:set nu 显示行号:set nonu 取消行号:set\thlsearch\t:setnohlsearch 高亮度搜寻:set\tautoindent\t:set noautoindent 自动缩排（setting）自建 ~&#x2F;.vimrc[dmtsai@study\t~]$\tvim\t~&#x2F;.vimrc&quot;这个文件的双引号\t（&quot;）\t是注解set\thlsearch\t\t\t\t\t\t\t\t\t\t\t\t&quot;高亮度反白set\tbackspace&#x3D;2\t\t\t\t\t\t\t\t\t&quot;可随时用倒退键删除set\tautoindent\t\t\t\t\t\t\t\t\t\t&quot;自动缩排set\truler\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;可显示最后一列的状态set\tshowmode\t\t\t\t\t\t\t\t\t\t\t\t&quot;左下角那一列的状态set\tnu\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;可以在每一列的最前面显示行号啦！set\tbg&#x3D;dark\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;显示不同的底色色调syntax\ton\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&quot;进行语法检验，颜色显示。:files 列出目前这个 vim 的打开的所有文件 :n&#x2F;N:sp &#123;filename&#125; 多窗口 ctrl + w + j&#x2F;k 先按下\t[ctrl]\t不放，\t再按下\tw\t后放开所有的按键，然后再按下\tj\t（或向下方向键），则光标可移动到下方的窗口[ctrl]+x\t-&gt;\t[ctrl]+n 通过目前正在编辑的这个“文件的内容文字”作为关键字，予以补齐[ctrl]+x\t-&gt;\t[ctrl]+f 以当前目录内的“文件名”作为关键字，予以补齐[ctrl]+x\t-&gt;\t[ctrl]+o 以扩展名作为语法补充，以\tvim\t内置的关键字，予以补齐按下‘q’键让vim开始记录，然后按任意键，来告诉vim你想把保存的记录下次通过这个键来调出。本次案例中，这个键设置为‘a’，所以完整的指令就是‘qa’。执行你的命令。按下‘q’来结束记录。需要重复保存的系列动作时，输入‘@a’即可。相对行号.vimrc中加入set relativenumber删除其后的25行：25dd.vimrc中加入以下指令：set clipboard&#x3D;unnamedset clipboard&#x3D;unnamedplus加入这项指令后，在vim中复制粘贴文本就从“CTRL+V”, 和“CTRL+C”这一过程变为简单地输入‘p’。如果你想在不重写你的寄存器的情况下删除文本，你可以在指令前加上“_符号：“_dd 来删除一行。重映射Escape操作.vimrc中加入：cnoremap kj &lt;C-C&gt;cnoremap jk &lt;C-C&gt;键入’jk’或者‘kj’来离开一个指令动词+修饰词+宾语处理空白格(White space fixing).vimrc加入：set list这个指令会在每行结尾显示一个$符号，并且用^I代替tabs。你从而能更容易地识别出tabs和行尾。除此之外，下面的例子中，使用了空代替所有的tabs，这也让空白格更加便于处理：快速查找(navigate)敲击‘gg’来移动到文档的顶部，‘G’来移动到最底部。敲击CTRL+F来快速向前移动，CTRL+B来快速向后移动。敲击‘zz’来重新定位页的中心，这也你的光标就成为新的中心。遇到上括号像‘&#123;’或者‘(’，你可以敲击‘%’来移动到它们所匹配的下括号。‘&#x2F;’可以开始查找你想要的词。日期(date)nmap &lt;F3&gt; i&lt;C-R&gt;&#x3D;strftime(&quot;%Y-%m-%d %a %I:%M %p&quot;)&lt;CR&gt;&lt;Esc&gt;imap &lt;F3&gt; &lt;C-R&gt;&#x3D;strftime(&quot;%Y-%m-%d %a %I:%M %p&quot;)&lt;CR&gt;从而可以只通过键入F3来给文档加日期和时间。x → 删当前光标所在的一个字符。:wq → 存盘 + 退出 (:w 存盘, :q 退出)   （陈皓注：:w 后可以跟文件名）dd → 删除当前行，并把删除的行存到剪贴板里p → 粘贴剪贴板:help &lt;command&gt; → 显示相关命令的帮助。你也可以就输入 :help 而不跟命令。（陈皓注：退出帮助需要输入:q）a → 在光标后插入o → 在当前行后插入一个新行O → 在当前行前插入一个新行cw → 替换从光标所在位置后到一个单词结尾的字符0 → 数字零，到行头^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）$ → 到本行行尾g_ → 到本行最后一个不是blank字符的位置。&#x2F;pattern → 搜索 pattern 的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）P → 粘贴yy → 拷贝当前行当行于 ddPp&#x2F;P都可以，p是表示在当前位置之后，P表示在当前位置之前）u → undo&lt;C-r&gt; → redo:e &lt;path&#x2F;to&#x2F;file&gt; → 打开一个文件:w → 存盘:saveas &lt;path&#x2F;to&#x2F;file&gt; → 另存为 &lt;path&#x2F;to&#x2F;file&gt;:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ不需要输入冒号并回车):q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n到下一个文件）. → (小数点) 可以重复上一次的命令N&lt;command&gt; → 重复某个命令N次NG → 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）gg → 到第一行。（陈皓注：相当于1G，或 :1）G → 到最后一行。w → 到下一个单词的开头。e → 到下一个单词的结尾。如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（陈皓注：程序变量）&gt; 如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（陈皓注：程序语句）% : 匹配括号移动，包括 (, &#123;, [. （陈皓注：你需要把光标先移到括号上）* 和 #:  匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）&lt;start position&gt;&lt;command&gt;&lt;end position&gt;0y$ 命令意味着：0 → 先到行头y → 从这里开始拷贝$ → 拷贝到本行最后一个字符d (删除 )v (可视化的选择)gU (变大写)gu (变小写)可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）在当前行上移动光标:0 → 到行头^ → 到本行的第一个非blank字符$ → 到行尾g_ → 到本行最后一个不是blank字符的位置。fa → 到下一个为a的字符处，你也可以fs到下一个为s的字符。t, → 到逗号前的第一个字符。逗号可以变成其它字符。3fa → 在当前行查找第三个出现的a。F 和 T → 和 f 和 t 一样，只不过是相反方向。dt&quot; → 删除所有的内容，直到遇到双引号—— &quot;区域选择在visual 模式下&lt;action&gt;a&lt;object&gt; 和 &lt;action&gt;i&lt;object&gt;action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符：&quot;、 &#39;、 )、 &#125;、 ]。假设你有一个字符串 (map (+) (&quot;foo&quot;)).而光标键在第一个 o 的位置。vi&quot; → 会选择 foo.va&quot; → 会选择 &quot;foo&quot;.vi) → 会选择 &quot;foo&quot;.va) → 会选择(&quot;foo&quot;).v2i) → 会选择 map (+) (&quot;foo&quot;)v2a) → 会选择 (map (+) (&quot;foo&quot;))块操作，典型的操作： 0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]^ → 到行头&lt;C-v&gt; → 开始块操作&lt;C-d&gt; → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)I-- [ESC] → I是插入，插入“--”，按ESC键来为每一行生效。自动提示： &lt;C-n&gt; 和 &lt;C-p&gt;在 Insert 模式下，你可以输入一个词的开头，然后按 &lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……宏录制： qa 操作序列 q, @a, @@qa 把你的操作记录在寄存器 a。于是 @a 会replay被录制的宏。@@ 是一个快捷键用来replay最新录制的宏。在一个只有一行且这一行只有“1”的文本中，键入如下命令：qaYp&lt;C-a&gt;q→qa 开始录制Yp 复制行.&lt;C-a&gt; 增加1.q 停止录制.@a → 在1下面写下 2@@ → 在2 正面写下3现在做 100@@ 会创建新的100行，并把数据增加到 103.可视化选择： v,V,&lt;C-v&gt;前面，我们看到了 &lt;C-v&gt;的示例 （在Windows下应该是&lt;C-q&gt;），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：J → 把所有的行连接起来（变成一行）&lt; 或 &gt; → 左右缩进&#x3D; → 自动给缩进在所有被选择的行后加上点东西：&lt;C-v&gt;选中相关的行 (可使用 j 或 &lt;C-d&gt; 或是 &#x2F;pattern 或是 % 等……)$ 到行最后A, 输入字符串，按 ESC。分屏: :split 和 vsplit:help split:split → 创建分屏 (:vsplit创建垂直分屏)&lt;C-w&gt;&lt;dir&gt; : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。&lt;C-w&gt;_ (或 &lt;C-w&gt;|) : 最大化尺寸 (&lt;C-w&gt;| 垂直分屏)&lt;C-w&gt;+ (或 &lt;C-w&gt;-) : 增加尺寸https:&#x2F;&#x2F;coolshell.cn&#x2F;articles&#x2F;11312.html#%E7%AA%97%E5%8F%A3%E5%88%86%E5%B1%8F%E6%B5%8F%E8%A7%88\nlinux\n观察系统的使用状态：\t如果要看目前有谁在线上，可以下达“who”这个指令，而如果要看网络的连线状态，可以下达\t“\tnetstat\t-a\t”这个指令，而要看背景执行的程序可以执行“\tps-aux\t”这个指令。chgrp\t：改变文件所属群组chown\t：改变文件拥有者chmod\t：改变文件的权限,\tSUID,\tSGID,\tSBIT等等的特性因此FHS标准建议：根目录（&#x2F;）所在分区应该越小越好，\t且应用程序所安装的软件最好不要与根目录放在同一个分区内，保持根目录越小越好。\t如此不但性能较佳，根目录所在的文件系统也较不容易发生问题。其实usr是Unix\tSoftware\tResource的缩写，\t也就是“Unix操作系统软件资源”所放置的目录.\t\t\t\t\t\t\t\t\t代表此层目录..\t\t\t\t\t\t\t\t代表上一层目录-\t\t\t\t\t\t\t\t\t代表前一个工作目录~\t\t\t\t\t\t\t\t\t代表“目前使用者身份”所在的主文件夹~account\t\t代表\taccount\t这个使用者的主文件夹（account是个帐号名称cd：变换目录pwd：显示目前的目录-P\t\t：显示出确实的路径，而非使用链接\t（link）\t路径。mkdir：创建一个新的目录-m\t：设置文件的权限喔！直接设置，不需要看默认权限\t（umask）\t的脸色～-p\t：帮助你直接将所需要的目录（包含上层目录）递回创建起来！rmdir：删除一个空的目录-p\t：连同“上层”“空的”目录也一起删除将\tll\t（L\t的小写）\t设置成为\tls\t-lcat\t由第一行开始显示文件内容tac\t从最后一行开始显示，可以看出\ttac\t是\tcat\t的倒着写！nl\t显示的时候，顺道输出行号！more\t一页一页的显示文件内容less\t与\tmore\t类似，但是比\tmore\t更好的是，他可以往前翻页！head\t只看头几行tail\t只看尾巴几行od\t以二进制的方式读取文件内容！echo password\t|\tod\t-t\toCc\techo  ASCII\t对照如果你还想要从文字压缩文件当中找数据的话，可以通过\tegrep\t来搜寻关键字喔！而不需要将压缩文件解开才以\tgrep\t进行！\t这对查询备份中的文本文件数据相当有用！另外值得一提的是，tar\t打包出来的文件有没有进行压缩所得到文件称呼不同喔！\t如果仅是打包而已，就是“\ttar\t-cv\t-f\tfile.tar\t”而已，这个文件我们称呼为\ttarfile\t。\t如果还有进行压缩的支持，例如“\ttar\t-jcv\t-f\tfile.tar .bz2\t”时，我们就称呼为\ttarballlinux cat&#x2F;proc&#x2F;cpuinfo及Ispci命令- Ctrl + Alt + F1\\~F6变量\\~符号代表的是“使用者的主文件夹”^M$ CRLF 转换成 LF#\tmount\t&#x2F;dev&#x2F;sr0\t&#x2F;mnt#\trpm\t-ivh\t&#x2F;mnt&#x2F;Packages&#x2F;dos2unix-*# umount\t&#x2F;mnt#\texit(transformer)bash[ctrl]+u&#x2F;[ctrl]+k 分别是从光标处向前删除指令串\t（[ctrl]+u）\t及向后删除指令串（[ctrl]+k）。[ctrl]+a&#x2F;[ctrl]+e 分别是让光标移动到整个指令串的最前面\t（[ctrl]+a）\t或最后面（[ctrl]+e）。echo\t$PATH echo\t$&#123;HOME&#125;(base)变量与变量内容以一个等号“&#x3D;”来链接等号两边不能直接接空白字符变量名称只能是英文字母与数字，但是开头字符不能是数字如你想要让该变量内容继续的在子程序中使用，那么就请执行： export\t变量名称环境变量转成自订变量 declaredeclare\t&#x2F;\ttypeset基本上，指令运行的顺序可以这样看1 .\t 以相对&#x2F;绝对路径执行指令，例如“\t&#x2F;bin&#x2F;ls\t”或“\t.&#x2F;ls\t”；2 .\t 由\talias\t找到该指令来执行；3 .\t 由\tbash\t内置的\t（builtin）\t指令来执行；4 .\t 通过\t$P A TH\t这个变量的顺序搜寻到的第一个指令来执行。通过\ttype\t-a\tls 查询bash\t的进站与欢迎讯息(bash12)1 .\t 标准输入　　（stdin）\t：代码为\t0\t，使用\t&lt;\t或\t&lt;&lt;\t；2 .\t 标准输出　　（stdout）：代码为\t1\t，使用\t&gt;\t或\t&gt;&gt;\t；3 .\t 标准错误输出（stderr）：代码为\t2\t，使用\t2&gt;\t或\t2&gt;&gt;\t；1&gt;\t：以覆盖的方法将“正确的数据”输出到指定的文件或设备上；1&gt;&gt;：以累加的方法将“正确的数据”输出到指定的文件或设备上；2&gt;\t：以覆盖的方法将“错误的数据”输出到指定的文件或设备上；2&gt;&gt;：以累加的方法将“错误的数据”输出到指定的文件或设备上；&#x2F;dev&#x2F;null\t垃圾桶黑洞设备与特殊写法cmd\t;\tcmd\t（不考虑指令相关性的连续指令下达）$?\t（指令回传值）\t与\t&amp;&amp;\t或\t||(bash17)管线命令\t（pipe）管线命令仅会处理\tstandard\toutput，对于\tstandard\terror\toutput\t会予以忽略管线命令必须要能够接受来自前一个指令的数据成为\tstandard\tinput\t继续处理才行。撷取命令：\tcut,\tgrep(bash18)cut在处理多空格相连的数据时，可能会比较吃力一点排序命令：\tsort,\twc,\tuniq双向重导向：\ttee字符转换命令：\ttr ,\tcol,\tjoin,\tpaste,\texpandtr\t可以用来删除一段讯息当中的文字，或者是进行文字讯息的替换！join\t看字面上的意义\t（加入&#x2F;参加）\t就可以知道，他是在处理两个文件之间的数据，\t而且，主要是在处理“两个文件当中，有\t&quot;相同数据&quot;\t的那一行，才将他加在一起”的意思。我们利用下面的简单例子来说明：在使用\tjoin\t之前，你所需要处理的文件应该要事先经过排序（sort）\t处理！\t否则有些比对的项目会被略过呢这个\tpaste\t就要比\tjoin\t简单多了！相对于\tjoin\t必须要比对两个文件的数据相关性，\tpaste\t就直接“将两行贴在一起，且中间以\t[tab]\t键隔开”而已分区命令：\tsplit参数代换：\txargsxargs\t是在做什么的呢？就以字面上的意义来看，\tx\t是加减乘除的乘号，args\t则是arguments\t（参数）\t的意思，所以说，这个玩意儿就是在产生某个指令的参数的意思！xargs\t可以读入\tstdin\t的数据，并且以空白字符或断行字符作为分辨，将\tstdin\t的数据分隔成为\targuments\t。\t因为是以空白字符作为分隔，所以，如果有一些文件名或者是其他意义的名词内含有空白字符的时候，\txargs\t可能就会误判了～他的用法其实也还满简单的！就来看一看先！正则表达式\t（Regular\tExpression,\tRE（bash19）568shell script直接指令下达：\tshell.sh\t文件必须要具备可读与可执行\t（rx）\t的权限，然后：绝对路径：使用\t&#x2F;home&#x2F;dmtsai&#x2F;shell.sh\t来下达指令；相对路径：假设工作目录在\t&#x2F;home&#x2F;dmtsai&#x2F;\t，则使用\t.&#x2F;shell.sh\t来执行变量“P A TH”功能：将\tshell.sh\t放在\tP A TH\t指定的目录内，例如：\t~&#x2F;bin&#x2F;以\tbash\t程序来执行：通过“\tbash\tshell.sh\t”或“\tsh\tshell.sh\t”来执行var&#x3D;$（（运算内容））执行方式差异利用直接执行的方式来执行\tscript当使用前一小节提到的直接指令下达\t（不论是绝对路径&#x2F;相对路径还是\t$&#123;P A TH&#125;\t内），或者是利用\tbash\t（或\tsh）\t来下达脚本时，\t该\tscript\t都会使用一个新的\tbash\t环境来执行脚本内的指令！也就是说，使用这种执行方式时，\t其实\tscript\t是在子程序的\tbash\t内执行的利用\tsource\t来执行脚本：在父程序中执行利用\ttest\t指令的测试功能（608-633）计算\tLinux\t日期的时间是以\t1970\t年\t1月\t1\t日作为\t1\t而累加的日期touch filegroups 有效与支持群组的观察newgrp:\t有效群组的切换exit\t\t\t#\t注意！记得离开\tnewgrp\t的环境喔！（user）如果想要完整的将某个帐号完整的移除，最好可以在下达\tuserdel\t-r\tusername\t之前，\t先以“\tfind\t&#x2F;\t-user\tusername\t”查出整个系统内属于\tusername\t的文件，然后再加以删除吧！id finger默认不安装chfn\t有点像是：\tchange\tfinger\t的意思chsh  change\tshell\t的简写(grp)最好能够使用“\tgroupadd\t-r\t群组名”的方式来创建(su)su\t就这样简单的介绍完毕，总结一下他的用法是这样的：若要完整的切换到新使用者的环境，必须要使用“\tsu\t-\tusername\t”或“\tsu\t-l\tusername\t”，才会连同\tP A TH&#x2F;USER&#x2F;MAIL\t等变量都转成新使用者的环境；如果仅想要执行一次\troot\t的指令，可以利用“\tsu\t-\t-c\t&quot;指令串&quot;\t”的方式来处理；使用\troot\t切换成为任何使用者时，并不需要输入新使用者的密码；仅有规范到\t&#x2F;etc&#x2F;sudoers\t内的用户才能够执行\tsudo\t这个指令(sudo)visudo\t与\t&#x2F;etc&#x2F;sudoerslast\t可以列出从系统创建之后到目前为止的所有登陆者信息目前已登陆在系统上面的使用者呢？可以通过\tw\t或\twho\t来查询如果您想要知道每个帐号的最近登陆的时间，则可以使用\tlastlog\t这个指令喔！\tlastlog会去读取\t&#x2F;var&#x2F;log&#x2F;lastlog\t文件使用者对谈：\twrite,\tmesg,\twallwrite\t使用者帐号\t[使用者所在终端接口][crtl]-d\t来结束输入mesg\tn&#x2F;y 不接受信息#\twall\t&quot;I\twill&quot;mail\t-s\t&quot;邮件标题&quot;\tusername@localhost结束时，最后一行输入小数点\t.（mail）帐号相关的检查工具pwck\t这个指令在检查\t&#x2F;etc&#x2F;passwd\t这个帐号配置文件内的信息，与实际的主文件夹是否存在等信息，\t还可以比对\t&#x2F;etc&#x2F;passwd\t&#x2F;etc&#x2F;shadow\t的信息是否一致，另外，如果\t&#x2F;etc&#x2F;passwd\t内的数据字段错误时，会提示使用者修订。\t一般来说，我只是利用这个玩意儿来检查我的输入是否正确就是了。群组查询 grpckpwconv 这个指令主要的目的是在“将\t&#x2F;etc&#x2F;passwd\t内的帐号与密码，移动到\t&#x2F;etc&#x2F;shadow\t当中chpasswd\t是个挺有趣的指令，他可以“读入未加密前的密码，并且经过加密后，\t将加密后的密码写入\t&#x2F;etc&#x2F;shadow\t当中echo\t&quot;vbird3:abcdefg&quot;\t|\tchpasswdTarballMakefile\t怎么写？\t通常软件开发商都会写一支侦测程序来侦测使用者的作业环境，\t以及该作业环境是否有软件开发商所需要的其他功能，该侦测程序侦测完毕后，就会主动的创建这个\tMakefile\t的规则文件啦！通常这支侦测程序的文件名为\tconfigure\t或者是\tconfig\t。所谓的\tT arball\t文件，其实就是将软件的所有源代码文件先以\ttar\t打包，然后再以压缩技术来压缩，通常最常见的就是以\tgzip\t来压缩了。因为利用了\ttar\t与\tgzip\t的功能，所以\ttarball\t文件一般的扩展名就会写成\t.tar .gz\t或者是简写为\t.tgz\t啰！不过，近来由于\tbzip2\t与\txz\t的压缩率较佳，所以\tT arball\t渐渐的以\tbzip2\t及\txz\t的压缩技术来取代\tgzip\t啰！因此文件名也会变成.tar .bz2,\t.tar .xz\t之类T arball\t是一个软件包，\t你将他解压缩之后，里面的文件通常就会有：原始程序码文件；侦测程序文件\t（可能是\tconfigure\t或\tconfig\t等文件名）；本软件的简易说明与安装说明\t（INST ALL\t或\tREADME）。使用\tgcc\t编译时所加入的那个\t-lm\t是有意义的，他可以拆开成两部份来看：-l\t：是“加入某个函数库（library）”的意思，m\t：则是\tlibm.so\t这个函数库，其中，\tlib\t与扩展名（.a\t或\t.so）不需要写所以\t-lm\t表示使用\tlibm.so\t（或\tlibm.a）\t这个函数库的意思～至于那个\t-L\t后面接的路径呢？这表示：\t“我要的函数库\tlibm.so\t请到\t&#x2F;lib\t或\t&#x2F;lib64\t里面搜寻！”(1021-1091)## Google hack|&quot;&quot;|精确匹配|-|排除关键词|..|数字范围|\\*|通配符||:-|:-|:-|:-|:-|:-|:-|:-||and&#x2F;or|关系|filetype:|查找文件|site:|站内搜索|info:|基本信息||link:|含链接站|define:|单词含义|related:|域名相关站点|intext:|包含关键词页面|## 微软日语输入法清音あ a い i う u え e お oか ka き ki く ku け ke こ koさ sa し shi す su せ se そ soた ta ち chi つ tsu て te と toな na に ni ぬ nu ね ne の noは ha ひ hi ふ fu へ he ほ hoま ma み mi む mu め me も moや ya ゐ wi ゆ yu ゑ we よ yoら ra り ri る ru れ re ろ roわ wa を wo ん nn·浊音が ga ぎ gi ぐ gu げ ge ご goざ za じ ji ず zu ぜ ze ぞ zoだ da ぢ di づ du で de ど doば ba び bi ぶ bu べ be ぼ boぱ pa ぴ pi ぷ pu ぺ pe ぽ po·拗音诸如きゃ、きゅ、きょ，可输入kya、kyu、kyo。把第一个字的母音去掉即可。·其他诸如てゃ、てぃ（ティ）、てゅ，可输入tha、thi、thu。2、促音（小つ）将后面的子音重写两个来表示。如：国家（こっか）kokka、雑志（ざっし）zasshi。但在つ的前面则加“t”来表示，如：発着（はっちゃく）hatchaku。（但在输入时仍应输入hacchaku）|Alt + ~|英文假名切换|Alt&#x2F;Ctrl&#x2F;Shift + Caps Lock|片假名&#x2F;平假名&#x2F;英文平假名||:-|:-|:-|:-||F6|平假名|F7&#x2F;F8|全&#x2F;半角片假名||F9&#x2F;F10|全&#x2F;半角英文数字|F5|偏旁发音输入||きごう + F5|所有记号|たんい|单位符号||すうがく|数学符号|ぎりしゃ|希腊字母符号||前 x&#x2F;l|小假名|ゐ 输入 wi|ゑ 输入 we|||||||||||\n","categories":["Programming"]}]